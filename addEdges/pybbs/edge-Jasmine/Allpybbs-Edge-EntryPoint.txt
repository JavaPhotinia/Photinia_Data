<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: java.util.List sortErrorViewResolvers(java.util.List)>-><java.util.ArrayList: void <init>()>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: void <init>(java.net.URL)>-><java.net.URL: java.lang.String getFile()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<java.util.Optional: java.util.Optional map(java.util.function.Function)>-><java.util.Optional: java.util.Optional empty()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet: java.util.Iterator iterator()>
<java.util.concurrent.PriorityBlockingQueue: int size()>-><java.util.concurrent.locks.ReentrantLock: void unlock()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.apache.poi.hssf.record.common.UnicodeString: int compareTo(java.lang.Object)>
<javax.crypto.Cipher: void chooseProvider(int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>-><java.security.Provider$Service: java.security.Provider getProvider()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.Boolean: int compareTo(java.lang.Object)>
<com.alibaba.fastjson.parser.DefaultJSONParser: java.lang.Object parseObject(java.util.Map,java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Set asSet()>-><java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.HashMap$KeySet: java.util.Iterator iterator()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><freemarker.ext.beans.HashAdapter$1$1: java.lang.Object next()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<sun.rmi.runtime.Log$InternalStreamHandler: void <init>(java.io.OutputStream)>-><java.util.logging.StreamHandler: void <init>(java.io.OutputStream,java.util.logging.Formatter)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Double castToDouble(java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>-><java.util.logging.StreamHandler: void flushAndClose()>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.EnumMap: int entryHashCode(int)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: boolean isEmpty()>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Set asSet()>-><java.util.HashSet: boolean isEmpty()>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>-><java.lang.String: java.lang.String substring(int)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<com.google.common.collect.ForwardingMap: java.util.Set entrySet()>-><java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>
<javax.crypto.Cipher: void chooseFirstProvider()>-><java.security.Provider$Service: java.lang.Object newInstance(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.util.AbstractCollection: boolean isEmpty()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries: java.util.Iterator iterator()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Hashtable$KeySet: java.util.Iterator iterator()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$1: java.lang.Object next()>
<co.yiiu.pybbs.controller.front.IndexController: java.lang.String changeLanguage(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>-><synthetic.method.HttpSessionImpl: void setAttribute(java.lang.String,java.lang.Object)>
<java.util.logging.ErrorManager: void <init>()>-><java.lang.Object: void <init>()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.logging.ErrorManager: void error(java.lang.String,java.lang.Exception,int)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.apache.http.client.config.RequestConfig$Builder: org.apache.http.client.config.RequestConfig$Builder setSocketTimeout(int)>
<java.util.concurrent.PriorityBlockingQueue: void removeAt(int)>-><java.util.concurrent.PriorityBlockingQueue: void siftUpUsingComparator(int,java.lang.Object,java.lang.Object[],java.util.Comparator)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet: java.util.Iterator iterator()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.AbstractMap$2$1: boolean hasNext()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><java.rmi.server.LogStream: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<javax.crypto.Cipher: void chooseProvider(int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>-><sun.security.jca.ProviderList$ServiceList$1: boolean hasNext()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.util.Date: int compareTo(java.lang.Object)>
<java.util.logging.LogManager: java.util.logging.Filter getFilterProperty(java.lang.String,java.util.logging.Filter)>-><java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.elasticsearch.client.Node: int hashCode()>-><java.util.Objects: int hash(java.lang.Object[])>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<freemarker.template.DefaultObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object next()>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.elasticsearch.client.RestClientBuilder$2: void <init>(org.elasticsearch.client.RestClientBuilder,org.apache.http.impl.nio.client.HttpAsyncClientBuilder)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean containsAll(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: int compareTo(java.lang.Object)>
<java.util.logging.StreamHandler: void configure()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.logging.StreamHandler: void configure()>-><java.util.logging.LogManager: java.util.logging.Level getLevelProperty(java.lang.String,java.util.logging.Level)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection)>-><java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection,int)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.WeakHashMap$EntrySet: java.util.Iterator iterator()>
<java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>-><java.lang.Error: void <init>(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>-><java.lang.Object: int hashCode()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.rmi.server.LogStream: void write(int)>-><java.io.PrintStream: void flush()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.Float: int compareTo(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.controller.api.IndexApiController: co.yiiu.pybbs.util.Result upload(org.springframework.web.multipart.MultipartFile[],java.lang.String,javax.servlet.http.HttpSession)>-><synthetic.method.HttpSessionImpl: void setAttribute(java.lang.String,java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.Long: int compareTo(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.logging.LogManager: java.util.logging.Formatter getFormatterProperty(java.lang.String,java.util.logging.Formatter)>-><java.lang.Class: java.lang.Object newInstance()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection,int)>-><java.util.concurrent.locks.ReentrantLock: void lock()>
<java.util.AbstractList: int hashCode()>-><org.elasticsearch.client.Node: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.elasticsearch.client.Node: int hashCode()>
<sun.rmi.runtime.Log: java.lang.String[] getSource()>-><java.lang.StackTraceElement: java.lang.String getMethodName()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.LinkedHashMap$LinkedKeySet: java.util.Iterator iterator()>
<org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection: java.lang.Object[] toArray()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.util.ReflectionUtils: void handleReflectionException(java.lang.Exception)>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: java.util.Spliterator spliterator()>-><com.google.common.collect.ForwardingMap: java.util.Set keySet()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.DefaultJSONParser: java.lang.Object parseObject(java.util.Map,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.TreeMap$KeySet: java.util.Iterator iterator()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerializeFilterable: java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<sun.rmi.runtime.Log$LoggerLog$2: java.lang.Void run()>-><java.util.logging.LogManager$RootLogger: void addHandler(java.util.logging.Handler)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.logging.StreamHandler: void setEncoding(java.lang.String)>-><java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>
<java.util.logging.StreamHandler: void flushAndClose()>-><java.util.logging.Formatter: java.lang.String getTail(java.util.logging.Handler)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.logging.Handler: void <init>()>-><java.util.logging.LogManager: java.util.logging.LogManager getLogManager()>
<java.rmi.server.LogStream: void write(int)>-><java.util.Date: void <init>()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigDecimal castToBigDecimal(java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<freemarker.ext.beans.HashAdapter$1$1$1: int hashCode()>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.flywaydb.core.internal.schemahistory.AppliedMigration: int compareTo(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.SubList$1: boolean hasNext()>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Float castToFloat(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<com.sun.jmx.mbeanserver.Introspector: javax.management.NotCompliantMBeanException throwException(java.lang.Class,java.lang.Throwable)>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.IdentityHashMap$KeySet: java.util.Iterator iterator()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<sun.rmi.runtime.Log$LoggerLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.gson.internal.LinkedTreeMap$Node: int hashCode()>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean onEquals(org.apache.shiro.session.mgt.SimpleSession)>
<freemarker.template.DefaultIterableAdapter: freemarker.template.TemplateModelIterator iterator()>-><org.apache.shiro.subject.SimplePrincipalCollection: java.util.Iterator iterator()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>-><java.lang.StringBuilder: void <init>()>
<javax.crypto.Cipher: void chooseFirstProvider()>-><javax.crypto.Cipher$Transform: int supportsModePadding(java.security.Provider$Service)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><java.lang.String: int hashCode()>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><java.util.Vector: boolean isEmpty()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.EnumMap$EntrySet: java.util.Iterator iterator()>
<org.apache.logging.log4j.message.ParameterFormatter: void handleErrorInObjectToString(java.lang.Object,java.lang.StringBuilder,java.lang.Throwable)>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<freemarker.template.DefaultObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.logging.StreamHandler: void configure()>-><java.util.logging.Handler: void setLevel(java.util.logging.Level)>
<org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>-><java.lang.Object: java.lang.Class getClass()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.chrono.ChronoZonedDateTime: int compareTo(java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.springframework.util.unit.DataSize: int compareTo(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.ArrayList$Itr: java.lang.Object next()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<ch.qos.logback.core.helpers.ThrowableToStringArray: java.lang.String formatFirstLine(java.lang.Throwable,java.lang.StackTraceElement[])>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.flywaydb.core.internal.sqlscript.SqlScript: int compareTo(java.lang.Object)>
<org.elasticsearch.client.Node: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.logging.StreamHandler: void setEncoding(java.lang.String)>-><java.util.logging.Handler: void setEncoding(java.lang.String)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.StringBuilder: int length()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.YearMonth: int compareTo(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.Byte: int compareTo(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.nio.charset.Charset: int compareTo(java.lang.Object)>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.util.TreeSet: boolean isEmpty()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<sun.rmi.runtime.Log$LoggerLog$2: java.lang.Void run()>-><sun.rmi.runtime.Log$LoggerLog: java.util.logging.Handler access$100()>
<org.elasticsearch.client.PersistentCredentialsAuthenticationStrategy: void <init>()>-><org.apache.http.impl.client.TargetAuthenticationStrategy: void <init>()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.LocalTime: int compareTo(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: int indexOf(java.lang.Object)>-><java.lang.Object: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><javax.management.ObjectName: int compareTo(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Maps$EntrySet: boolean isEmpty()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.apache.http.client.config.RequestConfig$Builder: org.apache.http.client.config.RequestConfig build()>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.util.AbstractMap$1: boolean isEmpty()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$SingletonSet: java.util.Iterator iterator()>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.ProcessEnvironment$Value: int compareTo(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.elasticsearch.client.Node: int hashCode()>
<java.util.logging.StreamHandler: void flushAndClose()>-><java.io.OutputStreamWriter: void flush()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.rmi.server.LogStream: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: java.lang.Object[] toArray(java.lang.Object[])>-><java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class)>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: void remove()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.flywaydb.core.internal.callback.SqlScriptCallbackFactory$SqlScriptCallback: int compareTo(java.lang.Object)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<freemarker.ext.beans.StringModel: java.lang.String getAsString()>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.lang.Object: java.lang.String toString()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.logging.Handler: void reportError(java.lang.String,java.lang.Exception,int)>-><java.util.logging.ErrorManager: void error(java.lang.String,java.lang.Exception,int)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<sun.rmi.runtime.NewThreadAction: java.lang.Thread run()>-><java.lang.System: java.lang.SecurityManager getSecurityManager()>
<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: java.util.List sortErrorViewResolvers(java.util.List)>-><org.springframework.core.annotation.AnnotationAwareOrderComparator: void sortIfNecessary(java.lang.Object)>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><java.lang.Long: java.lang.Long valueOf(long)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<java.util.logging.Handler: void reportError(java.lang.String,java.lang.Exception,int)>-><java.io.PrintStream: void println(java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><javax.management.ObjectName: int compareTo(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><freemarker.ext.beans.HashAdapter$1: java.util.Iterator iterator()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Iterator iterator()>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><freemarker.ext.beans.CollectionAdapter: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.Optional: java.util.Optional map(java.util.function.Function)>-><java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.LocalDate: int compareTo(java.lang.Object)>
<javax.el.BeanELResolver$SoftConcurrentHashMap: void cleanup()>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>
<java.util.logging.LogManager: java.util.logging.Formatter getFormatterProperty(java.lang.String,java.util.logging.Formatter)>-><java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>
<org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<freemarker.ext.beans.StringModel: java.lang.String getAsString()>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<sun.rmi.runtime.Log$LogStreamLog: java.lang.String unqualifiedName(java.lang.String)>-><java.lang.String: java.lang.String replace(char,char)>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Iterator iterator()>-><org.apache.shiro.subject.SimplePrincipalCollection: java.util.Set asSet()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<freemarker.ext.beans.StringModel: java.lang.String getAsString()>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Vector$Itr: boolean hasNext()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$SingletonSet: java.util.Iterator iterator()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.logging.SimpleFormatter: void <init>()>-><java.util.logging.Formatter: void <init>()>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.flywaydb.core.internal.callback.SqlScriptCallbackFactory$SqlScriptCallback: int compareTo(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<freemarker.ext.beans.HashAdapter$1$1$1: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.zone.ZoneOffsetTransition: int compareTo(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.EnumMap$KeySet: java.util.Iterator iterator()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><sun.security.x509.X509CRLEntryImpl: int compareTo(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: int compareTo(java.lang.Object)>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigInteger castToBigInteger(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.elasticsearch.client.RestClientBuilder$2: org.apache.http.impl.nio.client.CloseableHttpAsyncClient run()>-><org.apache.http.impl.nio.client.HttpAsyncClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient build()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.elasticsearch.client.Node: boolean equals(java.lang.Object)>-><java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
<sun.rmi.runtime.Log$LogStreamLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><org.springframework.beans.PropertyBatchUpdateException: void printStackTrace(java.io.PrintStream)>
<java.util.Collections$SetFromMap: void <init>(java.util.Map)>-><org.springframework.util.LinkedCaseInsensitiveMap: java.util.Set keySet()>
<org.apache.commons.collections.FastHashMap$CollectionView: boolean isEmpty()>-><org.apache.commons.collections.FastHashMap$EntrySet: java.util.Collection get(java.util.Map)>
<sun.rmi.runtime.NewThreadAction: java.lang.Thread run()>-><java.lang.Thread: void setDaemon(boolean)>
<sun.rmi.runtime.NewThreadAction$1: java.lang.ThreadGroup run()>-><java.lang.Thread: java.lang.Thread currentThread()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.util.Collections$EmptySet: boolean isEmpty()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.LinkedHashMap$LinkedEntrySet: java.util.Iterator iterator()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Double castToDouble(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<java.util.logging.LogManager: java.util.logging.Filter getFilterProperty(java.lang.String,java.util.logging.Filter)>-><java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.util.Hashtable: java.lang.String toString()>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.alibaba.fastjson.parser.DefaultJSONParser: java.lang.Object parseObject(java.util.Map,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder: int compareTo(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.logging.Handler: void checkPermission()>-><java.util.logging.LogManager: void checkPermission()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.MonthDay: int compareTo(java.lang.Object)>
<org.elasticsearch.common.ParseField: java.lang.String toString()>-><org.elasticsearch.common.ParseField: java.lang.String getPreferredName()>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Set asSet()>-><java.util.HashMap: boolean isEmpty()>
<co.yiiu.pybbs.controller.api.IndexApiController: co.yiiu.pybbs.util.Result sms_code(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)>-><synthetic.method.HttpSessionImpl: java.lang.Object getAttribute(java.lang.String)>
<org.apache.shiro.session.mgt.SimpleSession: boolean onEquals(org.apache.shiro.session.mgt.SimpleSession)>-><org.apache.shiro.session.mgt.SimpleSession: java.util.Date getLastAccessTime()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.springframework.util.CollectionUtils$MultiValueMapAdapter: java.util.Set entrySet()>-><java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.lang.Integer: java.lang.String toString()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<sun.rmi.runtime.NewThreadAction: java.lang.Thread run()>-><java.lang.StringBuilder: void <init>()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.util.AbstractCollection: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigInteger castToBigInteger(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.springframework.core.annotation.AnnotationAwareOrderComparator: void sortIfNecessary(java.lang.Object)>-><org.springframework.core.annotation.AnnotationAwareOrderComparator: void sort(java.util.List)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.YearMonth: int compareTo(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.controller.front.IndexController: java.lang.String logout(javax.servlet.http.HttpSession)>-><synthetic.method.HttpSessionImpl: void removeAttribute(java.lang.String)>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.util.Collections$UnmodifiableCollection: boolean isEmpty()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.util.TypeUtils: java.lang.String castToString(java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder: int compareTo(java.lang.Object)>
<org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>-><java.util.Optional: java.lang.Object orElse(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.LinkedList$ListItr: boolean hasNext()>
<org.elasticsearch.client.RestClientBuilder$2: void <init>(org.elasticsearch.client.RestClientBuilder,org.apache.http.impl.nio.client.HttpAsyncClientBuilder)>-><java.lang.Object: void <init>()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<java.util.logging.StreamHandler: void flushAndClose()>-><java.util.logging.Formatter: java.lang.String getHead(java.util.logging.Handler)>
<sun.rmi.runtime.Log$LoggerLog$1: java.util.logging.Handler run()>-><sun.rmi.runtime.Log$InternalStreamHandler: void <init>(java.io.OutputStream)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.chrono.ChronoZonedDateTime: int compareTo(java.lang.Object)>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<com.google.gson.internal.LinkedTreeMap$Node: int hashCode()>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$1: boolean hasNext()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean containsAll(java.util.Collection)>-><com.google.common.collect.ForwardingMap: java.util.Set keySet()>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: long getTimeout()>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>-><java.lang.StringBuilder: void <init>()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><freemarker.ext.beans.HashAdapter$1: java.util.Iterator iterator()>
<sun.rmi.runtime.NewThreadAction: java.lang.Thread run()>-><java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Hashtable$EntrySet: java.util.Iterator iterator()>
<java.util.Hashtable: java.lang.String toString()>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><com.fasterxml.jackson.databind.type.ClassKey: int compareTo(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.joda.time.base.AbstractPartial: int compareTo(java.lang.Object)>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.apache.poi.hssf.usermodel.HSSFRow: int compareTo(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.net.URL: int getDefaultPort()>-><java.net.URLStreamHandler: int getDefaultPort()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: java.lang.Object next()>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: boolean remove(java.lang.Object)>-><java.util.concurrent.locks.ReentrantLock: void lock()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.ZoneOffset: int compareTo(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.AbstractMap$1$1: boolean hasNext()>
<java.util.logging.StreamHandler: void <init>(java.io.OutputStream,java.util.logging.Formatter)>-><java.util.logging.StreamHandler: void configure()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet: java.util.Iterator iterator()>
<java.util.concurrent.ThreadPoolExecutor: java.util.List drainQueue()>-><java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.TreeMap$KeySet: java.util.Iterator iterator()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerializeFilterable: java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.math.BigDecimal: int compareTo(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.joda.time.field.UnsupportedDurationField: int compareTo(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>-><java.util.Optional: java.util.Optional map(java.util.function.Function)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.Duration: int compareTo(java.lang.Object)>
<org.springframework.http.HttpHeaders: java.lang.String formatHeaders(org.springframework.util.MultiValueMap)>-><org.springframework.util.LinkedMultiValueMap: java.util.Set entrySet()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<java.io.ObjectInputStream$PeekInputStream: void close()>-><java.io.BufferedInputStream: void close()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.controller.api.IndexApiController: co.yiiu.pybbs.util.Result doUserStorage(javax.servlet.http.HttpSession,co.yiiu.pybbs.model.User)>-><synthetic.method.HttpSessionImpl: void removeAttribute(java.lang.String)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.ArrayList$Itr: boolean hasNext()>
<sun.rmi.runtime.RuntimeUtil$1: java.lang.Thread newThread(java.lang.Runnable)>-><sun.rmi.runtime.NewThreadAction: void <init>(java.lang.Runnable,java.lang.String,boolean)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.String castToString(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.IdentityHashMap$KeySet: java.util.Iterator iterator()>
<javax.crypto.Cipher: void chooseProvider(int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>-><javax.crypto.Cipher$Transform: void setModePadding(javax.crypto.CipherSpi)>
<org.apache.shiro.session.mgt.SimpleSession: boolean onEquals(org.apache.shiro.session.mgt.SimpleSession)>-><org.apache.shiro.session.mgt.SimpleSession: boolean isExpired()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<javax.el.BeanELResolver$SoftConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><javax.el.BeanELResolver$SoftConcurrentHashMap: javax.el.BeanELResolver$BeanProperties get(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.rmi.server.LogStream: void write(byte[],int,int)>-><java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><org.apache.http.HttpHost: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection,int)>-><java.util.concurrent.locks.ReentrantLock: void unlock()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigDecimal castToBigDecimal(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.math.BigInteger: int compareTo(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.ProcessEnvironment$StringEntrySet: java.util.Iterator iterator()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: int compareTo(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember: int compareTo(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Set asSet()>-><java.util.LinkedHashMap: java.util.Collection values()>
<java.util.logging.StreamHandler: void configure()>-><java.lang.StringBuilder: void <init>()>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.util.RegularEnumSet: boolean isEmpty()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.AbstractMap$2$1: boolean hasNext()>
<org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.util.TreeMap$KeySet: boolean isEmpty()>
<java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<javax.el.BeanELResolver$SoftConcurrentHashMap: javax.el.BeanELResolver$BeanProperties get(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.Byte: int compareTo(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.String: int compareTo(java.lang.Object)>
<sun.rmi.runtime.NewThreadAction$1: java.lang.ThreadGroup run()>-><java.lang.ThreadGroup: java.lang.ThreadGroup getParent()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.OffsetTime: int compareTo(java.lang.Object)>
<java.rmi.server.LogStream: void write(int)>-><java.io.Writer: void write(java.lang.String)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.logging.Handler: void setEncoding(java.lang.String)>-><java.nio.charset.Charset: boolean isSupported(java.lang.String)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.joda.time.base.AbstractInstant: int compareTo(java.lang.Object)>
<com.google.common.collect.Maps$Values: java.util.Iterator iterator()>-><com.google.common.collect.ForwardingMap: java.util.Set entrySet()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.sql.Timestamp: int compareTo(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<java.util.logging.LogManager: java.util.logging.Filter getFilterProperty(java.lang.String,java.util.logging.Filter)>-><java.lang.Class: java.lang.Object newInstance()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet: java.util.Iterator iterator()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.nio.charset.Charset: int compareTo(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.net.URL: java.io.InputStream openStream()>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: java.io.InputStream getInputStream()>
<org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.logging.Handler: void setEncoding(java.lang.String)>-><java.io.UnsupportedEncodingException: void <init>(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<javax.crypto.Cipher: void chooseFirstProvider()>-><sun.security.jca.ProviderList$ServiceList$1: boolean hasNext()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<java.util.logging.Handler: void <init>()>-><java.util.logging.ErrorManager: void <init>()>
<java.util.logging.ErrorManager: void error(java.lang.String,java.lang.Exception,int)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.elasticsearch.client.RestClientBuilder$1: org.apache.http.impl.nio.client.CloseableHttpAsyncClient run()>-><org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient access$000(org.elasticsearch.client.RestClientBuilder)>
<java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>-><java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>
<org.apache.shiro.util.StringUtils: java.lang.String toDelimitedString(java.lang.Object[],java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.flywaydb.core.internal.util.Pair: int compareTo(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.joda.time.base.AbstractPartial: int compareTo(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.elasticsearch.client.Node: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: boolean remove(java.lang.Object)>-><java.util.concurrent.PriorityBlockingQueue: int indexOf(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.Instant: int compareTo(java.lang.Object)>
<java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>-><java.lang.NullPointerException: void <init>()>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><java.util.Collections$EmptyList: boolean isEmpty()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.flywaydb.core.internal.info.MigrationInfoImpl: int compareTo(java.lang.Object)>
<co.yiiu.pybbs.controller.api.SettingsApiController: co.yiiu.pybbs.util.Result updateEmail(java.util.Map,javax.servlet.http.HttpSession)>-><synthetic.method.HttpSessionImpl: void setAttribute(java.lang.String,java.lang.Object)>
<java.util.LinkedHashSet: void <init>(java.util.Collection)>-><java.util.Collections$EmptySet: int size()>
<org.springframework.core.annotation.AnnotationAwareOrderComparator: void sortIfNecessary(java.lang.Object)>-><org.springframework.core.annotation.AnnotationAwareOrderComparator: void sort(java.lang.Object[])>
<com.alibaba.fastjson.util.TypeUtils: java.lang.String castToString(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<sun.rmi.runtime.RuntimeUtil$1: java.lang.Thread newThread(java.lang.Runnable)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JavaBeanSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.net.URLConnection: long getHeaderFieldDate(java.lang.String,long)>-><java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet: boolean isEmpty()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<freemarker.ext.beans.StringModel: java.lang.String getAsString()>-><org.elasticsearch.client.Node: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.flywaydb.core.internal.schemahistory.AppliedMigration: int compareTo(java.lang.Object)>
<sun.rmi.runtime.Log: java.lang.String[] getSource()>-><java.lang.StackTraceElement: java.lang.String getClassName()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: java.lang.Object next()>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.apache.http.impl.nio.client.HttpAsyncClientBuilder: org.apache.http.impl.nio.client.HttpAsyncClientBuilder setDefaultRequestConfig(org.apache.http.client.config.RequestConfig)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.EnumMap$KeySet: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.joda.time.LocalTime: int compareTo(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: boolean hasNext()>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.JumboEnumSet: java.util.Iterator iterator()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<sun.rmi.runtime.RuntimeUtil$1: java.lang.Thread newThread(java.lang.Runnable)>-><java.lang.StringBuilder: java.lang.String toString()>
<co.yiiu.pybbs.controller.api.IndexApiController: co.yiiu.pybbs.util.Result index(java.lang.Integer,java.lang.String)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.controller.api.IndexApiController: co.yiiu.pybbs.util.Result doUserStorage(javax.servlet.http.HttpSession,co.yiiu.pybbs.model.User)>-><synthetic.method.HttpSessionImpl: void setAttribute(java.lang.String,java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: boolean hasNext()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.RegularEnumSet: java.util.Iterator iterator()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.HashSet: java.util.Iterator iterator()>
<java.util.logging.LogManager: java.util.logging.Formatter getFormatterProperty(java.lang.String,java.util.logging.Formatter)>-><java.util.ResourceBundle$RBClassLoader: java.lang.Class loadClass(java.lang.String)>
<org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>-><java.util.AbstractList: int hashCode()>
<org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.apache.logging.log4j.Level: int compareTo(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$EmptySet: java.util.Iterator iterator()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.TreeMap$EntrySet: java.util.Iterator iterator()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Float castToFloat(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<javax.el.BeanELResolver$SoftConcurrentHashMap: javax.el.BeanELResolver$BeanProperties get(java.lang.Object)>-><java.lang.ref.SoftReference: java.lang.Object get()>
<org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><java.rmi.server.LogStream: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.AbstractMap$1$1: boolean hasNext()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.EnumMap: int entryHashCode(int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<sun.rmi.runtime.NewThreadAction: java.lang.Thread run()>-><java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.Long: int compareTo(java.lang.Object)>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.logging.Formatter: void <init>()>-><java.lang.Object: void <init>()>
<java.util.logging.LogManager: java.util.logging.Formatter getFormatterProperty(java.lang.String,java.util.logging.Formatter)>-><java.util.logging.LogManager: java.lang.String getProperty(java.lang.String)>
<java.util.concurrent.ThreadPoolExecutor: java.util.List drainQueue()>-><java.util.concurrent.PriorityBlockingQueue: java.lang.Object[] toArray(java.lang.Object[])>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><java.rmi.server.LogStream: java.lang.String toString()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.io.ObjectInputStream$PeekInputStream: int available()>-><java.io.BufferedInputStream: int available()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<sun.rmi.runtime.NewThreadAction: java.lang.Object run()>-><sun.rmi.runtime.NewThreadAction: java.lang.Thread run()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.flywaydb.core.internal.resource.filesystem.FileSystemResource: int compareTo(java.lang.Object)>
<java.util.logging.LogManager: java.lang.String getStringProperty(java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String trim()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>-><java.net.URLStreamHandler: void setURL(java.net.URL,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<com.google.common.collect.ForwardingMap: boolean containsValue(java.lang.Object)>-><com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.Map delegate()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><org.elasticsearch.client.RestClientBuilder$1: java.lang.Object run()>
<java.util.logging.ErrorManager: void error(java.lang.String,java.lang.Exception,int)>-><java.lang.Throwable: void printStackTrace()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.joda.time.format.DateTimeParserBucket$SavedField: int compareTo(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.String: int compareTo(java.lang.Object)>
<java.util.TreeMap$Entry: int hashCode()>-><org.elasticsearch.client.Node: int hashCode()>
<javax.crypto.Cipher: void chooseProvider(int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>-><java.security.Provider$Service: boolean supportsParameter(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.ProcessEnvironment$Variable: int compareTo(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><java.lang.reflect.WeakCache$LookupValue: boolean equals(java.lang.Object)>
<org.apache.shiro.util.MapContext: int size()>-><java.util.HashMap: int size()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.io.ObjectInputStream$PeekInputStream: int read(byte[],int,int)>-><java.io.BufferedInputStream: int read(byte[],int,int)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Set asSet()>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.joda.time.field.BaseDurationField: int compareTo(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: int compareTo(java.lang.Object)>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Maps$KeySet: boolean isEmpty()>
<org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<sun.rmi.runtime.Log$LoggerLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.lang.StringBuilder: void <init>()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><org.apache.shiro.util.MapContext: java.util.Set entrySet()>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<com.alibaba.fastjson.serializer.SerializeFilterable: java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.Float: int compareTo(java.lang.Object)>
<org.springframework.http.HttpHeaders: java.lang.String formatHeaders(org.springframework.util.MultiValueMap)>-><java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>
<java.util.concurrent.ThreadPoolExecutor: boolean remove(java.lang.Runnable)>-><java.util.concurrent.PriorityBlockingQueue: boolean remove(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.logging.StreamHandler: void configure()>-><java.util.logging.Handler: void setFilter(java.util.logging.Filter)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: java.lang.Object next()>-><org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap access$300(org.apache.commons.collections.FastHashMap$CollectionView)>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<sun.rmi.runtime.Log$LogStreamLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><sun.rmi.runtime.Log: java.lang.String[] access$200()>
<org.apache.shiro.session.mgt.SimpleSession: boolean onEquals(org.apache.shiro.session.mgt.SimpleSession)>-><org.apache.shiro.session.mgt.SimpleSession: java.util.Date getStartTimestamp()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigDecimal castToBigDecimal(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.elasticsearch.client.PersistentCredentialsAuthenticationStrategy: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: int compareTo(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.net.URI: int compareTo(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>-><java.lang.String: int length()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<java.util.AbstractCollection: boolean isEmpty()>-><java.util.concurrent.PriorityBlockingQueue: int size()>
<java.util.Collections$SetFromMap: void <init>(java.util.Map)>-><org.springframework.util.LinkedCaseInsensitiveMap: boolean isEmpty()>
<java.util.logging.StreamHandler: void configure()>-><java.util.logging.StreamHandler: void setEncoding(java.lang.String)>
<javax.crypto.CryptoPermission: boolean impliesParameterSpec(boolean,java.security.spec.AlgorithmParameterSpec)>-><java.lang.Object: java.lang.Class getClass()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.Integer: int compareTo(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient access$000(org.elasticsearch.client.RestClientBuilder)>-><org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<sun.rmi.runtime.Log$LoggerLog$1: java.lang.Object run()>-><sun.rmi.runtime.Log$LoggerLog$1: java.util.logging.Handler run()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.joda.time.LocalDateTime: int compareTo(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Object cast(java.lang.Object,java.lang.reflect.ParameterizedType,com.alibaba.fastjson.parser.ParserConfig)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.util.Iterator iterator()>
<sun.misc.URLClassPath$Loader: java.net.URL findResource(java.lang.String,boolean)>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: java.io.InputStream getInputStream()>
<co.yiiu.pybbs.controller.api.SettingsApiController: co.yiiu.pybbs.util.Result update(java.util.Map,javax.servlet.http.HttpSession)>-><synthetic.method.HttpSessionImpl: void setAttribute(java.lang.String,java.lang.Object)>
<co.yiiu.pybbs.controller.api.CommentApiController: co.yiiu.pybbs.util.Result create(java.util.Map)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<sun.rmi.runtime.RuntimeUtil$1: java.lang.Thread newThread(java.lang.Runnable)>-><sun.rmi.runtime.RuntimeUtil: sun.rmi.runtime.Log access$000()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<co.yiiu.pybbs.controller.api.SettingsApiController: co.yiiu.pybbs.util.Result update(java.util.Map,javax.servlet.http.HttpSession)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.joda.time.field.BaseDurationField: int compareTo(java.lang.Object)>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: void <init>(java.net.URL)>-><java.net.URLConnection: void <init>(java.net.URL)>
<java.util.ResourceBundle$Control$1: java.io.InputStream run()>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: java.io.InputStream getInputStream()>
<com.alibaba.fastjson.serializer.SerializeFilterable: java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)>-><java.rmi.server.LogStream: java.lang.String toString()>
<co.yiiu.pybbs.controller.api.IndexApiController: co.yiiu.pybbs.util.Result register(java.util.Map,javax.servlet.http.HttpSession)>-><synthetic.method.HttpSessionImpl: java.lang.Object getAttribute(java.lang.String)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.MonthDay: int compareTo(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<java.util.LinkedList: boolean addAll(int,java.util.Collection)>-><org.apache.commons.collections.FastHashMap$CollectionView: java.lang.Object[] toArray()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.joda.time.LocalDateTime: int compareTo(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.lang.Object next()>
<freemarker.ext.beans.StringModel: java.lang.String getAsString()>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<java.util.Properties: java.lang.String getProperty(java.lang.String)>-><java.util.Properties: java.lang.String getProperty(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.JumboEnumSet: java.util.Iterator iterator()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.flywaydb.core.api.Location: int compareTo(java.lang.Object)>
<freemarker.ext.beans.StringModel: java.lang.String getAsString()>-><java.rmi.server.LogStream: java.lang.String toString()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.AbstractList$Itr: java.lang.Object next()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<java.util.logging.Handler: void reportError(java.lang.String,java.lang.Exception,int)>-><java.lang.Throwable: void printStackTrace()>
<org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.io.Serializable getId()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.LocalDateTime: int compareTo(java.lang.Object)>
<sun.rmi.runtime.NewThreadAction: java.lang.Thread run()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>
<java.util.logging.StreamHandler: void configure()>-><java.util.logging.SimpleFormatter: void <init>()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><java.rmi.server.LogStream: java.lang.String toString()>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.joda.time.field.MillisDurationField: int compareTo(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>-><java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.joda.time.base.AbstractDuration: int compareTo(java.lang.Object)>
<org.apache.shiro.util.StringUtils: java.lang.String toDelimitedString(java.lang.Object[],java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<java.rmi.server.LogStream: void write(byte[],int,int)>-><java.rmi.server.LogStream: void write(int)>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><java.util.Date: int hashCode()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.logging.StreamHandler: void flush()>-><java.util.logging.Handler: void reportError(java.lang.String,java.lang.Exception,int)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: void <init>(org.apache.commons.collections.FastHashMap$CollectionView)>-><org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap access$300(org.apache.commons.collections.FastHashMap$CollectionView)>
<sun.rmi.runtime.NewThreadAction: java.lang.Thread run()>-><java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigDecimal castToBigDecimal(java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.math.BigInteger: int compareTo(java.lang.Object)>
<java.util.logging.StreamHandler: void flushAndClose()>-><java.util.logging.Handler: void reportError(java.lang.String,java.lang.Exception,int)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigDecimal castToBigDecimal(java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.apache.shiro.session.mgt.SimpleSession: boolean onEquals(org.apache.shiro.session.mgt.SimpleSession)>-><java.util.Date: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.joda.time.LocalDate: int compareTo(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<javax.crypto.Cipher$Transform: int supportsModePadding(java.security.Provider$Service)>-><javax.crypto.Cipher$Transform: int supportsPadding(java.security.Provider$Service)>
<javax.crypto.Cipher$Transform: int supportsModePadding(java.security.Provider$Service)>-><java.lang.Math: int min(int,int)>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigInteger castToBigInteger(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.springframework.util.MimeType: int compareTo(java.lang.Object)>
<java.util.EnumMap: int entryHashCode(int)>-><org.elasticsearch.client.Node: int hashCode()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.flywaydb.core.internal.util.Pair: int compareTo(java.lang.Object)>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.ProcessEnvironment$Value: int compareTo(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.RegularEnumSet: java.util.Iterator iterator()>
<java.rmi.server.LogStream: void write(int)>-><java.lang.Thread: java.lang.String getName()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.util.Date: int compareTo(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<org.elasticsearch.client.Node: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<sun.rmi.runtime.Log$LoggerLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><sun.rmi.runtime.Log: java.lang.String[] access$200()>
<ch.qos.logback.classic.spi.ThrowableProxy: void <init>(java.lang.Throwable)>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<java.io.ObjectOutputStream$BlockDataOutputStream: void flush()>-><java.io.BufferedOutputStream: void flush()>
<co.yiiu.pybbs.controller.admin.IndexAdminController: java.lang.String adminlogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,java.lang.Boolean,javax.servlet.http.HttpServletRequest,org.springframework.web.servlet.mvc.support.RedirectAttributes)>-><java.lang.Throwable: java.lang.String getMessage()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<sun.rmi.runtime.Log$LoggerLog$1: java.util.logging.Handler run()>-><java.util.logging.Handler: void setLevel(java.util.logging.Level)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.logging.StreamHandler: void <init>(java.io.OutputStream,java.util.logging.Formatter)>-><java.util.logging.Handler: void <init>()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigInteger castToBigInteger(java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<com.alibaba.fastjson.serializer.MiscCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.util.Iterator iterator()>
<org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.AbstractMap$1: java.util.Iterator iterator()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.LocalDateTime: int compareTo(java.lang.Object)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>-><org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: void <init>(java.net.URL)>-><java.net.URL: void <init>(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><freemarker.ext.beans.HashAdapter$1$1: boolean hasNext()>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.apache.http.client.config.RequestConfig: org.apache.http.client.config.RequestConfig$Builder custom()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.apache.poi.hssf.usermodel.HSSFRow: int compareTo(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>-><java.util.AbstractMap: int hashCode()>
<javax.crypto.Cipher$Transform: int supportsModePadding(java.security.Provider$Service)>-><javax.crypto.Cipher$Transform: int supportsMode(java.security.Provider$Service)>
<java.util.EnumMap: int entryHashCode(int)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<sun.rmi.runtime.NewThreadAction$2: java.lang.ThreadGroup run()>-><java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigInteger castToBigInteger(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>-><java.lang.NullPointerException: void <init>(java.lang.String)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><sun.security.x509.X509CRLEntryImpl: int compareTo(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.Boolean: int compareTo(java.lang.Object)>
<sun.rmi.runtime.Log: java.lang.String[] getSource()>-><java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: boolean hasNext()>-><org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap access$300(org.apache.commons.collections.FastHashMap$CollectionView)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.LinkedList: boolean remove(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: java.lang.Object next()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.apache.poi.hssf.record.common.UnicodeString: int compareTo(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.joda.time.base.AbstractInstant: int compareTo(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerializeFilterable: java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<javax.crypto.CryptoPermission: boolean impliesParameterSpec(boolean,java.security.spec.AlgorithmParameterSpec)>-><java.lang.Object: boolean equals(java.lang.Object)>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.lang.String: java.lang.String toString()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<sun.nio.cs.StreamEncoder: void writeBytes()>-><java.rmi.server.LogStream: void write(byte[],int,int)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.joda.time.LocalDate: int compareTo(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.logging.Handler: void setFormatter(java.util.logging.Formatter)>-><java.util.logging.Handler: void checkPermission()>
<java.util.logging.StreamHandler: void flushAndClose()>-><java.io.OutputStreamWriter: void close()>
<java.util.logging.StreamHandler: void configure()>-><java.util.logging.LogManager: java.lang.String getStringProperty(java.lang.String,java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.util.logging.Handler: void setLevel(java.util.logging.Level)>-><java.lang.NullPointerException: void <init>()>
<java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection,int)>-><java.lang.NullPointerException: void <init>()>
<java.util.logging.Handler: void setLevel(java.util.logging.Level)>-><java.util.logging.Handler: void checkPermission()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Set asSet()>-><java.util.AbstractCollection: boolean addAll(java.util.Collection)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<com.google.gson.internal.LinkedTreeMap$Node: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Vector$Itr: boolean hasNext()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void main(java.lang.String[])>-><org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.boot.autoconfigure.web.ErrorProperties)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.Map delegate()>-><com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.concurrent.ConcurrentMap delegate()>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><java.util.ArrayList: boolean isEmpty()>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><java.util.AbstractMap: int hashCode()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigInteger castToBigInteger(java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$KeySet: int size()>-><com.google.common.collect.ForwardingMap: int size()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<com.alibaba.fastjson.parser.DefaultJSONParser: java.lang.Object parseObject(java.util.Map,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<javax.el.BeanELResolver$SoftConcurrentHashMap: void cleanup()>-><java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean equals(java.lang.Object)>-><com.google.common.collect.ForwardingMap: java.util.Set keySet()>
<org.elasticsearch.client.Node: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<com.alibaba.fastjson.serializer.SerializeFilterable: java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<sun.rmi.runtime.Log$LogStreamLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.lang.StringBuilder: void <init>()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>-><java.util.Arrays: java.lang.String toString(java.lang.Object[])>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.apache.shiro.util.MapContext: java.util.Set entrySet()>-><java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.logging.Handler: void setFilter(java.util.logging.Filter)>-><java.util.logging.Handler: void checkPermission()>
<java.text.AttributeEntry: int hashCode()>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<java.rmi.server.LogStream: void write(int)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.net.URL)>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: java.io.InputStream getInputStream()>
<java.rmi.server.LogStream: void write(int)>-><java.io.PrintStream: void setError()>
<org.springframework.core.ResolvableType: int calculateHashCode()>-><org.springframework.core.SerializableTypeWrapper$MethodInvokeTypeProvider: java.lang.reflect.Type getType()>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.String castToString(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: boolean hasNext()>-><java.util.ConcurrentModificationException: void <init>()>
<org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: java.lang.String getPath()>
<org.apache.shiro.util.StringUtils: java.lang.String toDelimitedString(java.lang.Object[],java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Iterator iterator()>-><java.util.Collections$EmptySet: java.util.Iterator iterator()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<java.util.LinkedList: boolean remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<freemarker.ext.beans.StringModel: java.lang.String getAsString()>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: boolean hasNext()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.logging.StreamHandler: void setEncoding(java.lang.String)>-><java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.boot.autoconfigure.web.ErrorProperties,java.util.List)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.joda.time.base.AbstractDuration: int compareTo(java.lang.Object)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.apache.http.impl.nio.client.HttpAsyncClientBuilder: org.apache.http.impl.nio.client.HttpAsyncClientBuilder create()>
<java.util.concurrent.PriorityBlockingQueue: void removeAt(int)>-><java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>
<java.text.AttributeEntry: int hashCode()>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<com.alibaba.fastjson.serializer.SerializeFilterable: java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.springframework.util.unit.DataSize: int compareTo(java.lang.Object)>
<co.yiiu.pybbs.controller.api.IndexApiController: co.yiiu.pybbs.util.Result index(java.lang.Integer,java.lang.String)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.boot.autoconfigure.web.ErrorProperties)>-><java.util.Collections: java.util.List emptyList()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><com.fasterxml.jackson.databind.type.ClassKey: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.boot.autoconfigure.web.ErrorProperties)>-><org.springframework.boot.autoconfigure.web.ErrorProperties: void <init>()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.Integer: int compareTo(java.lang.Object)>
<com.google.common.collect.ForwardingMap: boolean containsValue(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><java.rmi.server.LogStream: java.lang.String toString()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask: int compareTo(java.lang.Object)>
<com.google.common.collect.Maps$KeySet: boolean contains(java.lang.Object)>-><com.google.common.collect.ForwardingMap: boolean containsKey(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: java.lang.Object[] toArray(java.lang.Object[])>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.common.collect.ForwardingMap: void clear()>-><java.util.concurrent.ConcurrentHashMap: void clear()>
<com.alibaba.fastjson.parser.DefaultJSONParser: java.lang.Object parseObject(java.util.Map,java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.LocalDate: int compareTo(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Hashtable$KeySet: java.util.Iterator iterator()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Double castToDouble(java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.Short: int compareTo(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<freemarker.ext.beans.StringModel: java.lang.String getAsString()>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.logging.StreamHandler: void configure()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownUsingComparator(int,java.lang.Object,java.lang.Object[],int,java.util.Comparator)>-><org.apache.logging.log4j.util.PropertySource$Comparator: int compare(java.lang.Object,java.lang.Object)>
<org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.util.AbstractMap: java.lang.String toString()>
<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service tryGet(int)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.flywaydb.core.internal.resource.classpath.ClassPathResource: int compareTo(java.lang.Object)>
<org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>-><java.util.HashMap: boolean isEmpty()>
<java.io.ObjectOutputStream$BlockDataOutputStream: void close()>-><java.io.FilterOutputStream: void close()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><java.lang.reflect.WeakCache$LookupValue: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.AbstractMap$1: java.util.Iterator iterator()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigDecimal castToBigDecimal(java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.ConcurrentHashMap$KeySetView: java.util.Iterator iterator()>
<org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: void <init>(org.apache.commons.collections.FastHashMap$CollectionView)>-><java.lang.Object: void <init>()>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: java.io.Serializable getId()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<freemarker.ext.beans.HashAdapter$1$1$1: int hashCode()>-><org.elasticsearch.client.Node: int hashCode()>
<java.util.logging.Handler: void setEncoding(java.lang.String)>-><java.util.logging.Handler: void checkPermission()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.core.SerializableTypeWrapper$MethodInvokeTypeProvider: java.lang.reflect.Type getType()>-><org.springframework.core.SerializableTypeWrapper$MethodInvokeTypeProvider: java.lang.reflect.Type getType()>
<org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<java.util.logging.SimpleFormatter: void <init>()>-><java.util.Date: void <init>()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Vector$Itr: java.lang.Object next()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<com.google.common.collect.ForwardingMap: boolean isEmpty()>-><com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.Map delegate()>
<co.yiiu.pybbs.controller.api.IndexApiController: co.yiiu.pybbs.util.Result login(java.util.Map,javax.servlet.http.HttpSession)>-><synthetic.method.HttpSessionImpl: java.lang.Object getAttribute(java.lang.String)>
<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: java.util.List sortErrorViewResolvers(java.util.List)>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><java.util.Collections$UnmodifiableCollection: boolean isEmpty()>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.nio.charset.Charset: java.lang.String toString()>
<org.springframework.http.HttpHeaders: java.lang.String formatHeaders(org.springframework.util.MultiValueMap)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.stream.Stream stream()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: boolean hasNext()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: java.lang.Object next()>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.net.URI: int compareTo(java.lang.Object)>
<sun.rmi.runtime.Log$LoggerLog$2: java.lang.Void run()>-><java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>
<org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>-><java.lang.Throwable: java.lang.String getMessage()>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Double castToDouble(java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: java.lang.String getPath()>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.rmi.server.LogStream: void write(int)>-><java.io.ByteArrayOutputStream: void reset()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<sun.rmi.runtime.Log$LoggerLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.lang.Thread: java.lang.Thread currentThread()>
<org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: void <init>(org.apache.commons.collections.FastHashMap$CollectionView)>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.LinkedHashMap$LinkedKeySet: java.util.Iterator iterator()>
<sun.rmi.runtime.Log$LoggerLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.IdentityHashMap$EntrySet: java.util.Iterator iterator()>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean isEmpty()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><sun.rmi.runtime.NewThreadAction: java.lang.Object run()>
<java.io.FileDescriptor: void closeAll(java.io.Closeable)>-><java.io.PrintStream: void close()>
<sun.rmi.runtime.Log$LogStreamLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><sun.rmi.runtime.Log$LogStreamLog: java.lang.String unqualifiedName(java.lang.String)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<org.apache.shiro.session.mgt.SimpleSession: boolean onEquals(org.apache.shiro.session.mgt.SimpleSession)>-><org.apache.shiro.session.mgt.SimpleSession: java.util.Map getAttributes()>
<javax.crypto.Cipher: void chooseProvider(int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>-><sun.security.jca.ProviderList$ServiceList$1: java.lang.Object next()>
<sun.rmi.runtime.Log$LogStreamLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<freemarker.ext.beans.HashAdapter$1$1$1: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.logging.StreamHandler: void flushAndClose()>-><java.util.logging.Handler: java.util.logging.Formatter getFormatter()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<co.yiiu.pybbs.controller.admin.IndexAdminController: java.lang.String adminlogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,java.lang.Boolean,javax.servlet.http.HttpServletRequest,org.springframework.web.servlet.mvc.support.RedirectAttributes)>-><synthetic.method.HttpSessionImpl: java.lang.Object getAttribute(java.lang.String)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>-><sun.net.www.MessageHeader: void set(java.lang.String,java.lang.String)>
<java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.LinkedList: boolean remove(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<java.util.logging.StreamHandler: void configure()>-><java.util.logging.LogManager: java.util.logging.Formatter getFormatterProperty(java.lang.String,java.util.logging.Formatter)>
<java.util.logging.StreamHandler: void flushAndClose()>-><java.util.logging.Handler: void checkPermission()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.Instant: int compareTo(java.lang.Object)>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: boolean isExpired()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,java.util.List)>-><java.lang.Object: void <init>()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<java.net.URLClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>-><java.net.URLConnection: java.security.Permission getPermission()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.String castToString(java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<co.yiiu.pybbs.controller.api.IndexApiController: co.yiiu.pybbs.util.Result index(java.lang.Integer,java.lang.String)>-><co.yiiu.pybbs.util.MyPage: java.util.List getRecords()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<java.util.logging.StreamHandler: void configure()>-><java.lang.Object: java.lang.Class getClass()>
<sun.misc.URLClassPath$Loader: sun.misc.Resource getResource(java.lang.String,boolean)>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: java.io.InputStream getInputStream()>
<sun.rmi.runtime.NewThreadAction: java.lang.Thread run()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<java.util.Collections$SetFromMap: boolean contains(java.lang.Object)>-><org.springframework.util.LinkedCaseInsensitiveMap: boolean containsKey(java.lang.Object)>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><com.alibaba.fastjson.util.FieldInfo: int compareTo(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.elasticsearch.client.Node: int hashCode()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Float castToFloat(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.google.common.collect.Maps$Values: boolean isEmpty()>-><com.google.common.collect.ForwardingMap: boolean isEmpty()>
<java.util.AbstractList: int hashCode()>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.io.ObjectOutputStream$BlockDataOutputStream: void drain()>-><java.io.BufferedOutputStream: void write(byte[],int,int)>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: java.util.Map getAttributes()>
<org.apache.commons.collections.FastHashMap$CollectionView: java.lang.Object[] toArray()>-><java.util.AbstractCollection: java.lang.Object[] toArray()>
<org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigInteger castToBigInteger(java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<sun.misc.URLClassPath$Loader$1: java.io.InputStream getInputStream()>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: java.io.InputStream getInputStream()>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>-><java.net.URL: java.lang.String getProtocol()>
<com.alibaba.fastjson.serializer.SerializeFilterable: java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: void <init>(org.apache.commons.collections.FastHashMap$CollectionView)>-><java.util.HashMap: java.util.Set entrySet()>
<java.util.Hashtable: java.lang.String toString()>-><java.rmi.server.LogStream: java.lang.String toString()>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.apache.shiro.util.StringUtils: java.lang.String toDelimitedString(java.lang.Object[],java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Set asSet()>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.elasticsearch.client.PersistentCredentialsAuthenticationStrategy: void <init>()>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.springframework.util.MimeType: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,java.util.List)>-><org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: java.util.List sortErrorViewResolvers(java.util.List)>
<freemarker.template.DefaultObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<sun.rmi.runtime.RuntimeUtil$1: java.lang.Thread newThread(java.lang.Runnable)>-><java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.AbstractList$Itr: boolean hasNext()>
<java.util.logging.LogManager: java.util.logging.Formatter getFormatterProperty(java.lang.String,java.util.logging.Formatter)>-><java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.ProcessEnvironment$StringKeySet: java.util.Iterator iterator()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>-><org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: java.lang.Object next()>
<org.springframework.http.HttpHeaders: java.lang.String formatHeaders(org.springframework.util.MultiValueMap)>-><java.util.Collection: java.util.stream.Stream stream()>
<java.util.LinkedList: boolean remove(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.lang.Boolean: java.lang.String toString()>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: java.util.Spliterator spliterator()>-><java.util.concurrent.ConcurrentHashMap$KeySetView: java.util.Spliterator spliterator()>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.apache.http.impl.nio.client.HttpAsyncClientBuilder: org.apache.http.impl.nio.client.HttpAsyncClientBuilder setMaxConnTotal(int)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><freemarker.ext.beans.OverloadedNumberUtil$NumberWithFallbackType: int compareTo(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: java.util.Date getStopTimestamp()>
<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>-><org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: boolean hasNext()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<co.yiiu.pybbs.controller.api.IndexApiController: co.yiiu.pybbs.util.Result index(java.lang.Integer,java.lang.String)>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<javax.crypto.Cipher: void chooseProvider(int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>-><javax.crypto.Cipher$Transform: int supportsModePadding(java.security.Provider$Service)>
<java.util.Optional: java.util.Optional map(java.util.function.Function)>-><java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>
<java.util.AbstractList: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.elasticsearch.client.Node: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<org.springframework.core.annotation.AnnotationAwareOrderComparator: void sort(java.lang.Object[])>-><java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>
<java.rmi.server.LogStream: void write(int)>-><java.lang.StringBuffer: java.lang.String toString()>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>-><javax.el.BeanELResolver$SoftConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.apache.http.impl.nio.client.HttpAsyncClientBuilder: org.apache.http.impl.nio.client.HttpAsyncClientBuilder setMaxConnPerRoute(int)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<org.apache.shiro.util.MapContext: java.util.Set entrySet()>-><java.util.HashMap: java.util.Set entrySet()>
<com.alibaba.fastjson.parser.DefaultJSONParser: java.lang.Object parseObject(java.util.Map,java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<sun.rmi.runtime.Log$LogStreamLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><sun.rmi.runtime.Log$LogStreamLog: boolean isLoggable(java.util.logging.Level)>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigDecimal castToBigDecimal(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigInteger castToBigInteger(java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<java.text.AttributeEntry: int hashCode()>-><org.elasticsearch.client.Node: int hashCode()>
<com.google.common.collect.ForwardingMap: boolean isEmpty()>-><java.util.concurrent.ConcurrentHashMap: boolean isEmpty()>
<com.google.gson.internal.LinkedTreeMap$Node: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: java.net.URLConnection openConnection(java.net.URL)>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: void <init>(java.net.URL)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<sun.rmi.runtime.RuntimeUtil$1: java.lang.Thread newThread(java.lang.Runnable)>-><sun.rmi.runtime.Log$LoggerLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>
<java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<sun.rmi.runtime.Log$LogStreamLog: boolean isLoggable(java.util.logging.Level)>-><java.util.logging.Level: int intValue()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Double castToDouble(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>-><java.lang.String: int hashCode()>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.util.JumboEnumSet: boolean isEmpty()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<java.util.logging.StreamHandler: void <init>(java.io.OutputStream,java.util.logging.Formatter)>-><java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Double castToDouble(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.HashMap$KeySet: java.util.Iterator iterator()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.String castToString(java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><org.elasticsearch.client.RestClientBuilder$2: java.lang.Object run()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.lang.Object next()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.joda.time.field.MillisDurationField: int compareTo(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.WeakHashMap$KeySet: java.util.Iterator iterator()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><freemarker.ext.beans.HashAdapter$1$1: java.lang.Object next()>
<java.util.logging.ErrorManager: void error(java.lang.String,java.lang.Exception,int)>-><java.io.PrintStream: void println(java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<javax.crypto.Cipher: void chooseFirstProvider()>-><java.security.Provider$Service: java.security.Provider getProvider()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.apache.http.impl.nio.client.HttpAsyncClientBuilder: org.apache.http.impl.nio.client.HttpAsyncClientBuilder setSSLContext(javax.net.ssl.SSLContext)>
<java.net.URLClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: java.io.InputStream getInputStream()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<freemarker.template.DefaultObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<com.alibaba.fastjson.parser.DefaultJSONParser: java.lang.Object parseObject(java.util.Map,java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<freemarker.ext.beans.StringModel: java.lang.String getAsString()>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: boolean hasNext()>
<org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>-><java.lang.Enum: java.lang.String name()>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.apache.http.impl.nio.client.HttpAsyncClientBuilder: org.apache.http.impl.nio.client.HttpAsyncClientBuilder setTargetAuthenticationStrategy(org.apache.http.client.AuthenticationStrategy)>
<java.util.AbstractList: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<sun.rmi.runtime.Log$LoggerLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.lang.Thread: java.lang.String getName()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><freemarker.ext.beans.CollectionAdapter$1: boolean hasNext()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<sun.rmi.runtime.Log$LogStreamLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><org.springframework.beans.factory.BeanCreationException: void printStackTrace(java.io.PrintStream)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.TreeSet: java.util.Iterator iterator()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$EmptySet: java.util.Iterator iterator()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<java.util.Optional: java.util.Optional map(java.util.function.Function)>-><java.util.Optional: boolean isPresent()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<sun.rmi.runtime.NewThreadAction: void <init>(java.lang.Runnable,java.lang.String,boolean)>-><sun.rmi.runtime.NewThreadAction: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,boolean)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<java.util.EnumMap: int entryHashCode(int)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<freemarker.ext.beans.HashAdapter$1$1$1: int hashCode()>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><com.alibaba.fastjson.util.FieldInfo: int compareTo(java.lang.Object)>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Float castToFloat(java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.Year: int compareTo(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.WeakHashMap$EntrySet: java.util.Iterator iterator()>
<sun.rmi.runtime.NewThreadAction: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,boolean)>-><java.lang.Object: void <init>()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>-><org.apache.shiro.util.StringUtils: java.lang.String toString(java.lang.Object[])>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: java.lang.Object next()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection,int)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<sun.rmi.runtime.Log$LoggerLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><sun.rmi.runtime.Log$LoggerLog: boolean isLoggable(java.util.logging.Level)>
<sun.rmi.runtime.Log$LoggerLog$2: java.lang.Void run()>-><java.util.logging.Logger: void addHandler(java.util.logging.Handler)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.joda.time.format.DateTimeParserBucket$SavedField: int compareTo(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.rmi.server.LogStream: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<sun.rmi.runtime.NewThreadAction$1: java.lang.Object run()>-><sun.rmi.runtime.NewThreadAction$1: java.lang.ThreadGroup run()>
<org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>-><org.apache.shiro.subject.SimplePrincipalCollection: java.util.Set asSet()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$KeySet: boolean isEmpty()>-><com.google.common.collect.ForwardingMap: boolean isEmpty()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.EnumMap$EntrySet: java.util.Iterator iterator()>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><java.lang.Math: long max(long,long)>
<java.util.logging.LogManager: java.util.logging.Filter getFilterProperty(java.lang.String,java.util.logging.Filter)>-><java.util.ResourceBundle$RBClassLoader: java.lang.Class loadClass(java.lang.String)>
<java.net.URLConnection: long getLastModified()>-><java.net.URLConnection: long getHeaderFieldDate(java.lang.String,long)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.io.File: int compareTo(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.web.util.NestedServletException: java.lang.String getMessage()>-><java.lang.Throwable: java.lang.String getMessage()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Hashtable$EntrySet: java.util.Iterator iterator()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.flywaydb.core.internal.info.MigrationInfoImpl: int compareTo(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><freemarker.ext.beans.CollectionAdapter$1: java.lang.Object next()>
<org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>-><java.lang.String: int hashCode()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.String castToString(java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<java.text.AttributeEntry: int hashCode()>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<com.google.common.collect.ForwardingMap: java.util.Set keySet()>-><java.util.concurrent.ConcurrentHashMap: java.util.Set keySet()>
<com.google.common.collect.ForwardingMap: void clear()>-><com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.Map delegate()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask: int compareTo(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Vector$Itr: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object next()>
<java.util.concurrent.PriorityBlockingQueue: java.lang.Object dequeue()>-><java.util.concurrent.PriorityBlockingQueue: void siftDownUsingComparator(int,java.lang.Object,java.lang.Object[],int,java.util.Comparator)>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.OffsetDateTime: int compareTo(java.lang.Object)>
<org.elasticsearch.client.RestClientBuilder$1: java.lang.Object run()>-><org.elasticsearch.client.RestClientBuilder$1: org.apache.http.impl.nio.client.CloseableHttpAsyncClient run()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><java.lang.Long: int hashCode()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<com.alibaba.fastjson.parser.DefaultJSONParser: java.lang.Object parseObject(java.util.Map,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><java.rmi.server.LogStream: java.lang.String toString()>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Set asSet()>-><java.util.LinkedHashMap$LinkedValues: java.util.Iterator iterator()>
<sun.rmi.runtime.NewThreadAction: java.lang.Thread run()>-><java.lang.SecurityManager: void checkPermission(java.security.Permission)>
<freemarker.template.DefaultObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<freemarker.ext.beans.HashAdapter$1$1$1: int hashCode()>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Float castToFloat(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<java.net.URL: java.net.URLConnection openConnection()>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: java.net.URLConnection openConnection(java.net.URL)>
<java.util.logging.StreamHandler: void configure()>-><java.util.logging.LogManager: java.util.logging.LogManager getLogManager()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><java.lang.Boolean: int hashCode()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.SubList$1: boolean hasNext()>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<java.rmi.server.LogStream: void write(int)>-><java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>-><org.apache.commons.collections.FastHashMap$CollectionView: java.util.Iterator iterator()>
<java.util.concurrent.PriorityBlockingQueue: int size()>-><java.util.concurrent.locks.ReentrantLock: void lock()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.Double: int compareTo(java.lang.Object)>
<java.util.logging.StreamHandler: void configure()>-><java.util.logging.LogManager: java.util.logging.Filter getFilterProperty(java.lang.String,java.util.logging.Filter)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<java.util.stream.ReferencePipeline$7$1: void accept(java.lang.Object)>-><java.util.stream.ReferencePipeline: void forEach(java.util.function.Consumer)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.io.File: int compareTo(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: boolean remove(java.lang.Object)>-><java.util.concurrent.locks.ReentrantLock: void unlock()>
<freemarker.template.DefaultObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.AbstractList: int hashCode()>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpUsingComparator(int,java.lang.Object,java.lang.Object[],java.util.Comparator)>-><org.apache.logging.log4j.util.PropertySource$Comparator: int compare(java.lang.Object,java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.joda.time.field.UnsupportedDurationField: int compareTo(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,java.util.List)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember: int compareTo(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<javax.el.BeanELResolver$SoftConcurrentHashMap: javax.el.BeanELResolver$BeanProperties get(java.lang.Object)>-><javax.el.BeanELResolver$SoftConcurrentHashMap: void cleanup()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.OffsetDateTime: int compareTo(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<sun.util.locale.LocaleUtils: boolean isEmpty(java.util.Set)>-><org.apache.commons.collections.FastHashMap$CollectionView: boolean isEmpty()>
<org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>-><org.apache.shiro.session.mgt.SimpleSession: java.io.Serializable getId()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><sun.rmi.runtime.Log$LoggerLog$1: java.lang.Object run()>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<org.elasticsearch.client.Node: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<java.rmi.server.LogStream: void write(int)>-><java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<sun.rmi.runtime.Log$LogStreamLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.io.PrintStream: void println(java.lang.String)>
<java.io.ObjectInputStream$PeekInputStream: int read()>-><java.io.BufferedInputStream: int read()>
<java.util.TreeMap$Entry: int hashCode()>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<com.google.gson.internal.LinkedTreeMap$Node: int hashCode()>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<java.util.logging.Logger: void addHandler(java.util.logging.Handler)>-><java.lang.Object: java.lang.Class getClass()>
<sun.misc.URLClassPath: void check(java.net.URL)>-><java.net.URLConnection: java.security.Permission getPermission()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Double castToDouble(java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<org.apache.shiro.session.mgt.SimpleSession: boolean onEquals(org.apache.shiro.session.mgt.SimpleSession)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>-><org.elasticsearch.common.ParseField: java.lang.String[] getDeprecatedNames()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.Short: int compareTo(java.lang.Object)>
<com.google.gson.internal.LinkedTreeMap$Node: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.SubList$1: java.lang.Object next()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><sun.rmi.runtime.Log$LoggerLog$2: java.lang.Object run()>
<org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<com.google.common.collect.ForwardingMap: boolean containsKey(java.lang.Object)>-><com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.Map delegate()>
<org.elasticsearch.client.RestClientBuilder$2: java.lang.Object run()>-><org.elasticsearch.client.RestClientBuilder$2: org.apache.http.impl.nio.client.CloseableHttpAsyncClient run()>
<java.rmi.server.LogStream: void write(int)>-><java.lang.Thread: java.lang.Thread currentThread()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.StdDateFormat: void _format(java.util.TimeZone,java.util.Locale,java.util.Date,java.lang.StringBuffer)>-><java.util.SimpleTimeZone: int getOffset(long)>
<synthetic.method.HttpSessionImpl: void setAttribute(java.lang.String,java.lang.Object)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.io.ObjectStreamField: int compareTo(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.sql.Timestamp: int compareTo(java.lang.Object)>
<org.apache.commons.collections.FastHashMap$EntrySet: java.util.Collection get(java.util.Map)>-><java.util.HashMap: java.util.Set entrySet()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<java.util.logging.StreamHandler: void configure()>-><java.util.logging.Handler: void setFormatter(java.util.logging.Formatter)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>-><java.lang.Object: java.lang.Class getClass()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: java.util.Iterator iterator()>-><com.google.common.collect.ForwardingMap: java.util.Set entrySet()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: int compareTo(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.LinkedHashMap$LinkedEntrySet: java.util.Iterator iterator()>
<java.util.TreeMap$Entry: int hashCode()>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.alibaba.fastjson.serializer.SerializeFilterable: java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service tryGet(int)>-><java.util.ArrayList$Itr: boolean hasNext()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigDecimal castToBigDecimal(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigDecimal castToBigDecimal(java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<com.google.common.collect.Maps$Values: void clear()>-><com.google.common.collect.ForwardingMap: void clear()>
<java.util.logging.StreamHandler: void setEncoding(java.lang.String)>-><java.util.logging.StreamHandler: void flush()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<sun.rmi.runtime.Log$LoggerLog$2: java.lang.Void run()>-><java.util.logging.Logger: void setLevel(java.util.logging.Level)>
<java.util.logging.Handler: void <init>()>-><java.lang.Object: void <init>()>
<java.util.logging.ErrorManager: void error(java.lang.String,java.lang.Exception,int)>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: java.lang.Object[] toArray(java.lang.Object[])>-><java.util.concurrent.locks.ReentrantLock: void unlock()>
<java.rmi.server.LogStream: void write(int)>-><java.lang.StringBuffer: void setLength(int)>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Float castToFloat(java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.flywaydb.core.internal.sqlscript.SqlScript: int compareTo(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><java.util.AbstractCollection: boolean isEmpty()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigDecimal castToBigDecimal(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.apache.shiro.session.mgt.SimpleSession: boolean onEquals(org.apache.shiro.session.mgt.SimpleSession)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: java.lang.Object next()>
<java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection,int)>-><java.lang.IllegalArgumentException: void <init>()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<freemarker.template.DefaultObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: boolean hasNext()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.Character: int compareTo(java.lang.Object)>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>-><java.lang.String: int indexOf(java.lang.String)>
<org.apache.shiro.session.mgt.SimpleSession: boolean onEquals(org.apache.shiro.session.mgt.SimpleSession)>-><org.apache.shiro.session.mgt.SimpleSession: java.util.Date getStopTimestamp()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.DefaultJSONParser: java.lang.Object parseObject(java.lang.reflect.Type,java.lang.Object)>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<java.util.Collections$SetFromMap: boolean add(java.lang.Object)>-><org.springframework.util.LinkedCaseInsensitiveMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.elasticsearch.client.Node: java.lang.String toString()>
<java.rmi.server.LogStream: void write(int)>-><java.io.OutputStreamWriter: void flush()>
<sun.rmi.runtime.Log$LoggerLog: boolean isLoggable(java.util.logging.Level)>-><java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>
<sun.rmi.runtime.Log$LogStreamLog: java.lang.String unqualifiedName(java.lang.String)>-><java.lang.String: java.lang.String substring(int)>
<java.net.URLConnection: long getHeaderFieldLong(java.lang.String,long)>-><java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>
<com.alibaba.fastjson.util.TypeUtils: java.lang.String castToString(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.springframework.core.DecoratingClassLoader: boolean isExcluded(java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap$KeySetIterator: java.lang.Object next()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><org.apache.shiro.util.MapContext: int size()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><freemarker.ext.beans.CollectionAdapter$1: java.lang.Object next()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.Enum: int compareTo(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.elasticsearch.client.Node: int hashCode()>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: void remove()>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: void remove()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.ProcessEnvironment$Variable: int compareTo(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.http.HttpHeaders: java.lang.String toString()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Float castToFloat(java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.SubList$1: java.lang.Object next()>
<java.util.concurrent.PriorityBlockingQueue: boolean remove(java.lang.Object)>-><java.util.concurrent.PriorityBlockingQueue: void removeAt(int)>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><java.util.Collections$SynchronizedCollection: boolean isEmpty()>
<java.util.logging.LogManager: java.lang.String getStringProperty(java.lang.String,java.lang.String)>-><java.util.logging.LogManager: java.lang.String getProperty(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.TreeMap$Entry: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><sun.rmi.runtime.NewThreadAction$2: java.lang.Object run()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<sun.rmi.runtime.NewThreadAction$1: java.lang.ThreadGroup run()>-><java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.rmi.server.LogStream: void write(int)>-><java.io.PrintStream: void write(int)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.joda.time.LocalTime: int compareTo(java.lang.Object)>
<java.net.URLConnection: long getHeaderFieldDate(java.lang.String,long)>-><java.util.Date: long parse(java.lang.String)>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.zone.ZoneOffsetTransition: int compareTo(java.lang.Object)>
<org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>-><org.elasticsearch.common.ParseField: java.lang.String getPreferredName()>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Double castToDouble(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<java.util.EnumMap: int entryHashCode(int)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.io.ObjectStreamField: int compareTo(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><freemarker.ext.beans.CollectionAdapter: java.util.Iterator iterator()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.Year: int compareTo(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean equals(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.util.UUID: int compareTo(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.AbstractMap$2$1: java.lang.Object next()>
<java.util.logging.StreamHandler: void flush()>-><java.io.OutputStreamWriter: void flush()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: java.io.InputStream getInputStream()>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: java.io.InputStream getInputStream()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Float castToFloat(java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<java.util.concurrent.ThreadPoolExecutor: java.util.List drainQueue()>-><java.util.concurrent.PriorityBlockingQueue: boolean remove(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<com.alibaba.fastjson.parser.DefaultJSONParser: java.lang.Object parseObject(java.util.Map,java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<org.apache.commons.collections.FastHashMap$CollectionView: java.lang.Object[] toArray()>-><org.apache.commons.collections.FastHashMap$EntrySet: java.util.Collection get(java.util.Map)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Float castToFloat(java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.rmi.server.LogStream: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.util.Calendar: int compareTo(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.flywaydb.core.api.Location: int compareTo(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><freemarker.ext.beans.HashAdapter$1$1: boolean hasNext()>
<sun.rmi.runtime.RuntimeUtil$1: java.lang.Thread newThread(java.lang.Runnable)>-><java.lang.StringBuilder: void <init>()>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><com.alibaba.fastjson.JSONArray: boolean isEmpty()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.springframework.web.util.NestedServletException: java.lang.String getMessage()>-><java.lang.Throwable: java.lang.Throwable getCause()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<co.yiiu.pybbs.controller.api.IndexApiController: co.yiiu.pybbs.util.Result mobile_login(java.util.Map,javax.servlet.http.HttpSession)>-><synthetic.method.HttpSessionImpl: java.lang.Object getAttribute(java.lang.String)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.boot.autoconfigure.web.ErrorProperties)>-><org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.boot.autoconfigure.web.ErrorProperties,java.util.List)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: java.lang.Object[] toArray(java.lang.Object[])>-><java.lang.Object: java.lang.Class getClass()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Object castToJavaBean(java.util.Map,java.lang.Class,com.alibaba.fastjson.parser.ParserConfig)>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: java.lang.Object next()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONPath$FilterSegment: java.lang.Object eval(com.alibaba.fastjson.JSONPath,java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.util.Iterator iterator()>
<org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.http.HttpHeaders: java.lang.String formatHeaders(org.springframework.util.MultiValueMap)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<freemarker.ext.beans.StringModel: java.lang.String getAsString()>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.util.Calendar: int compareTo(java.lang.Object)>
<java.util.logging.LogManager: java.util.logging.Filter getFilterProperty(java.lang.String,java.util.logging.Filter)>-><java.util.logging.LogManager: java.lang.String getProperty(java.lang.String)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.util.HashSet: boolean isEmpty()>
<java.util.logging.StreamHandler: void <init>(java.io.OutputStream,java.util.logging.Formatter)>-><java.util.logging.Handler: void setFormatter(java.util.logging.Formatter)>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<java.util.TreeMap$Entry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.OffsetTime: int compareTo(java.lang.Object)>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>-><java.lang.String: java.lang.String substring(int,int)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service tryGet(int)>-><java.util.ArrayList: java.util.Iterator iterator()>
<sun.rmi.runtime.Log: java.lang.String[] getSource()>-><java.lang.Exception: void <init>()>
<org.apache.commons.collections.FastHashMap$CollectionView: boolean isEmpty()>-><java.util.AbstractCollection: boolean isEmpty()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<ch.qos.logback.core.helpers.ThrowableToStringArray: java.lang.String formatFirstLine(java.lang.Throwable,java.lang.StackTraceElement[])>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<com.google.common.collect.Maps$Values: boolean contains(java.lang.Object)>-><com.google.common.collect.ForwardingMap: boolean containsValue(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<sun.rmi.runtime.RuntimeUtil$1: java.lang.Thread newThread(java.lang.Runnable)>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.net.URLStreamHandler: boolean sameFile(java.net.URL,java.net.URL)>-><java.net.URLStreamHandler: int getDefaultPort()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: java.lang.Object[] toArray(java.lang.Object[])>-><java.util.concurrent.locks.ReentrantLock: void lock()>
<sun.rmi.runtime.Log$LogStreamLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<org.springframework.http.HttpHeaders: java.lang.String formatHeaders(org.springframework.util.MultiValueMap)>-><org.springframework.util.CollectionUtils$MultiValueMapAdapter: java.util.Set entrySet()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Float castToFloat(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<sun.rmi.runtime.Log$LogStreamLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.lang.Throwable: void printStackTrace(java.io.PrintStream)>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: java.io.InputStream getInputStream()>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: void connect()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.elasticsearch.client.Node: int hashCode()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><sun.rmi.runtime.NewThreadAction$1: java.lang.Object run()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.LinkedList: boolean remove(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<sun.rmi.runtime.Log$LoggerLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: boolean hasNext()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.nio.ByteBuffer: int compareTo(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$1: boolean hasNext()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.math.BigDecimal: int compareTo(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.AbstractList$Itr: boolean hasNext()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<java.io.ObjectOutputStream$BlockDataOutputStream: void write(byte[],int,int,boolean)>-><java.io.BufferedOutputStream: void write(byte[],int,int)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.ZoneOffset: int compareTo(java.lang.Object)>
<org.apache.shiro.util.StringUtils: java.lang.String toString(java.lang.Object[])>-><org.apache.shiro.util.StringUtils: java.lang.String toDelimitedString(java.lang.Object[],java.lang.String)>
<javax.el.BeanELResolver$SoftConcurrentHashMap: javax.el.BeanELResolver$BeanProperties get(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<org.apache.shiro.session.mgt.SimpleSession: boolean onEquals(org.apache.shiro.session.mgt.SimpleSession)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String getHost()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.TreeMap$EntrySet: java.util.Iterator iterator()>
<com.google.common.collect.ForwardingMap: int size()>-><java.util.concurrent.ConcurrentHashMap: int size()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigInteger castToBigInteger(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.WeakHashMap$KeySet: java.util.Iterator iterator()>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><freemarker.ext.beans.OverloadedNumberUtil$NumberWithFallbackType: int compareTo(java.lang.Object)>
<java.rmi.server.LogStream: void write(int)>-><java.util.Date: java.lang.String toString()>
<org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: java.lang.Object next()>-><java.util.ConcurrentModificationException: void <init>()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.rmi.server.LogStream: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$1: java.lang.Object next()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><java.rmi.server.LogStream: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<co.yiiu.pybbs.controller.api.SettingsApiController: co.yiiu.pybbs.util.Result refreshToken(javax.servlet.http.HttpSession)>-><synthetic.method.HttpSessionImpl: void setAttribute(java.lang.String,java.lang.Object)>
<org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: boolean hasNext()>-><java.util.HashMap$HashIterator: boolean hasNext()>
<java.util.LinkedList: boolean remove(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void removeAt(int)>-><java.util.concurrent.PriorityBlockingQueue: void siftDownUsingComparator(int,java.lang.Object,java.lang.Object[],int,java.util.Comparator)>
<sun.rmi.runtime.Log$LogStreamLog: java.lang.String unqualifiedName(java.lang.String)>-><java.lang.String: int lastIndexOf(java.lang.String)>
<sun.rmi.runtime.Log: java.lang.String[] access$200()>-><sun.rmi.runtime.Log: java.lang.String[] getSource()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<sun.rmi.runtime.Log$LoggerLog$2: java.lang.Object run()>-><sun.rmi.runtime.Log$LoggerLog$2: java.lang.Void run()>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.time.Duration: java.lang.String toString()>
<com.google.common.collect.ForwardingMap: boolean containsKey(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<sun.rmi.runtime.RuntimeUtil$1: java.lang.Thread newThread(java.lang.Runnable)>-><java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><freemarker.ext.beans.CollectionAdapter$1: boolean hasNext()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.LocalTime: int compareTo(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.flywaydb.core.internal.resource.filesystem.FileSystemResource: int compareTo(java.lang.Object)>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><java.util.Collections$EmptySet: boolean isEmpty()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.apache.shiro.session.mgt.SimpleSession: boolean onEquals(org.apache.shiro.session.mgt.SimpleSession)>-><org.apache.shiro.session.mgt.SimpleSession: long getTimeout()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.apache.http.impl.nio.client.CloseableHttpAsyncClientBase: void <init>(org.apache.http.nio.conn.NHttpClientConnectionManager,java.util.concurrent.ThreadFactory,org.apache.http.nio.NHttpClientEventHandler)>-><sun.rmi.runtime.RuntimeUtil$1: java.lang.Thread newThread(java.lang.Runnable)>
<sun.rmi.runtime.Log$InternalStreamHandler: void <init>(java.io.OutputStream)>-><java.util.logging.SimpleFormatter: void <init>()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.Double: int compareTo(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void removeAt(int)>-><java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.TreeMap$Entry: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection,int)>-><java.util.concurrent.PriorityBlockingQueue: java.lang.Object dequeue()>
<sun.text.normalizer.UCharacterProperty: sun.text.normalizer.UCharacterProperty getInstance()>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<com.google.common.collect.ForwardingMap: java.util.Set keySet()>-><com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.Map delegate()>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.springframework.core.SerializableTypeWrapper$MethodInvokeTypeProvider: java.lang.reflect.Type getType()>-><org.springframework.util.ReflectionUtils: java.lang.Object invokeMethod(java.lang.reflect.Method,java.lang.Object)>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Double castToDouble(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.String castToString(java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<java.util.LinkedList: boolean remove(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.Enum: int compareTo(java.lang.Object)>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.util.Collections$SynchronizedCollection: boolean isEmpty()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<com.google.common.collect.ForwardingMap: int size()>-><com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.Map delegate()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.util.TypeUtils: java.lang.String castToString(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.ArrayList$Itr: boolean hasNext()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: int compareTo(java.lang.Object)>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>-><java.util.Collections$EmptySet: java.lang.Object[] toArray()>
<com.google.common.collect.Maps$Values: int size()>-><com.google.common.collect.ForwardingMap: int size()>
<java.util.concurrent.PriorityBlockingQueue: java.lang.Object dequeue()>-><java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: java.lang.Object next()>-><org.apache.commons.collections.FastHashMap$EntrySet: java.lang.Object iteratorNext(java.util.Map$Entry)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.IdentityHashMap$EntrySet: java.util.Iterator iterator()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.apache.http.client.config.RequestConfig$Builder: org.apache.http.client.config.RequestConfig$Builder setConnectTimeout(int)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<co.yiiu.pybbs.controller.front.OAuthController: java.lang.String callback(java.lang.String,me.zhyd.oauth.model.AuthCallback,javax.servlet.http.HttpSession)>-><synthetic.method.HttpSessionImpl: void setAttribute(java.lang.String,java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.util.UUID: int compareTo(java.lang.Object)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.flywaydb.core.internal.resource.classpath.ClassPathResource: int compareTo(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: java.util.Iterator iterator()>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: java.util.Iterator iterator()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.Duration: int compareTo(java.lang.Object)>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String getHost()>
<org.springframework.core.DecoratingClassLoader: boolean isExcluded(java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap$EntryIterator: boolean hasNext()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries: java.util.Iterator iterator()>
<org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.HashSet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.boot.autoconfigure.web.ErrorProperties,java.util.List)>-><org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,java.util.List)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Double castToDouble(java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: void connect()>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: void connect()>
<java.util.TreeMap$Entry: int hashCode()>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.http.HttpHeaders: java.lang.String formatHeaders(org.springframework.util.MultiValueMap)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>-><sun.net.www.MessageHeader: void <init>()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.logging.StreamHandler: void flushAndClose()>-><java.io.Writer: void write(java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<javax.crypto.Cipher: void chooseFirstProvider()>-><javax.crypto.Cipher$Transform: void setModePadding(javax.crypto.CipherSpi)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.elasticsearch.client.Node: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.logging.ErrorManager: void error(java.lang.String,java.lang.Exception,int)>-><java.lang.StringBuilder: void <init>()>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.AbstractList: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigInteger castToBigInteger(java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<sun.misc.URLClassPath$JarLoader: java.util.jar.JarFile getJarFile(java.net.URL)>-><java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.springframework.web.util.NestedServletException: java.lang.String getMessage()>-><org.springframework.core.NestedExceptionUtils: java.lang.String buildMessage(java.lang.String,java.lang.Throwable)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: int compareTo(java.lang.Object)>
<org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>-><java.lang.StringBuilder: void <init>()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<java.util.AbstractList: int hashCode()>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<javax.crypto.Cipher: void chooseFirstProvider()>-><sun.security.jca.ProviderList$ServiceList$1: java.lang.Object next()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.TreeSet: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<freemarker.ext.beans.HashAdapter$1$1$1: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><com.google.common.collect.Maps$Values: boolean isEmpty()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<sun.rmi.runtime.NewThreadAction$2: java.lang.Object run()>-><sun.rmi.runtime.NewThreadAction$2: java.lang.ThreadGroup run()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.Character: int compareTo(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: java.util.Date getLastAccessTime()>
<com.google.common.collect.ForwardingMap: java.util.Set entrySet()>-><com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.Map delegate()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><javax.el.BeanELResolver$SoftConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: int compareTo(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: int compareTo(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.nio.ByteBuffer: int compareTo(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: java.util.Iterator iterator()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<ch.qos.logback.classic.spi.ThrowableProxy: void <init>(java.lang.Throwable)>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<sun.misc.URLClassPath: void check(java.net.URL)>-><java.security.AllPermission: java.lang.String getActions()>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><java.util.HashSet: boolean isEmpty()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>-><org.elasticsearch.common.ParseField: java.lang.String getAllReplacedWith()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.apache.logging.log4j.Level: int compareTo(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.rmi.server.LogStream: java.lang.String toString()>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: java.util.Date getStartTimestamp()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.logging.Handler: void setFormatter(java.util.logging.Formatter)>-><java.lang.Object: java.lang.Class getClass()>
<co.yiiu.pybbs.controller.front.CommonController: void captcha(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)>-><synthetic.method.HttpSessionImpl: void setAttribute(java.lang.String,java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$Values: java.util.Iterator iterator()>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: java.util.Iterator iterator()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<com.google.gson.internal.LinkedTreeMap$Node: int hashCode()>-><org.elasticsearch.client.Node: int hashCode()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection,int)>-><java.lang.Math: int min(int,int)>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: void <init>(java.net.URL)>-><java.net.URL: java.net.URLConnection openConnection()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.AbstractMap$2$1: java.lang.Object next()>
<sun.rmi.runtime.RuntimeUtil$1: java.lang.Thread newThread(java.lang.Runnable)>-><sun.rmi.runtime.Log$LogStreamLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Iterator iterator()>-><org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: void <init>(org.apache.commons.collections.FastHashMap$CollectionView)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.http.HttpHeaders: java.lang.String toString()>-><org.springframework.http.HttpHeaders: java.lang.String formatHeaders(org.springframework.util.MultiValueMap)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<javax.crypto.Cipher: void chooseProvider(int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>-><java.security.Provider$Service: java.lang.Object newInstance(java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<com.alibaba.fastjson.serializer.SerializeFilterable: java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.EnumMap: int entryHashCode(int)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<java.text.AttributeEntry: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Set asSet()>-><java.util.LinkedHashSet: void <init>()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: boolean hasNext()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.io.ObjectInputStream$PeekInputStream: int peek()>-><java.io.BufferedInputStream: int read()>
<com.alibaba.fastjson.parser.DefaultJSONParser: java.lang.Object parseObject(java.util.Map,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>-><java.util.logging.Handler: java.lang.String getEncoding()>
