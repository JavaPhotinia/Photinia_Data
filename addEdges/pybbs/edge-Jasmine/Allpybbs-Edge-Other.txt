<org.elasticsearch.client.RestClient: void <init>(org.apache.http.impl.nio.client.CloseableHttpAsyncClient,long,org.apache.http.Header[],java.util.List,java.lang.String,org.elasticsearch.client.RestClient$FailureListener,org.elasticsearch.client.NodeSelector,boolean)>-><java.util.concurrent.ConcurrentHashMap: void <init>()>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: void <init>(java.net.URL)>-><java.net.URL: java.lang.String getFile()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: byte[] getKeySpec(java.lang.String)>-><java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$1: javax.management.MBeanServer getMBeanServer()>-><org.springframework.jmx.MBeanServerNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$WebSecurityConfiguration: org.springframework.security.web.server.SecurityWebFilterChain springSecurityFilterChain(org.springframework.security.config.web.server.ServerHttpSecurity,org.springframework.security.oauth2.jwt.ReactiveJwtDecoder)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool: int getQueueCapacity()>
<java.util.Optional: java.util.Optional map(java.util.function.Function)>-><java.util.Optional: java.util.Optional empty()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: int size()>-><java.util.concurrent.locks.ReentrantLock: void unlock()>
<org.springframework.util.MimeType: void <init>(org.springframework.util.MimeType,java.util.Map)>-><org.springframework.util.MimeType: java.lang.String getType()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>-><org.springframework.jmx.export.naming.MetadataNamingStrategy: void <init>(org.springframework.jmx.export.metadata.JmxAttributeSource)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.springframework.boot.info.BuildProperties: java.util.Properties processEntries(java.util.Properties)>-><org.springframework.boot.info.BuildProperties: void coerceDate(java.util.Properties,java.lang.String)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.Boolean: int compareTo(java.lang.Object)>
<com.alibaba.fastjson.parser.DefaultJSONParser: java.lang.Object parseObject(java.util.Map,java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.HashMap$KeySet: java.util.Iterator iterator()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>-><java.lang.Object: void <init>()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<sun.rmi.runtime.Log$InternalStreamHandler: void <init>(java.io.OutputStream)>-><java.util.logging.StreamHandler: void <init>(java.io.OutputStream,java.util.logging.Formatter)>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter: void <init>()>
<org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateCustomizer[])>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: org.elasticsearch.client.RestClientBuilder elasticsearchRestClientBuilder(org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.util.function.Supplier)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.task.TaskSchedulerBuilder: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayProperties: void <init>()>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHikariDataSource(com.zaxxer.hikari.HikariDataSource)>
<org.springframework.util.ReflectionUtils: java.lang.Object getField(java.lang.reflect.Field,java.lang.Object)>-><org.springframework.util.ReflectionUtils: void handleReflectionException(java.lang.Exception)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setSkipDefaultCallbacks(boolean)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor openEntityManagerInViewInterceptor()>
<org.springframework.beans.factory.config.PlaceholderConfigurerSupport: void <init>()>-><org.springframework.beans.factory.config.PropertyResourceConfigurer: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setReactiveJwtDecoder(org.springframework.security.oauth2.jwt.ReactiveJwtDecoder)>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><org.elasticsearch.client.RestHighLevelClient: java.util.List getDefaultNamedXContents()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: boolean isBaselineOnMigrate()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerJwtConfiguration$OAuth2WebSecurityConfigurerAdapter: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter jwtDecoderWebSecurityConfigurerAdapter()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerJwtConfiguration$OAuth2WebSecurityConfigurerAdapter$1: void <init>(org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerJwtConfiguration$OAuth2WebSecurityConfigurerAdapter)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: boolean isEmpty()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><java.util.Collections$UnmodifiableCollection: java.lang.Object[] toArray(java.lang.Object[])>
<org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow: org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory undertowReactiveWebServerFactory(org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory: java.util.Collection getBuilderCustomizers()>
<org.springframework.web.client.RestTemplate: void <init>()>-><java.util.ArrayList: void <init>()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.util.Assert: void state(boolean,java.lang.String)>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.util.AbstractCollection: boolean isEmpty()>
<org.springframework.http.converter.feed.AtomFeedHttpMessageConverter: void <init>()>-><org.springframework.http.MediaType: void <init>(java.lang.String,java.lang.String)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.web.servlet.support.ErrorPageFilterConfiguration: void <init>()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><org.springframework.boot.web.servlet.server.Jsp: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor(org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSessionFactory(org.apache.shiro.session.mgt.SessionFactory)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Hashtable$KeySet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>-><com.couchbase.client.java.CouchbaseCluster: com.couchbase.client.java.CouchbaseCluster create(com.couchbase.client.java.env.CouchbaseEnvironment,java.util.List)>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$2: javax.management.MBeanServer getMBeanServer()>-><org.springframework.jmx.support.WebSphereMBeanServerFactoryBean: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$1: java.lang.Object next()>
<java.util.logging.ErrorManager: void error(java.lang.String,java.lang.Exception,int)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.Set scan(java.lang.Class[])>-><org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void setEnvironment(org.springframework.core.env.Environment)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setNamedParameterJdbcTemplate(org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate)>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastServerConfiguration$HazelcastServerConfigFileConfiguration: com.hazelcast.core.HazelcastInstance hazelcastInstance(org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties)>-><org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: com.hazelcast.core.HazelcastInstance getHazelcastInstance()>
<java.util.concurrent.PriorityBlockingQueue: void removeAt(int)>-><java.util.concurrent.PriorityBlockingQueue: void siftUpUsingComparator(int,java.lang.Object,java.lang.Object[],java.util.Comparator)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet: java.util.Iterator iterator()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.AbstractMap$2$1: boolean hasNext()>
<javax.crypto.Cipher: void chooseProvider(int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>-><sun.security.jca.ProviderList$ServiceList$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController basicErrorController(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.beans.factory.ObjectProvider)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.logging.LogManager: java.util.logging.Filter getFilterProperty(java.lang.String,java.util.logging.Filter)>-><java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.elasticsearch.client.Node: int hashCode()>-><java.util.Objects: int hash(java.lang.Object[])>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration: org.springframework.boot.autoconfigure.flyway.FlywaySchemaManagementProvider flywayDefaultDdlModeProvider(org.springframework.beans.factory.ObjectProvider)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object next()>
<org.springframework.beans.factory.config.PropertyResourceConfigurer: void <init>()>-><org.springframework.core.io.support.PropertiesLoaderSupport: void <init>()>
<org.springframework.cglib.core.EmitUtils$5: java.lang.Object transform(java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool: void <init>()>-><java.lang.Object: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: boolean isValidateOnMigrate()>
<org.elasticsearch.client.MigrationClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>-><java.lang.Object: void <init>()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.sql.Connection getConnectionFromDriver(java.lang.String,java.lang.String)>-><java.util.Properties: void <init>(java.util.Properties)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: int compareTo(java.lang.Object)>
<java.util.logging.StreamHandler: void configure()>-><java.util.logging.LogManager: java.util.logging.Level getLevelProperty(java.lang.String,java.util.logging.Level)>
<org.springframework.core.io.support.PropertiesLoaderUtils: java.util.Properties loadProperties(org.springframework.core.io.support.EncodedResource)>-><org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>-><java.nio.charset.Charset: java.lang.String name()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean: void <init>(org.springframework.web.servlet.DispatcherServlet,java.lang.String)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.WeakHashMap$EntrySet: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.elasticsearch.client.RestClient: void setNodes(java.util.Collection)>-><java.util.LinkedHashMap: void <init>()>
<java.rmi.server.LogStream: void write(int)>-><java.io.PrintStream: void flush()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.Float: int compareTo(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration: void <init>()>
<java.util.EnumMap$Values: boolean remove(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray(java.lang.Object[])>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.Long: int compareTo(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<org.elasticsearch.client.RestClient: void <init>(org.apache.http.impl.nio.client.CloseableHttpAsyncClient,long,org.apache.http.Header[],java.util.List,java.lang.String,org.elasticsearch.client.RestClient$FailureListener,org.elasticsearch.client.NodeSelector,boolean)>-><java.lang.Object: void <init>()>
<java.util.logging.LogManager: java.util.logging.Formatter getFormatterProperty(java.lang.String,java.util.logging.Formatter)>-><java.lang.Class: java.lang.Object newInstance()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.lang.Boolean getStream()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setDataUsername(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.GitProperties gitProperties()>
<java.util.AbstractList: int hashCode()>-><org.elasticsearch.client.Node: int hashCode()>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties: boolean isPreferFileSystemAccess()>
<com.fasterxml.jackson.module.paramnames.ParameterNamesModule: void <init>(com.fasterxml.jackson.annotation.JsonCreator$Mode)>-><com.fasterxml.jackson.databind.module.SimpleModule: void <init>(com.fasterxml.jackson.core.Version)>
<sun.rmi.runtime.Log: java.lang.String[] getSource()>-><java.lang.StackTraceElement: java.lang.String getMethodName()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: java.util.List replaceVendorLocations(java.util.List,org.springframework.boot.jdbc.DatabaseDriver)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void onExpiration(org.apache.shiro.session.Session,org.apache.shiro.session.ExpiredSessionException,org.apache.shiro.session.mgt.SessionKey)>-><org.slf4j.helpers.SubstituteLogger: void trace(java.lang.String,java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.LinkedHashMap$LinkedKeySet: java.util.Iterator iterator()>
<org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection: java.lang.Object[] toArray()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: java.util.Spliterator spliterator()>-><com.google.common.collect.ForwardingMap: java.util.Set keySet()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Vector$Itr: boolean hasNext()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.springframework.context.support.AbstractApplicationContext: java.lang.Class getType(java.lang.String)>-><org.springframework.context.support.AbstractRefreshableApplicationContext: void assertBeanFactoryActive()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void checkLocationExists(javax.sql.DataSource,org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.core.io.ResourceLoader)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.util.List getLocations()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.AbstractTemplateViewResolver: void setAllowRequestOverride(boolean)>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean build()>-><org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder: org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager access$100(org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.logging.Handler: void <init>()>-><java.util.logging.LogManager: java.util.logging.LogManager getLogManager()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.io.File getDryRunOutput()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor build()>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor build(java.lang.Class)>
<freemarker.ext.beans.HashAdapter$1$1$1: int hashCode()>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: boolean isReplacement(org.springframework.http.converter.HttpMessageConverter,org.springframework.http.converter.HttpMessageConverter)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers: void <init>(java.util.Collection)>-><java.lang.Object: void <init>()>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getObject()>-><org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback()>
<org.springframework.boot.info.GitProperties: java.lang.String coerceToEpoch(java.lang.String)>-><java.text.SimpleDateFormat: void <init>(java.lang.String)>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void <init>()>-><java.util.concurrent.ConcurrentHashMap: void <init>(int)>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.QueryServiceConfig getQueryServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints$CouchbaseService getQueryservice()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Float castToFloat(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.apache.shiro.session.mgt.eis.MemorySessionDAO: org.apache.shiro.session.Session storeSession(java.io.Serializable,org.apache.shiro.session.Session)>-><java.lang.NullPointerException: void <init>(java.lang.String)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.boot.autoconfigure.mail.MailProperties,org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.mail.javamail.JavaMailSenderImpl: void setHost(java.lang.String)>
<co.yiiu.pybbs.util.bcrypt.BCryptPasswordEncoder: boolean matches(java.lang.CharSequence,java.lang.String)>-><java.lang.String: java.lang.String toString()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: boolean usesVendorLocation(java.util.Collection)>-><java.util.ArrayList$Itr: boolean hasNext()>
<sun.rmi.runtime.Log$LoggerLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.elasticsearch.client.RestClient: void <init>(org.apache.http.impl.nio.client.CloseableHttpAsyncClient,long,org.apache.http.Header[],java.util.List,java.lang.String,org.elasticsearch.client.RestClient$FailureListener,org.elasticsearch.client.NodeSelector,boolean)>-><java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<javax.servlet.http.HttpServlet: void <init>()>-><javax.servlet.GenericServlet: void <init>()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder cbor()>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder$CborFactoryInitializer: com.fasterxml.jackson.core.JsonFactory create()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder awaitTerminationPeriod(java.time.Duration)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<java.util.concurrent.ConcurrentMap: void forEach(java.util.function.BiConsumer)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><java.lang.String: int hashCode()>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void <init>()>-><java.lang.Object: void <init>()>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><java.util.Vector: boolean isEmpty()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMongoDbFactorySupport(org.springframework.data.mongodb.core.MongoDbFactorySupport)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.ScheduledThreadPoolExecutor: void delayedExecute(java.util.concurrent.RunnableScheduledFuture)>-><java.util.concurrent.PriorityBlockingQueue: boolean add(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: void <init>()>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getProvidedNamedXContents()>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<java.util.logging.StreamHandler: void configure()>-><java.util.logging.Handler: void setLevel(java.util.logging.Level)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.hateoas.HypermediaHttpMessageConverterConfiguration: void <init>()>
<org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>-><java.lang.Object: java.lang.Class getClass()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.chrono.ChronoZonedDateTime: int compareTo(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMessageSource(org.springframework.context.MessageSource)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.AbstractList$Itr: boolean hasNext()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureFlywayCallbacks(org.flywaydb.core.api.configuration.FluentConfiguration,java.util.List)>-><org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.api.configuration.FluentConfiguration callbacks(org.flywaydb.core.api.callback.Callback[])>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getDefaultNamedXContents()>-><java.util.Vector: boolean add(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.ResourceRegionHttpMessageConverter: void <init>()>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: java.util.Map getPlaceholders()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: java.util.Map getPlaceholders()>
<org.elasticsearch.client.Node: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><ch.qos.logback.classic.Logger: void info(java.lang.String)>
<java.util.logging.StreamHandler: void setEncoding(java.lang.String)>-><java.util.logging.Handler: void setEncoding(java.lang.String)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.YearMonth: int compareTo(java.lang.Object)>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><org.elasticsearch.client.MigrationClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>
<org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown: void <init>()>-><java.lang.Object: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor openEntityManagerInViewInterceptor()>-><org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor: void <init>()>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean build()>-><org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean: void setMappingResources(java.lang.String[])>
<sun.rmi.runtime.Log$LoggerLog$2: java.lang.Void run()>-><sun.rmi.runtime.Log$LoggerLog: java.util.logging.Handler access$100()>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.context.MessageSourceProperties: void <init>()>-><java.lang.Object: void <init>()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.LocalTime: int compareTo(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: int indexOf(java.lang.Object)>-><java.lang.Object: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.apache.shiro.mgt.SessionsSecurityManager getSessionsSecurityManager()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void <init>()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.apache.http.client.config.RequestConfig$Builder: org.apache.http.client.config.RequestConfig build()>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.util.AbstractMap$1: boolean isEmpty()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$SingletonSet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: org.flywaydb.core.Flyway flyway(org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,org.springframework.core.io.ResourceLoader,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>
<co.yiiu.pybbs.PybbsApplication: void main(java.lang.String[])>-><synthetic.method.ServletResponseImpl: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.context.MessageSource getMessageSource()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.rmi.server.LogStream: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: java.lang.Object next()>
<org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source as(java.util.function.Function)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: void remove()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.ResourceHttpMessageConverter: void <init>(boolean)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.flyway.FlywayMigrationScriptMissingException: void <init>(java.util.List)>-><java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari: void <init>()>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.LocalValidatorFactoryBean defaultValidator()>-><org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: void <init>()>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.lang.Object: java.lang.String toString()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: java.lang.String[] getPackagesToScan()>-><java.util.Collections$UnmodifiableCollection: boolean isEmpty()>
<java.util.logging.Handler: void reportError(java.lang.String,java.lang.Exception,int)>-><java.util.logging.ErrorManager: void error(java.lang.String,java.lang.Exception,int)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.Set scan(java.lang.Class[])>-><org.springframework.util.ClassUtils: java.lang.Class forName(java.lang.String,java.lang.ClassLoader)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Bucket couchbaseClient()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: boolean isRoleBasedAccessControlEnabled()>
<sun.rmi.runtime.NewThreadAction: java.lang.Thread run()>-><java.lang.System: java.lang.SecurityManager getSecurityManager()>
<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: java.util.List sortErrorViewResolvers(java.util.List)>-><org.springframework.core.annotation.AnnotationAwareOrderComparator: void sortIfNecessary(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: org.springframework.boot.web.client.RestTemplateBuilder restTemplateBuilder(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: org.springframework.boot.web.client.RestTemplateBuilder addCustomizers(org.springframework.boot.web.client.RestTemplateBuilder,org.springframework.beans.factory.ObjectProvider,java.util.function.BiFunction)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: com.fasterxml.jackson.databind.ObjectMapper build()>
<org.springframework.boot.info.BuildProperties: void coerceDate(java.util.Properties,java.lang.String)>-><java.time.format.DateTimeFormatter: java.lang.Object parse(java.lang.CharSequence,java.time.temporal.TemporalQuery)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><javax.management.ObjectName: int compareTo(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setBeanNameViewResolver(org.springframework.web.servlet.view.BeanNameViewResolver)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><freemarker.ext.beans.HashAdapter$1: java.util.Iterator iterator()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.xml.SourceHttpMessageConverter: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration: org.springframework.data.mongodb.core.convert.MongoCustomConversions mongoCustomConversions()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setRequestContextAttribute(java.lang.String)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: boolean hasNext()>
<com.google.common.collect.Maps$KeySet: void forEach(java.util.function.Consumer)>-><java.util.concurrent.ConcurrentMap: void forEach(java.util.function.BiConsumer)>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>-><org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver: java.lang.Class requiredViewClass()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.Class)>-><org.springframework.context.support.AbstractRefreshableApplicationContext: org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory()>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Iterator iterator()>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.apache.shiro.session.mgt.SessionFactory getSessionFactory()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder keepAlive(java.time.Duration)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setAuthenticator(org.apache.shiro.authc.Authenticator)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: java.util.List replaceVendorLocations(java.util.List,org.springframework.boot.jdbc.DatabaseDriver)>-><org.springframework.boot.jdbc.DatabaseDriver: java.lang.String getId()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><freemarker.ext.beans.CollectionAdapter: java.util.Iterator iterator()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setLocalContainerEntityManagerFactoryBean(org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>
<org.springframework.jmx.export.MBeanExporter: void setAutodetectMode(int)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.QueryServiceConfig getQueryServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><com.couchbase.client.core.env.QueryServiceConfig: com.couchbase.client.core.env.QueryServiceConfig create(int,int)>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean build()>-><org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean: void setJtaDataSource(javax.sql.DataSource)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.ByteArrayHttpMessageConverter: void <init>()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties getWebMvcPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: void setLocaleResolver(org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$LocaleResolver)>
<org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<freemarker.ext.beans.StringModel: java.lang.String getAsString()>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.Collections$SingletonList: java.util.Iterator iterator()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.StringHttpMessageConverter: void <init>()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Vector$Itr: boolean hasNext()>
<org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler: void <init>()>-><org.springframework.util.ConcurrentReferenceHashMap: void <init>(int,org.springframework.util.ConcurrentReferenceHashMap$ReferenceType)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<org.springframework.core.io.UrlResource: java.io.InputStream getInputStream()>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: java.io.InputStream getInputStream()>
<java.util.logging.SimpleFormatter: void <init>()>-><java.util.logging.Formatter: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: javax.sql.DataSource configureDataSource(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,javax.sql.DataSource,javax.sql.DataSource)>-><org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder smile()>
<org.springframework.web.util.DefaultUriBuilderFactory: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>-><java.util.ArrayList: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void main(java.lang.String[])>-><co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.zone.ZoneOffsetTransition: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration: org.springframework.web.servlet.DispatcherServlet dispatcherServlet(org.springframework.boot.autoconfigure.http.HttpProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties)>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: boolean isThrowExceptionIfNoHandlerFound()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration: void <init>()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setUseForwardHeaders(java.lang.Boolean)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setReactiveWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer)>
<org.apache.shiro.session.mgt.SimpleSession: void validate()>-><org.slf4j.helpers.NOPLogger: boolean isTraceEnabled()>
<org.flywaydb.core.internal.util.ClassUtils: java.lang.Object instantiate(java.lang.String,java.lang.ClassLoader)>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder threadNamePrefix(java.lang.String)>
<org.elasticsearch.client.Node: boolean equals(java.lang.Object)>-><java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
<org.springframework.http.converter.json.Jackson2ObjectMapperBuilder$CborFactoryInitializer: void <init>(org.springframework.http.converter.json.Jackson2ObjectMapperBuilder$1)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder$CborFactoryInitializer: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayMigrationScriptMissingException: void <init>(java.util.List)>-><java.util.ArrayList: void <init>(java.util.Collection)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties: org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown getShutdown()>
<java.util.Collections$SetFromMap: void <init>(java.util.Map)>-><org.springframework.util.LinkedCaseInsensitiveMap: java.util.Set keySet()>
<org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source as(java.util.function.Function)>-><org.springframework.boot.context.properties.PropertyMapper$Source: void <init>(java.util.function.Supplier,java.util.function.Predicate)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: void <init>(org.springframework.boot.autoconfigure.orm.jpa.JpaProperties)>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer: void <init>(org.springframework.boot.autoconfigure.gson.GsonProperties)>-><java.lang.Object: void <init>()>
<sun.rmi.runtime.NewThreadAction: java.lang.Thread run()>-><java.lang.Thread: void setDaemon(boolean)>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerOpaqueTokenConfiguration$OpaqueTokenIntrospectionClientConfiguration: org.springframework.security.oauth2.server.resource.introspection.NimbusReactiveOpaqueTokenIntrospector opaqueTokenIntrospector(org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties)>-><org.springframework.security.oauth2.server.resource.introspection.NimbusReactiveOpaqueTokenIntrospector: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.lang.Object: java.lang.Class getClass()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<org.apache.shiro.session.mgt.SimpleSession: boolean isTimedOut()>-><ch.qos.logback.classic.Logger: void trace(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow: org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory undertowReactiveWebServerFactory(org.springframework.beans.factory.ObjectProvider)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.LinkedHashMap$LinkedEntrySet: java.util.Iterator iterator()>
<java.util.EnumMap$Values: boolean remove(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><java.lang.Boolean: boolean booleanValue()>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor openEntityManagerInViewInterceptor()>-><org.apache.commons.logging.LogAdapter$JavaUtilLog: void warn(java.lang.Object)>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Double castToDouble(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setOpenEntityManagerInViewInterceptor(org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.alibaba.fastjson.parser.DefaultJSONParser: java.lang.Object parseObject(java.util.Map,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.context.properties.PropertyMapper$Source: void <init>(java.util.function.Supplier,java.util.function.Predicate)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration: org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer standardGsonBuilderCustomizer(org.springframework.boot.autoconfigure.gson.GsonProperties)>-><org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer: void <init>(org.springframework.boot.autoconfigure.gson.GsonProperties)>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.Set scan(java.lang.Class[])>-><java.util.Collections: java.util.Set emptySet()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.apache.shiro.mgt.RememberMeManager getRememberMeManager()>
<org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source getSource(java.util.function.Supplier)>-><org.springframework.boot.context.properties.PropertyMapper$Source: void <init>(java.util.function.Supplier,java.util.function.Predicate,org.springframework.boot.context.properties.PropertyMapper$1)>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.List getPackages()>-><org.springframework.boot.autoconfigure.domain.EntityScanPackages: java.util.List getPackageNames()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String detectFallbackUrl(java.lang.String)>-><java.lang.System: java.lang.String getenv(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties getRestClientPropertiesInstance()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void setReadTimeout(java.time.Duration)>
<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>-><java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerReactiveWebConfiguration: void <init>(org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties)>
<org.elasticsearch.common.ParseField: java.lang.String toString()>-><org.elasticsearch.common.ParseField: java.lang.String getPreferredName()>
<org.springframework.web.server.adapter.ForwardedHeaderTransformer: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder corePoolSize(int)>
<org.elasticsearch.client.LicenseClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>-><java.lang.Object: void <init>()>
<org.apache.shiro.session.mgt.SimpleSession: boolean onEquals(org.apache.shiro.session.mgt.SimpleSession)>-><org.apache.shiro.session.mgt.SimpleSession: java.util.Date getLastAccessTime()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.springframework.util.CollectionUtils$MultiValueMapAdapter: java.util.Set entrySet()>-><java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration: org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean dispatcherServletRegistration(org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ObjectProvider)>-><java.lang.Object: java.lang.Class getClass()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source getSource(java.util.function.Supplier)>-><org.springframework.boot.context.properties.PropertyMapper$CachingSupplier: void <init>(java.util.function.Supplier)>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.FunctionReference: org.springframework.expression.TypedValue executeFunctionJLRMethod(org.springframework.expression.spel.ExpressionState,java.lang.reflect.Method)>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration: com.google.gson.GsonBuilder gsonBuilder(java.util.List)>-><com.google.gson.GsonBuilder: void <init>()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.boot.info.GitProperties: java.util.Properties processEntries(java.util.Properties)>-><java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><freemarker.ext.beans.CollectionAdapter$1: boolean hasNext()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<org.springframework.web.servlet.DispatcherServlet: void <init>()>-><org.springframework.web.servlet.FrameworkServlet: void setDispatchOptionsRequest(boolean)>
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate$1: void <init>(org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate,int,float,boolean)>-><java.util.LinkedHashMap: void <init>(int,float,boolean)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder customizers(java.lang.Iterable)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><java.rmi.server.LogStream: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.nio.charset.Charset getEncoding()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFreeMarkerViewResolver(org.springframework.web.reactive.result.view.freemarker.FreeMarkerViewResolver)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setPlaceholders(java.util.Map)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigInteger castToBigInteger(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.mail.MailProperties getMailPropertiesInstance()>-><org.springframework.boot.autoconfigure.mail.MailProperties: void <init>()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setConnectRetries(int)>
<org.apache.shiro.session.mgt.eis.MemorySessionDAO: java.util.Collection getActiveSessions()>-><java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.YearMonth: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration: org.springframework.http.converter.StringHttpMessageConverter stringHttpMessageConverter(org.springframework.boot.autoconfigure.http.HttpProperties)>-><org.springframework.http.converter.StringHttpMessageConverter: void setWriteAcceptCharset(boolean)>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.util.Collections$UnmodifiableCollection: boolean isEmpty()>
<co.yiiu.pybbs.util.MyPage: void <init>()>-><com.baomidou.mybatisplus.extension.plugins.pagination.Page: void <init>()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.String castToString(java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><org.elasticsearch.client.RollupClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>
<org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateCustomizer[])>-><java.util.Collections: java.util.Map emptyMap()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.LinkedList$ListItr: boolean hasNext()>
<org.elasticsearch.client.RestClientBuilder$2: void <init>(org.elasticsearch.client.RestClientBuilder,org.apache.http.impl.nio.client.HttpAsyncClientBuilder)>-><java.lang.Object: void <init>()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source whenHasText()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>-><java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>
<sun.rmi.runtime.Log$LoggerLog$1: java.util.logging.Handler run()>-><sun.rmi.runtime.Log$InternalStreamHandler: void <init>(java.io.OutputStream)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.chrono.ChronoZonedDateTime: int compareTo(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder entityManagerFactoryBuilder(org.springframework.orm.jpa.JpaVendorAdapter,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>
<org.apache.shiro.session.mgt.eis.MemorySessionDAO: java.util.Collection getActiveSessions()>-><java.util.Collections: java.util.Set emptySet()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder poolSize(int)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration: org.springframework.boot.jackson.JsonComponentModule jsonComponentModule()>-><org.springframework.boot.jackson.JsonComponentModule: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration: com.fasterxml.jackson.databind.ObjectMapper jacksonObjectMapper(org.springframework.http.converter.json.Jackson2ObjectMapperBuilder)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><org.springframework.web.client.RestTemplate: void <init>()>
<org.apache.shiro.session.mgt.SimpleSession: boolean isTimedOut()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: boolean isIgnoreIgnoredMigrations()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setAuthorizer(org.apache.shiro.authz.Authorizer)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration: org.springframework.web.servlet.DispatcherServlet dispatcherServlet(org.springframework.boot.autoconfigure.http.HttpProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties)>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: boolean isPublishRequestHandledEvents()>
<org.springframework.boot.web.server.AbstractConfigurableWebServerFactory: void <init>()>-><java.util.LinkedHashSet: void <init>()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>-><java.lang.StringBuilder: void <init>()>
<sun.rmi.runtime.NewThreadAction: java.lang.Thread run()>-><java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><org.slf4j.helpers.SubstituteLogger: boolean isInfoEnabled()>
<org.springframework.boot.web.servlet.ServletRegistrationBean: void <init>(javax.servlet.Servlet,java.lang.String[])>-><org.springframework.boot.web.servlet.ServletRegistrationBean: void <init>(javax.servlet.Servlet,boolean,java.lang.String[])>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Hashtable$EntrySet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: boolean isRoleBasedAccessControlEnabled()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean entityManagerFactory(org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder)>-><org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder jta(boolean)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.joda.time.base.AbstractPartial: int compareTo(java.lang.Object)>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.net.URL: int getDefaultPort()>-><java.net.URLStreamHandler: int getDefaultPort()>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder jacksonObjectMapperBuilder(org.springframework.context.ApplicationContext,java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: void <init>()>
<ch.qos.logback.classic.Logger: void trace(java.lang.String,java.lang.Object)>-><ch.qos.logback.classic.Logger: void filterAndLog_1(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object,java.lang.Throwable)>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><org.elasticsearch.client.RestHighLevelClient: java.util.List getProvidedNamedXContents()>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform: org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform get()>-><org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform: org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform[] values()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.gson.GsonProperties getGsonPropertiesInstance()>-><org.springframework.boot.autoconfigure.gson.GsonProperties: void setGenerateNonExecutableJson(java.lang.Boolean)>
<org.apache.shiro.session.mgt.DefaultSessionManager: void onExpiration(org.apache.shiro.session.Session)>-><org.apache.shiro.session.mgt.DefaultSessionManager: void onChange(org.apache.shiro.session.Session)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.rmi.server.LogStream: java.lang.String toString()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder threadNamePrefix(java.lang.String)>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration: org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver freeMarkerViewResolver()>
<org.springframework.boot.info.GitProperties: void coercePropertyToEpoch(java.util.Properties,java.lang.String)>-><java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>
<org.apache.shiro.session.mgt.SimpleSession: boolean isTimedOut()>-><org.apache.shiro.session.mgt.SimpleSession: boolean isExpired()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDefaultErrorAttributes(org.springframework.boot.web.servlet.error.DefaultErrorAttributes)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.ZoneOffset: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration: org.springframework.jdbc.core.JdbcTemplate jdbcTemplate(javax.sql.DataSource,org.springframework.boot.autoconfigure.jdbc.JdbcProperties)>-><org.springframework.jdbc.core.JdbcTemplate: void setQueryTimeout(int)>
<java.util.logging.StreamHandler: void <init>(java.io.OutputStream,java.util.logging.Formatter)>-><java.util.logging.StreamHandler: void configure()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl: java.lang.Boolean getEnabled()>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.TreeMap$KeySet: java.util.Iterator iterator()>
<com.alibaba.fastjson.serializer.SerializeFilterable: java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.apache.shiro.session.mgt.SimpleSession: void validate()>-><org.apache.shiro.session.mgt.SimpleSession: long getTimeout()>
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void <init>(boolean)>-><org.springframework.core.env.StandardEnvironment: void <init>()>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getDefaultNamedXContents()>-><java.util.HashMap: java.util.Set entrySet()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.Duration: int compareTo(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt: java.lang.String readPublicKey()>-><org.springframework.util.StreamUtils: java.lang.String copyToString(java.io.InputStream,java.nio.charset.Charset)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.IdentityHashMap$KeySet: java.util.Iterator iterator()>
<javax.crypto.Cipher: void chooseProvider(int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>-><javax.crypto.Cipher$Transform: void setModePadding(javax.crypto.CipherSpi)>
<org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory: void <init>()>-><java.util.LinkedHashSet: void <init>()>
<org.apache.shiro.session.mgt.DefaultSessionManager: void onStop(org.apache.shiro.session.Session)>-><org.apache.shiro.session.mgt.DefaultSessionManager: void onChange(org.apache.shiro.session.Session)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setAnnotationMBeanExporter(org.springframework.jmx.export.annotation.AnnotationMBeanExporter)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<org.apache.shiro.session.mgt.eis.MemorySessionDAO: void update(org.apache.shiro.session.Session)>-><org.apache.shiro.session.mgt.eis.MemorySessionDAO: org.apache.shiro.session.Session storeSession(java.io.Serializable,org.apache.shiro.session.Session)>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>-><org.springframework.web.filter.CharacterEncodingFilter: void setForceResponseEncoding(boolean)>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><org.apache.http.HttpHost: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection,int)>-><java.util.concurrent.locks.ReentrantLock: void unlock()>
<org.apache.shiro.session.mgt.SimpleSession: void validate()>-><java.text.DateFormat: java.lang.String format(java.util.Date)>
<org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter mappingJackson2HttpMessageConverter(com.fasterxml.jackson.databind.ObjectMapper)>-><org.springframework.http.converter.json.MappingJackson2HttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setBuildProperties(org.springframework.boot.info.BuildProperties)>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setRememberMeManager(org.apache.shiro.mgt.RememberMeManager)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.math.BigInteger: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean build()>-><org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean: void setPersistenceUnitRootLocation(java.lang.String)>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.util.RegularEnumSet: boolean isEmpty()>
<org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration: org.springframework.data.mongodb.core.mapping.MongoMappingContext mongoMappingContext(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.mongo.MongoProperties,org.springframework.data.mongodb.core.convert.MongoCustomConversions)>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: java.lang.Boolean isAutoIndexCreation()>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClientBuilder)>-><java.util.Collections: java.util.List emptyList()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.AbstractMap$2$1: boolean hasNext()>
<org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.util.TreeMap$KeySet: boolean isEmpty()>
<org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter: void <init>()>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: com.fasterxml.jackson.databind.ObjectMapper build()>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: org.flywaydb.core.api.MigrationVersion getBaselineVersion()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: org.flywaydb.core.api.MigrationVersion getBaselineVersion()>
<java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter(org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration: org.springframework.web.servlet.view.BeanNameViewResolver beanNameViewResolver()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.Byte: int compareTo(java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.lang.Iterable: void forEach(java.util.function.Consumer)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.String: int compareTo(java.lang.Object)>
<org.elasticsearch.client.RestClientBuilder: org.elasticsearch.client.RestClient build()>-><org.elasticsearch.client.RestClient: void <init>(org.apache.http.impl.nio.client.CloseableHttpAsyncClient,long,org.apache.http.Header[],java.util.List,java.lang.String,org.elasticsearch.client.RestClient$FailureListener,org.elasticsearch.client.NodeSelector,boolean)>
<org.flywaydb.core.internal.jdbc.DriverDataSource: void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Properties)>-><org.flywaydb.core.api.FlywayException: void <init>(java.lang.String)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getServletUrlMapping()>-><org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean: java.lang.String getPath()>
<org.springframework.context.annotation.MBeanExportConfiguration: org.springframework.jmx.export.annotation.AnnotationMBeanExporter mbeanExporter()>-><org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.OffsetTime: int compareTo(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration: void <init>()>
<org.springframework.web.filter.RelativeRedirectResponseWrapper: void sendRedirect(java.lang.String)>-><javax.servlet.http.HttpServletResponseWrapper: void setStatus(int)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration: org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean dispatcherServletRegistration(org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet: int getLoadOnStartup()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<org.springframework.http.converter.json.Jackson2ObjectMapperBuilder$CborFactoryInitializer: com.fasterxml.jackson.core.JsonFactory create()>-><com.fasterxml.jackson.dataformat.cbor.CBORFactory: void <init>()>
<java.util.logging.Handler: void setEncoding(java.lang.String)>-><java.nio.charset.Charset: boolean isSupported(java.lang.String)>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>-><org.springframework.boot.autoconfigure.http.HttpProperties$Encoding: boolean shouldForce(org.springframework.boot.autoconfigure.http.HttpProperties$Encoding$Type)>
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void <init>(boolean,org.springframework.core.env.Environment)>-><org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void registerDefaultFilters()>
<org.elasticsearch.client.WatcherClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>-><java.lang.Object: void <init>()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration: java.lang.Object createDataSource(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,java.lang.Class)>-><org.springframework.boot.jdbc.DataSourceBuilder: org.springframework.boot.jdbc.DataSourceBuilder type(java.lang.Class)>
<org.springframework.boot.info.BuildProperties: void coerceDate(java.util.Properties,java.lang.String)>-><java.time.Instant: long toEpochMilli()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool: boolean isAllowCoreThreadTimeout()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getDefaultNamedXContents()>-><java.util.LinkedList: boolean add(java.lang.Object)>
<org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder cbor()>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: void <init>()>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform: org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform get()>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback(java.lang.String)>-><org.springframework.beans.BeanUtils: java.lang.Object instantiateClass(java.lang.Class)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void configurePartConverters(org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter,java.util.Collection)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List extractPartConverters(org.springframework.http.converter.FormHttpMessageConverter)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(boolean,java.util.Collection)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>
<org.springframework.web.filter.OncePerRequestFilter: void <init>()>-><org.springframework.web.filter.GenericFilterBean: void <init>()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.boot.autoconfigure.mail.MailProperties,org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.boot.autoconfigure.mail.MailProperties: java.util.Map getProperties()>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.String getInstalledBy()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.String getInstalledBy()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: boolean offer(java.lang.Object)>-><java.util.concurrent.PriorityBlockingQueue: void siftUpUsingComparator(int,java.lang.Object,java.lang.Object[],java.util.Comparator)>
<java.net.URL: java.io.InputStream openStream()>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: java.io.InputStream getInputStream()>
<org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<javax.crypto.Cipher: void chooseFirstProvider()>-><sun.security.jca.ProviderList$ServiceList$1: boolean hasNext()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.web.context.support.ServletContextResource: java.lang.String getFilename()>
<java.util.logging.Handler: void <init>()>-><java.util.logging.ErrorManager: void <init>()>
<java.util.logging.ErrorManager: void error(java.lang.String,java.lang.Exception,int)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.apache.shiro.util.StringUtils: java.lang.String toDelimitedString(java.lang.Object[],java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFreeMarkerConfigurer(org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMultipartConfigElement(javax.servlet.MultipartConfigElement)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.flywaydb.core.internal.util.Pair: int compareTo(java.lang.Object)>
<org.springframework.cglib.core.EmitUtils$5: java.lang.Object transform(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.elasticsearch.client.Node: int hashCode()>
<org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration: org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver freeMarkerViewResolver()>-><org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties getProperties()>
<java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.boot.info.GitProperties: java.lang.String coerceToEpoch(java.lang.String)>-><java.text.DateFormat: java.util.Date parse(java.lang.String)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayMigrationScriptMissingException: void <init>(java.util.List)>-><java.util.ArrayList: boolean isEmpty()>
<org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>-><org.springframework.jmx.export.MBeanExporter: void <init>()>
<org.springframework.boot.web.client.RestTemplateBuilder: java.util.Set copiedSetOf(java.util.Collection)>-><java.util.LinkedHashSet: void <init>(java.util.Collection)>
<java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>-><java.lang.NullPointerException: void <init>()>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><java.util.Collections$EmptyList: boolean isEmpty()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.flywaydb.core.internal.info.MigrationInfoImpl: int compareTo(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientFallbackConfiguration: void <init>()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<java.util.LinkedHashSet: void <init>(java.util.Collection)>-><java.util.Collections$EmptySet: int size()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTomcatServletWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer)>
<org.springframework.core.annotation.AnnotationAwareOrderComparator: void sortIfNecessary(java.lang.Object)>-><org.springframework.core.annotation.AnnotationAwareOrderComparator: void sort(java.lang.Object[])>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSessionStorageEvaluator(org.apache.shiro.mgt.SessionStorageEvaluator)>
<org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt: java.lang.String readPublicKey()>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.alibaba.fastjson.util.TypeUtils: java.lang.String castToString(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setInitializationMode(org.springframework.boot.jdbc.DataSourceInitializationMode)>
<java.util.concurrent.PriorityBlockingQueue: boolean offer(java.lang.Object)>-><java.util.concurrent.locks.ReentrantLock: void unlock()>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JavaBeanSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void <init>(boolean,org.springframework.core.env.Environment)>-><java.util.LinkedList: void <init>()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: org.flywaydb.core.Flyway flyway(org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,org.springframework.core.io.ResourceLoader,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: javax.sql.DataSource configureDataSource(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,javax.sql.DataSource,javax.sql.DataSource)>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><java.io.InputStreamReader: void close()>
<java.net.URLConnection: long getHeaderFieldDate(java.lang.String,long)>-><java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet: boolean isEmpty()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow: org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory undertowServletWebServerFactory(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSecurityWebFilterChain(org.springframework.security.web.server.SecurityWebFilterChain)>
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$UndertowWebServerFactoryCustomizerConfiguration: void <init>()>
<org.springframework.web.servlet.FrameworkServlet: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController basicErrorController(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.web.ServerProperties: org.springframework.boot.autoconfigure.web.ErrorProperties getError()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.FrameworkServlet: void <init>()>-><org.springframework.web.servlet.HttpServletBean: void <init>()>
<sun.rmi.runtime.Log: java.lang.String[] getSource()>-><java.lang.StackTraceElement: java.lang.String getClassName()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.apache.http.impl.nio.client.HttpAsyncClientBuilder: org.apache.http.impl.nio.client.HttpAsyncClientBuilder setDefaultRequestConfig(org.apache.http.client.config.RequestConfig)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.EnumMap$KeySet: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder awaitTermination(boolean)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration: org.springframework.boot.web.servlet.FilterRegistrationBean forwardedHeaderFilter()>-><org.springframework.boot.web.servlet.FilterRegistrationBean: void <init>(javax.servlet.Filter,org.springframework.boot.web.servlet.ServletRegistrationBean[])>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.DynamicRegistrationBean: void <init>()>-><org.springframework.boot.web.servlet.RegistrationBean: void <init>()>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.boot.autoconfigure.mail.MailProperties,org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: java.util.Properties asProperties(java.util.Map)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.joda.time.LocalTime: int compareTo(java.lang.Object)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><org.slf4j.helpers.NOPLogger: void info(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setAddress(java.net.InetAddress)>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: boolean hasNext()>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<org.springframework.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.ReactiveJwtDecoder jwtDecoder()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt: java.lang.String getIssuerUri()>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean build()>-><org.springframework.util.ObjectUtils: boolean isEmpty(java.lang.Object[])>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFreeMarkerViewResolver(org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver)>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getDefaultNamedXContents()>-><org.elasticsearch.common.ParseField: void <init>(java.lang.String,java.lang.String[])>
<sun.rmi.runtime.RuntimeUtil$1: java.lang.Thread newThread(java.lang.Runnable)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration: org.springframework.web.servlet.DispatcherServlet dispatcherServlet(org.springframework.boot.autoconfigure.http.HttpProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties)>-><org.springframework.web.servlet.DispatcherServlet: void <init>()>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: org.springframework.cache.Cache createConcurrentMapCache(java.lang.String)>-><org.springframework.cache.concurrent.ConcurrentMapCache: void <init>(java.lang.String,java.util.concurrent.ConcurrentMap,boolean,org.springframework.core.serializer.support.SerializationDelegate)>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClientBuilder,java.util.List)>-><org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.util.List getLocations()>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.Set scan(java.lang.Class[])>-><java.util.HashSet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: java.lang.String[] getMappingResources()>-><org.springframework.util.ObjectUtils: boolean isEmpty(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.info.InfoProperties: java.util.Properties copy(java.util.Properties)>-><java.util.Properties: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper alwaysApplyingWhenNonNull()>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper alwaysApplying(org.springframework.boot.context.properties.PropertyMapper$SourceOperator)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.AbstractMap$2$1: java.lang.Object next()>
<org.springframework.boot.info.InfoProperties: void <init>(java.util.Properties)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.info.BuildProperties: void coerceDate(java.util.Properties,java.lang.String)>-><java.util.Properties: java.lang.String getProperty(java.lang.String)>
<org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver: void <init>()>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSession(javax.mail.Session)>
<org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>-><java.util.AbstractList: int hashCode()>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: org.flywaydb.core.api.callback.Callback[] getCallbacks()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: org.flywaydb.core.api.callback.Callback[] getCallbacks()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties: java.lang.String getThreadNamePrefix()>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.String getPlaceholderPrefix()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.String getPlaceholderPrefix()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.apache.logging.log4j.Level: int compareTo(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$EmptySet: java.util.Iterator iterator()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setPort(java.lang.Integer)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.TreeMap$EntrySet: java.util.Iterator iterator()>
<org.apache.shiro.session.mgt.SimpleSession: void validate()>-><org.slf4j.helpers.SubstituteLogger: void trace(java.lang.String)>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.MethodValidationPostProcessor methodValidationPostProcessor(org.springframework.core.env.Environment,javax.validation.Validator)>-><org.springframework.validation.beanvalidation.MethodValidationPostProcessor: void setValidator(javax.validation.Validator)>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Float castToFloat(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setEmbeddedDatabase(org.springframework.jdbc.datasource.embedded.EmbeddedDatabase)>
<org.elasticsearch.common.ParseField: void <init>(java.lang.String,java.lang.String[])>-><java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><java.rmi.server.LogStream: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean entityManagerFactory(org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder)>-><org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder mappingResources(java.lang.String[])>
<com.fasterxml.jackson.databind.module.SimpleModule: void <init>(com.fasterxml.jackson.core.Version)>-><com.fasterxml.jackson.databind.Module: void <init>()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.io.ObjectOutputStream: void writeOrdinaryObject(java.lang.Object,java.io.ObjectStreamClass,boolean)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean: void <init>(org.springframework.web.servlet.DispatcherServlet,java.lang.String)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: void <init>(javax.servlet.Servlet,java.lang.String[])>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.web.servlet.View getView()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.MethodValidationPostProcessor methodValidationPostProcessor(org.springframework.core.env.Environment,javax.validation.Validator)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.Class getType()>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$GsonHttpMessageConverterConfiguration: void <init>()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.web.ResourceProperties)>-><java.lang.Object: void <init>()>
<java.util.logging.Formatter: void <init>()>-><java.lang.Object: void <init>()>
<java.util.logging.LogManager: java.util.logging.Formatter getFormatterProperty(java.lang.String,java.util.logging.Formatter)>-><java.util.logging.LogManager: java.lang.String getProperty(java.lang.String)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.io.ObjectInputStream$PeekInputStream: int available()>-><java.io.BufferedInputStream: int available()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.flywaydb.core.internal.resource.filesystem.FileSystemResource: int compareTo(java.lang.Object)>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: void <init>(org.springframework.boot.web.servlet.ServletRegistrationBean[])>-><org.springframework.boot.web.servlet.DynamicRegistrationBean: void <init>()>
<org.springframework.boot.info.GitProperties: java.lang.String coerceToEpoch(java.lang.String)>-><java.lang.String: java.lang.String valueOf(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.AbstractTemplateViewResolver: void setExposeSessionAttributes(boolean)>
<com.google.common.collect.ForwardingMap: boolean containsValue(java.lang.Object)>-><com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.Map delegate()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setLocale(java.util.Locale)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor applicationTaskExecutor(org.springframework.boot.task.TaskExecutorBuilder)>
<org.apache.shiro.session.mgt.SimpleSession: void validate()>-><org.apache.shiro.session.ExpiredSessionException: void <init>(java.lang.String)>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder jacksonObjectMapperBuilder(org.springframework.context.ApplicationContext,java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder applicationContext(org.springframework.context.ApplicationContext)>
<java.util.TreeMap$Entry: int hashCode()>-><org.elasticsearch.client.Node: int hashCode()>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClientBuilder,java.util.List)>-><org.elasticsearch.client.RestClientBuilder: org.elasticsearch.client.RestClient build()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Bucket couchbaseClient()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Bucket getBucket()>
<org.springframework.boot.web.servlet.FilterRegistrationBean: void <init>(javax.servlet.Filter,org.springframework.boot.web.servlet.ServletRegistrationBean[])>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: void <init>(org.springframework.boot.web.servlet.ServletRegistrationBean[])>
<org.apache.shiro.util.MapContext: int size()>-><java.util.HashMap: int size()>
<org.apache.shiro.session.mgt.AbstractNativeSessionManager: org.apache.shiro.session.Session beforeInvalidNotification(org.apache.shiro.session.Session)>-><org.apache.shiro.session.mgt.ImmutableProxiedSession: void <init>(org.apache.shiro.session.Session)>
<java.io.ObjectInputStream$PeekInputStream: int read(byte[],int,int)>-><java.io.BufferedInputStream: int read(byte[],int,int)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper alwaysApplying(org.springframework.boot.context.properties.PropertyMapper$SourceOperator)>-><org.springframework.boot.context.properties.PropertyMapper: void <init>(org.springframework.boot.context.properties.PropertyMapper,org.springframework.boot.context.properties.PropertyMapper$SourceOperator)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.context.annotation.MBeanExportConfiguration: org.springframework.jmx.export.annotation.AnnotationMBeanExporter mbeanExporter()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean build()>-><org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean: void setBootstrapExecutor(org.springframework.core.task.AsyncTaskExecutor)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source getSource(java.util.function.Supplier)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.util.function.Supplier)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.joda.time.field.BaseDurationField: int compareTo(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastServerConfiguration$HazelcastServerConfigFileConfiguration: com.hazelcast.core.HazelcastInstance hazelcastInstance(org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties)>-><org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties: org.springframework.core.io.Resource resolveConfigLocation()>
<sun.rmi.runtime.Log$LoggerLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.lang.StringBuilder: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.apache.shiro.authc.Authenticator getAuthenticator()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><java.lang.String: boolean endsWith(java.lang.String)>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><org.apache.shiro.util.MapContext: java.util.Set entrySet()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.transaction.PlatformTransactionManager getPlatformTransactionManager()>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<com.alibaba.fastjson.serializer.SerializeFilterable: java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.logging.StreamHandler: void configure()>-><java.util.logging.Handler: void setFilter(java.util.logging.Filter)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<org.springframework.web.servlet.HttpServletBean: void <init>()>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<com.google.common.collect.Maps$Values: boolean remove(java.lang.Object)>-><com.google.common.collect.ForwardingMap: java.lang.Object remove(java.lang.Object)>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: com.hazelcast.core.HazelcastInstance getHazelcastInstance()>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void <init>()>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.domain.EntityScanner: void <init>(org.springframework.context.ApplicationContext)>-><java.lang.Object: void <init>()>
<org.springframework.cglib.core.EmitUtils$5: java.lang.Object transform(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: boolean isMixed()>
<sun.rmi.runtime.Log$LogStreamLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><sun.rmi.runtime.Log: java.lang.String[] access$200()>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.lang.String getSqlMigrationPrefix()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setNoOpCacheManager(org.springframework.cache.support.NoOpCacheManager)>
<org.apache.shiro.session.mgt.SimpleSession: boolean onEquals(org.apache.shiro.session.mgt.SimpleSession)>-><org.apache.shiro.session.mgt.SimpleSession: java.util.Date getStartTimestamp()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.boot.autoconfigure.mail.MailProperties,org.springframework.mail.javamail.JavaMailSenderImpl)>-><java.nio.charset.Charset: java.lang.String name()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigDecimal castToBigDecimal(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.elasticsearch.client.PersistentCredentialsAuthenticationStrategy: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.net.URI: int compareTo(java.lang.Object)>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>-><java.lang.String: int length()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler build()>-><org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>
<java.util.Collections$SetFromMap: void <init>(java.util.Map)>-><org.springframework.util.LinkedCaseInsensitiveMap: boolean isEmpty()>
<javax.crypto.CryptoPermission: boolean impliesParameterSpec(boolean,java.security.spec.AlgorithmParameterSpec)>-><java.lang.Object: java.lang.Class getClass()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.config.ShiroConfig: org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor(org.apache.shiro.web.mgt.DefaultWebSecurityManager)>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient access$000(org.elasticsearch.client.RestClientBuilder)>-><org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>
<sun.rmi.runtime.Log$LoggerLog$1: java.lang.Object run()>-><sun.rmi.runtime.Log$LoggerLog$1: java.util.logging.Handler run()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determineUsername()>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<org.springframework.core.io.support.EncodedResource: java.io.InputStream getInputStream()>-><org.springframework.core.io.FileSystemResource: java.io.InputStream getInputStream()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Object cast(java.lang.Object,java.lang.reflect.ParameterizedType,com.alibaba.fastjson.parser.ParserConfig)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.util.Iterator iterator()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><java.lang.StringBuilder: java.lang.String toString()>
<sun.misc.URLClassPath$Loader: java.net.URL findResource(java.lang.String,boolean)>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: java.io.InputStream getInputStream()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.jdbc.DataSourceBuilder: org.springframework.boot.jdbc.DataSourceBuilder password(java.lang.String)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: java.util.List replaceVendorLocations(java.util.List,org.springframework.boot.jdbc.DatabaseDriver)>-><org.springframework.boot.jdbc.DatabaseDriver$1: java.lang.String getId()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><java.util.Collections$EmptyList: java.lang.Object[] toArray(java.lang.Object[])>
<sun.rmi.runtime.RuntimeUtil$1: java.lang.Thread newThread(java.lang.Runnable)>-><sun.rmi.runtime.RuntimeUtil: sun.rmi.runtime.Log access$000()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTransactionManagerCustomizers(org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean build()>-><org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean: void setPersistenceUnitName(java.lang.String)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler: void run()>-><org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setForwardHeadersStrategy(org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.joda.time.field.BaseDurationField: int compareTo(java.lang.Object)>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: void <init>(java.net.URL)>-><java.net.URLConnection: void <init>(java.net.URL)>
<java.util.ResourceBundle$Control$1: java.io.InputStream run()>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: java.io.InputStream getInputStream()>
<org.springframework.context.annotation.MBeanExportConfiguration: org.springframework.jmx.export.annotation.AnnotationMBeanExporter mbeanExporter()>-><org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>
<com.alibaba.fastjson.serializer.SerializeFilterable: java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)>-><java.rmi.server.LogStream: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.MonthDay: int compareTo(java.lang.Object)>
<org.springframework.boot.info.InfoProperties: void <init>(java.util.Properties)>-><java.lang.Object: void <init>()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder queueCapacity(int)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setServerEndpointExporter(org.springframework.web.socket.server.standard.ServerEndpointExporter)>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean build()>-><org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean: java.util.Map getJpaPropertyMap()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setUri(java.lang.String)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><org.springframework.ui.freemarker.FreeMarkerConfigurationFactory: void setTemplateLoaderPaths(java.lang.String[])>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: boolean isReplacement(org.springframework.http.converter.HttpMessageConverter,org.springframework.http.converter.HttpMessageConverter)>-><org.springframework.util.ClassUtils: boolean isAssignableValue(java.lang.Class,java.lang.Object)>
<org.springframework.jmx.export.MBeanExporter: void setAutodetectMode(int)>-><org.springframework.core.Constants: java.util.Set getValues(java.lang.String)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.joda.time.LocalDateTime: int compareTo(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.lang.Object next()>
<java.util.Properties: java.lang.String getProperty(java.lang.String)>-><java.util.Properties: java.lang.String getProperty(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.flywaydb.core.api.Location: int compareTo(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<freemarker.ext.beans.StringModel: java.lang.String getAsString()>-><java.rmi.server.LogStream: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setPassword(java.lang.String)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.io.Serializable getId()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.LocalDateTime: int compareTo(java.lang.Object)>
<sun.rmi.runtime.NewThreadAction: java.lang.Thread run()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.EnumMap$Values: boolean remove(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setDefaultPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.task.TaskSchedulingProperties getTaskSchedulingPropertiesInstance()>
<org.apache.shiro.session.mgt.AbstractNativeSessionManager: void notifyStop(org.apache.shiro.session.Session)>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration: void <init>()>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.RegistrationBean: void <init>()>-><java.lang.Object: void <init>()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>-><java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.core.io.support.EncodedResource: java.io.Reader getReader()>
<org.apache.shiro.util.StringUtils: java.lang.String toDelimitedString(java.lang.Object[],java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: com.hazelcast.core.HazelcastInstance getHazelcastInstance()>-><com.hazelcast.core.Hazelcast: com.hazelcast.core.HazelcastInstance getOrCreateHazelcastInstance(com.hazelcast.config.Config)>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.Set scan(java.lang.Class[])>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.springframework.context.annotation.MBeanExportConfiguration: org.springframework.jmx.export.annotation.AnnotationMBeanExporter mbeanExporter()>-><org.springframework.context.annotation.MBeanExportConfiguration: void setupRegistrationPolicy(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>
<java.rmi.server.LogStream: void write(byte[],int,int)>-><java.rmi.server.LogStream: void write(int)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setUrl(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.gson.GsonProperties getGsonPropertiesInstance()>-><org.springframework.boot.autoconfigure.gson.GsonProperties: void setExcludeFieldsWithoutExposeAnnotation(java.lang.Boolean)>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><org.elasticsearch.client.SnapshotClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.lang.String getPlaceholderPrefix()>
<sun.rmi.runtime.NewThreadAction: java.lang.Thread run()>-><java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.logging.StreamHandler: void flushAndClose()>-><java.util.logging.Handler: void reportError(java.lang.String,java.lang.Exception,int)>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.Set scan(java.lang.Class[])>-><org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.List getPackages()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<org.elasticsearch.client.RestClient: void <init>(org.apache.http.impl.nio.client.CloseableHttpAsyncClient,long,org.apache.http.Header[],java.util.List,java.lang.String,org.elasticsearch.client.RestClient$FailureListener,org.elasticsearch.client.NodeSelector,boolean)>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getDefaultNamedXContents()>-><java.util.Collections$SynchronizedCollection: boolean add(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void tryGrow(java.lang.Object[],int)>-><java.util.concurrent.locks.ReentrantLock: void unlock()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setShiroFilterFactoryBean(org.apache.shiro.spring.web.ShiroFilterFactoryBean)>
<org.springframework.boot.web.servlet.ServletRegistrationBean: void <init>(javax.servlet.Servlet,boolean,java.lang.String[])>-><java.util.AbstractCollection: boolean addAll(java.util.Collection)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration: com.fasterxml.jackson.module.paramnames.ParameterNamesModule parameterNamesModule()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration: org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean dispatcherServletRegistration(org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ObjectProvider)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<javax.crypto.Cipher$Transform: int supportsModePadding(java.security.Provider$Service)>-><java.lang.Math: int min(int,int)>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigInteger castToBigInteger(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.springframework.util.MimeType: int compareTo(java.lang.Object)>
<java.util.EnumMap: int entryHashCode(int)>-><org.elasticsearch.client.Node: int hashCode()>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.Set scan(java.lang.Class[])>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.LocalValidatorFactoryBean defaultValidator()>-><org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: void setMessageInterpolator(javax.validation.MessageInterpolator)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Env: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts getTimeouts()>
<co.yiiu.pybbs.PybbsApplication: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>-><java.util.LinkedHashMap: void <init>()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown: java.time.Duration getAwaitTerminationPeriod()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.flywaydb.core.internal.util.Pair: int compareTo(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties getWebMvcPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: void <init>()>
<org.elasticsearch.common.ParseField: void <init>(java.lang.String,java.lang.String[])>-><java.util.HashSet: void <init>()>
<org.apache.shiro.session.mgt.SimpleSession: boolean isTimedOut()>-><org.apache.shiro.session.mgt.SimpleSession: long getTimeout()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.ProcessEnvironment$Value: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: void <init>()>
<org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$GsonHttpMessageConverterConfiguration: org.springframework.http.converter.json.GsonHttpMessageConverter gsonHttpMessageConverter(com.google.gson.Gson)>-><org.springframework.http.converter.json.GsonHttpMessageConverter: void setGson(com.google.gson.Gson)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.RegularEnumSet: java.util.Iterator iterator()>
<java.rmi.server.LogStream: void write(int)>-><java.lang.Thread: java.lang.String getName()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.util.Date: int compareTo(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<org.apache.shiro.spring.config.AbstractShiroBeanConfiguration: org.apache.shiro.event.EventBus eventBus()>-><org.apache.shiro.event.support.DefaultEventBus: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.config.ShiroConfig: co.yiiu.pybbs.config.realm.MyCredentialsMatcher myCredentialsMatcher()>
<java.io.ObjectOutputStream$BlockDataOutputStream: void flush()>-><java.io.BufferedOutputStream: void flush()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<sun.rmi.runtime.Log$LoggerLog$1: java.util.logging.Handler run()>-><java.util.logging.Handler: void setLevel(java.util.logging.Level)>
<org.elasticsearch.client.RestClientBuilder: org.elasticsearch.client.RestClient build()>-><org.elasticsearch.client.RestClientBuilder$1: void <init>(org.elasticsearch.client.RestClientBuilder)>
<org.apache.shiro.session.mgt.eis.MemorySessionDAO: java.util.Collection getActiveSessions()>-><java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String detectFallbackUrl(java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<java.util.logging.StreamHandler: void <init>(java.io.OutputStream,java.util.logging.Formatter)>-><java.util.logging.Handler: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJdbcTemplate(org.springframework.jdbc.core.JdbcTemplate)>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.core.io.UrlResource: java.lang.String getFilename()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigInteger castToBigInteger(java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration: org.springframework.http.converter.StringHttpMessageConverter stringHttpMessageConverter(org.springframework.boot.autoconfigure.http.HttpProperties)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.StringBuilder: void <init>()>
<org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: javax.sql.DataSource getDataSource()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: javax.sql.DataSource getDataSource()>
<org.springframework.boot.autoconfigure.flyway.FlywayMigrationScriptMissingException: void <init>(java.util.List)>-><java.util.Collections$SynchronizedCollection: boolean isEmpty()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setStringHttpMessageConverter(org.springframework.http.converter.StringHttpMessageConverter)>
<org.apache.shiro.session.mgt.SimpleSession: boolean isTimedOut()>-><org.slf4j.helpers.SubstituteLogger: void trace(java.lang.String)>
<org.springframework.util.MimeType: void <init>(org.springframework.util.MimeType,java.util.Map)>-><org.springframework.util.MimeType: java.lang.String getSubtype()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.LocalDateTime: int compareTo(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setLocalValidatorFactoryBean(org.springframework.validation.beanvalidation.LocalValidatorFactoryBean)>
<org.elasticsearch.client.RestClient: void setNodes(java.util.Collection)>-><org.elasticsearch.client.RestClient$NodeTuple: void <init>(java.lang.Object,org.apache.http.client.AuthCache)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><freemarker.ext.beans.HashAdapter$1$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>-><org.springframework.boot.autoconfigure.http.HttpProperties$Encoding: java.nio.charset.Charset getCharset()>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>-><org.springframework.jmx.export.MBeanExporter: void setAutodetectMode(int)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: boolean isIgnoreMissingMigrations()>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getObject()>-><javax.validation.Validation: javax.validation.bootstrap.GenericBootstrap byDefaultProvider()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>-><java.util.AbstractMap: int hashCode()>
<synthetic.method.ServletResponseImpl: void <init>()>-><java.lang.Object: void <init>()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setCleanDisabled(boolean)>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: org.flywaydb.core.api.Location[] getLocations()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: org.flywaydb.core.api.Location[] getLocations()>
<org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.api.configuration.FluentConfiguration dataSource(java.lang.String,java.lang.String,java.lang.String)>-><org.flywaydb.core.api.configuration.ClassicConfiguration: void setDataSource(java.lang.String,java.lang.String,java.lang.String)>
<java.util.EnumMap: int entryHashCode(int)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.apache.shiro.mgt.SubjectDAO getSubjectDAO()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<sun.rmi.runtime.NewThreadAction$2: java.lang.ThreadGroup run()>-><java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: java.lang.String normalizePrefix(java.lang.String)>-><java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSimpleCacheManager(org.springframework.cache.support.SimpleCacheManager)>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: org.elasticsearch.client.RestClientBuilder elasticsearchRestClientBuilder(org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties,org.springframework.beans.factory.ObjectProvider)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder allowCoreThreadTimeOut(boolean)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setGridFsDatabase(java.lang.String)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: boolean isSkipDefaultResolvers()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setWebMvcConfigurer(org.springframework.web.servlet.config.annotation.WebMvcConfigurer)>
<org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.elasticsearch.client.TasksClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>-><java.lang.Object: void <init>()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><sun.security.x509.X509CRLEntryImpl: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder taskDecorator(org.springframework.core.task.TaskDecorator)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(boolean,java.util.Collection)>-><java.util.Collections: java.util.List emptyList()>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.smile.MappingJackson2SmileHttpMessageConverter: void <init>()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.boot.autoconfigure.mail.MailProperties,org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.boot.autoconfigure.mail.MailProperties: java.lang.String getHost()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.Boolean: int compareTo(java.lang.Object)>
<sun.rmi.runtime.Log: java.lang.String[] getSource()>-><java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: boolean isReplacement(org.springframework.http.converter.HttpMessageConverter,org.springframework.http.converter.HttpMessageConverter)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setBaselineOnMigrate(boolean)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration: org.springframework.web.servlet.DispatcherServlet dispatcherServlet(org.springframework.boot.autoconfigure.http.HttpProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties)>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: boolean isDispatchTraceRequest()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<java.util.concurrent.ConcurrentMap: void forEach(java.util.function.BiConsumer)>-><com.google.common.collect.ForwardingMap: java.util.Set entrySet()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: java.lang.Object next()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.joda.time.base.AbstractInstant: int compareTo(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerializeFilterable: java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getDefaultNamedXContents()>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.lang.String: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<org.springframework.boot.task.TaskSchedulerBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.util.LinkedHashSet: void <init>(java.util.Collection)>
<sun.nio.cs.StreamEncoder: void writeBytes()>-><java.rmi.server.LogStream: void write(byte[],int,int)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isIgnoreMissingMigrations()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isIgnoreMissingMigrations()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<org.springframework.web.filter.ForwardedHeaderFilter: void <init>()>-><org.springframework.web.filter.OncePerRequestFilter: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>-><org.springframework.web.filter.CharacterEncodingFilter: void setEncoding(java.lang.String)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl: java.lang.String getKeyStorePassword()>
<java.util.logging.StreamHandler: void flushAndClose()>-><java.io.OutputStreamWriter: void close()>
<org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration: org.springframework.cache.support.NoOpCacheManager cacheManager()>-><org.springframework.cache.support.NoOpCacheManager: void <init>()>
<org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration: org.springframework.transaction.jta.JtaTransactionManager transactionManager(org.springframework.beans.factory.ObjectProvider)>-><org.springframework.transaction.config.JtaTransactionManagerFactoryBean: org.springframework.transaction.jta.JtaTransactionManager getObject()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder awaitTerminationPeriod(java.time.Duration)>-><org.springframework.boot.task.TaskSchedulerBuilder: void <init>(java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,java.util.Set)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>-><org.springframework.boot.context.properties.PropertyMapper$Source: void to(java.util.function.Consumer)>
<java.util.logging.Handler: void setLevel(java.util.logging.Level)>-><java.util.logging.Handler: void checkPermission()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.util.Properties detectPropsForUrl(java.lang.String)>-><java.lang.Math: int min(int,int)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Set asSet()>-><java.util.AbstractCollection: boolean addAll(java.util.Collection)>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.Set scan(java.lang.Class[])>-><java.util.HashSet: boolean add(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties getHazelcastPropertiesInstance()>-><org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties: void setConfig(org.springframework.core.io.Resource)>
<java.util.Hashtable: java.lang.String toString()>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<com.google.gson.internal.LinkedTreeMap$Node: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.feed.AtomFeedHttpMessageConverter: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean entityManagerFactory(org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getServletUrlMapping()>-><java.lang.String: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSubjectDAO(org.apache.shiro.mgt.SubjectDAO)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts: java.time.Duration getQuery()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: void <init>(org.springframework.jdbc.core.JdbcOperations)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Vector$Itr: boolean hasNext()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void onInvalidation(org.apache.shiro.session.Session,org.apache.shiro.session.InvalidSessionException,org.apache.shiro.session.mgt.SessionKey)>-><org.apache.shiro.session.mgt.DefaultSessionManager: void afterStopped(org.apache.shiro.session.Session)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void onInvalidation(org.apache.shiro.session.Session,org.apache.shiro.session.InvalidSessionException,org.apache.shiro.session.mgt.SessionKey)>-><org.apache.shiro.session.mgt.SimpleSession: java.io.Serializable getId()>
<org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate namedParameterJdbcTemplate(org.springframework.jdbc.core.JdbcTemplate)>-><org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: void <init>(org.springframework.jdbc.core.JdbcOperations)>
<org.elasticsearch.client.RestClient: void setNodes(java.util.Collection)>-><java.util.ArrayList$Itr: boolean hasNext()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.Map delegate()>-><com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.concurrent.ConcurrentMap delegate()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>
<org.apache.shiro.spring.LifecycleBeanPostProcessor: void <init>()>-><org.apache.shiro.spring.LifecycleBeanPostProcessor: void <init>(int)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupDomain(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><java.util.AbstractMap: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setMixed(boolean)>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean entityManagerFactory(org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder)>-><org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: void customizeVendorProperties(java.util.Map)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.boot.autoconfigure.mail.MailProperties,org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.boot.autoconfigure.mail.MailProperties: java.lang.String getProtocol()>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.web.servlet.error.DefaultErrorAttributes errorAttributes()>-><org.springframework.boot.autoconfigure.web.ServerProperties: org.springframework.boot.autoconfigure.web.ErrorProperties getError()>
<com.google.common.collect.Maps$KeySet: int size()>-><com.google.common.collect.ForwardingMap: int size()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<co.yiiu.pybbs.util.HttpUtil: void responseWrite(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.filter.RelativeRedirectResponseWrapper: void sendRedirect(java.lang.String)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder maxPoolSize(int)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<org.springframework.boot.jdbc.EmbeddedDatabaseConnection: boolean isEmbedded(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<javax.el.BeanELResolver$SoftConcurrentHashMap: void cleanup()>-><java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>
<org.apache.shiro.session.mgt.eis.MemorySessionDAO: void update(org.apache.shiro.session.Session)>-><org.apache.shiro.session.mgt.DelegatingSession: java.io.Serializable getId()>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>-><org.springframework.util.MimeType: java.util.Map getParameters()>
<org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow: org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory undertowReactiveWebServerFactory(org.springframework.beans.factory.ObjectProvider)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateCustomizer[])>-><java.lang.Object: void <init>()>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean remove(java.lang.Object)>-><com.google.common.collect.ForwardingMap: java.lang.Object remove(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: void configurePartConverters(org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter,java.util.Collection)>
<org.elasticsearch.client.Node: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<org.elasticsearch.client.RestClient: void setNodes(java.util.Collection)>-><org.apache.http.impl.auth.BasicScheme: void <init>()>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getDefaultNamedXContents()>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.springframework.boot.autoconfigure.gson.GsonProperties: void <init>()>-><java.lang.Object: void <init>()>
<com.alibaba.fastjson.serializer.SerializeFilterable: java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration: void <init>()>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void <init>()>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>-><java.util.Arrays: java.lang.String toString(java.lang.Object[])>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.cluster.ClusterInfo couchbaseClusterInfo()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Bucket getBucket()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: boolean hasNext()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.apache.shiro.util.MapContext: java.util.Set entrySet()>-><java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: void <init>(org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder,javax.sql.DataSource)>-><java.util.HashMap: void <init>()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.ClassLoader getClassLoader()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.Collections$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.BuildProperties buildProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoProperties: org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build getBuild()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.ReactiveJwtDecoder jwtDecoder()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setOracleSqlplus(java.lang.Boolean)>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<org.elasticsearch.client.RestClient: void <init>(org.apache.http.impl.nio.client.CloseableHttpAsyncClient,long,org.apache.http.Header[],java.util.List,java.lang.String,org.elasticsearch.client.RestClient$FailureListener,org.elasticsearch.client.NodeSelector,boolean)>-><java.util.Collections: java.util.List unmodifiableList(java.util.List)>
<java.util.logging.Handler: void setFilter(java.util.logging.Filter)>-><java.util.logging.Handler: void checkPermission()>
<org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration: org.springframework.jdbc.core.JdbcTemplate jdbcTemplate(javax.sql.DataSource,org.springframework.boot.autoconfigure.jdbc.JdbcProperties)>-><org.springframework.jdbc.core.JdbcTemplate: void <init>(javax.sql.DataSource)>
<org.flywaydb.core.api.configuration.FluentConfiguration: void <init>(java.lang.ClassLoader)>-><org.flywaydb.core.api.configuration.ClassicConfiguration: void <init>(java.lang.ClassLoader)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.Set scan(java.lang.Class[])>-><java.util.Collections$UnmodifiableCollection: boolean isEmpty()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.AbstractTemplateViewResolver: void setExposeRequestAttributes(boolean)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration: org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean dispatcherServletRegistration(org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: void setLoadOnStartup(int)>
<org.springframework.core.ResolvableType: int calculateHashCode()>-><org.springframework.core.SerializableTypeWrapper$MethodInvokeTypeProvider: java.lang.reflect.Type getType()>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerJwtConfiguration$OAuth2WebSecurityConfigurerAdapter: void <init>()>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.Set scan(java.lang.Class[])>-><org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void setResourceLoader(org.springframework.core.io.ResourceLoader)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties: org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool getPool()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.String castToString(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder messageConverters(java.util.Collection)>-><org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer,boolean,java.lang.String,java.util.Set,java.util.Set,java.util.function.Supplier,org.springframework.web.util.UriTemplateHandler,org.springframework.web.client.ResponseErrorHandler,org.springframework.boot.web.client.BasicAuthentication,java.util.Map,java.util.Set,java.util.Set)>
<java.util.concurrent.PriorityBlockingQueue: boolean add(java.lang.Object)>-><java.util.concurrent.PriorityBlockingQueue: boolean offer(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskExecutionProperties: void <init>()>-><java.lang.Object: void <init>()>
<org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: boolean hasNext()>-><java.util.ConcurrentModificationException: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFreeMarkerConfigurer(org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer)>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: void <init>(org.springframework.context.ApplicationContext)>-><org.springframework.core.io.DefaultResourceLoader: java.lang.ClassLoader getClassLoader()>
<org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: java.lang.String getPath()>
<org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers: void <init>(java.util.Collection)>-><java.util.ArrayList: void <init>(java.util.Collection)>
<org.apache.shiro.util.StringUtils: java.lang.String toDelimitedString(java.lang.Object[],java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source when(java.util.function.Predicate)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder customizers(java.lang.Iterable)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Iterator iterator()>-><java.util.Collections$EmptySet: java.util.Iterator iterator()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayMigrationScriptMissingException: void <init>(java.util.List)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder corePoolSize(int)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.List getPackages()>-><org.springframework.boot.autoconfigure.domain.EntityScanPackages: org.springframework.boot.autoconfigure.domain.EntityScanPackages get(org.springframework.beans.factory.BeanFactory)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: org.springframework.boot.jdbc.DatabaseDriver getDatabaseDriver()>-><org.springframework.boot.jdbc.DatabaseDriver: org.springframework.boot.jdbc.DatabaseDriver fromJdbcUrl(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: void <init>(org.springframework.boot.web.servlet.ServletRegistrationBean[])>-><java.util.LinkedHashSet: void <init>()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts: java.time.Duration getSocketConnect()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.apache.http.impl.nio.client.HttpAsyncClientBuilder: org.apache.http.impl.nio.client.HttpAsyncClientBuilder create()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper get()>
<org.springframework.boot.autoconfigure.flyway.FlywayMigrationScriptMissingException: void <init>(java.util.List)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><freemarker.ext.beans.HashAdapter$1$1: boolean hasNext()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.String: boolean endsWith(java.lang.String)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.springframework.util.unit.DataSize: int compareTo(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder properties(java.util.Map)>-><java.util.HashMap: void putAll(java.util.Map)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>-><java.lang.Object: java.lang.Class getClass()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDefaultErrorViewResolver(org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver)>
<org.elasticsearch.client.RestClient: void setNodes(java.util.Collection)>-><org.elasticsearch.client.Node: org.apache.http.HttpHost getHost()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><com.fasterxml.jackson.databind.type.ClassKey: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.GitProperties gitProperties()>-><org.springframework.boot.info.GitProperties: void <init>(java.util.Properties)>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.util.Collections$SynchronizedCollection: boolean isEmpty()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><java.util.Collections$UnmodifiableCollection: boolean isEmpty()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.Integer: int compareTo(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.web.servlet.LocaleResolver getLocaleResolver()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean: void <init>(org.springframework.web.servlet.DispatcherServlet,java.lang.String)>-><org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getServletUrlMapping()>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration: com.fasterxml.jackson.databind.ObjectMapper jacksonObjectMapper(org.springframework.http.converter.json.Jackson2ObjectMapperBuilder)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder createXmlMapper(boolean)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration: org.springframework.web.servlet.DispatcherServlet dispatcherServlet(org.springframework.boot.autoconfigure.http.HttpProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties)>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: boolean isDispatchOptionsRequest()>
<org.elasticsearch.client.RestClient: void setNodes(java.util.Collection)>-><java.util.ArrayList: java.util.Iterator iterator()>
<com.google.common.collect.ForwardingMap: boolean containsValue(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><java.rmi.server.LogStream: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setAuthenticationStrategy(org.apache.shiro.authc.pam.AuthenticationStrategy)>
<java.util.Hashtable: java.lang.String toString()>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.jackson.JacksonProperties: void <init>()>-><java.util.EnumMap: void <init>(java.lang.Class)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask: int compareTo(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$KeySet: boolean contains(java.lang.Object)>-><com.google.common.collect.ForwardingMap: boolean containsKey(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder jwtDecoderByPublicKeyValue()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.apache.shiro.session.mgt.eis.MemorySessionDAO: void delete(org.apache.shiro.session.Session)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: javax.servlet.MultipartConfigElement getMultipartConfigElement()>
<org.elasticsearch.client.RestClientBuilder: org.elasticsearch.client.RestClient build()>-><java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><java.util.Collections$EmptySet: boolean isEmpty()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<org.apache.shiro.session.mgt.SimpleSession: void validate()>-><org.apache.shiro.session.mgt.SimpleSession: boolean isStopped()>
<org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration: org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver freeMarkerViewResolver()>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: java.util.List resolveLocations(java.util.List)>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: boolean usesVendorLocation(java.util.Collection)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Hashtable$KeySet: java.util.Iterator iterator()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setOutOfOrder(boolean)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.apache.shiro.session.mgt.AbstractNativeSessionManager: void notifyExpiration(org.apache.shiro.session.Session)>-><java.util.ArrayList$Itr: boolean hasNext()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Double castToDouble(java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<freemarker.ext.beans.StringModel: java.lang.String getAsString()>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.logging.StreamHandler: void configure()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.AbstractMap$2$1: boolean hasNext()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownUsingComparator(int,java.lang.Object,java.lang.Object[],int,java.util.Comparator)>-><org.apache.logging.log4j.util.PropertySource$Comparator: int compare(java.lang.Object,java.lang.Object)>
<org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.apache.shiro.session.mgt.SimpleSession: boolean isStopped()>-><org.apache.shiro.session.mgt.SimpleSession: java.util.Date getStopTimestamp()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><org.elasticsearch.client.IngestClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.util.AbstractMap: java.lang.String toString()>
<synthetic.method.ServletRequestImpl: void <init>()>-><java.lang.Object: void <init>()>
<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service tryGet(int)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setContinueOnError(boolean)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: boolean isConditionMatch(org.springframework.core.type.classreading.MetadataReader)>-><org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.flywaydb.core.internal.resource.classpath.ClassPathResource: int compareTo(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.task.TaskExecutionProperties getTaskExecutionPropertiesInstance()>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties: void <init>()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setGenerateUniqueName(boolean)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.jdbc.DataSourceBuilder: org.springframework.boot.jdbc.DataSourceBuilder url(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><java.lang.reflect.WeakCache$LookupValue: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.AbstractMap$1: java.util.Iterator iterator()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigDecimal castToBigDecimal(java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: void <init>(org.apache.commons.collections.FastHashMap$CollectionView)>-><java.lang.Object: void <init>()>
<org.apache.shiro.session.mgt.SimpleSession: void validate()>-><java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<freemarker.ext.beans.HashAdapter$1$1$1: int hashCode()>-><org.elasticsearch.client.Node: int hashCode()>
<java.util.logging.Handler: void setEncoding(java.lang.String)>-><java.util.logging.Handler: void checkPermission()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.sql.Connection getConnection()>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.sql.Connection getConnectionFromDriver(java.lang.String,java.lang.String)>
<org.springframework.core.SerializableTypeWrapper$MethodInvokeTypeProvider: java.lang.reflect.Type getType()>-><org.springframework.core.SerializableTypeWrapper$MethodInvokeTypeProvider: java.lang.reflect.Type getType()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.mail.MailProperties getMailPropertiesInstance()>-><org.springframework.boot.autoconfigure.mail.MailProperties: void setPassword(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: void <init>(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setCheckLocation(boolean)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Vector$Itr: java.lang.Object next()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.ArrayList$SubList: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow: org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory undertowReactiveWebServerFactory(org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory: void <init>()>
<org.apache.shiro.session.mgt.AbstractNativeSessionManager: void notifyExpiration(org.apache.shiro.session.Session)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.cluster.ClusterInfo couchbaseClusterInfo()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Bucket: java.lang.String getName()>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: java.lang.String getCharsetName()>
<org.springframework.http.HttpHeaders: java.lang.String formatHeaders(org.springframework.util.MultiValueMap)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.stream.Stream stream()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: javax.sql.DataSource configureDataSource(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,javax.sql.DataSource,javax.sql.DataSource)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: boolean isCreateDataSource()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: void <init>()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.net.URI: int compareTo(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: freemarker.template.Configuration getConfiguration()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler taskScheduler(org.springframework.boot.task.TaskSchedulerBuilder)>
<org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>-><org.springframework.util.Assert: void isInstanceOf(java.lang.Class,java.lang.Object,java.lang.String)>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Double castToDouble(java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.springframework.core.io.support.PropertiesLoaderSupport: void <init>()>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>()>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder: void <init>(org.springframework.orm.jpa.JpaVendorAdapter,java.util.Map,org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager,java.net.URL)>-><java.lang.Object: void <init>()>
<org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: java.lang.String getPath()>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: org.elasticsearch.client.RestClientBuilder elasticsearchRestClientBuilder(org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties,org.springframework.beans.factory.ObjectProvider)>-><java.util.stream.ReferencePipeline: java.lang.Object[] toArray(java.util.function.IntFunction)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerOpaqueTokenConfiguration$OpaqueTokenIntrospectionClientConfiguration: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.LinkedHashMap$LinkedKeySet: java.util.Iterator iterator()>
<sun.rmi.runtime.Log$LoggerLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean isEmpty()>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.String getSqlMigrationPrefix()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.String getSqlMigrationPrefix()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari: com.zaxxer.hikari.HikariDataSource dataSource(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: boolean isAllowSessionOverride()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<sun.rmi.runtime.Log$LogStreamLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><sun.rmi.runtime.Log$LogStreamLog: java.lang.String unqualifiedName(java.lang.String)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration: org.springframework.data.mongodb.core.mapping.MongoMappingContext mongoMappingContext(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.mongo.MongoProperties,org.springframework.data.mongodb.core.convert.MongoCustomConversions)>-><org.springframework.beans.BeanUtils: java.lang.Object instantiateClass(java.lang.Class)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.task.TaskSchedulingProperties getTaskSchedulingPropertiesInstance()>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: void setThreadNamePrefix(java.lang.String)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<org.apache.shiro.session.mgt.SimpleSession: boolean onEquals(org.apache.shiro.session.mgt.SimpleSession)>-><org.apache.shiro.session.mgt.SimpleSession: java.util.Map getAttributes()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: javax.sql.DataSource configureDataSource(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,javax.sql.DataSource,javax.sql.DataSource)>-><org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.api.configuration.FluentConfiguration dataSource(javax.sql.DataSource)>
<javax.crypto.Cipher: void chooseProvider(int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>-><sun.security.jca.ProviderList$ServiceList$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><com.alibaba.fastjson.JSONArray: java.lang.Object[] toArray(java.lang.Object[])>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate namedParameterJdbcTemplate(org.springframework.jdbc.core.JdbcTemplate)>
<sun.rmi.runtime.Log$LogStreamLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><java.util.Collections$SynchronizedCollection: java.util.stream.Stream stream()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<freemarker.ext.beans.HashAdapter$1$1$1: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><org.elasticsearch.common.xcontent.NamedXContentRegistry$Entry: org.elasticsearch.common.xcontent.ContextParser access$000(org.elasticsearch.common.xcontent.NamedXContentRegistry$Entry)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource)>-><org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder allowCoreThreadTimeOut(boolean)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.GitProperties gitProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoProperties: org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git getGit()>
<java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$1: boolean hasNext()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setUndertowReactiveWebServerFactory(org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder threadNamePrefix(java.lang.String)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<java.util.LinkedList: boolean remove(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.elasticsearch.client.RestClient: void setNodes(java.util.Collection)>-><org.apache.http.impl.client.BasicAuthCache: void put(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme)>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getDefaultNamedXContents()>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.feed.RssChannelHttpMessageConverter: void <init>()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.AbstractTemplateViewResolver: void setExposeSpringMacroHelpers(boolean)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<java.net.URLClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>-><java.net.URLConnection: java.security.Permission getPermission()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.String castToString(java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration: org.springframework.boot.autoconfigure.web.reactive.TomcatReactiveWebServerFactoryCustomizer tomcatReactiveWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>-><org.springframework.boot.autoconfigure.web.reactive.TomcatReactiveWebServerFactoryCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String detectDriverForUrl(java.lang.String)>-><org.flywaydb.core.internal.util.FeatureDetector: void <init>(java.lang.ClassLoader)>
<org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler: void run()>-><org.slf4j.helpers.NOPLogger: boolean isDebugEnabled()>
<sun.misc.URLClassPath$Loader: sun.misc.Resource getResource(java.lang.String,boolean)>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: java.io.InputStream getInputStream()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getDefaultNamedXContents()>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: boolean add(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><java.rmi.server.LogStream: java.lang.String toString()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<org.springframework.core.io.support.PropertiesLoaderSupport: void <init>()>-><java.lang.Object: void <init>()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><com.alibaba.fastjson.util.FieldInfo: int compareTo(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.elasticsearch.client.Node: int hashCode()>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.jackson.JacksonProperties)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Bucket couchbaseClient()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Bucket: java.lang.String getPassword()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void <init>()>
<org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler: void run()>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Float castToFloat(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.sql.Connection getConnectionFromDriver(java.lang.String,java.lang.String)>-><java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>
<com.google.common.collect.Maps$Values: boolean isEmpty()>-><com.google.common.collect.ForwardingMap: boolean isEmpty()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setLicenseKey(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void main(java.lang.String[])>-><synthetic.method.ServletRequestImpl: void <init>()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.core.io.support.EncodedResource: boolean requiresReader()>
<java.util.AbstractList: int hashCode()>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration: void <init>()>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupRegistrationPolicy(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.jmx.support.MBeanRegistrationSupport: void setRegistrationPolicy(org.springframework.jmx.support.RegistrationPolicy)>
<java.io.ObjectOutputStream$BlockDataOutputStream: void drain()>-><java.io.BufferedOutputStream: void write(byte[],int,int)>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: java.util.Map getAttributes()>
<org.apache.commons.collections.FastHashMap$CollectionView: java.lang.Object[] toArray()>-><java.util.AbstractCollection: java.lang.Object[] toArray()>
<org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><org.springframework.boot.web.servlet.server.Session: void <init>()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>-><java.net.URL: java.lang.String getProtocol()>
<org.springframework.http.client.support.InterceptingHttpAccessor: void <init>()>-><org.springframework.http.client.support.HttpAccessor: void <init>()>
<com.alibaba.fastjson.serializer.SerializeFilterable: java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: void <init>(org.apache.commons.collections.FastHashMap$CollectionView)>-><java.util.HashMap: java.util.Set entrySet()>
<java.util.Hashtable: java.lang.String toString()>-><java.rmi.server.LogStream: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.apache.shiro.mgt.SubjectFactory getSubjectFactory()>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.apache.shiro.util.StringUtils: java.lang.String toDelimitedString(java.lang.Object[],java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Set asSet()>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.mail.MailProperties getMailPropertiesInstance()>-><org.springframework.boot.autoconfigure.mail.MailProperties: void setHost(java.lang.String)>
<org.elasticsearch.client.PersistentCredentialsAuthenticationStrategy: void <init>()>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setPassword(java.lang.String)>
<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,java.util.List)>-><org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: java.util.List sortErrorViewResolvers(java.util.List)>
<freemarker.template.DefaultObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<sun.rmi.runtime.RuntimeUtil$1: java.lang.Thread newThread(java.lang.Runnable)>-><java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>
<java.util.logging.LogManager: java.util.logging.Formatter getFormatterProperty(java.lang.String,java.util.logging.Formatter)>-><java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJtaTransactionManager(org.springframework.transaction.jta.JtaTransactionManager)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$UndertowWebServerFactoryCustomizerConfiguration: org.springframework.boot.autoconfigure.web.embedded.UndertowWebServerFactoryCustomizer undertowWebServerFactoryCustomizer(org.springframework.core.env.Environment,org.springframework.boot.autoconfigure.web.ServerProperties)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.springframework.http.client.support.HttpAccessor: void <init>()>-><org.springframework.http.client.SimpleClientHttpRequestFactory: void <init>()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><org.springframework.web.client.RestTemplate: java.util.List getMessageConverters()>
<org.springframework.http.HttpHeaders: java.lang.String formatHeaders(org.springframework.util.MultiValueMap)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(boolean,java.util.Collection)>-><java.lang.Object: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.cache.CacheProperties getCachePropertiesInstance()>
<org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$GsonHttpMessageConverterConfiguration: org.springframework.http.converter.json.GsonHttpMessageConverter gsonHttpMessageConverter(com.google.gson.Gson)>-><org.springframework.http.converter.json.GsonHttpMessageConverter: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: org.flywaydb.core.Flyway flyway(org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,org.springframework.core.io.ResourceLoader,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureJavaMigrations(org.flywaydb.core.api.configuration.FluentConfiguration,java.util.List)>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.lang.Boolean: java.lang.String toString()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: boolean isExposeSpringMacroHelpers()>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setBatch(java.lang.Boolean)>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void setCacheNames(java.util.Collection)>-><org.springframework.cache.concurrent.ConcurrentMapCacheManager: org.springframework.cache.Cache createConcurrentMapCache(java.lang.String)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.apache.http.impl.nio.client.HttpAsyncClientBuilder: org.apache.http.impl.nio.client.HttpAsyncClientBuilder setMaxConnTotal(int)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList$Itr: void remove()>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><freemarker.ext.beans.OverloadedNumberUtil$NumberWithFallbackType: int compareTo(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void <init>()>-><java.lang.Object: void <init>()>
<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>-><org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: boolean hasNext()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setDatabase(java.lang.String)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.support.ErrorPageFilter: void <init>()>-><java.util.HashMap: void <init>()>
<org.springframework.util.DefaultPropertiesPersister: void load(java.util.Properties,java.io.Reader)>-><java.util.Properties: void load(java.io.Reader)>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration: org.springframework.boot.web.servlet.FilterRegistrationBean forwardedHeaderFilter()>-><org.springframework.web.filter.ForwardedHeaderFilter: void <init>()>
<org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.LocalValidatorFactoryBean defaultValidator()>-><org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getObject()>
<org.elasticsearch.client.Node: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: java.util.Properties asProperties(java.util.Map)>-><java.util.Properties: void <init>()>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.core.annotation.AnnotationAwareOrderComparator: void sort(java.lang.Object[])>-><java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>-><javax.el.BeanELResolver$SoftConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration: org.springframework.jdbc.core.JdbcTemplate jdbcTemplate(javax.sql.DataSource,org.springframework.boot.autoconfigure.jdbc.JdbcProperties)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler: void run()>-><java.lang.System: long currentTimeMillis()>
<org.elasticsearch.client.RestClientBuilder: void <init>(java.util.List)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper alwaysApplying(org.springframework.boot.context.properties.PropertyMapper$SourceOperator)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigDecimal castToBigDecimal(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigInteger castToBigInteger(java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<org.apache.shiro.session.mgt.SimpleSession: void expire()>-><org.apache.shiro.session.mgt.SimpleSession: void stop()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.String: boolean startsWith(java.lang.String)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source whenNonNull()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Env: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints getEndpoints()>
<org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar springApplicationAdminRegistrar(org.springframework.beans.factory.ObjectProvider,org.springframework.core.env.Environment)>-><org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar: void <init>(java.lang.String)>
<org.springframework.cache.support.SimpleCacheManager: void <init>()>-><java.util.Collections: java.util.Set emptySet()>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setOracleSqlplusWarn(java.lang.Boolean)>
<com.google.gson.internal.LinkedTreeMap$Node: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.lang.String getBaselineVersion()>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: java.net.URLConnection openConnection(java.net.URL)>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: void <init>(java.net.URL)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.gson.GsonProperties getGsonPropertiesInstance()>-><org.springframework.boot.autoconfigure.gson.GsonProperties: void setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setUndertowWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.embedded.UndertowWebServerFactoryCustomizer)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.rmi.server.LogStream: java.lang.String toString()>
<sun.rmi.runtime.RuntimeUtil$1: java.lang.Thread newThread(java.lang.Runnable)>-><sun.rmi.runtime.Log$LoggerLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>
<java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<java.util.EnumMap$Values: boolean remove(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.gson.GsonProperties getGsonPropertiesInstance()>
<sun.rmi.runtime.Log$LogStreamLog: boolean isLoggable(java.util.logging.Level)>-><java.util.logging.Level: int intValue()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.util.DefaultPropertiesPersister: void loadFromXml(java.util.Properties,java.io.InputStream)>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Double castToDouble(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.apache.shiro.session.mgt.SimpleSession: void validate()>-><org.apache.shiro.session.mgt.SimpleSession: void expire()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void onExpiration(org.apache.shiro.session.Session,org.apache.shiro.session.ExpiredSessionException,org.apache.shiro.session.mgt.SessionKey)>-><org.apache.shiro.session.mgt.DelegatingSession: java.io.Serializable getId()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.core.io.support.EncodedResource: java.io.InputStream getInputStream()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean entityManagerFactory(org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder)>-><org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder properties(java.util.Map)>
<org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration: org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer reactiveWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>-><org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void onExpiration(org.apache.shiro.session.Session,org.apache.shiro.session.ExpiredSessionException,org.apache.shiro.session.mgt.SessionKey)>-><org.apache.shiro.session.mgt.SimpleSession: java.io.Serializable getId()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: boolean isPlaceholderReplacement()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean entityManagerFactory(org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder)>-><org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean build()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.String: java.lang.String substring(int)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMongoCustomConversions(org.springframework.data.mongodb.core.convert.MongoCustomConversions)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: java.util.List replaceVendorLocations(java.util.List,org.springframework.boot.jdbc.DatabaseDriver)>-><org.springframework.boot.jdbc.DatabaseDriver$6: java.lang.String getId()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.apache.shiro.mgt.SessionStorageEvaluator getSessionStorageEvaluator()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: javax.sql.DataSource configureDataSource(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,javax.sql.DataSource,javax.sql.DataSource)>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: java.lang.String getProperty(java.util.function.Supplier,java.util.function.Supplier)>
<org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>-><java.lang.String: int hashCode()>
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.String,java.lang.Object[])>-><org.springframework.context.support.AbstractRefreshableApplicationContext: org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties getHazelcastPropertiesInstance()>-><org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties: void <init>()>
<java.util.concurrent.Executors$RunnableAdapter: java.lang.Object call()>-><org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler: void run()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFilterRegistrationBean(org.springframework.boot.web.servlet.FilterRegistrationBean)>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><org.springframework.ui.freemarker.FreeMarkerConfigurationFactory: void setDefaultEncoding(java.lang.String)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Double castToDouble(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.flywaydb.core.internal.jdbc.DriverDataSource: void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Properties)>-><java.lang.Object: void <init>()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.joda.time.field.MillisDurationField: int compareTo(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder customizers(java.lang.Iterable)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: boolean isExposeRequestAttributes()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><freemarker.ext.beans.HashAdapter$1$1: java.lang.Object next()>
<java.util.logging.ErrorManager: void error(java.lang.String,java.lang.Exception,int)>-><java.io.PrintStream: void println(java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void setCacheNames(java.util.Collection)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.core.io.support.EncodedResource: void <init>(org.springframework.core.io.Resource,java.nio.charset.Charset)>-><org.springframework.core.io.support.EncodedResource: void <init>(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>
<com.google.common.collect.Maps$Values: boolean remove(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: com.hazelcast.config.Config createConfig(java.net.URL)>-><com.hazelcast.config.YamlConfigBuilder: void <init>(java.net.URL)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.apache.shiro.session.ProxiedSession: void <init>(org.apache.shiro.session.Session)>-><java.lang.Object: void <init>()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void doValidate(org.apache.shiro.session.Session)>-><java.lang.Class: java.lang.String getName()>
<org.elasticsearch.client.RestClient: void setNodes(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap: void clear()>
<org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers platformTransactionManagerCustomizers(org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers: void <init>(java.util.Collection)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void doValidate(org.apache.shiro.session.Session)>-><java.lang.StringBuilder: java.lang.String toString()>
<javax.crypto.Cipher: void chooseFirstProvider()>-><java.security.Provider$Service: java.security.Provider getProvider()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setIgnoreFutureMigrations(boolean)>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String detectFallbackUser(java.lang.String)>-><java.lang.System: java.lang.String getenv(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void main(java.lang.String[])>-><synthetic.method.FilterChainImpl: void <init>()>
<org.springframework.web.util.DefaultUriBuilderFactory: void <init>()>-><java.util.HashMap: void <init>()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.apache.shiro.session.mgt.AbstractNativeSessionManager: void notifyStop(org.apache.shiro.session.Session)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void <init>(boolean,org.springframework.core.env.Environment)>-><org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void setResourceLoader(org.springframework.core.io.ResourceLoader)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void checkLocationExists(javax.sql.DataSource,org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.core.io.ResourceLoader)>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool: int getCoreSize()>
<org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>-><java.lang.Enum: java.lang.String name()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.util.Collections: java.util.Map emptyMap()>
<org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration: org.springframework.cache.concurrent.ConcurrentMapCacheManager cacheManager(org.springframework.boot.autoconfigure.cache.CacheProperties,org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers)>-><org.springframework.cache.concurrent.ConcurrentMapCacheManager: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.AbstractMap$2$1: java.lang.Object next()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validate(org.apache.shiro.session.Session,org.apache.shiro.session.mgt.SessionKey)>-><org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void onExpiration(org.apache.shiro.session.Session,org.apache.shiro.session.ExpiredSessionException,org.apache.shiro.session.mgt.SessionKey)>
<sun.rmi.runtime.Log$LogStreamLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><org.springframework.beans.factory.BeanCreationException: void printStackTrace(java.io.PrintStream)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$EmptySet: java.util.Iterator iterator()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCluster(com.couchbase.client.java.Cluster)>
<org.springframework.boot.info.BuildProperties: void <init>(java.util.Properties)>-><org.springframework.boot.info.BuildProperties: java.util.Properties processEntries(java.util.Properties)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<java.util.Optional: java.util.Optional map(java.util.function.Function)>-><java.util.Optional: boolean isPresent()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<sun.rmi.runtime.NewThreadAction: void <init>(java.lang.Runnable,java.lang.String,boolean)>-><sun.rmi.runtime.NewThreadAction: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,boolean)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.jmx.export.MBeanExporter: void setAutodetectMode(int)>-><java.util.HashSet: boolean contains(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<java.util.EnumMap: int entryHashCode(int)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<freemarker.ext.beans.HashAdapter$1$1$1: int hashCode()>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.apache.shiro.authz.Authorizer getAuthorizer()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.config.ShiroConfig: org.apache.shiro.web.mgt.DefaultWebSecurityManager defaultWebSecurityManager()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientFallbackConfiguration: org.elasticsearch.client.RestClient elasticsearchRestClient(org.elasticsearch.client.RestClientBuilder)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determineUsername()>
<org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>-><java.lang.Object: void <init>()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.Year: int compareTo(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.WeakHashMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(java.util.Collection)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(boolean,java.util.Collection)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isTypeMatch(java.lang.String,org.springframework.core.ResolvableType,boolean)>-><org.springframework.core.ResolvableType: boolean isAssignableFrom(org.springframework.core.ResolvableType)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerOpaqueTokenConfiguration$OpaqueTokenIntrospectionClientConfiguration: org.springframework.security.oauth2.server.resource.introspection.NimbusReactiveOpaqueTokenIntrospector opaqueTokenIntrospector(org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: java.lang.Object next()>
<org.springframework.boot.context.properties.PropertyMapper$NullPointerExceptionSafeSupplier: java.lang.Object get()>-><org.springframework.boot.context.properties.PropertyMapper$NullPointerExceptionSafeSupplier: java.lang.Object get()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration: org.springframework.boot.autoconfigure.context.MessageSourceProperties messageSourceProperties()>-><org.springframework.boot.autoconfigure.context.MessageSourceProperties: void <init>()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><org.elasticsearch.client.WatcherClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>-><org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource: void <init>()>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><org.elasticsearch.client.ClusterClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.view.BeanNameViewResolver: void <init>()>-><org.springframework.web.context.support.WebApplicationObjectSupport: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerNonWebConfiguration: void <init>(org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.joda.time.format.DateTimeParserBucket$SavedField: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: void <init>()>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown: void <init>()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setSuffix(java.lang.String)>
<org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>-><org.apache.shiro.subject.SimplePrincipalCollection: java.util.Set asSet()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<com.google.common.collect.Maps$KeySet: boolean isEmpty()>-><com.google.common.collect.ForwardingMap: boolean isEmpty()>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void <init>(java.time.Duration,java.time.Duration,java.lang.Boolean)>-><java.lang.Object: void <init>()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void doValidate(org.apache.shiro.session.Session)>-><org.apache.shiro.session.mgt.SimpleSession: void validate()>
<java.util.logging.LogManager: java.util.logging.Filter getFilterProperty(java.lang.String,java.util.logging.Filter)>-><java.util.ResourceBundle$RBClassLoader: java.lang.Class loadClass(java.lang.String)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<synthetic.method.HttpSessionImpl: void <init>()>-><java.lang.Object: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Hashtable$EntrySet: java.util.Iterator iterator()>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getDefaultNamedXContents()>-><java.util.Collections$UnmodifiableCollection: boolean add(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setHost(java.lang.String)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: org.flywaydb.core.Flyway flyway(org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,org.springframework.core.io.ResourceLoader,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureCallbacks(org.flywaydb.core.api.configuration.FluentConfiguration,java.util.List)>
<org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>-><java.lang.String: int hashCode()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setDateFormat(java.lang.String)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.AbstractSequentialList: java.util.Iterator iterator()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setStream(java.lang.Boolean)>
<java.text.AttributeEntry: int hashCode()>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupDomain(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration: org.springframework.web.servlet.view.BeanNameViewResolver beanNameViewResolver()>-><org.springframework.web.servlet.view.BeanNameViewResolver: void <init>()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String detectFallbackPassword(java.lang.String)>-><org.flywaydb.core.internal.util.StringUtils: boolean hasText(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDefaultAdvisorAutoProxyCreator(org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Vector$Itr: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setBaselineVersion(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setSchema(java.util.List)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.OffsetDateTime: int compareTo(java.lang.Object)>
<org.elasticsearch.client.RestClientBuilder$1: java.lang.Object run()>-><org.elasticsearch.client.RestClientBuilder$1: org.apache.http.impl.nio.client.CloseableHttpAsyncClient run()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setStandardServletMultipartResolver(org.springframework.web.multipart.support.StandardServletMultipartResolver)>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: void <init>(org.springframework.boot.web.servlet.ServletRegistrationBean[])>-><java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<org.springframework.boot.autoconfigure.flyway.FlywayMigrationScriptMissingException: void <init>(java.util.List)>-><java.lang.StringBuilder: void <init>()>
<com.google.common.collect.ForwardingMap: java.lang.Object remove(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: org.flywaydb.core.api.resolver.MigrationResolver[] getResolvers()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: org.flywaydb.core.api.resolver.MigrationResolver[] getResolvers()>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.Set scan(java.lang.Class[])>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.cluster.ClusterInfo couchbaseClusterInfo()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Bucket: java.lang.String getPassword()>
<java.text.AttributeEntry: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.DefaultJSONParser: java.lang.Object parseObject(java.util.Map,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder messageConverters(java.util.Collection)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.autoconfigure.freemarker.FreeMarkerNonWebConfiguration: org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean freeMarkerConfiguration()>-><org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Set asSet()>-><java.util.LinkedHashMap$LinkedValues: java.util.Iterator iterator()>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.feed.AtomFeedHttpMessageConverter: void <init>()>
<sun.rmi.runtime.NewThreadAction: java.lang.Thread run()>-><java.lang.SecurityManager: void checkPermission(java.security.Permission)>
<org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver: void <init>()>-><org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver: java.lang.Class requiredViewClass()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.springframework.boot.autoconfigure.AutoConfigurationPackages: boolean has(org.springframework.beans.factory.BeanFactory)>-><org.springframework.boot.autoconfigure.AutoConfigurationPackages: java.util.List get(org.springframework.beans.factory.BeanFactory)>
<org.springframework.boot.validation.MessageInterpolatorFactory: void <init>()>-><java.lang.Object: void <init>()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void doValidate(org.apache.shiro.session.Session)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<freemarker.ext.beans.HashAdapter$1$1$1: int hashCode()>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<org.springframework.boot.task.TaskExecutorBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.util.Collections: java.util.Set emptySet()>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Float castToFloat(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.springframework.http.client.SimpleClientHttpRequestFactory: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.springframework.core.io.DefaultResourceLoader: org.springframework.core.io.Resource getResource(java.lang.String)>-><org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: org.springframework.core.io.Resource getResourceByPath(java.lang.String)>
<java.util.logging.StreamHandler: void configure()>-><java.util.logging.LogManager: java.util.logging.LogManager getLogManager()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool: int getSize()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determineUrl()>
<org.apache.shiro.session.mgt.ImmutableProxiedSession: void <init>(org.apache.shiro.session.Session)>-><org.apache.shiro.session.ProxiedSession: void <init>(org.apache.shiro.session.Session)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters$1: java.util.List defaultMessageConverters()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<java.rmi.server.LogStream: void write(int)>-><java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.Class)>-><org.springframework.context.support.AbstractRefreshableApplicationContext: void assertBeanFactoryActive()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor openEntityManagerInViewInterceptor()>-><org.springframework.boot.autoconfigure.orm.jpa.JpaProperties: java.lang.Boolean getOpenInView()>
<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>-><org.apache.commons.collections.FastHashMap$CollectionView: java.util.Iterator iterator()>
<java.util.concurrent.PriorityBlockingQueue: int size()>-><java.util.concurrent.locks.ReentrantLock: void lock()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.lang.String getBaselineDescription()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String detectFallbackUrl(java.lang.String)>-><java.lang.String: boolean startsWith(java.lang.String)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>-><java.lang.StringBuilder: void <init>()>
<org.apache.shiro.session.mgt.eis.MemorySessionDAO: void update(org.apache.shiro.session.Session)>-><org.apache.shiro.session.mgt.SimpleSession: java.io.Serializable getId()>
<org.elasticsearch.common.xcontent.NamedXContentRegistry$Entry: void <init>(java.lang.Class,org.elasticsearch.common.ParseField,org.elasticsearch.common.xcontent.ContextParser)>-><java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
<org.elasticsearch.client.RestClient: java.util.List hostsToNodes(org.apache.http.HttpHost[])>-><org.elasticsearch.client.Node: void <init>(org.apache.http.HttpHost)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: boolean hasNext()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties getWebMvcPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: void setThrowExceptionIfNoHandlerFound(boolean)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setGsonBuilder(com.google.gson.GsonBuilder)>
<freemarker.template.DefaultObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: org.springframework.boot.jdbc.DatabaseDriver getDatabaseDriver()>-><org.springframework.jdbc.support.JdbcUtils: java.lang.Object extractDatabaseMetaData(javax.sql.DataSource,java.lang.String)>
<org.springframework.cache.support.SimpleCacheManager: void <init>()>-><org.springframework.cache.support.AbstractCacheManager: void <init>()>
<org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration: org.springframework.jdbc.core.JdbcTemplate jdbcTemplate(javax.sql.DataSource,org.springframework.boot.autoconfigure.jdbc.JdbcProperties)>-><org.springframework.jdbc.core.JdbcTemplate: void setFetchSize(int)>
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: java.util.Set scanCandidateComponents(java.lang.String)>-><org.springframework.context.support.AbstractApplicationContext: org.springframework.core.io.Resource[] getResources(java.lang.String)>
<java.util.AbstractList: int hashCode()>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpUsingComparator(int,java.lang.Object,java.lang.Object[],java.util.Comparator)>-><org.apache.logging.log4j.util.PropertySource$Comparator: int compare(java.lang.Object,java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.joda.time.field.UnsupportedDurationField: int compareTo(java.lang.Object)>
<org.springframework.util.ReflectionUtils: java.lang.Object getField(java.lang.reflect.Field,java.lang.Object)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: java.lang.Object peek()>-><java.util.concurrent.locks.ReentrantLock: void unlock()>
<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,java.util.List)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember: int compareTo(java.lang.Object)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler build()>-><org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler: void <init>()>
<org.apache.shiro.session.mgt.SimpleSession: void validate()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow: org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory undertowServletWebServerFactory(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory: java.util.Collection getBuilderCustomizers()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.OffsetDateTime: int compareTo(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<sun.util.locale.LocaleUtils: boolean isEmpty(java.util.Set)>-><org.apache.commons.collections.FastHashMap$CollectionView: boolean isEmpty()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List extractPartConverters(org.springframework.http.converter.FormHttpMessageConverter)>-><org.springframework.util.ReflectionUtils: void makeAccessible(java.lang.reflect.Field)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration: void <init>()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><sun.rmi.runtime.Log$LoggerLog$1: java.lang.Object run()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><org.springframework.boot.context.properties.PropertyMapper$Source: void to(java.util.function.Consumer)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<org.springframework.boot.context.properties.PropertyMapper$NullPointerExceptionSafeSupplier: void <init>(java.util.function.Supplier)>-><java.lang.Object: void <init>()>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.client.support.InterceptingHttpAccessor: void <init>()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.apache.ibatis.session.SqlSessionFactory getSqlSessionFactory()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.FilterRegistrationBean: void <init>(javax.servlet.Filter,org.springframework.boot.web.servlet.ServletRegistrationBean[])>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<sun.rmi.runtime.Log$LogStreamLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.io.PrintStream: void println(java.lang.String)>
<java.io.ObjectInputStream$PeekInputStream: int read()>-><java.io.BufferedInputStream: int read()>
<java.util.TreeMap$Entry: int hashCode()>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties: void <init>()>-><java.lang.Object: void <init>()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Double castToDouble(java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<org.apache.shiro.session.mgt.SimpleSession: boolean onEquals(org.apache.shiro.session.mgt.SimpleSession)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>-><org.elasticsearch.common.ParseField: java.lang.String[] getDeprecatedNames()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.Short: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: java.lang.String getSuffix()>
<java.util.function.Predicate: java.util.function.Predicate and(java.util.function.Predicate)>-><java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setSchemas(java.util.List)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determineUsername()>-><org.springframework.boot.jdbc.EmbeddedDatabaseConnection: boolean isEmbedded(java.lang.String)>
<org.springframework.util.MimeType: void <init>(java.lang.String,java.lang.String,java.util.Map)>-><java.util.Map: void forEach(java.util.function.BiConsumer)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setRestClient(org.elasticsearch.client.RestClient)>
<org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver: void <init>()>-><org.springframework.web.servlet.view.AbstractTemplateViewResolver: void <init>()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><java.lang.Object: java.lang.Class getClass()>
<com.google.common.collect.ForwardingMap: boolean containsKey(java.lang.Object)>-><com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.Map delegate()>
<org.apache.shiro.session.SessionException: void <init>(java.lang.String)>-><org.apache.shiro.ShiroException: void <init>(java.lang.String)>
<org.elasticsearch.client.RestClientBuilder$2: java.lang.Object run()>-><org.elasticsearch.client.RestClientBuilder$2: org.apache.http.impl.nio.client.CloseableHttpAsyncClient run()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties getWebMvcPropertiesInstance()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMessageSourceProperties(org.springframework.boot.autoconfigure.context.MessageSourceProperties)>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer errorPageCustomizer(org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath)>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: javax.sql.DataSource configureDataSource(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,javax.sql.DataSource,javax.sql.DataSource)>-><org.springframework.util.StringUtils: java.lang.String collectionToDelimitedString(java.util.Collection,java.lang.String)>
<com.fasterxml.jackson.databind.util.StdDateFormat: void _format(java.util.TimeZone,java.util.Locale,java.util.Date,java.lang.StringBuffer)>-><java.util.SimpleTimeZone: int getOffset(long)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void onInvalidation(org.apache.shiro.session.Session,org.apache.shiro.session.InvalidSessionException,org.apache.shiro.session.mgt.SessionKey)>-><org.apache.shiro.web.session.HttpServletSession: java.io.Serializable getId()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDataSource(javax.sql.DataSource)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration: void <init>()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.io.ObjectStreamField: int compareTo(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: javax.mail.Session getSession()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.sql.Timestamp: int compareTo(java.lang.Object)>
<org.apache.commons.collections.FastHashMap$EntrySet: java.util.Collection get(java.util.Map)>-><java.util.HashMap: java.util.Set entrySet()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.util.Collections$UnmodifiableCollection: boolean isEmpty()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow: void <init>()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder awaitTermination(boolean)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setConcurrentMapCacheManager(org.springframework.cache.concurrent.ConcurrentMapCacheManager)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties getRestClientPropertiesInstance()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void setUsername(java.lang.String)>
<org.springframework.boot.autoconfigure.hateoas.HypermediaHttpMessageConverterConfiguration: org.springframework.boot.autoconfigure.hateoas.HypermediaHttpMessageConverterConfiguration$HalMessageConverterSupportedMediaTypesCustomizer halMessageConverterSupportedMediaTypeCustomizer()>-><org.springframework.boot.autoconfigure.hateoas.HypermediaHttpMessageConverterConfiguration$HalMessageConverterSupportedMediaTypesCustomizer: void <init>(org.springframework.boot.autoconfigure.hateoas.HypermediaHttpMessageConverterConfiguration$1)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts: java.time.Duration getConnect()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.LinkedHashMap$LinkedEntrySet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.SubList$1: java.lang.Object next()>
<java.util.TreeMap$Entry: int hashCode()>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<org.springframework.boot.autoconfigure.flyway.FlywayMigrationScriptMissingException: void <init>(java.util.List)>-><java.util.AbstractCollection: boolean isEmpty()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.fasterxml.jackson.dataformat.cbor.CBORFactory: void <init>()>-><com.fasterxml.jackson.dataformat.cbor.CBORFactory: void <init>(com.fasterxml.jackson.core.ObjectCodec)>
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void <init>(boolean,org.springframework.core.env.Environment)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration: org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter stringOrNumberMigrationVersionConverter()>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter: void <init>(org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$1)>
<com.alibaba.fastjson.serializer.SerializeFilterable: java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<com.google.common.collect.Maps$Values: void clear()>-><com.google.common.collect.ForwardingMap: void clear()>
<java.util.logging.StreamHandler: void setEncoding(java.lang.String)>-><java.util.logging.StreamHandler: void flush()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.ViewServiceConfig getViewServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints$CouchbaseService getViewservice()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<sun.rmi.runtime.Log$LoggerLog$2: java.lang.Void run()>-><java.util.logging.Logger: void setLevel(java.util.logging.Level)>
<java.util.logging.Handler: void <init>()>-><java.lang.Object: void <init>()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<org.springframework.boot.context.properties.PropertyMapper$CachingSupplier: void <init>(java.util.function.Supplier)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: void <init>()>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool: void <init>()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: void <init>()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><java.util.AbstractCollection: boolean isEmpty()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration: org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer reactiveWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigDecimal castToBigDecimal(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.apache.shiro.session.mgt.SimpleSession: boolean onEquals(org.apache.shiro.session.mgt.SimpleSession)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: java.lang.Object next()>
<freemarker.template.DefaultObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setConnectionTimeout(java.time.Duration)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.Character: int compareTo(java.lang.Object)>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>-><java.lang.String: int indexOf(java.lang.String)>
<org.apache.shiro.session.mgt.SimpleSession: boolean onEquals(org.apache.shiro.session.mgt.SimpleSession)>-><org.apache.shiro.session.mgt.SimpleSession: java.util.Date getStopTimestamp()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.Set scan(java.lang.Class[])>-><org.springframework.core.type.filter.AnnotationTypeFilter: void <init>(java.lang.Class)>
<java.util.Collections$SetFromMap: boolean add(java.lang.Object)>-><org.springframework.util.LinkedCaseInsensitiveMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTaskSchedulerBuilder(org.springframework.boot.task.TaskSchedulerBuilder)>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><org.springframework.boot.web.server.MimeMappings: void <init>(org.springframework.boot.web.server.MimeMappings)>
<java.util.Hashtable: java.lang.String toString()>-><org.elasticsearch.client.Node: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties getRestClientPropertiesInstance()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void setConnectionTimeout(java.time.Duration)>
<org.springframework.boot.web.servlet.ServletRegistrationBean: void <init>(javax.servlet.Servlet,boolean,java.lang.String[])>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: org.springframework.cache.Cache createConcurrentMapCache(java.lang.String)>-><org.springframework.cache.concurrent.ConcurrentMapCacheManager: boolean isStoreByValue()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setGsonAutoConfiguration$StandardGsonBuilderCustomizer(org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer)>
<org.springframework.core.DecoratingClassLoader: boolean isExcluded(java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap$KeySetIterator: java.lang.Object next()>
<org.springframework.jmx.export.MBeanExporter: void setAutodetectMode(int)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setOrder(int)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.web.servlet.error.DefaultErrorAttributes errorAttributes()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter: void <init>(org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$1)>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter: void <init>()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><freemarker.ext.beans.CollectionAdapter$1: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setUrl(java.lang.String)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.ProcessEnvironment$Variable: int compareTo(java.lang.Object)>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$1: javax.management.MBeanServer getMBeanServer()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.http.HttpHeaders: java.lang.String toString()>
<org.slf4j.helpers.SubstituteLogger: void trace(java.lang.String,java.lang.Object)>-><org.slf4j.helpers.SubstituteLogger: void trace(java.lang.String,java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: boolean remove(java.lang.Object)>-><java.util.concurrent.PriorityBlockingQueue: void removeAt(int)>
<org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration: org.springframework.web.server.adapter.ForwardedHeaderTransformer forwardedHeaderTransformer()>-><org.springframework.web.server.adapter.ForwardedHeaderTransformer: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSessionsSecurityManager(org.apache.shiro.mgt.SessionsSecurityManager)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration: org.springframework.boot.web.servlet.FilterRegistrationBean forwardedHeaderFilter()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><sun.rmi.runtime.NewThreadAction$2: java.lang.Object run()>
<org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<sun.rmi.runtime.NewThreadAction$1: java.lang.ThreadGroup run()>-><java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<java.rmi.server.LogStream: void write(int)>-><java.io.PrintStream: void write(int)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.lang.String getLicenseKey()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.SubList: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration: org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean dispatcherServletRegistration(org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean: void <init>(org.springframework.web.servlet.DispatcherServlet,java.lang.String)>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder jwtDecoderByPublicKeyValue()>-><org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder: org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder$PublicKeyReactiveJwtDecoderBuilder withPublicKey(java.security.interfaces.RSAPublicKey)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setUndoSqlMigrationPrefix(java.lang.String)>
<java.net.URLConnection: long getHeaderFieldDate(java.lang.String,long)>-><java.util.Date: long parse(java.lang.String)>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform: org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform get()>-><java.lang.Class: java.lang.ClassLoader getClassLoader()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: boolean isAllowRequestOverride()>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDispatcherServletRegistrationBean(org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean)>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isIgnoreIgnoredMigrations()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isIgnoreIgnoredMigrations()>
<org.apache.shiro.spring.config.ShiroBeanConfiguration: org.apache.shiro.spring.LifecycleBeanPostProcessor lifecycleBeanPostProcessor()>-><org.apache.shiro.spring.config.AbstractShiroBeanConfiguration: org.apache.shiro.spring.LifecycleBeanPostProcessor lifecycleBeanPostProcessor()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown getShutdown()>
<org.springframework.boot.autoconfigure.mongo.MongoProperties: java.lang.String getMongoClientDatabase()>-><com.mongodb.MongoClientURI: void <init>(java.lang.String)>
<org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>-><org.elasticsearch.common.ParseField: java.lang.String getPreferredName()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor persistenceExceptionTranslationPostProcessor(org.springframework.core.env.Environment)>
<org.springframework.boot.autoconfigure.flyway.FlywayProperties: void <init>()>-><java.util.Collections: java.util.Set singleton(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.config.ShiroConfig: org.apache.shiro.web.filter.authc.FormAuthenticationFilter formAuthenticationFilter()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Double castToDouble(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<java.util.concurrent.ConcurrentMap: void forEach(java.util.function.BiConsumer)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.io.ObjectStreamField: int compareTo(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><freemarker.ext.beans.CollectionAdapter: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean equals(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.util.UUID: int compareTo(java.lang.Object)>
<org.elasticsearch.client.RestClient: void setNodes(java.util.Collection)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.springframework.core.io.support.EncodedResource: java.io.InputStream getInputStream()>-><org.springframework.core.io.ClassPathResource: java.io.InputStream getInputStream()>
<org.apache.shiro.spring.config.AbstractShiroBeanConfiguration: org.apache.shiro.spring.ShiroEventBusBeanPostProcessor shiroEventBusAwareBeanPostProcessor()>-><org.apache.shiro.spring.ShiroEventBusBeanPostProcessor: void <init>(org.apache.shiro.event.EventBus)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<org.apache.shiro.session.mgt.SimpleSession: void validate()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determineDriverClassName()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<co.yiiu.pybbs.util.bcrypt.BCryptPasswordEncoder: boolean matches(java.lang.CharSequence,java.lang.String)>-><java.lang.String: int length()>
<org.springframework.web.filter.CharacterEncodingFilter: void <init>()>-><org.springframework.web.filter.OncePerRequestFilter: void <init>()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Float castToFloat(java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: javax.sql.DataSource configureDataSource(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,javax.sql.DataSource,javax.sql.DataSource)>-><org.flywaydb.core.api.configuration.FluentConfiguration: javax.sql.DataSource getDataSource()>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties: java.lang.String[] getTemplateLoaderPath()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><java.util.ArrayList: void <init>()>
<org.springframework.boot.web.servlet.ServletRegistrationBean: void addUrlMappings(java.lang.String[])>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.util.concurrent.ThreadPoolExecutor: java.util.List drainQueue()>-><java.util.concurrent.PriorityBlockingQueue: boolean remove(java.lang.Object)>
<com.alibaba.fastjson.parser.DefaultJSONParser: java.lang.Object parseObject(java.util.Map,java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.AbstractCachingViewResolver: void setCache(boolean)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration: void <init>()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Float castToFloat(java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.String getTable()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.String getTable()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.GsonHttpMessageConverter: void <init>()>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder: void <init>(org.springframework.orm.jpa.JpaVendorAdapter,java.util.Map,org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager,java.net.URL)>-><java.util.LinkedHashMap: void <init>(java.util.Map)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.util.Calendar: int compareTo(java.lang.Object)>
<synthetic.method.ShiroFilterChainDefinitionImpl: void <init>()>-><java.lang.Object: void <init>()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration: org.springframework.web.servlet.DispatcherServlet dispatcherServlet(org.springframework.boot.autoconfigure.http.HttpProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties)>-><org.springframework.web.servlet.FrameworkServlet: void setPublishEvents(boolean)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.flywaydb.core.api.Location: int compareTo(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration: org.springframework.cache.support.SimpleCacheManager cacheManager(org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers,java.util.Collection)>
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.String,java.lang.Object[])>-><org.springframework.context.support.AbstractRefreshableApplicationContext: void assertBeanFactoryActive()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper alwaysApplyingWhenNonNull()>
<org.springframework.boot.web.servlet.ServletRegistrationBean: void addUrlMappings(java.lang.String[])>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source whenHasText()>-><org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source when(java.util.function.Predicate)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void onInvalidation(org.apache.shiro.session.Session,org.apache.shiro.session.InvalidSessionException,org.apache.shiro.session.mgt.SessionKey)>-><org.slf4j.helpers.SubstituteLogger: void trace(java.lang.String,java.lang.Object)>
<sun.rmi.runtime.RuntimeUtil$1: java.lang.Thread newThread(java.lang.Runnable)>-><java.lang.StringBuilder: void <init>()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter: void <init>()>-><java.lang.Object: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: boolean hasNext()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.jdbc.DataSourceBuilder: org.springframework.boot.jdbc.DataSourceBuilder username(java.lang.String)>
<java.util.concurrent.PriorityBlockingQueue: java.lang.Object[] toArray(java.lang.Object[])>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>-><java.nio.charset.Charset: java.lang.String name()>
<org.apache.shiro.session.mgt.SimpleSession: void validate()>-><ch.qos.logback.classic.Logger: boolean isTraceEnabled()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Object castToJavaBean(java.util.Map,java.lang.Class,com.alibaba.fastjson.parser.ParserConfig)>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<org.springframework.boot.web.server.MimeMappings: void <init>(org.springframework.boot.web.server.MimeMappings)>-><org.springframework.boot.web.server.MimeMappings: void <init>(org.springframework.boot.web.server.MimeMappings,boolean)>
<com.alibaba.fastjson.JSONPath$FilterSegment: java.lang.Object eval(com.alibaba.fastjson.JSONPath,java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.util.Iterator iterator()>
<org.springframework.http.HttpHeaders: java.lang.String formatHeaders(org.springframework.util.MultiValueMap)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<org.springframework.boot.task.TaskSchedulerBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.lang.Object: java.lang.Class getClass()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration: void <init>()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties getWebMvcPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: void setStaticPathPattern(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setShiroEventBusBeanPostProcessor(org.apache.shiro.spring.ShiroEventBusBeanPostProcessor)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setConfiguration(freemarker.template.Configuration)>
<org.springframework.boot.context.properties.PropertyMapper$Source: void to(java.util.function.Consumer)>-><org.springframework.boot.context.properties.PropertyMapper$CachingSupplier: java.lang.Object get()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter mappingJackson2HttpMessageConverter(com.fasterxml.jackson.databind.ObjectMapper)>
<org.springframework.http.converter.ResourceHttpMessageConverter: void <init>(boolean)>-><org.springframework.http.converter.AbstractHttpMessageConverter: void <init>(org.springframework.http.MediaType)>
<java.util.TreeMap$Entry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSessionManager(org.apache.shiro.session.mgt.SessionManager)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.OffsetTime: int compareTo(java.lang.Object)>
<org.apache.shiro.session.mgt.SimpleSession: void validate()>-><org.slf4j.helpers.SubstituteLogger: boolean isTraceEnabled()>
<org.springframework.boot.autoconfigure.flyway.FlywayProperties: void <init>()>-><java.util.ArrayList: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void onInvalidation(org.apache.shiro.session.Session,org.apache.shiro.session.InvalidSessionException,org.apache.shiro.session.mgt.SessionKey)>-><org.apache.shiro.session.mgt.DelegatingSession: java.io.Serializable getId()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory: void <init>()>-><java.util.LinkedHashSet: void <init>()>
<sun.rmi.runtime.Log: java.lang.String[] getSource()>-><java.lang.Exception: void <init>()>
<org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.api.configuration.FluentConfiguration javaMigrations(org.flywaydb.core.api.migration.JavaMigration[])>-><java.lang.Error: void <init>(java.lang.String)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>-><java.util.ArrayList$Itr: void remove()>
<com.google.common.collect.Maps$Values: boolean contains(java.lang.Object)>-><com.google.common.collect.ForwardingMap: boolean containsValue(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration: org.springframework.jdbc.datasource.DataSourceTransactionManager transactionManager(javax.sql.DataSource,org.springframework.beans.factory.ObjectProvider)>
<sun.rmi.runtime.RuntimeUtil$1: java.lang.Thread newThread(java.lang.Runnable)>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: java.lang.Object[] toArray(java.lang.Object[])>-><java.util.concurrent.locks.ReentrantLock: void lock()>
<sun.rmi.runtime.Log$LogStreamLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration: org.springframework.data.mongodb.core.MongoDbFactorySupport mongoDbFactory(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.boot.autoconfigure.mongo.MongoProperties)>-><org.springframework.data.mongodb.core.SimpleMongoDbFactory: void <init>(com.mongodb.MongoClient,java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.cache.CacheProperties getCachePropertiesInstance()>-><org.springframework.boot.autoconfigure.cache.CacheProperties: void setType(org.springframework.boot.autoconfigure.cache.CacheType)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determinePassword()>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<co.yiiu.pybbs.util.MyPage: void <init>()>-><java.util.Collections: java.util.List emptyList()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setPlatform(java.lang.String)>
<org.springframework.web.servlet.view.AbstractTemplateViewResolver: void <init>()>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void <init>()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determinePassword()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.elasticsearch.client.Node: int hashCode()>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getProvidedNamedXContents()>-><java.util.ServiceLoader: java.util.Iterator iterator()>
<org.springframework.boot.web.server.MimeMappings: void <init>(org.springframework.boot.web.server.MimeMappings,boolean)>-><java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setClusterInfo(com.couchbase.client.java.cluster.ClusterInfo)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration: org.springframework.cache.concurrent.ConcurrentMapCacheManager cacheManager(org.springframework.boot.autoconfigure.cache.CacheProperties,org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers)>-><org.springframework.boot.autoconfigure.cache.CacheProperties: java.util.List getCacheNames()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.nio.ByteBuffer: int compareTo(java.lang.Object)>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.boot.autoconfigure.freemarker.FreeMarkerNonWebConfiguration: org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean freeMarkerConfiguration()>-><org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getDefaultNamedXContents()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder queueCapacity(int)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<java.io.ObjectOutputStream$BlockDataOutputStream: void write(byte[],int,int,boolean)>-><java.io.BufferedOutputStream: void write(byte[],int,int)>
<org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration: org.springframework.http.converter.StringHttpMessageConverter stringHttpMessageConverter(org.springframework.boot.autoconfigure.http.HttpProperties)>-><org.springframework.boot.autoconfigure.http.HttpProperties$Encoding: java.nio.charset.Charset getCharset()>
<javax.el.BeanELResolver$SoftConcurrentHashMap: javax.el.BeanELResolver$BeanProperties get(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder cbor()>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder$CborFactoryInitializer: void <init>(org.springframework.http.converter.json.Jackson2ObjectMapperBuilder$1)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.Set scan(java.lang.Class[])>-><org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: java.util.Set findCandidateComponents(java.lang.String)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: java.util.Iterator iterator()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigInteger castToBigInteger(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.util.HashMap: void <init>()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.jmx.support.MBeanRegistrationSupport: void setServer(javax.management.MBeanServer)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder maxPoolSize(int)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.http.HttpProperties getHttpPropertiesInstance()>-><org.springframework.boot.autoconfigure.http.HttpProperties: void <init>()>
<org.apache.shiro.session.mgt.DefaultSessionManager: void afterExpired(org.apache.shiro.session.Session)>-><org.apache.shiro.session.mgt.DefaultSessionManager: void delete(org.apache.shiro.session.Session)>
<org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler: void run()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setPlaceholderReplacement(boolean)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.springframework.core.Constants: java.util.Set getValues(java.lang.String)>-><java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController basicErrorController(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.boot.autoconfigure.web.ErrorProperties,java.util.List)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setXa(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.WeakHashMap$KeySet: java.util.Iterator iterator()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void extendMessageConverters(java.util.List)>
<org.apache.shiro.session.mgt.DefaultSessionManager: java.util.Collection getActiveSessions()>-><java.util.Collections: java.util.Set emptySet()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.String getInitSql()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.String getInitSql()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><freemarker.ext.beans.OverloadedNumberUtil$NumberWithFallbackType: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object next()>
<org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: java.lang.Object next()>-><java.util.ConcurrentModificationException: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$1: java.lang.Object next()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.util.Properties detectPropsForUrl(java.lang.String)>-><java.lang.String: boolean startsWith(java.lang.String)>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder jwtDecoderByPublicKeyValue()>-><java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow: org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory undertowServletWebServerFactory(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory: void <init>()>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void checkLocationExists(javax.sql.DataSource,org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.core.io.ResourceLoader)>-><org.springframework.boot.autoconfigure.flyway.FlywayMigrationScriptMissingException: void <init>(java.util.List)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDataSourcePoolMetadataProvider(org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(boolean,java.util.Collection)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List postProcessConverters(java.util.List)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><java.rmi.server.LogStream: java.lang.String toString()>
<java.util.EnumMap$Values: boolean remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.gson.GsonProperties getGsonPropertiesInstance()>-><org.springframework.boot.autoconfigure.gson.GsonProperties: void setEnableComplexMapKeySerialization(java.lang.Boolean)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<java.util.LinkedList: boolean remove(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.elasticsearch.client.RestClient: java.util.List hostsToNodes(org.apache.http.HttpHost[])>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: java.lang.Object next()>
<sun.rmi.runtime.Log$LogStreamLog: java.lang.String unqualifiedName(java.lang.String)>-><java.lang.String: int lastIndexOf(java.lang.String)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown: boolean isAwaitTermination()>
<sun.rmi.runtime.Log: java.lang.String[] access$200()>-><sun.rmi.runtime.Log: java.lang.String[] getSource()>
<org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor: void <init>()>-><org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor: void <init>()>
<org.elasticsearch.client.Node: void <init>(org.apache.http.HttpHost)>-><org.elasticsearch.client.Node: void <init>(org.apache.http.HttpHost,java.util.Set,java.lang.String,java.lang.String,org.elasticsearch.client.Node$Roles,java.util.Map)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadSource(org.springframework.core.io.Resource,java.nio.charset.Charset)>-><org.springframework.core.io.support.PropertiesLoaderUtils: java.util.Properties loadProperties(org.springframework.core.io.Resource)>
<sun.rmi.runtime.Log$LoggerLog$2: java.lang.Object run()>-><sun.rmi.runtime.Log$LoggerLog$2: java.lang.Void run()>
<org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$UndertowWebServerFactoryCustomizerConfiguration: org.springframework.boot.autoconfigure.web.embedded.UndertowWebServerFactoryCustomizer undertowWebServerFactoryCustomizer(org.springframework.core.env.Environment,org.springframework.boot.autoconfigure.web.ServerProperties)>-><org.springframework.boot.autoconfigure.web.embedded.UndertowWebServerFactoryCustomizer: void <init>(org.springframework.core.env.Environment,org.springframework.boot.autoconfigure.web.ServerProperties)>
<org.springframework.boot.autoconfigure.web.ServerProperties: void setUseForwardHeaders(java.lang.Boolean)>-><java.lang.Boolean: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTomcatReactiveWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.reactive.TomcatReactiveWebServerFactoryCustomizer)>
<org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter: void <init>()>-><org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><ch.qos.logback.classic.Logger: boolean isInfoEnabled()>
<sun.rmi.runtime.RuntimeUtil$1: java.lang.Thread newThread(java.lang.Runnable)>-><java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><freemarker.ext.beans.CollectionAdapter$1: boolean hasNext()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.LocalTime: int compareTo(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.flywaydb.core.internal.resource.filesystem.FileSystemResource: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: org.elasticsearch.client.RestClientBuilder elasticsearchRestClientBuilder(org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source whenHasText()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setSchemaPassword(java.lang.String)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.apache.shiro.session.mgt.SimpleSession: boolean onEquals(org.apache.shiro.session.mgt.SimpleSession)>-><org.apache.shiro.session.mgt.SimpleSession: long getTimeout()>
<org.springframework.boot.web.server.MimeMappings: void <init>(org.springframework.boot.web.server.MimeMappings,boolean)>-><java.lang.Object: void <init>()>
<org.apache.http.impl.nio.client.CloseableHttpAsyncClientBase: void <init>(org.apache.http.nio.conn.NHttpClientConnectionManager,java.util.concurrent.ThreadFactory,org.apache.http.nio.NHttpClientEventHandler)>-><sun.rmi.runtime.RuntimeUtil$1: java.lang.Thread newThread(java.lang.Runnable)>
<org.springframework.cache.support.NoOpCacheManager: void <init>()>-><java.lang.Object: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMongoMappingContext(org.springframework.data.mongodb.core.mapping.MongoMappingContext)>
<sun.rmi.runtime.Log$InternalStreamHandler: void <init>(java.io.OutputStream)>-><java.util.logging.SimpleFormatter: void <init>()>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isCleanOnValidationError()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isCleanOnValidationError()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setRepeatableSqlMigrationPrefix(java.lang.String)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.Double: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Vector$Itr: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder customizers(java.lang.Iterable)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.web.servlet.support.ErrorPageFilter: void <init>()>-><org.springframework.boot.web.servlet.support.ErrorPageFilter$1: void <init>(org.springframework.boot.web.servlet.support.ErrorPageFilter)>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>-><org.springframework.util.MimeType: java.nio.charset.Charset getCharset()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setInstalledBy(java.lang.String)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>
<java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection,int)>-><java.util.concurrent.PriorityBlockingQueue: java.lang.Object dequeue()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void configurePartConverters(org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter,java.util.Collection)>-><org.springframework.http.converter.FormHttpMessageConverter: void setPartConverters(java.util.List)>
<sun.text.normalizer.UCharacterProperty: sun.text.normalizer.UCharacterProperty getInstance()>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration: org.springframework.boot.autoconfigure.http.HttpMessageConverters messageConverters(org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(java.util.Collection)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<com.google.common.collect.ForwardingMap: java.util.Set keySet()>-><com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.Map delegate()>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void <init>()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.lang.StringBuilder: void <init>()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration: void <init>()>
<org.springframework.core.SerializableTypeWrapper$MethodInvokeTypeProvider: java.lang.reflect.Type getType()>-><org.springframework.util.ReflectionUtils: java.lang.Object invokeMethod(java.lang.reflect.Method,java.lang.Object)>
<org.elasticsearch.client.IngestClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setFieldNamingStrategy(java.lang.Class)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.Enum: int compareTo(java.lang.Object)>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.util.Collections$SynchronizedCollection: boolean isEmpty()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.google.common.collect.ForwardingMap: int size()>-><com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.Map delegate()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.web.multipart.MultipartResolver getMultipartResolver()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration: org.springframework.data.mongodb.core.convert.MongoCustomConversions mongoCustomConversions()>-><org.springframework.data.mongodb.core.convert.MongoCustomConversions: void <init>(java.util.List)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.ViewServiceConfig getViewServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints$CouchbaseService: int getMinEndpoints()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadSource(org.springframework.core.io.Resource,java.nio.charset.Charset)>-><org.springframework.core.io.support.PropertiesLoaderUtils: java.util.Properties loadProperties(org.springframework.core.io.support.EncodedResource)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setUser(java.lang.String)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: int getConnectRetries()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isCleanDisabled()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isCleanDisabled()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper get()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: int compareTo(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>-><java.util.Collections$EmptySet: java.lang.Object[] toArray()>
<com.google.common.collect.Maps$Values: int size()>-><com.google.common.collect.ForwardingMap: int size()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder jacksonObjectMapperBuilder(org.springframework.context.ApplicationContext,java.util.List)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.IdentityHashMap$EntrySet: java.util.Iterator iterator()>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.apache.http.client.config.RequestConfig$Builder: org.apache.http.client.config.RequestConfig$Builder setConnectTimeout(int)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.QueryServiceConfig getQueryServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints$CouchbaseService: int getMinEndpoints()>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.MethodValidationPostProcessor methodValidationPostProcessor(org.springframework.core.env.Environment,javax.validation.Validator)>-><org.springframework.validation.beanvalidation.MethodValidationPostProcessor: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMappingJackson2HttpMessageConverter(org.springframework.http.converter.json.MappingJackson2HttpMessageConverter)>
<org.elasticsearch.client.RestClient: void setNodes(java.util.Collection)>-><java.util.ArrayList: void <init>(java.util.Collection)>
<org.flywaydb.core.internal.jdbc.DriverDataSource: void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Properties)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCookie(org.apache.shiro.web.servlet.Cookie)>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: void <init>(javax.sql.DataSource,org.springframework.boot.autoconfigure.orm.jpa.JpaProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.orm.jpa.JpaProperties: void <init>()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.util.List getSqlMigrationSuffixes()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: org.elasticsearch.client.RestClientBuilder elasticsearchRestClientBuilder(org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: java.util.List getUris()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder messageConverters(java.util.Collection)>-><org.springframework.boot.web.client.RestTemplateBuilder: java.util.Set copiedSetOf(java.util.Collection)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer flywayInitializer(org.flywaydb.core.Flyway,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer: void <init>(org.flywaydb.core.Flyway,org.springframework.boot.autoconfigure.flyway.FlywayMigrationStrategy)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setGitProperties(org.springframework.boot.info.GitProperties)>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties: java.util.Map getSettings()>
<org.apache.shiro.session.ExpiredSessionException: void <init>(java.lang.String)>-><org.apache.shiro.session.StoppedSessionException: void <init>(java.lang.String)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.Duration: int compareTo(java.lang.Object)>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String getHost()>
<org.springframework.core.DecoratingClassLoader: boolean isExcluded(java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap$EntryIterator: boolean hasNext()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.boot.autoconfigure.web.ErrorProperties,java.util.List)>-><org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,java.util.List)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<org.apache.shiro.session.mgt.SimpleSession: boolean isTimedOut()>-><org.apache.shiro.session.mgt.SimpleSession: java.util.Date getLastAccessTime()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.util.Properties detectPropsForUrl(java.lang.String)>-><java.util.Properties: void <init>()>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: void connect()>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: void connect()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: boolean hasNext()>
<org.apache.shiro.session.mgt.SimpleSession: void validate()>-><java.text.DateFormat: java.text.DateFormat getInstance()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.util.Assert: void isInstanceOf(java.lang.Class,java.lang.Object,java.lang.String)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder allowCoreThreadTimeOut(boolean)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.ViewServiceConfig getViewServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><com.couchbase.client.core.env.ViewServiceConfig: com.couchbase.client.core.env.ViewServiceConfig create(int,int)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<org.springframework.context.support.AbstractApplicationContext: org.springframework.beans.factory.ObjectProvider getBeanProvider(org.springframework.core.ResolvableType)>-><org.springframework.context.support.AbstractRefreshableApplicationContext: void assertBeanFactoryActive()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.web.filter.ForwardedHeaderFilter: void <init>()>-><org.springframework.web.util.UrlPathHelper: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration: org.springframework.web.servlet.view.BeanNameViewResolver beanNameViewResolver()>-><org.springframework.web.servlet.view.BeanNameViewResolver: void setOrder(int)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source asInt(java.util.function.Function)>-><org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source as(java.util.function.Function)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.logging.ErrorManager: void error(java.lang.String,java.lang.Exception,int)>-><java.lang.StringBuilder: void <init>()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.ReactiveJwtDecoder jwtDecoder()>-><org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder: void <init>(java.lang.String)>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: org.elasticsearch.client.RestClientBuilder elasticsearchRestClientBuilder(org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper get()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<java.util.AbstractList: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void onInvalidation(org.apache.shiro.session.Session,org.apache.shiro.session.InvalidSessionException,org.apache.shiro.session.mgt.SessionKey)>-><org.apache.shiro.session.mgt.AbstractNativeSessionManager: void notifyStop(org.apache.shiro.session.Session)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigInteger castToBigInteger(java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer tomcatServletWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>-><org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isOutOfOrder()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isOutOfOrder()>
<org.springframework.web.util.NestedServletException: java.lang.String getMessage()>-><org.springframework.core.NestedExceptionUtils: java.lang.String buildMessage(java.lang.String,java.lang.Throwable)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.util.AbstractCollection: boolean isEmpty()>
<org.elasticsearch.common.ParseField: void <init>(java.lang.String,java.lang.String[])>-><java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>
<org.apache.shiro.session.mgt.eis.MemorySessionDAO: void delete(org.apache.shiro.session.Session)>-><org.apache.shiro.session.mgt.DelegatingSession: java.io.Serializable getId()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties getWebMvcPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: void setDispatchOptionsRequest(boolean)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpProperties$Encoding: boolean shouldForce(org.springframework.boot.autoconfigure.http.HttpProperties$Encoding$Type)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setPropertySourcesPlaceholderConfigurer(org.springframework.context.support.PropertySourcesPlaceholderConfigurer)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.GitProperties gitProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git: org.springframework.core.io.Resource getLocation()>
<javax.crypto.Cipher: void chooseFirstProvider()>-><sun.security.jca.ProviderList$ServiceList$1: java.lang.Object next()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFreeMarkerConfigurationFactoryBean(org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.QueryServiceConfig getQueryServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints$CouchbaseService: int getMaxEndpoints()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<org.apache.shiro.session.mgt.DefaultSessionManager: void afterStopped(org.apache.shiro.session.Session)>-><org.apache.shiro.session.mgt.DefaultSessionManager: boolean isDeleteInvalidSessions()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.lang.Boolean getOracleSqlplus()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.boot.autoconfigure.mail.MailProperties,org.springframework.mail.javamail.JavaMailSenderImpl)>-><java.util.HashMap: boolean isEmpty()>
<org.apache.shiro.session.mgt.SimpleSession: boolean isTimedOut()>-><org.slf4j.helpers.NOPLogger: boolean isTraceEnabled()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.Character: int compareTo(java.lang.Object)>
<org.springframework.boot.info.InfoProperties: java.util.Properties copy(java.util.Properties)>-><java.util.Hashtable: void putAll(java.util.Map)>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: java.util.Date getLastAccessTime()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setSqlScriptEncoding(java.nio.charset.Charset)>
<com.google.common.collect.ForwardingMap: java.util.Set entrySet()>-><com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.Map delegate()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl: java.lang.String getKeyStore()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.ResourceHttpMessageConverter: void <init>()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: int compareTo(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.nio.ByteBuffer: int compareTo(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.web.servlet.support.ErrorPageFilterConfiguration: org.springframework.boot.web.servlet.support.ErrorPageFilter errorPageFilter()>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter: void <init>()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.ViewServiceConfig getViewServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints$CouchbaseService: int getMaxEndpoints()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<ch.qos.logback.classic.spi.ThrowableProxy: void <init>(java.lang.Throwable)>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.Set scan(java.lang.Class[])>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<java.text.DateFormat: java.text.DateFormat getInstance()>-><java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>
<com.google.common.collect.Maps$Values: boolean remove(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: void <init>(org.springframework.core.io.Resource)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><java.util.HashSet: boolean isEmpty()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.ShiroFilterChainDefinitionImpl: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.apache.logging.log4j.Level: int compareTo(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration: com.fasterxml.jackson.databind.ObjectMapper jacksonObjectMapper(org.springframework.http.converter.json.Jackson2ObjectMapperBuilder)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: com.fasterxml.jackson.databind.ObjectMapper build()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.rmi.server.LogStream: java.lang.String toString()>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: java.util.Date getStartTimestamp()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setTable(java.lang.String)>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration: org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer standardJacksonObjectMapperBuilderCustomizer(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.jackson.JacksonProperties)>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.jackson.JacksonProperties)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setSqlMigrationPrefix(java.lang.String)>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getDefaultNamedXContents()>-><java.util.HashMap: void <init>()>
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void addIncludeFilter(org.springframework.core.type.filter.TypeFilter)>-><java.util.LinkedList: boolean add(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor applicationTaskExecutor(org.springframework.boot.task.TaskExecutorBuilder)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor build()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerNonWebConfiguration: org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean freeMarkerConfiguration()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String detectDriverForUrl(java.lang.String)>-><org.flywaydb.core.internal.util.FeatureDetector: boolean isAndroidAvailable()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.lang.Object)>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>-><org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler: void <init>(org.springframework.jmx.export.metadata.JmxAttributeSource)>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><org.springframework.ui.freemarker.FreeMarkerConfigurationFactory: void setFreemarkerSettings(java.util.Properties)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setIgnoreMissingMigrations(boolean)>
<com.google.common.collect.Maps$Values: java.util.Iterator iterator()>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: java.util.Iterator iterator()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection,int)>-><java.lang.Math: int min(int,int)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><org.slf4j.helpers.NOPLogger: boolean isInfoEnabled()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.AbstractMap$1$1: boolean hasNext()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.AbstractMap$2$1: java.lang.Object next()>
<org.apache.shiro.session.mgt.eis.MemorySessionDAO: void update(org.apache.shiro.session.Session)>-><org.apache.shiro.web.session.HttpServletSession: java.io.Serializable getId()>
<sun.rmi.runtime.RuntimeUtil$1: java.lang.Thread newThread(java.lang.Runnable)>-><sun.rmi.runtime.Log$LogStreamLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>
<org.springframework.util.DefaultPropertiesPersister: void loadFromXml(java.util.Properties,java.io.InputStream)>-><java.util.Properties: void loadFromXML(java.io.InputStream)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFlyway(org.flywaydb.core.Flyway)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback(java.lang.String)>-><org.springframework.util.ClassUtils: java.lang.Class resolveClassName(java.lang.String,java.lang.ClassLoader)>
<org.springframework.http.HttpHeaders: java.lang.String toString()>-><org.springframework.http.HttpHeaders: java.lang.String formatHeaders(org.springframework.util.MultiValueMap)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<javax.crypto.Cipher: void chooseProvider(int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>-><java.security.Provider$Service: java.lang.Object newInstance(java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<com.alibaba.fastjson.serializer.SerializeFilterable: java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: boolean isGroup()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.EnumMap: int entryHashCode(int)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<com.google.common.collect.Maps$Values: void forEach(java.util.function.Consumer)>-><java.util.concurrent.ConcurrentMap: void forEach(java.util.function.BiConsumer)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController basicErrorController(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.beans.factory.ObjectProvider)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.ArrayList: java.util.Iterator iterator()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setValidateOnMigrate(boolean)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration: org.springframework.boot.autoconfigure.http.HttpMessageConverters messageConverters(org.springframework.beans.factory.ObjectProvider)>
<com.alibaba.fastjson.parser.DefaultJSONParser: java.lang.Object parseObject(java.util.Map,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.util.DefaultPropertiesPersister: void load(java.util.Properties,java.io.InputStream)>
<org.flywaydb.core.internal.jdbc.DriverDataSource: void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Properties)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: void <init>(org.springframework.jdbc.core.JdbcOperations)>-><org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate$1: void <init>(org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate,int,float,boolean)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setTarget(java.lang.String)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: java.util.List sortErrorViewResolvers(java.util.List)>-><java.util.ArrayList: void <init>()>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClientBuilder)>-><org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClientBuilder,java.util.List)>
<org.springframework.boot.context.properties.PropertyMapper$Source: void <init>(java.util.function.Supplier,java.util.function.Predicate)>-><java.lang.Object: void <init>()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet: java.util.Iterator iterator()>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getProvidedNamedXContents()>-><java.util.ServiceLoader$1: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTransactionTemplate(org.springframework.transaction.support.TransactionTemplate)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.apache.poi.hssf.record.common.UnicodeString: int compareTo(java.lang.Object)>
<javax.crypto.Cipher: void chooseProvider(int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>-><java.security.Provider$Service: java.security.Provider getProvider()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>-><org.springframework.web.filter.CharacterEncodingFilter: void setForceRequestEncoding(boolean)>
<org.elasticsearch.client.RestClient: void <init>(org.apache.http.impl.nio.client.CloseableHttpAsyncClient,long,org.apache.http.Header[],java.util.List,java.lang.String,org.elasticsearch.client.RestClient$FailureListener,org.elasticsearch.client.NodeSelector,boolean)>-><org.elasticsearch.client.RestClient: void setNodes(java.util.Collection)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.lang.Object next()>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Set asSet()>-><java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.QueryServiceConfig getQueryServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><freemarker.ext.beans.HashAdapter$1$1: java.lang.Object next()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDispatcherServlet(org.springframework.web.servlet.DispatcherServlet)>
<org.elasticsearch.common.ParseField: void <init>(java.lang.String,java.lang.String[])>-><java.util.HashSet: int size()>
<org.apache.shiro.session.StoppedSessionException: void <init>(java.lang.String)>-><org.apache.shiro.session.InvalidSessionException: void <init>(java.lang.String)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration: org.springframework.transaction.jta.JtaTransactionManager transactionManager(org.springframework.beans.factory.ObjectProvider)>-><org.springframework.transaction.config.JtaTransactionManagerFactoryBean: void <init>()>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback()>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: void <init>(javax.sql.DataSource,org.springframework.boot.autoconfigure.orm.jpa.JpaProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$1: java.lang.Object getIfAvailable()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><java.util.Collections: java.util.Map emptyMap()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Double castToDouble(java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties getWebMvcPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: void setLocale(java.util.Locale)>
<java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>-><java.util.logging.StreamHandler: void flushAndClose()>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.mongo.MongoProperties: java.lang.String getMongoClientDatabase()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: java.lang.String determineUri()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder awaitTermination(boolean)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.task.TaskExecutorBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.context.support.PropertySourcesPlaceholderConfigurer: void <init>()>-><org.springframework.beans.factory.config.PlaceholderConfigurerSupport: void <init>()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.springframework.boot.web.server.MimeMappings: void <init>(org.springframework.boot.web.server.MimeMappings,boolean)>-><java.util.LinkedHashMap: void <init>(java.util.Map)>
<java.util.EnumMap: int entryHashCode(int)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList: void <init>(java.util.Collection)>
<org.apache.shiro.session.mgt.AbstractNativeSessionManager: void notifyExpiration(org.apache.shiro.session.Session)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String detectDriverForUrl(java.lang.String)>-><java.lang.String: boolean startsWith(java.lang.String)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Set asSet()>-><java.util.HashSet: boolean isEmpty()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback()>-><org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback(java.lang.String)>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>-><java.lang.String: java.lang.String substring(int)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<com.google.common.collect.ForwardingMap: java.util.Set entrySet()>-><java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration: org.springframework.web.servlet.DispatcherServlet dispatcherServlet(org.springframework.boot.autoconfigure.http.HttpProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties)>-><org.springframework.web.servlet.DispatcherServlet: void setThrowExceptionIfNoHandlerFound(boolean)>
<javax.crypto.Cipher: void chooseFirstProvider()>-><java.security.Provider$Service: java.lang.Object newInstance(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries: java.util.Iterator iterator()>
<org.elasticsearch.client.RestClientBuilder: void <init>(java.util.List)>-><java.util.ArrayList: boolean isEmpty()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: boolean isReplacement(org.springframework.http.converter.HttpMessageConverter,org.springframework.http.converter.HttpMessageConverter)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.boot.web.servlet.ServletRegistrationBean: void addUrlMappings(java.lang.String[])>-><java.util.AbstractCollection: boolean addAll(java.util.Collection)>
<org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration: org.springframework.cache.support.SimpleCacheManager cacheManager(org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers,java.util.Collection)>-><org.springframework.cache.support.SimpleCacheManager: void setCaches(java.util.Collection)>
<java.util.logging.ErrorManager: void <init>()>-><java.lang.Object: void <init>()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<org.springframework.boot.info.GitProperties: java.lang.String coerceToEpoch(java.lang.String)>-><org.springframework.boot.info.GitProperties: java.lang.Long parseEpochSecond(java.lang.String)>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.MethodValidationPostProcessor methodValidationPostProcessor(org.springframework.core.env.Environment,javax.validation.Validator)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.apache.http.client.config.RequestConfig$Builder: org.apache.http.client.config.RequestConfig$Builder setSocketTimeout(int)>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration: com.fasterxml.jackson.module.paramnames.ParameterNamesModule parameterNamesModule()>-><com.fasterxml.jackson.module.paramnames.ParameterNamesModule: void <init>(com.fasterxml.jackson.annotation.JsonCreator$Mode)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><java.rmi.server.LogStream: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.util.MyPage: com.baomidou.mybatisplus.extension.plugins.pagination.Page setDescs(java.util.List)>-><com.baomidou.mybatisplus.core.toolkit.CollectionUtils: boolean isNotEmpty(java.util.Collection)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.flyway.FlywayMigrationScriptMissingException: void <init>(java.util.List)>-><com.alibaba.fastjson.JSONArray: boolean isEmpty()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.util.Date: int compareTo(java.lang.Object)>
<org.flywaydb.core.internal.jdbc.DriverDataSource: void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Properties)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String detectFallbackPassword(java.lang.String)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: com.hazelcast.config.Config getConfig(org.springframework.core.io.Resource)>-><org.springframework.util.ResourceUtils: boolean isFileURL(java.net.URL)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.mail.MailProperties getMailPropertiesInstance()>-><org.springframework.boot.autoconfigure.mail.MailProperties: void setPort(java.lang.Integer)>
<org.springframework.boot.info.GitProperties: java.lang.String coerceToEpoch(java.lang.String)>-><java.util.Date: long getTime()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: java.util.List resolveLocations(java.util.List)>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: org.springframework.boot.jdbc.DatabaseDriver getDatabaseDriver()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void onExpiration(org.apache.shiro.session.Session,org.apache.shiro.session.ExpiredSessionException,org.apache.shiro.session.mgt.SessionKey)>-><org.slf4j.helpers.NOPLogger: void trace(java.lang.String,java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.springframework.http.client.support.HttpAccessor: void <init>()>-><java.lang.Object: void <init>()>
<freemarker.template.DefaultObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.elasticsearch.client.RestClientBuilder$2: void <init>(org.elasticsearch.client.RestClientBuilder,org.apache.http.impl.nio.client.HttpAsyncClientBuilder)>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.web.servlet.error.DefaultErrorAttributes errorAttributes()>-><org.springframework.boot.web.servlet.error.DefaultErrorAttributes: void <init>(boolean)>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean containsAll(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><java.lang.StringBuilder: void <init>()>
<java.util.logging.StreamHandler: void configure()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.elasticsearch.client.XPackClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>-><java.lang.Object: void <init>()>
<java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection)>-><java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection,int)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: boolean isRoleBasedAccessControlEnabled()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties: java.lang.String getPassword()>
<org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory: void <init>()>-><org.springframework.boot.web.servlet.server.Jsp: void setRegistered(boolean)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration: void <init>()>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.json.MappingJackson2HttpMessageConverter: void <init>()>
<java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>-><java.lang.Error: void <init>(java.lang.String)>
<org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>-><java.lang.Object: int hashCode()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: void <init>(org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties)>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.Set scan(java.lang.Class[])>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.springframework.context.support.AbstractApplicationContext: void <init>()>-><org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: org.springframework.core.io.support.ResourcePatternResolver getResourcePatternResolver()>
<org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor build(java.lang.Class)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.task.TaskExecutionProperties getTaskExecutionPropertiesInstance()>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties: void setThreadNamePrefix(java.lang.String)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.String getPlaceholderSuffix()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.String getPlaceholderSuffix()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection,int)>-><java.util.concurrent.locks.ReentrantLock: void lock()>
<com.google.common.collect.Maps$Values: boolean remove(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<org.apache.shiro.session.mgt.SimpleSession: boolean isTimedOut()>-><java.lang.System: long currentTimeMillis()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.elasticsearch.client.Node: int hashCode()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><freemarker.ext.beans.CollectionAdapter$1: java.lang.Object next()>
<org.springframework.util.MimeType: void <init>(java.lang.String,java.lang.String,java.util.Map)>-><java.util.Collections$UnmodifiableMap: void forEach(java.util.function.BiConsumer)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties getWebMvcPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: void setIgnoreDefaultModelOnRedirect(boolean)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<org.springframework.util.MimeType: void <init>(java.lang.String,java.lang.String,java.util.Map)>-><org.springframework.util.LinkedCaseInsensitiveMap: int size()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration: org.springframework.data.mongodb.core.mapping.MongoMappingContext mongoMappingContext(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.mongo.MongoProperties,org.springframework.data.mongodb.core.convert.MongoCustomConversions)>
<org.elasticsearch.common.ParseField: void <init>(java.lang.String,java.lang.String[])>-><java.util.HashSet: boolean add(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.util.ReflectionUtils: void handleReflectionException(java.lang.Exception)>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer: void <init>(org.springframework.boot.autoconfigure.http.HttpProperties$Encoding)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool: void <init>()>-><java.time.Duration: java.time.Duration ofSeconds(long)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.springframework.boot.info.GitProperties: java.lang.String coerceToEpoch(java.lang.String)>-><java.lang.String: java.lang.String valueOf(long)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<com.alibaba.fastjson.parser.DefaultJSONParser: java.lang.Object parseObject(java.util.Map,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.springframework.context.support.AbstractApplicationContext: boolean containsLocalBean(java.lang.String)>-><org.springframework.context.support.AbstractRefreshableApplicationContext: org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.TreeMap$KeySet: java.util.Iterator iterator()>
<org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.lang.Object)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.util.function.Supplier)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSimpleCookie(org.apache.shiro.web.servlet.SimpleCookie)>
<com.alibaba.fastjson.serializer.SerializeFilterable: java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: java.util.List replaceVendorLocations(java.util.List,org.springframework.boot.jdbc.DatabaseDriver)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<sun.rmi.runtime.Log$LoggerLog$2: java.lang.Void run()>-><java.util.logging.LogManager$RootLogger: void addHandler(java.util.logging.Handler)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.logging.StreamHandler: void setEncoding(java.lang.String)>-><java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>
<java.util.logging.StreamHandler: void flushAndClose()>-><java.util.logging.Formatter: java.lang.String getTail(java.util.logging.Handler)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.rmi.server.LogStream: void write(int)>-><java.util.Date: void <init>()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigDecimal castToBigDecimal(java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<javax.servlet.http.HttpServletResponseWrapper: void setHeader(java.lang.String,java.lang.String)>-><javax.servlet.http.HttpServletResponseWrapper: void setHeader(java.lang.String,java.lang.String)>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: org.elasticsearch.client.RestClientBuilder elasticsearchRestClientBuilder(org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties,org.springframework.beans.factory.ObjectProvider)>-><org.elasticsearch.client.RestClient: org.elasticsearch.client.RestClientBuilder builder(org.apache.http.HttpHost[])>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(boolean,java.util.Collection)>-><java.util.Collections: java.util.List unmodifiableList(java.util.List)>
<org.apache.shiro.session.mgt.SimpleSession: boolean isTimedOut()>-><java.lang.Object: java.lang.Class getClass()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.gson.GsonProperties getGsonPropertiesInstance()>-><org.springframework.boot.autoconfigure.gson.GsonProperties: void setLongSerializationPolicy(com.google.gson.LongSerializationPolicy)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.flywaydb.core.internal.schemahistory.AppliedMigration: int compareTo(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.SubList$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform: org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform get()>-><org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>
<com.sun.jmx.mbeanserver.Introspector: javax.management.NotCompliantMBeanException throwException(java.lang.Class,java.lang.Throwable)>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setUsername(java.lang.String)>
<org.elasticsearch.client.RestClientBuilder: void <init>(java.util.List)>-><java.lang.Object: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.IdentityHashMap$KeySet: java.util.Iterator iterator()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration: void <init>()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setDryRunOutput(java.io.File)>
<com.google.gson.internal.LinkedTreeMap$Node: int hashCode()>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><org.apache.shiro.session.mgt.DefaultSessionManager: java.util.Collection getActiveSessions()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean onEquals(org.apache.shiro.session.mgt.SimpleSession)>
<freemarker.template.DefaultIterableAdapter: freemarker.template.TemplateModelIterator iterator()>-><org.apache.shiro.subject.SimplePrincipalCollection: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration: java.lang.Object createDataSource(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,java.lang.Class)>-><org.springframework.boot.jdbc.DataSourceBuilder: javax.sql.DataSource build()>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.List getPackages()>-><java.util.Collections$UnmodifiableCollection: boolean isEmpty()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: javax.sql.DataSource configureDataSource(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,javax.sql.DataSource,javax.sql.DataSource)>-><org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.api.configuration.FluentConfiguration dataSource(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.shiro.session.mgt.SimpleSession: boolean isTimedOut()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: void <init>(javax.sql.DataSource)>
<java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>-><java.lang.StringBuilder: void <init>()>
<javax.crypto.Cipher: void chooseFirstProvider()>-><javax.crypto.Cipher$Transform: int supportsModePadding(java.security.Provider$Service)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.LocalValidatorFactoryBean defaultValidator()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void onExpiration(org.apache.shiro.session.Session,org.apache.shiro.session.ExpiredSessionException,org.apache.shiro.session.mgt.SessionKey)>-><org.apache.shiro.session.mgt.DefaultSessionManager: void onExpiration(org.apache.shiro.session.Session)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setServletWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.EnumMap$EntrySet: java.util.Iterator iterator()>
<org.apache.logging.log4j.message.ParameterFormatter: void handleErrorInObjectToString(java.lang.Object,java.lang.StringBuilder,java.lang.Throwable)>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<org.apache.shiro.session.mgt.eis.MemorySessionDAO: void delete(org.apache.shiro.session.Session)>-><org.apache.shiro.session.mgt.SimpleSession: java.io.Serializable getId()>
<org.elasticsearch.client.Node: void <init>(org.apache.http.HttpHost,java.util.Set,java.lang.String,java.lang.String,org.elasticsearch.client.Node$Roles,java.util.Map)>-><java.lang.Object: void <init>()>
<freemarker.template.DefaultObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider getDataSourcePoolMetadataProvider()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.Vector: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder entityManagerFactoryBuilder(org.springframework.orm.jpa.JpaVendorAdapter,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder: void <init>(org.springframework.orm.jpa.JpaVendorAdapter,java.util.Map,org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager)>
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: org.springframework.core.io.Resource getResourceByPath(java.lang.String)>-><org.springframework.util.Assert: void state(boolean,java.lang.String)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.springframework.util.unit.DataSize: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList: void <init>()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Properties)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String detectFallbackUser(java.lang.String)>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: com.hazelcast.config.Config createConfig(java.net.URL)>-><com.hazelcast.config.XmlConfigBuilder: void <init>(java.net.URL)>
<org.springframework.boot.web.servlet.error.DefaultErrorAttributes: void <init>(boolean)>-><java.lang.Object: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setParameterNamesModule(com.fasterxml.jackson.module.paramnames.ParameterNamesModule)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.ArrayList$Itr: java.lang.Object next()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String detectFallbackUser(java.lang.String)>-><org.flywaydb.core.internal.util.StringUtils: boolean hasText(java.lang.String)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setContentType(java.lang.String)>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><org.elasticsearch.client.GraphClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<ch.qos.logback.core.helpers.ThrowableToStringArray: java.lang.String formatFirstLine(java.lang.Throwable,java.lang.StackTraceElement[])>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.flywaydb.core.internal.sqlscript.SqlScript: int compareTo(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.apache.shiro.session.mgt.SimpleSession: void validate()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.util.DefaultPropertiesPersister: void load(java.util.Properties,java.io.InputStream)>-><java.util.Properties: void load(java.io.InputStream)>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.web.ResourceProperties)>-><org.springframework.boot.autoconfigure.web.ResourceProperties: void <init>()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.StringBuilder: int length()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.config.websocket.WebSocketConfig: org.springframework.web.socket.server.standard.ServerEndpointExporter serverEndpoint()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.Byte: int compareTo(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.nio.charset.Charset: int compareTo(java.lang.Object)>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.util.TreeSet: boolean isEmpty()>
<org.springframework.cache.support.NoOpCacheManager: void <init>()>-><java.util.concurrent.ConcurrentHashMap: void <init>(int)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.lang.String getUndoSqlMigrationPrefix()>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.Set scan(java.lang.Class[])>-><org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void addIncludeFilter(org.springframework.core.type.filter.TypeFilter)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.elasticsearch.client.PersistentCredentialsAuthenticationStrategy: void <init>()>-><org.apache.http.impl.client.TargetAuthenticationStrategy: void <init>()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: java.lang.String[] getViewNames()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setType(java.lang.Class)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setCleanOnValidationError(boolean)>
<org.springframework.context.support.AbstractApplicationContext: java.lang.String[] getAliases(java.lang.String)>-><org.springframework.context.support.AbstractRefreshableApplicationContext: org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><javax.management.ObjectName: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.embedded.UndertowWebServerFactoryCustomizer: void <init>(org.springframework.core.env.Environment,org.springframework.boot.autoconfigure.web.ServerProperties)>-><java.lang.Object: void <init>()>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Maps$EntrySet: boolean isEmpty()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setNimbusReactiveOpaqueTokenIntrospector(org.springframework.security.oauth2.server.resource.introspection.NimbusReactiveOpaqueTokenIntrospector)>
<org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration: org.springframework.boot.autoconfigure.http.HttpMessageConverters messageConverters(org.springframework.beans.factory.ObjectProvider)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<java.util.Collections$SetFromMap: boolean remove(java.lang.Object)>-><org.springframework.util.LinkedCaseInsensitiveMap: java.lang.Object remove(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder cbor()>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean build()>-><org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder: org.springframework.core.task.AsyncTaskExecutor access$500(org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder)>
<org.springframework.beans.CachedIntrospectionResults: boolean isClassLoaderAccepted(java.lang.ClassLoader)>-><org.springframework.util.LinkedCaseInsensitiveMap$EntryIterator: boolean hasNext()>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.ProcessEnvironment$Value: int compareTo(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setLocations(java.util.List)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.elasticsearch.client.Node: int hashCode()>
<java.util.logging.StreamHandler: void flushAndClose()>-><java.io.OutputStreamWriter: void flush()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: boolean isExposeSessionAttributes()>
<java.util.concurrent.PriorityBlockingQueue: java.lang.Object[] toArray(java.lang.Object[])>-><java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class)>
<org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void <init>()>-><org.springframework.web.filter.CharacterEncodingFilter: void <init>()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.flywaydb.core.internal.callback.SqlScriptCallbackFactory$SqlScriptCallback: int compareTo(java.lang.Object)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<freemarker.ext.beans.StringModel: java.lang.String getAsString()>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.boot.task.TaskExecutorBuilder: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: java.lang.String[] getPackagesToScan()>-><org.springframework.boot.autoconfigure.domain.EntityScanPackages: java.util.List getPackageNames()>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><java.lang.Long: java.lang.Long valueOf(long)>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.util.Properties detectPropsForUrl(java.lang.String)>-><java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.gson.GsonProperties getGsonPropertiesInstance()>-><org.springframework.boot.autoconfigure.gson.GsonProperties: void <init>()>
<java.util.logging.Handler: void reportError(java.lang.String,java.lang.Exception,int)>-><java.io.PrintStream: void println(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.apache.shiro.session.mgt.SessionManager getSessionManager()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<org.springframework.boot.info.InfoProperties: void <init>(java.util.Properties)>-><org.springframework.boot.info.InfoProperties: java.util.Properties copy(java.util.Properties)>
<org.springframework.cache.support.NoOpCacheManager: void <init>()>-><java.util.LinkedHashSet: void <init>(int)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setIgnorePendingMigrations(boolean)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getDefaultNamedXContents()>-><org.springframework.core.io.buffer.LimitedDataBufferList: boolean add(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setPrefix(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.Optional: java.util.Optional map(java.util.function.Function)>-><java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean entityManagerFactory(org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder)>-><org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder packages(java.lang.String[])>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration: com.google.gson.Gson gson(com.google.gson.GsonBuilder)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList: boolean addAll(int,java.util.Collection)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>-><org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>
<org.springframework.boot.autoconfigure.domain.EntityScanner: void <init>(org.springframework.context.ApplicationContext)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.web.filter.RelativeRedirectResponseWrapper: void sendRedirect(java.lang.String)>-><org.springframework.http.HttpStatus: int value()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.LocalDate: int compareTo(java.lang.Object)>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: void <init>(org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder,javax.sql.DataSource)>-><java.lang.Object: void <init>()>
<javax.el.BeanELResolver$SoftConcurrentHashMap: void cleanup()>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>
<java.util.logging.LogManager: java.util.logging.Formatter getFormatterProperty(java.lang.String,java.util.logging.Formatter)>-><java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt: java.lang.String readPublicKey()>-><org.springframework.boot.context.properties.source.InvalidConfigurationPropertyValueException: void <init>(java.lang.String,java.lang.Object,java.lang.String)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<sun.rmi.runtime.Log$LogStreamLog: java.lang.String unqualifiedName(java.lang.String)>-><java.lang.String: java.lang.String replace(char,char)>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Iterator iterator()>-><org.apache.shiro.subject.SimplePrincipalCollection: java.util.Set asSet()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.BuildProperties buildProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setPersistenceExceptionTranslationPostProcessor(org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor)>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean build()>-><org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean: void setPackagesToScan(java.lang.String[])>
<freemarker.ext.beans.StringModel: java.lang.String getAsString()>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$SingletonSet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration: org.springframework.http.converter.StringHttpMessageConverter stringHttpMessageConverter(org.springframework.boot.autoconfigure.http.HttpProperties)>-><org.springframework.http.converter.StringHttpMessageConverter: void <init>(java.nio.charset.Charset)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.flywaydb.core.internal.callback.SqlScriptCallbackFactory$SqlScriptCallback: int compareTo(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.info.ProjectInfoProperties)>-><org.springframework.boot.autoconfigure.info.ProjectInfoProperties: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: boolean isCleanDisabled()>
<org.apache.shiro.session.mgt.DefaultSessionManager: void onExpiration(org.apache.shiro.session.Session)>-><org.apache.shiro.session.mgt.SimpleSession: void setExpired(boolean)>
<freemarker.ext.beans.HashAdapter$1$1$1: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.mail.MailProperties getMailPropertiesInstance()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setShiroFilterChainDefinition(org.apache.shiro.spring.web.config.ShiroFilterChainDefinition)>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.ClassLoader getClassLoader()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.ClassLoader getClassLoader()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.EnumMap$KeySet: java.util.Iterator iterator()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><sun.security.x509.X509CRLEntryImpl: int compareTo(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.apache.shiro.spring.config.ShiroBeanConfiguration: org.apache.shiro.spring.LifecycleBeanPostProcessor lifecycleBeanPostProcessor()>
<org.springframework.http.converter.feed.AbstractWireFeedHttpMessageConverter: void <init>(org.springframework.http.MediaType)>-><org.springframework.http.converter.AbstractHttpMessageConverter: void <init>(org.springframework.http.MediaType)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>-><java.util.ArrayList$Itr: boolean hasNext()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.task.TaskSchedulingProperties getTaskSchedulingPropertiesInstance()>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: void <init>()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigInteger castToBigInteger(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.elasticsearch.client.RestClientBuilder$2: org.apache.http.impl.nio.client.CloseableHttpAsyncClient run()>-><org.apache.http.impl.nio.client.HttpAsyncClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient build()>
<org.elasticsearch.client.ClusterClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>-><java.lang.Object: void <init>()>
<org.springframework.cache.concurrent.ConcurrentMapCache: void <init>(java.lang.String,java.util.concurrent.ConcurrentMap,boolean,org.springframework.core.serializer.support.SerializationDelegate)>-><org.springframework.cache.support.AbstractValueAdaptingCache: void <init>(boolean)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer localeCharsetMappingsCustomizer()>-><org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer: void <init>(org.springframework.boot.autoconfigure.http.HttpProperties$Encoding)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<sun.rmi.runtime.Log$LogStreamLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><org.springframework.beans.PropertyBatchUpdateException: void printStackTrace(java.io.PrintStream)>
<org.springframework.boot.web.reactive.server.AbstractReactiveWebServerFactory: void <init>()>-><org.springframework.boot.web.server.AbstractConfigurableWebServerFactory: void <init>()>
<org.apache.commons.collections.FastHashMap$CollectionView: boolean isEmpty()>-><org.apache.commons.collections.FastHashMap$EntrySet: java.util.Collection get(java.util.Map)>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver conventionErrorViewResolver()>-><org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.web.ResourceProperties)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration: org.springframework.web.servlet.DispatcherServlet dispatcherServlet(org.springframework.boot.autoconfigure.http.HttpProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties)>-><org.springframework.web.servlet.FrameworkServlet: void setDispatchTraceRequest(boolean)>
<sun.rmi.runtime.NewThreadAction$1: java.lang.ThreadGroup run()>-><java.lang.Thread: java.lang.Thread currentThread()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<org.springframework.web.filter.ForwardedHeaderFilter: void <init>()>-><org.springframework.web.util.UrlPathHelper: void setRemoveSemicolonContent(boolean)>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.util.Collections$EmptySet: boolean isEmpty()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String detectBackupDriverForUrl(java.lang.String)>-><java.lang.String: boolean startsWith(java.lang.String)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: void <init>(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.task.TaskExecutionProperties getTaskExecutionPropertiesInstance()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String detectBackupDriverForUrl(java.lang.String)>-><org.flywaydb.core.internal.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>
<org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration: org.springframework.data.mongodb.core.mapping.MongoMappingContext mongoMappingContext(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.mongo.MongoProperties,org.springframework.data.mongodb.core.convert.MongoCustomConversions)>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: java.lang.Class getFieldNamingStrategy()>
<org.springframework.web.servlet.FrameworkServlet: void <init>()>-><java.util.ArrayList: void <init>()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>
<java.util.logging.LogManager: java.util.logging.Filter getFilterProperty(java.lang.String,java.util.logging.Filter)>-><java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: javax.sql.DataSource configureDataSource(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,javax.sql.DataSource,javax.sql.DataSource)>-><org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.api.configuration.FluentConfiguration initSql(java.lang.String)>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: org.springframework.cache.Cache createConcurrentMapCache(java.lang.String)>-><org.springframework.cache.concurrent.ConcurrentMapCacheManager: boolean isAllowNullValues()>
<java.util.Hashtable: java.lang.String toString()>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: java.util.List resolveLocations(java.util.List)>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: java.util.List replaceVendorLocations(java.util.List,org.springframework.boot.jdbc.DatabaseDriver)>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder awaitTermination(boolean)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void checkLocationExists(javax.sql.DataSource,org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.core.io.ResourceLoader)>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: void <init>(javax.sql.DataSource)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder: int compareTo(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration: void <init>()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Env getEnv()>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>
<java.util.logging.Handler: void checkPermission()>-><java.util.logging.LogManager: void checkPermission()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.MonthDay: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: org.springframework.boot.jdbc.DatabaseDriver getDatabaseDriver()>-><java.lang.IllegalStateException: void <init>(java.lang.Throwable)>
<org.flywaydb.core.internal.jdbc.DriverDataSource: void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Properties)>-><org.flywaydb.core.internal.util.ClassUtils: java.lang.Object instantiate(java.lang.String,java.lang.ClassLoader)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setLifecycleBeanPostProcessor(org.apache.shiro.spring.LifecycleBeanPostProcessor)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.MappingJackson2HttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Set asSet()>-><java.util.HashMap: boolean isEmpty()>
<org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor persistenceExceptionTranslationPostProcessor(org.springframework.core.env.Environment)>-><org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor: void <init>()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.apache.shiro.session.mgt.AbstractNativeSessionManager: void notifyStop(org.apache.shiro.session.Session)>-><org.apache.shiro.session.mgt.AbstractNativeSessionManager: org.apache.shiro.session.Session beforeInvalidNotification(org.apache.shiro.session.Session)>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.lang.Integer: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: void <init>(javax.sql.DataSource)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<sun.rmi.runtime.NewThreadAction: java.lang.Thread run()>-><java.lang.StringBuilder: void <init>()>
<org.elasticsearch.client.RestClient: void setNodes(java.util.Collection)>-><org.apache.http.impl.client.BasicAuthCache: void <init>()>
<org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.context.support.AbstractApplicationContext: boolean isSingleton(java.lang.String)>-><org.springframework.context.support.AbstractRefreshableApplicationContext: void assertBeanFactoryActive()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration: org.springframework.data.mongodb.core.mapping.MongoMappingContext mongoMappingContext(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.mongo.MongoProperties,org.springframework.data.mongodb.core.convert.MongoCustomConversions)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.lang.Object)>
<org.flywaydb.core.internal.jdbc.DriverDataSource: void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Properties)>-><java.util.Hashtable: void putAll(java.util.Map)>
<com.google.common.collect.Maps$Values: boolean remove(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.util.AbstractCollection: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: java.lang.String getRequestContextAttribute()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.apache.shiro.mgt.RealmSecurityManager: void applyEventBusToRealms()>-><com.google.common.collect.Maps$Values: java.util.Iterator iterator()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJpaVendorAdapter(org.springframework.orm.jpa.JpaVendorAdapter)>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: org.elasticsearch.client.RestClientBuilder elasticsearchRestClientBuilder(org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties,org.springframework.beans.factory.ObjectProvider)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.core.annotation.AnnotationAwareOrderComparator: void sortIfNecessary(java.lang.Object)>-><org.springframework.core.annotation.AnnotationAwareOrderComparator: void sort(java.util.List)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties getWebMvcPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: void setDateFormat(java.lang.String)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder: int compareTo(java.lang.Object)>
<org.apache.shiro.session.mgt.SimpleSession: boolean isTimedOut()>-><org.slf4j.helpers.NOPLogger: void trace(java.lang.String)>
<org.apache.shiro.session.mgt.DefaultSessionManager: void delete(org.apache.shiro.session.Session)>-><org.apache.shiro.session.mgt.eis.MemorySessionDAO: void delete(org.apache.shiro.session.Session)>
<org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>-><java.util.Optional: java.lang.Object orElse(java.lang.Object)>
<org.apache.shiro.session.mgt.SimpleSession: boolean isTimedOut()>-><ch.qos.logback.classic.Logger: boolean isTraceEnabled()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.util.Map getPlaceholders()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.BuildProperties buildProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build: java.nio.charset.Charset getEncoding()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: java.lang.Object next()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool: int getMaxSize()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<java.util.logging.StreamHandler: void flushAndClose()>-><java.util.logging.Formatter: java.lang.String getHead(java.util.logging.Handler)>
<org.springframework.boot.web.servlet.server.DocumentRoot: void <init>(org.apache.commons.logging.Log)>-><java.lang.Object: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.xml.SourceHttpMessageConverter: void <init>()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: boolean isReplacement(org.springframework.http.converter.HttpMessageConverter,org.springframework.http.converter.HttpMessageConverter)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown: java.time.Duration getAwaitTerminationPeriod()>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isValidateOnMigrate()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isValidateOnMigrate()>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow: org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory undertowServletWebServerFactory(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><java.util.AbstractCollection: boolean addAll(java.util.Collection)>
<com.google.gson.internal.LinkedTreeMap$Node: int hashCode()>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Bucket couchbaseClient()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Bucket: java.lang.String getName()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Properties)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String detectBackupDriverForUrl(java.lang.String)>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.util.Properties detectPropsForUrl(java.lang.String)>-><java.lang.String: int length()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean containsAll(java.util.Collection)>-><com.google.common.collect.ForwardingMap: java.util.Set keySet()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean: void <init>(org.springframework.web.servlet.DispatcherServlet,java.lang.String)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: void addUrlMappings(java.lang.String[])>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer servletWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>-><org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: long getTimeout()>
<javax.servlet.http.HttpServletResponseWrapper: void setStatus(int)>-><javax.servlet.http.HttpServletResponseWrapper: javax.servlet.http.HttpServletResponse _getHttpServletResponse()>
<javax.servlet.http.HttpServletResponseWrapper: void setHeader(java.lang.String,java.lang.String)>-><javax.servlet.http.HttpServletResponseWrapper: javax.servlet.http.HttpServletResponse _getHttpServletResponse()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><freemarker.ext.beans.HashAdapter$1: java.util.Iterator iterator()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>-><org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source asInt(java.util.function.Function)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.cache.CacheProperties getCachePropertiesInstance()>-><org.springframework.boot.autoconfigure.cache.CacheProperties: void setCacheNames(java.util.List)>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: java.lang.String[] getPackagesToScan()>-><org.springframework.boot.autoconfigure.AutoConfigurationPackages: java.util.List get(org.springframework.beans.factory.BeanFactory)>
<org.springframework.web.servlet.HttpServletBean: void <init>()>-><java.util.HashSet: void <init>(int)>
<org.elasticsearch.client.RestClient: org.elasticsearch.client.RestClientBuilder builder(org.apache.http.HttpHost[])>-><org.elasticsearch.client.RestClient: java.util.List hostsToNodes(org.apache.http.HttpHost[])>
<org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler: void run()>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String)>
<java.util.Hashtable: java.lang.String toString()>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><com.fasterxml.jackson.databind.type.ClassKey: int compareTo(java.lang.Object)>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.String[] getSqlMigrationSuffixes()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.String[] getSqlMigrationSuffixes()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.apache.poi.hssf.usermodel.HSSFRow: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.Set scan(java.lang.Class[])>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$1: javax.management.MBeanServer getMBeanServer()>-><org.springframework.jndi.JndiLocatorDelegate: java.lang.Object lookup(java.lang.String,java.lang.Class)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJavaMailSenderImpl(org.springframework.mail.javamail.JavaMailSenderImpl)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getDefaultNamedXContents()>-><java.util.Collection: java.util.stream.Stream stream()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow: org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory undertowReactiveWebServerFactory(org.springframework.beans.factory.ObjectProvider)>-><java.util.AbstractCollection: boolean addAll(java.util.Collection)>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.lang.Class: java.lang.String getName()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: java.lang.Object next()>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTransactionalOperator(org.springframework.transaction.reactive.TransactionalOperator)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<org.apache.shiro.session.mgt.SimpleSession: void stop()>-><java.util.Date: void <init>()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<java.util.concurrent.PriorityBlockingQueue: boolean remove(java.lang.Object)>-><java.util.concurrent.locks.ReentrantLock: void lock()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.AbstractMap$1$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getServletUrlMapping()>-><java.lang.String: boolean endsWith(java.lang.String)>
<java.util.concurrent.ThreadPoolExecutor: java.util.List drainQueue()>-><java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.math.BigDecimal: int compareTo(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: org.flywaydb.core.Flyway flyway(org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,org.springframework.core.io.ResourceLoader,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.flywaydb.core.api.configuration.FluentConfiguration: void <init>(java.lang.ClassLoader)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.joda.time.field.UnsupportedDurationField: int compareTo(java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder corePoolSize(int)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow: org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory undertowServletWebServerFactory(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration: void <init>()>
<org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>-><java.util.Optional: java.util.Optional map(java.util.function.Function)>
<com.google.common.collect.Maps$Values: boolean remove(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<org.springframework.http.HttpHeaders: java.lang.String formatHeaders(org.springframework.util.MultiValueMap)>-><org.springframework.util.LinkedMultiValueMap: java.util.Set entrySet()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<java.io.ObjectInputStream$PeekInputStream: void close()>-><java.io.BufferedInputStream: void close()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$2: javax.management.MBeanServer getMBeanServer()>
<org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration: org.springframework.data.mongodb.core.MongoDbFactorySupport mongoDbFactory(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.boot.autoconfigure.mongo.MongoProperties)>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: java.lang.String getMongoClientDatabase()>
<com.google.common.collect.ForwardingMap: java.lang.Object remove(java.lang.Object)>-><com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.Map delegate()>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.util.ArrayList: void <init>(java.util.Collection)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.ArrayList$Itr: boolean hasNext()>
<sun.rmi.runtime.RuntimeUtil$1: java.lang.Thread newThread(java.lang.Runnable)>-><sun.rmi.runtime.NewThreadAction: void <init>(java.lang.Runnable,java.lang.String,boolean)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.String castToString(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform: org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform[] values()>-><java.lang.Object: java.lang.Object clone()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.apache.shiro.session.mgt.SimpleSession: boolean onEquals(org.apache.shiro.session.mgt.SimpleSession)>-><org.apache.shiro.session.mgt.SimpleSession: boolean isExpired()>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Bucket couchbaseClient()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>
<org.springframework.boot.web.client.RestTemplateBuilder: java.util.Set copiedSetOf(java.util.Collection)>-><java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<javax.el.BeanELResolver$SoftConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><javax.el.BeanELResolver$SoftConcurrentHashMap: javax.el.BeanELResolver$BeanProperties get(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFlywayMigrationInitializer(org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer)>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.String getRepeatableSqlMigrationPrefix()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.String getRepeatableSqlMigrationPrefix()>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.apache.shiro.session.mgt.DefaultSessionManager: void afterStopped(org.apache.shiro.session.Session)>-><org.apache.shiro.session.mgt.DefaultSessionManager: void delete(org.apache.shiro.session.Session)>
<org.slf4j.helpers.SubstituteLogger: void trace(java.lang.String,java.lang.Object)>-><ch.qos.logback.classic.Logger: void trace(java.lang.String,java.lang.Object)>
<java.rmi.server.LogStream: void write(byte[],int,int)>-><java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void <init>(boolean,org.springframework.core.env.Environment)>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration: org.springframework.http.converter.StringHttpMessageConverter stringHttpMessageConverter(org.springframework.boot.autoconfigure.http.HttpProperties)>-><org.springframework.boot.autoconfigure.http.HttpProperties: org.springframework.boot.autoconfigure.http.HttpProperties$Encoding getEncoding()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayProperties: void <init>()>-><java.util.HashMap: void <init>()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigDecimal castToBigDecimal(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setDriverClassName(java.lang.String)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.String: int length()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<javax.servlet.http.HttpServletResponseWrapper: void setStatus(int)>-><javax.servlet.http.HttpServletResponseWrapper: void setStatus(int)>
<java.util.concurrent.PriorityBlockingQueue: java.lang.Object peek()>-><java.util.concurrent.locks.ReentrantLock: void lock()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.ProcessEnvironment$StringEntrySet: java.util.Iterator iterator()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: int compareTo(java.lang.Object)>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.util.ArrayList: void sort(java.util.Comparator)>
<org.springframework.context.annotation.MBeanExportConfiguration: org.springframework.jmx.export.annotation.AnnotationMBeanExporter mbeanExporter()>-><org.springframework.context.annotation.MBeanExportConfiguration: void setupDomain(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.apache.shiro.session.mgt.eis.SessionDAO getSessionDAO()>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: void setDispatcherTypes(javax.servlet.DispatcherType,javax.servlet.DispatcherType[])>-><java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember: int compareTo(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setInitSqls(java.util.List)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setDataPassword(java.lang.String)>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler taskScheduler(org.springframework.boot.task.TaskSchedulerBuilder)>-><org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler build()>
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: void <init>(org.springframework.jdbc.core.JdbcOperations)>-><java.lang.Object: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Set asSet()>-><java.util.LinkedHashMap: java.util.Collection values()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.JsonbHttpMessageConverter: void <init>()>
<java.util.logging.StreamHandler: void configure()>-><java.lang.StringBuilder: void <init>()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration: void <init>(org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMultipartResolver(org.springframework.web.multipart.MultipartResolver)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewNames(java.lang.String[])>
<org.springframework.boot.info.BuildProperties: void coerceDate(java.util.Properties,java.lang.String)>-><java.lang.String: java.lang.String valueOf(long)>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.util.ArrayList$Itr: boolean hasNext()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)>
<org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration: org.springframework.data.mongodb.core.mapping.MongoMappingContext mongoMappingContext(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.mongo.MongoProperties,org.springframework.data.mongodb.core.convert.MongoCustomConversions)>-><org.springframework.boot.autoconfigure.domain.EntityScanner: void <init>(org.springframework.context.ApplicationContext)>
<org.springframework.context.support.AbstractApplicationContext: java.lang.Class getType(java.lang.String)>-><org.springframework.context.support.AbstractRefreshableApplicationContext: org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory()>
<org.elasticsearch.client.Node: void <init>(org.apache.http.HttpHost,java.util.Set,java.lang.String,java.lang.String,org.elasticsearch.client.Node$Roles,java.util.Map)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void configurePartConverters(org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter,java.util.Collection)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List postProcessPartConverters(java.util.List)>
<org.apache.shiro.session.mgt.eis.MemorySessionDAO: org.apache.shiro.session.Session storeSession(java.io.Serializable,org.apache.shiro.session.Session)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.jdbc.datasource.embedded.EmbeddedDatabase getEmbeddedDatabase()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: org.flywaydb.core.Flyway flyway(org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,org.springframework.core.io.ResourceLoader,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureFlywayCallbacks(org.flywaydb.core.api.configuration.FluentConfiguration,java.util.List)>
<org.springframework.boot.context.properties.PropertyMapper$Source: void to(java.util.function.Consumer)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.jdbc.DatabaseDriver: java.lang.String getId()>-><java.lang.Enum: java.lang.String name()>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><org.elasticsearch.client.TasksClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>
<javax.el.BeanELResolver$SoftConcurrentHashMap: javax.el.BeanELResolver$BeanProperties get(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>
<org.apache.shiro.mgt.RealmSecurityManager: void applyEventBusToRealms()>-><com.google.common.collect.Maps$Values: boolean isEmpty()>
<sun.rmi.runtime.NewThreadAction$1: java.lang.ThreadGroup run()>-><java.lang.ThreadGroup: java.lang.ThreadGroup getParent()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.orm.jpa.JpaVendorAdapter getJpaVendorAdapter()>
<java.rmi.server.LogStream: void write(int)>-><java.io.Writer: void write(java.lang.String)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.apache.shiro.authc.pam.AuthenticationStrategy getAuthenticationStrategy()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHypermediaHttpMessageConverterConfiguration$HalMessageConverterSupportedMediaTypesCustomizer(org.springframework.boot.autoconfigure.hateoas.HypermediaHttpMessageConverterConfiguration$HalMessageConverterSupportedMediaTypesCustomizer)>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback()>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.joda.time.base.AbstractInstant: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: boolean isCache()>
<com.google.common.collect.Maps$Values: java.util.Iterator iterator()>-><com.google.common.collect.ForwardingMap: java.util.Set entrySet()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.sql.Timestamp: int compareTo(java.lang.Object)>
<java.util.logging.LogManager: java.util.logging.Filter getFilterProperty(java.lang.String,java.util.logging.Filter)>-><java.lang.Class: java.lang.Object newInstance()>
<org.springframework.boot.web.servlet.support.ErrorPageFilter$1: void <init>(org.springframework.boot.web.servlet.support.ErrorPageFilter)>-><org.springframework.web.filter.OncePerRequestFilter: void <init>()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties getWebMvcPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: void setPublishRequestHandledEvents(boolean)>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean build()>-><org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder: java.util.Map access$300(org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet: java.util.Iterator iterator()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.nio.charset.Charset: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor openEntityManagerInViewInterceptor()>-><org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog: void warn(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar springApplicationAdminRegistrar(org.springframework.beans.factory.ObjectProvider,org.springframework.core.env.Environment)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.logging.Handler: void setEncoding(java.lang.String)>-><java.io.UnsupportedEncodingException: void <init>(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.springframework.boot.autoconfigure.freemarker.FreeMarkerReactiveWebConfiguration: org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer freeMarkerConfigurer()>-><org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer: void <init>()>
<org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: org.springframework.boot.web.client.RestTemplateBuilder addCustomizers(org.springframework.boot.web.client.RestTemplateBuilder,org.springframework.beans.factory.ObjectProvider,java.util.function.BiFunction)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration: void <init>()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.apache.shiro.session.mgt.SimpleSession: void validate()>-><org.apache.shiro.session.mgt.SimpleSession: java.io.Serializable getId()>
<org.elasticsearch.client.SecurityClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>-><java.lang.Object: void <init>()>
<java.util.concurrent.PriorityBlockingQueue: void tryGrow(java.lang.Object[],int)>-><java.lang.Thread: void yield()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setErrorPageFilter(org.springframework.boot.web.servlet.support.ErrorPageFilter)>
<org.slf4j.helpers.SubstituteLogger: void trace(java.lang.String,java.lang.Object)>-><org.slf4j.event.EventRecodingLogger: void trace(java.lang.String,java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setEncoding(java.nio.charset.Charset)>
<org.springframework.web.client.RestTemplate: org.springframework.web.util.DefaultUriBuilderFactory initUriTemplateHandler()>-><org.springframework.web.util.DefaultUriBuilderFactory: void setEncodingMode(org.springframework.web.util.DefaultUriBuilderFactory$EncodingMode)>
<java.util.concurrent.PriorityBlockingQueue: boolean offer(java.lang.Object)>-><java.util.concurrent.locks.ReentrantLock: void lock()>
<org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: org.springframework.boot.web.client.RestTemplateBuilder restTemplateBuilder(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateCustomizer[])>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.Set scan(java.lang.Class[])>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.elasticsearch.client.RestClientBuilder$1: org.apache.http.impl.nio.client.CloseableHttpAsyncClient run()>-><org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient access$000(org.elasticsearch.client.RestClientBuilder)>
<java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>-><java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determinePassword()>-><org.springframework.boot.jdbc.EmbeddedDatabaseConnection: boolean isEmbedded(java.lang.String)>
<org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source whenNonNull()>-><org.springframework.boot.context.properties.PropertyMapper$Source: void <init>(java.util.function.Supplier,java.util.function.Predicate)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.joda.time.base.AbstractPartial: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.BuildProperties buildProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build: org.springframework.core.io.Resource getLocation()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setRestHighLevelClient(org.elasticsearch.client.RestHighLevelClient)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.Vector$Itr: java.lang.Object next()>
<java.util.concurrent.PriorityBlockingQueue: boolean remove(java.lang.Object)>-><java.util.concurrent.PriorityBlockingQueue: int indexOf(java.lang.Object)>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder jacksonObjectMapperBuilder(org.springframework.context.ApplicationContext,java.util.List)>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration: void customize(org.springframework.http.converter.json.Jackson2ObjectMapperBuilder,java.util.List)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.Instant: int compareTo(java.lang.Object)>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: com.hazelcast.config.Config createConfig(java.net.URL)>-><com.hazelcast.config.XmlConfigBuilder: com.hazelcast.config.Config build()>
<org.apache.shiro.session.mgt.SimpleSession: boolean isTimedOut()>-><org.apache.shiro.session.mgt.SimpleSession: java.io.Serializable getId()>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><org.elasticsearch.client.IndicesClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder customizers(java.lang.Iterable)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.apache.shiro.event.EventBus getEventBus()>
<org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.web.ResourceProperties)>-><org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: void <init>(org.springframework.context.ApplicationContext)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><org.apache.shiro.web.session.HttpServletSession: java.io.Serializable getId()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.jdbc.DataSourceBuilder: org.springframework.boot.jdbc.DataSourceBuilder create(java.lang.ClassLoader)>
<sun.rmi.runtime.RuntimeUtil$1: java.lang.Thread newThread(java.lang.Runnable)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJackson2ObjectMapperBuilder(org.springframework.http.converter.json.Jackson2ObjectMapperBuilder)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCharacterEncodingFilter(org.springframework.web.filter.CharacterEncodingFilter)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter: void <init>()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><java.util.Arrays$ArrayList: java.lang.Object[] toArray(java.lang.Object[])>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setServerHeader(java.lang.String)>
<org.springframework.core.io.support.EncodedResource: java.io.InputStream getInputStream()>-><org.springframework.web.context.support.ServletContextResource: java.io.InputStream getInputStream()>
<org.apache.shiro.session.mgt.SimpleSession: void validate()>-><java.util.Date: void <init>()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper alwaysApplyingWhenNonNull()>
<freemarker.ext.beans.StringModel: java.lang.String getAsString()>-><org.elasticsearch.client.Node: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver conventionErrorViewResolver()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerReactiveWebConfiguration: org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer freeMarkerConfigurer()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.flywaydb.core.internal.schemahistory.AppliedMigration: int compareTo(java.lang.Object)>
<org.elasticsearch.client.RestClient: void setNodes(java.util.Collection)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: java.lang.Object next()>
<org.springframework.boot.context.properties.PropertyMapper$Source: void <init>(java.util.function.Supplier,java.util.function.Predicate,org.springframework.boot.context.properties.PropertyMapper$1)>-><org.springframework.boot.context.properties.PropertyMapper$Source: void <init>(java.util.function.Supplier,java.util.function.Predicate)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: boolean isReplacement(org.springframework.http.converter.HttpMessageConverter,org.springframework.http.converter.HttpMessageConverter)>-><java.lang.Class: boolean isInstance(java.lang.Object)>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder jwtDecoderByPublicKeyValue()>-><java.security.spec.X509EncodedKeySpec: void <init>(byte[])>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.JumboEnumSet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.lang.String getTable()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: boolean usesVendorLocation(java.util.Collection)>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder customizers(java.lang.Iterable)>-><org.springframework.boot.task.TaskExecutorBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><freemarker.ext.beans.HashAdapter$1$1: java.lang.Object next()>
<org.springframework.boot.jackson.JsonComponentModule: void <init>()>-><com.fasterxml.jackson.databind.module.SimpleModule: void <init>()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><java.lang.StringBuilder: void <init>()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String)>
<org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.api.configuration.FluentConfiguration initSql(java.lang.String)>-><org.flywaydb.core.api.configuration.ClassicConfiguration: void setInitSql(java.lang.String)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<java.time.format.DateTimeFormatter: java.time.format.DateTimeParseException createError(java.lang.CharSequence,java.lang.RuntimeException)>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<org.apache.shiro.session.mgt.SimpleSession: void validate()>-><org.apache.shiro.session.mgt.SimpleSession: java.util.Date getLastAccessTime()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration: org.springframework.data.mongodb.core.mapping.MongoMappingContext mongoMappingContext(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.mongo.MongoProperties,org.springframework.data.mongodb.core.convert.MongoCustomConversions)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper alwaysApplyingWhenNonNull()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: boolean hasNext()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<synthetic.method.HttpSessionImpl: void <init>()>-><java.util.HashMap: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.RegularEnumSet: java.util.Iterator iterator()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.HashSet: java.util.Iterator iterator()>
<java.util.logging.LogManager: java.util.logging.Formatter getFormatterProperty(java.lang.String,java.util.logging.Formatter)>-><java.util.ResourceBundle$RBClassLoader: java.lang.Class loadClass(java.lang.String)>
<org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.SubList$1: java.lang.Object next()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void doValidate(org.apache.shiro.session.Session)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.core.Constants: java.util.Set getValues(java.lang.String)>-><java.util.HashSet: void <init>()>
<javax.el.BeanELResolver$SoftConcurrentHashMap: javax.el.BeanELResolver$BeanProperties get(java.lang.Object)>-><java.lang.ref.SoftReference: java.lang.Object get()>
<org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.AbstractMap$1$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration: org.springframework.transaction.support.TransactionTemplate transactionTemplate(org.springframework.transaction.PlatformTransactionManager)>-><org.springframework.transaction.support.TransactionTemplate: void <init>(org.springframework.transaction.PlatformTransactionManager)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<java.util.EnumMap: int entryHashCode(int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: java.lang.String normalizePrefix(java.lang.String)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<sun.rmi.runtime.NewThreadAction: java.lang.Thread run()>-><java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.Long: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration: org.springframework.web.servlet.DispatcherServlet dispatcherServlet(org.springframework.boot.autoconfigure.http.HttpProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties)>-><org.springframework.boot.autoconfigure.http.HttpProperties: boolean isLogRequestDetails()>
<java.util.concurrent.ThreadPoolExecutor: java.util.List drainQueue()>-><java.util.concurrent.PriorityBlockingQueue: java.lang.Object[] toArray(java.lang.Object[])>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isTypeMatch(java.lang.String,org.springframework.core.ResolvableType,boolean)>-><org.springframework.core.ResolvableType: boolean isAssignableFrom(java.lang.Class)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><java.rmi.server.LogStream: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.config.ShiroConfig: void <init>()>
<sun.rmi.runtime.NewThreadAction: java.lang.Object run()>-><sun.rmi.runtime.NewThreadAction: java.lang.Thread run()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.mail.MailProperties getMailPropertiesInstance()>-><org.springframework.boot.autoconfigure.mail.MailProperties: void setProtocol(java.lang.String)>
<java.util.logging.LogManager: java.lang.String getStringProperty(java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String trim()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDefaultCouchbaseEnvironment(com.couchbase.client.java.env.DefaultCouchbaseEnvironment)>
<org.springframework.boot.autoconfigure.flyway.FlywayMigrationScriptMissingException: void <init>(java.util.List)>-><java.util.Collections$EmptyList: boolean isEmpty()>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>-><java.net.URLStreamHandler: void setURL(java.net.URL,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureJavaMigrations(org.flywaydb.core.api.configuration.FluentConfiguration,java.util.List)>-><org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.api.configuration.FluentConfiguration javaMigrations(org.flywaydb.core.api.migration.JavaMigration[])>
<org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration: org.springframework.cache.concurrent.ConcurrentMapCacheManager cacheManager(org.springframework.boot.autoconfigure.cache.CacheProperties,org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers)>-><java.util.ArrayList: boolean isEmpty()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration: org.springframework.jdbc.core.JdbcTemplate jdbcTemplate(javax.sql.DataSource,org.springframework.boot.autoconfigure.jdbc.JdbcProperties)>-><org.springframework.jdbc.core.JdbcTemplate: void setMaxRows(int)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: boolean isSkipDefaultCallbacks()>
<org.apache.shiro.session.mgt.DefaultSessionKey: void <init>(java.io.Serializable)>-><java.lang.Object: void <init>()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setSsl(org.springframework.boot.web.server.Ssl)>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><org.elasticsearch.client.RestClientBuilder$1: java.lang.Object run()>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>-><java.lang.Class: java.lang.String getName()>
<org.springframework.boot.info.GitProperties: void <init>(java.util.Properties)>-><org.springframework.boot.info.GitProperties: java.util.Properties processEntries(java.util.Properties)>
<org.springframework.boot.web.servlet.ServletRegistrationBean: void <init>(javax.servlet.Servlet,boolean,java.lang.String[])>-><java.util.LinkedHashSet: void <init>()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.logging.ErrorManager: void error(java.lang.String,java.lang.Exception,int)>-><java.lang.Throwable: void printStackTrace()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.joda.time.format.DateTimeParserBucket$SavedField: int compareTo(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: org.springframework.mail.javamail.JavaMailSenderImpl mailSender(org.springframework.boot.autoconfigure.mail.MailProperties)>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskSchedulerBuilder: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureCallbacks(org.flywaydb.core.api.configuration.FluentConfiguration,java.util.List)>-><org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.api.configuration.FluentConfiguration callbacks(org.flywaydb.core.api.callback.Callback[])>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: org.elasticsearch.client.RestClientBuilder elasticsearchRestClientBuilder(org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties,org.springframework.beans.factory.ObjectProvider)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.String: int compareTo(java.lang.Object)>
<com.fasterxml.jackson.databind.util.StdDateFormat: void setTimeZone(java.util.TimeZone)>-><java.util.SimpleTimeZone: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDataSourceTransactionManager(org.springframework.jdbc.datasource.DataSourceTransactionManager)>
<javax.crypto.Cipher: void chooseProvider(int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>-><java.security.Provider$Service: boolean supportsParameter(java.lang.Object)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: boolean isRoleBasedAccessControlEnabled()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties: java.lang.String getUsername()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.ProcessEnvironment$Variable: int compareTo(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><java.lang.reflect.WeakCache$LookupValue: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void setResourceLoader(org.springframework.core.io.ResourceLoader)>-><org.springframework.core.io.DefaultResourceLoader: java.lang.ClassLoader getClassLoader()>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Set asSet()>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: void <init>(javax.sql.DataSource,org.springframework.boot.autoconfigure.orm.jpa.JpaProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.jdbc.datasource.SingleConnectionDataSource: void <init>()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<org.springframework.boot.web.servlet.support.ErrorPageFilter: void <init>()>-><java.lang.Object: void <init>()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setSqlMigrationSuffixes(java.util.List)>
<org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration: org.springframework.cache.concurrent.ConcurrentMapCacheManager cacheManager(org.springframework.boot.autoconfigure.cache.CacheProperties,org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers)>-><org.springframework.cache.concurrent.ConcurrentMapCacheManager: void setCacheNames(java.util.Collection)>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.Maps$KeySet: boolean isEmpty()>
<org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Properties)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String detectDriverForUrl(java.lang.String)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.springframework.http.converter.json.Jackson2ObjectMapperBuilder$CborFactoryInitializer: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void onExpiration(org.apache.shiro.session.Session,org.apache.shiro.session.ExpiredSessionException,org.apache.shiro.session.mgt.SessionKey)>-><org.apache.shiro.web.session.HttpServletSession: java.io.Serializable getId()>
<co.yiiu.pybbs.util.MyPage: com.baomidou.mybatisplus.extension.plugins.pagination.Page setAscs(java.util.List)>-><com.baomidou.mybatisplus.core.toolkit.CollectionUtils: boolean isNotEmpty(java.util.Collection)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration: void <init>()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$2: javax.management.MBeanServer getMBeanServer()>-><org.springframework.jmx.support.WebSphereMBeanServerFactoryBean: void afterPropertiesSet()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.Float: int compareTo(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<org.springframework.http.HttpHeaders: java.lang.String formatHeaders(org.springframework.util.MultiValueMap)>-><java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>
<java.util.concurrent.ThreadPoolExecutor: boolean remove(java.lang.Runnable)>-><java.util.concurrent.PriorityBlockingQueue: boolean remove(java.lang.Object)>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean entityManagerFactory(org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder)>-><org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: boolean isJta()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.web.ResourceProperties)>-><org.springframework.boot.web.servlet.context.XmlServletWebServerApplicationContext: void <init>()>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.boot.autoconfigure.mail.MailProperties,org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.mail.javamail.JavaMailSenderImpl: void setJavaMailProperties(java.util.Properties)>
<org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: java.lang.Object next()>-><org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap access$300(org.apache.commons.collections.FastHashMap$CollectionView)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool: java.time.Duration getKeepAlive()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties getRestClientPropertiesInstance()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSubjectFactory(org.apache.shiro.mgt.SubjectFactory)>
<org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.web.ResourceProperties)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream flatMap(java.util.function.Function)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><freemarker.ext.beans.CollectionAdapter$1: java.lang.Object next()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: int compareTo(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean isEmpty()>-><java.util.concurrent.PriorityBlockingQueue: int size()>
<org.elasticsearch.common.xcontent.NamedXContentRegistry$Entry: void <init>(java.lang.Class,org.elasticsearch.common.ParseField,org.elasticsearch.common.xcontent.ContextParser)>-><java.lang.Object: void <init>()>
<java.util.logging.StreamHandler: void configure()>-><java.util.logging.StreamHandler: void setEncoding(java.lang.String)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.lang.Integer: int compareTo(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.JdbcProperties getJdbcPropertiesInstance()>
<org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.util.function.Supplier)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.joda.time.LocalDateTime: int compareTo(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: java.util.Properties asProperties(java.util.Map)>-><java.util.Hashtable: void putAll(java.util.Map)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><org.apache.shiro.session.mgt.DelegatingSession: java.io.Serializable getId()>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: java.lang.String getCharsetName()>-><java.nio.charset.Charset: java.lang.String name()>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor build(java.lang.Class)>-><org.springframework.beans.BeanUtils: java.lang.Object instantiateClass(java.lang.Class)>
<org.springframework.boot.info.GitProperties: java.lang.Long parseEpochSecond(java.lang.String)>-><java.lang.Long: long parseLong(java.lang.String)>
<org.springframework.boot.web.servlet.server.StaticResourceJars: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: void <init>(org.springframework.core.io.Resource)>-><org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: com.hazelcast.config.Config getConfig(org.springframework.core.io.Resource)>
<org.springframework.context.support.AbstractApplicationContext: boolean isSingleton(java.lang.String)>-><org.springframework.context.support.AbstractRefreshableApplicationContext: org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory()>
<org.elasticsearch.common.ParseField: void <init>(java.lang.String,java.lang.String[])>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayProperties: void <init>()>-><java.util.ArrayList: void <init>(java.util.Collection)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.apache.shiro.session.mgt.eis.MemorySessionDAO: void delete(org.apache.shiro.session.Session)>-><org.apache.shiro.web.session.HttpServletSession: java.io.Serializable getId()>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void setCacheNames(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.cglib.core.EmitUtils$5: java.lang.Object transform(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpProperties$Encoding: boolean shouldForce(org.springframework.boot.autoconfigure.http.HttpProperties$Encoding$Type)>-><java.lang.Boolean: boolean booleanValue()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><com.alibaba.fastjson.JSONArray: java.util.Iterator iterator()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setTimeZone(java.util.TimeZone)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper alwaysApplyingWhenNonNull()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Properties)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.info.GitProperties: java.lang.Long parseEpochSecond(java.lang.String)>-><java.lang.Long: java.lang.Long valueOf(long)>
<org.springframework.boot.task.TaskSchedulerBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$1: javax.management.MBeanServer getMBeanServer()>-><org.springframework.jndi.JndiLocatorDelegate: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: boolean isIgnoreFutureMigrations()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.springframework.boot.info.GitProperties: void <init>(java.util.Properties)>-><org.springframework.boot.info.InfoProperties: void <init>(java.util.Properties)>
<org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler: void run()>-><ch.qos.logback.classic.Logger: boolean isDebugEnabled()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.elasticsearch.client.RestClientBuilder: org.elasticsearch.client.RestClientBuilder setRequestConfigCallback(org.elasticsearch.client.RestClientBuilder$RequestConfigCallback)>-><java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>
<java.util.LinkedList: boolean addAll(int,java.util.Collection)>-><org.apache.commons.collections.FastHashMap$CollectionView: java.lang.Object[] toArray()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<freemarker.ext.beans.StringModel: java.lang.String getAsString()>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties getWebMvcPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: void setMessageCodesResolverFormat(org.springframework.validation.DefaultMessageCodesResolver$Format)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.JumboEnumSet: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<java.util.concurrent.PriorityBlockingQueue: boolean offer(java.lang.Object)>-><java.lang.NullPointerException: void <init>()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.AbstractList$Itr: java.lang.Object next()>
<org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler: void run()>-><ch.qos.logback.classic.Logger: void debug(java.lang.String)>
<java.util.logging.Handler: void reportError(java.lang.String,java.lang.Exception,int)>-><java.lang.Throwable: void printStackTrace()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.apache.shiro.spring.config.ShiroBeanConfiguration: void <init>()>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void setCacheNames(java.util.Collection)>-><java.util.ArrayList$Itr: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>
<org.springframework.boot.autoconfigure.jackson.JacksonProperties: void <init>()>-><java.lang.Object: void <init>()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List extractPartConverters(org.springframework.http.converter.FormHttpMessageConverter)>-><org.springframework.util.ReflectionUtils: java.lang.reflect.Field findField(java.lang.Class,java.lang.String)>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>
<java.util.logging.StreamHandler: void configure()>-><java.util.logging.SimpleFormatter: void <init>()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl: java.lang.Boolean getEnabled()>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><java.rmi.server.LogStream: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.joda.time.field.MillisDurationField: int compareTo(java.lang.Object)>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.web.client.RestTemplate$HeadersExtractor: void <init>(org.springframework.web.client.RestTemplate$1)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.joda.time.base.AbstractDuration: int compareTo(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration: org.springframework.cache.concurrent.ConcurrentMapCacheManager cacheManager(org.springframework.boot.autoconfigure.cache.CacheProperties,org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: org.springframework.boot.web.client.RestTemplateBuilder restTemplateBuilder(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>
<java.util.EnumMap$Values: boolean remove(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.lang.String getRepeatableSqlMigrationPrefix()>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><java.util.Date: int hashCode()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties getWebMvcPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: void setLogResolvedException(boolean)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.web.ResourceProperties)>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource)>-><org.springframework.util.DefaultPropertiesPersister: void <init>()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.logging.StreamHandler: void flush()>-><java.util.logging.Handler: void reportError(java.lang.String,java.lang.Exception,int)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.rmi.server.LogStream: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.util.DefaultPropertiesPersister: void load(java.util.Properties,java.io.Reader)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: org.flywaydb.core.api.MigrationVersion getTarget()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: org.flywaydb.core.api.MigrationVersion getTarget()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.web.servlet.config.annotation.WebMvcConfigurer getWebMvcConfigurer()>
<org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: void <init>(org.apache.commons.collections.FastHashMap$CollectionView)>-><org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap access$300(org.apache.commons.collections.FastHashMap$CollectionView)>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigDecimal castToBigDecimal(java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.math.BigInteger: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.GitProperties gitProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git: java.nio.charset.Charset getEncoding()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties: org.springframework.core.io.Resource resolveConfigLocation()>-><org.springframework.util.Assert: void isTrue(boolean,java.util.function.Supplier)>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getProvidedNamedXContents()>-><java.util.ArrayList: void <init>()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigDecimal castToBigDecimal(java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties getOAuth2ResourceServerPropertiesInstance()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.util.List getSchemas()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.apache.shiro.session.mgt.SimpleSession: boolean onEquals(org.apache.shiro.session.mgt.SimpleSession)>-><java.util.Date: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration: org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer standardGsonBuilderCustomizer(org.springframework.boot.autoconfigure.gson.GsonProperties)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.joda.time.LocalDate: int compareTo(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.springframework.web.client.RestTemplate: org.springframework.web.util.DefaultUriBuilderFactory initUriTemplateHandler()>-><org.springframework.web.util.DefaultUriBuilderFactory: void <init>()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void doValidate(org.apache.shiro.session.Session)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>-><org.springframework.util.MimeType: void <init>(org.springframework.util.MimeType,java.util.Map)>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.web.servlet.error.DefaultErrorAttributes errorAttributes()>-><org.springframework.boot.autoconfigure.web.ErrorProperties: boolean isIncludeException()>
<org.elasticsearch.client.RestClientBuilder: org.elasticsearch.client.RestClient build()>-><org.elasticsearch.client.RestClient$FailureListener: void <init>()>
<javax.crypto.Cipher$Transform: int supportsModePadding(java.security.Provider$Service)>-><javax.crypto.Cipher$Transform: int supportsPadding(java.security.Provider$Service)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void onInvalidation(org.apache.shiro.session.Session,org.apache.shiro.session.InvalidSessionException,org.apache.shiro.session.mgt.SessionKey)>-><ch.qos.logback.classic.Logger: void trace(java.lang.String,java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.lang.String getTarget()>
<org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers platformTransactionManagerCustomizers(org.springframework.beans.factory.ObjectProvider)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.elasticsearch.client.Node: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<sun.rmi.runtime.Log$LoggerLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><sun.rmi.runtime.Log: java.lang.String[] access$200()>
<ch.qos.logback.classic.spi.ThrowableProxy: void <init>(java.lang.Throwable)>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><ch.qos.logback.classic.Logger: boolean isDebugEnabled()>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void <init>()>-><org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void <init>(java.time.Duration,java.time.Duration,java.lang.Boolean)>
<org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration: org.springframework.data.mongodb.core.mapping.MongoMappingContext mongoMappingContext(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.mongo.MongoProperties,org.springframework.data.mongodb.core.convert.MongoCustomConversions)>-><org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.Set scan(java.lang.Class[])>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: java.lang.String[] getPackagesToScan()>-><org.springframework.boot.autoconfigure.AutoConfigurationPackages: boolean has(org.springframework.beans.factory.BeanFactory)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setUndertowServletWebServerFactory(org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$WebSecurityConfiguration: void <init>()>
<org.springframework.beans.CachedIntrospectionResults: boolean isClassLoaderAccepted(java.lang.ClassLoader)>-><org.springframework.util.LinkedCaseInsensitiveMap$KeySetIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration: org.springframework.boot.web.servlet.FilterRegistrationBean forwardedHeaderFilter()>-><org.springframework.boot.web.servlet.RegistrationBean: void setOrder(int)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.apache.shiro.session.mgt.SimpleSession: void validate()>-><org.apache.shiro.session.StoppedSessionException: void <init>(java.lang.String)>
<com.alibaba.fastjson.serializer.MiscCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder jwtDecoderByPublicKeyValue()>-><java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.AbstractMap$1: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: java.lang.String getThreadNamePrefix()>
<org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source when(java.util.function.Predicate)>-><java.util.function.Predicate: java.util.function.Predicate and(java.util.function.Predicate)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>-><org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: void <init>(java.net.URL)>-><java.net.URL: void <init>(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.apache.http.client.config.RequestConfig: org.apache.http.client.config.RequestConfig$Builder custom()>
<java.util.concurrent.PriorityBlockingQueue: boolean offer(java.lang.Object)>-><java.util.concurrent.PriorityBlockingQueue: void tryGrow(java.lang.Object[],int)>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: java.lang.String[] getMappingResources()>-><org.springframework.boot.autoconfigure.orm.jpa.JpaProperties: java.util.List getMappingResources()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.apache.poi.hssf.usermodel.HSSFRow: int compareTo(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setBasicErrorController(org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler: void <init>()>-><org.springframework.scheduling.concurrent.ExecutorConfigurationSupport: void <init>()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setBaselineDescription(java.lang.String)>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isBaselineOnMigrate()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isBaselineOnMigrate()>
<javax.crypto.Cipher$Transform: int supportsModePadding(java.security.Provider$Service)>-><javax.crypto.Cipher$Transform: int supportsMode(java.security.Provider$Service)>
<org.apache.shiro.session.mgt.DefaultSessionManager: void onStop(org.apache.shiro.session.Session)>-><org.apache.shiro.session.mgt.SimpleSession: java.util.Date getStopTimestamp()>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.smile.MappingJackson2SmileHttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>
<org.apache.shiro.session.mgt.SimpleSession: boolean isTimedOut()>-><org.slf4j.helpers.SubstituteLogger: boolean isTraceEnabled()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari: com.zaxxer.hikari.HikariDataSource dataSource(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties)>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String getName()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void setDefaultDomain(java.lang.String)>-><org.springframework.jmx.export.naming.MetadataNamingStrategy: void setDefaultDomain(java.lang.String)>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigInteger castToBigInteger(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>-><java.lang.NullPointerException: void <init>(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.context.annotation.MBeanExportConfiguration: void <init>()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.lang.String getInstalledBy()>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isPlaceholderReplacement()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isPlaceholderReplacement()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: void <init>()>-><java.lang.Object: void <init>()>
<org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: boolean hasNext()>-><org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap access$300(org.apache.commons.collections.FastHashMap$CollectionView)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.LinkedList: boolean remove(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder customizers(java.lang.Iterable)>-><org.springframework.boot.task.TaskSchedulerBuilder: void <init>(java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,java.util.Set)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><org.apache.shiro.session.mgt.SimpleSession: java.io.Serializable getId()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadSource(org.springframework.core.io.Resource,java.nio.charset.Charset)>-><org.springframework.core.io.support.EncodedResource: void <init>(org.springframework.core.io.Resource,java.nio.charset.Charset)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHttpMessageConverters(org.springframework.boot.autoconfigure.http.HttpMessageConverters)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.boot.autoconfigure.mail.MailProperties,org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.mail.javamail.JavaMailSenderImpl: void setDefaultEncoding(java.lang.String)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.apache.poi.hssf.record.common.UnicodeString: int compareTo(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration: org.springframework.data.mongodb.core.convert.MongoCustomConversions mongoCustomConversions()>-><java.util.Collections: java.util.List emptyList()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void onExpiration(org.apache.shiro.session.Session,org.apache.shiro.session.ExpiredSessionException,org.apache.shiro.session.mgt.SessionKey)>-><ch.qos.logback.classic.Logger: void trace(java.lang.String,java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath)>-><java.lang.Object: void <init>()>
<javax.crypto.CryptoPermission: boolean impliesParameterSpec(boolean,java.security.spec.AlgorithmParameterSpec)>-><java.lang.Object: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown: boolean isAwaitTermination()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.web.servlet.MultipartProperties)>-><org.springframework.boot.autoconfigure.web.servlet.MultipartProperties: void <init>()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.boot.autoconfigure.mail.MailProperties,org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.boot.autoconfigure.mail.MailProperties: java.nio.charset.Charset getDefaultEncoding()>
<org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration: org.springframework.cache.support.SimpleCacheManager cacheManager(org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers,java.util.Collection)>-><org.springframework.cache.support.SimpleCacheManager: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor preserveErrorControllerTargetClassPostProcessor()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.joda.time.LocalDate: int compareTo(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerJwtConfiguration$OAuth2WebSecurityConfigurerAdapter: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter jwtDecoderWebSecurityConfigurerAdapter()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<java.util.logging.Handler: void setFormatter(java.util.logging.Formatter)>-><java.util.logging.Handler: void checkPermission()>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: java.nio.charset.Charset getEncoding()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: java.nio.charset.Charset getEncoding()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<java.util.logging.StreamHandler: void configure()>-><java.util.logging.LogManager: java.lang.String getStringProperty(java.lang.String,java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHazelcastInstance(com.hazelcast.core.HazelcastInstance)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setSqlMigrationSeparator(java.lang.String)>
<org.springframework.boot.autoconfigure.hateoas.HypermediaHttpMessageConverterConfiguration$HalMessageConverterSupportedMediaTypesCustomizer: void <init>()>-><java.lang.Object: void <init>()>
<java.util.logging.Handler: void setLevel(java.util.logging.Level)>-><java.lang.NullPointerException: void <init>()>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><org.elasticsearch.client.XPackClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>
<java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection,int)>-><java.lang.NullPointerException: void <init>()>
<com.google.common.collect.Maps$Values: boolean remove(java.lang.Object)>-><com.google.common.collect.ForwardingMap: java.util.Set entrySet()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setBucket(com.couchbase.client.java.Bucket)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.apache.shiro.session.InvalidSessionException: void <init>(java.lang.String)>-><org.apache.shiro.session.SessionException: void <init>(java.lang.String)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration: org.springframework.web.servlet.DispatcherServlet dispatcherServlet(org.springframework.boot.autoconfigure.http.HttpProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.AbstractMap$2$1: boolean hasNext()>
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: org.springframework.core.env.ConfigurableEnvironment createEnvironment()>-><org.springframework.web.context.support.StandardServletEnvironment: void <init>()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.core.io.support.PropertiesLoaderUtils: java.util.Properties loadProperties(org.springframework.core.io.support.EncodedResource)>-><java.util.Properties: void <init>()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: void <init>(org.springframework.boot.autoconfigure.orm.jpa.JpaProperties)>-><org.springframework.boot.autoconfigure.orm.jpa.JpaProperties: void <init>()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.http.HttpProperties getHttpPropertiesInstance()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder poolSize(int)>-><org.springframework.boot.task.TaskSchedulerBuilder: void <init>(java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,java.util.Set)>
<org.elasticsearch.client.RestClient: void setNodes(java.util.Collection)>-><java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.boot.autoconfigure.mail.MailProperties,org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.mail.javamail.JavaMailSenderImpl: void setPassword(java.lang.String)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment couchbaseEnvironment()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><com.couchbase.client.java.env.DefaultCouchbaseEnvironment: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder builder()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setJodaDateTimeFormat(java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: java.lang.String getPrefix()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.transaction.reactive.TransactionalOperator getTransactionalOperator()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.elasticsearch.client.IndicesClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: org.elasticsearch.client.RestClientBuilder elasticsearchRestClientBuilder(org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties,org.springframework.beans.factory.ObjectProvider)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void <init>(boolean)>-><org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void <init>(boolean,org.springframework.core.env.Environment)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setView(org.springframework.web.servlet.View)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><java.util.ArrayList: boolean isEmpty()>
<org.springframework.boot.autoconfigure.hateoas.HypermediaHttpMessageConverterConfiguration$HalMessageConverterSupportedMediaTypesCustomizer: void <init>(org.springframework.boot.autoconfigure.hateoas.HypermediaHttpMessageConverterConfiguration$1)>-><org.springframework.boot.autoconfigure.hateoas.HypermediaHttpMessageConverterConfiguration$HalMessageConverterSupportedMediaTypesCustomizer: void <init>()>
<org.apache.shiro.session.mgt.SimpleSession: void validate()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigInteger castToBigInteger(java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.String[] getSchemas()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.String[] getSchemas()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><org.springframework.ui.freemarker.FreeMarkerConfigurationFactory: void setPreferFileSystemAccess(boolean)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String detectFallbackUrl(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer tomcatServletWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>
<org.springframework.http.client.support.HttpAccessor: void <init>()>-><java.lang.Object: java.lang.Class getClass()>
<com.alibaba.fastjson.parser.DefaultJSONParser: java.lang.Object parseObject(java.util.Map,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.springframework.boot.autoconfigure.AutoConfigurationPackages: java.util.List get(org.springframework.beans.factory.BeanFactory)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration: org.springframework.data.mongodb.core.mapping.MongoMappingContext mongoMappingContext(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.mongo.MongoProperties,org.springframework.data.mongodb.core.convert.MongoCustomConversions)>-><org.springframework.boot.context.properties.PropertyMapper$Source: void to(java.util.function.Consumer)>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean equals(java.lang.Object)>-><com.google.common.collect.ForwardingMap: java.util.Set keySet()>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.Set scan(java.lang.Class[])>-><org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.String getBeanClassName()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.config.ShiroConfig: org.apache.shiro.web.mgt.CookieRememberMeManager rememberMeManager()>
<sun.rmi.runtime.Log$LogStreamLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.lang.StringBuilder: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.core.Constants: java.util.Set getValues(java.lang.String)>-><java.util.HashMap: void forEach(java.util.function.BiConsumer)>
<java.util.concurrent.ConcurrentMap: void forEach(java.util.function.BiConsumer)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: java.util.Iterator iterator()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setThreadPoolTaskExecutor(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String detectFallbackUrl(java.lang.String)>-><org.flywaydb.core.api.FlywayException: void <init>(java.lang.String)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari: com.zaxxer.hikari.HikariDataSource dataSource(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties)>-><org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration: java.lang.Object createDataSource(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,java.lang.Class)>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<org.springframework.core.io.support.EncodedResource: java.io.InputStream getInputStream()>-><org.springframework.core.io.UrlResource: java.io.InputStream getInputStream()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validate(org.apache.shiro.session.Session,org.apache.shiro.session.mgt.SessionKey)>-><org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void onInvalidation(org.apache.shiro.session.Session,org.apache.shiro.session.InvalidSessionException,org.apache.shiro.session.mgt.SessionKey)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.cluster.ClusterInfo couchbaseClusterInfo()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><org.springframework.util.CollectionUtils$MultiValueMapAdapter: java.util.Set entrySet()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.context.properties.PropertyMapper$Source: void to(java.util.function.Consumer)>
<java.text.AttributeEntry: int hashCode()>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder json()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setPort(java.lang.Integer)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters$1: java.util.List defaultMessageConverters()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void configurePartConverters(org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter,java.util.Collection)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration: org.springframework.data.mongodb.core.mapping.MongoMappingContext mongoMappingContext(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.mongo.MongoProperties,org.springframework.data.mongodb.core.convert.MongoCustomConversions)>-><org.springframework.data.mongodb.core.mapping.MongoMappingContext: void setSimpleTypeHolder(org.springframework.data.mapping.model.SimpleTypeHolder)>
<java.rmi.server.LogStream: void write(int)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment couchbaseEnvironment()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<ch.qos.logback.core.joran.GenericConfigurator: void doConfigure(java.net.URL)>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: java.io.InputStream getInputStream()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder threadNamePrefix(java.lang.String)>-><org.springframework.boot.task.TaskSchedulerBuilder: void <init>(java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,java.util.Set)>
<java.rmi.server.LogStream: void write(int)>-><java.io.PrintStream: void setError()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration: org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean dispatcherServletRegistration(org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.web.servlet.DynamicRegistrationBean: void setName(java.lang.String)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.cluster.ClusterInfo couchbaseClusterInfo()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void doValidate(org.apache.shiro.session.Session)>-><java.lang.StringBuilder: void <init>()>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.StringHttpMessageConverter: void <init>()>
<org.springframework.cglib.core.EmitUtils$5: java.lang.Object transform(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: boolean usesVendorLocation(java.util.Collection)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.boot.web.servlet.DynamicRegistrationBean: void <init>()>-><java.util.LinkedHashMap: void <init>()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder queueCapacity(int)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<java.util.concurrent.PriorityBlockingQueue: void tryGrow(java.lang.Object[],int)>-><java.lang.OutOfMemoryError: void <init>()>
<org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler: void run()>-><org.slf4j.helpers.SubstituteLogger: boolean isDebugEnabled()>
<java.util.LinkedList: boolean remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<freemarker.ext.beans.StringModel: java.lang.String getAsString()>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: boolean hasNext()>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean build()>-><org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean: void setPersistenceUnitManager(org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.logging.StreamHandler: void setEncoding(java.lang.String)>-><java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration: org.springframework.boot.autoconfigure.context.MessageSourceProperties messageSourceProperties()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.boot.autoconfigure.web.ErrorProperties,java.util.List)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer(org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientFallbackConfiguration: org.elasticsearch.client.RestClient elasticsearchRestClient(org.elasticsearch.client.RestClientBuilder)>-><org.elasticsearch.client.RestClientBuilder: org.elasticsearch.client.RestClient build()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.joda.time.base.AbstractDuration: int compareTo(java.lang.Object)>
<org.flywaydb.core.internal.jdbc.DriverDataSource: void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Properties)>-><org.flywaydb.core.internal.util.StringUtils: boolean hasLength(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setErrorOverrides(java.lang.String[])>
<org.springframework.context.support.AbstractApplicationContext: org.springframework.beans.factory.ObjectProvider getBeanProvider(org.springframework.core.ResolvableType)>-><org.springframework.context.support.AbstractRefreshableApplicationContext: org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory()>
<java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.feed.RssChannelHttpMessageConverter: void <init>()>
<java.util.concurrent.PriorityBlockingQueue: void removeAt(int)>-><java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>
<org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateCustomizer[])>-><java.util.Collections: java.util.Set emptySet()>
<java.text.AttributeEntry: int hashCode()>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration: org.springframework.transaction.support.TransactionTemplate transactionTemplate(org.springframework.transaction.PlatformTransactionManager)>
<org.springframework.web.client.RestTemplate$HeadersExtractor: void <init>()>-><java.lang.Object: void <init>()>
<com.alibaba.fastjson.serializer.SerializeFilterable: java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>-><java.lang.Class: boolean isAssignableFrom(java.lang.Class)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer servletWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.List getPackages()>-><org.springframework.boot.autoconfigure.AutoConfigurationPackages: java.util.List get(org.springframework.beans.factory.BeanFactory)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>-><java.util.ArrayList: java.util.Iterator iterator()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints: int getKeyValue()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder: java.util.Set copiedSetOf(java.lang.Object[])>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void <init>()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: java.lang.Object[] toArray(java.lang.Object[])>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder awaitTerminationPeriod(java.time.Duration)>
<com.google.common.collect.ForwardingMap: void clear()>-><java.util.concurrent.ConcurrentHashMap: void clear()>
<com.alibaba.fastjson.parser.DefaultJSONParser: java.lang.Object parseObject(java.util.Map,java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.time.LocalDate: int compareTo(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.Short: int compareTo(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.flywaydb.core.internal.jdbc.DriverDataSource: void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Properties)>-><org.flywaydb.core.api.FlywayException: void <init>(java.lang.String,java.lang.Throwable)>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter: void <init>()>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder cbor()>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.MethodValidationPostProcessor methodValidationPostProcessor(org.springframework.core.env.Environment,javax.validation.Validator)>-><org.springframework.aop.framework.ProxyConfig: void setProxyTargetClass(boolean)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setTablespace(java.lang.String)>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder customizers(java.lang.Iterable)>-><org.springframework.boot.task.TaskSchedulerBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>-><java.util.HashMap: boolean isEmpty()>
<java.io.ObjectOutputStream$BlockDataOutputStream: void close()>-><java.io.FilterOutputStream: void close()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadSource(org.springframework.core.io.Resource,java.nio.charset.Charset)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.lang.Boolean getOracleSqlplusWarn()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration: void <init>()>
<org.springframework.core.Constants: java.util.Set getValues(java.lang.String)>-><java.lang.String: java.lang.String trim()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><freemarker.ext.beans.CollectionAdapter$1: boolean hasNext()>
<org.apache.shiro.spring.LifecycleBeanPostProcessor: void <init>(int)>-><java.lang.Object: void <init>()>
<org.apache.shiro.session.mgt.DefaultSessionManager: void afterExpired(org.apache.shiro.session.Session)>-><org.apache.shiro.session.mgt.DefaultSessionManager: boolean isDeleteInvalidSessions()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.ConcurrentHashMap$KeySetView: java.util.Iterator iterator()>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: java.io.Serializable getId()>
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: org.springframework.core.io.Resource getResourceByPath(java.lang.String)>-><org.springframework.web.context.support.ServletContextResource: void <init>(javax.servlet.ServletContext,java.lang.String)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.task.TaskExecutionProperties: void <init>()>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration: org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean dispatcherServletRegistration(org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet: java.lang.String getPath()>
<org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.reactive.TomcatReactiveWebServerFactoryCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>-><java.lang.Object: void <init>()>
<java.util.logging.SimpleFormatter: void <init>()>-><java.util.Date: void <init>()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setRestClientBuilder(org.elasticsearch.client.RestClientBuilder)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<com.google.common.collect.ForwardingMap: boolean isEmpty()>-><com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.Map delegate()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<org.apache.shiro.mgt.RealmSecurityManager: void applyEventBusToRealms()>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: java.util.List sortErrorViewResolvers(java.util.List)>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><java.util.Collections$UnmodifiableCollection: boolean isEmpty()>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getObject()>-><javax.validation.Validation$GenericBootstrapImpl: javax.validation.Configuration configure()>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.nio.charset.Charset: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: boolean hasNext()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<org.elasticsearch.client.MachineLearningClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>-><java.lang.Object: void <init>()>
<org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: java.lang.Object next()>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.http.client.support.InterceptingHttpAccessor: void <init>()>-><java.util.ArrayList: void <init>()>
<java.util.concurrent.ConcurrentMap: void forEach(java.util.function.BiConsumer)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<sun.rmi.runtime.Log$LoggerLog$2: java.lang.Void run()>-><java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>
<org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>-><java.lang.Throwable: java.lang.String getMessage()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.ByteArrayHttpMessageConverter: void <init>()>
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.String,java.lang.Class)>-><org.springframework.context.support.AbstractRefreshableApplicationContext: org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.List getPackages()>-><org.springframework.boot.autoconfigure.AutoConfigurationPackages: boolean has(org.springframework.beans.factory.BeanFactory)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.apache.shiro.session.mgt.eis.MemorySessionDAO: void delete(org.apache.shiro.session.Session)>-><java.lang.NullPointerException: void <init>(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setForwardedHeaderTransformer(org.springframework.web.server.adapter.ForwardedHeaderTransformer)>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: byte[] getKeySpec(java.lang.String)>-><java.util.Base64: java.util.Base64$Decoder getMimeDecoder()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters$1: void <init>(org.springframework.boot.autoconfigure.http.HttpMessageConverters)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: org.flywaydb.core.Flyway flyway(org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,org.springframework.core.io.ResourceLoader,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean build()>-><org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder: org.springframework.orm.jpa.JpaVendorAdapter access$200(org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder)>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties getHazelcastPropertiesInstance()>
<java.rmi.server.LogStream: void write(int)>-><java.io.ByteArrayOutputStream: void reset()>
<org.apache.shiro.spring.ShiroEventBusBeanPostProcessor: void <init>(org.apache.shiro.event.EventBus)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><java.time.Duration: long toMillis()>
<sun.rmi.runtime.Log$LoggerLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.lang.Thread: java.lang.Thread currentThread()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setSkipDefaultResolvers(boolean)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties getWebMvcPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: void setDispatchTraceRequest(boolean)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>-><java.util.ArrayList: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration: org.springframework.data.mongodb.core.MongoDbFactorySupport mongoDbFactory(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.boot.autoconfigure.mongo.MongoProperties)>
<org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: void <init>(org.apache.commons.collections.FastHashMap$CollectionView)>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer errorPageCustomizer(org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.config.ShiroConfig: org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator defaultAdvisorAutoProxyCreator()>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void setCacheNames(java.util.Collection)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source whenNonNull()>-><org.springframework.boot.context.properties.PropertyMapper$NullPointerExceptionSafeSupplier: void <init>(java.util.function.Supplier)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.IdentityHashMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Properties: void <init>()>
<org.elasticsearch.client.RestClientBuilder$1: void <init>(org.elasticsearch.client.RestClientBuilder)>-><java.lang.Object: void <init>()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.gson.GsonProperties getGsonPropertiesInstance()>-><org.springframework.boot.autoconfigure.gson.GsonProperties: void setSerializeNulls(java.lang.Boolean)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMyCredentialsMatcher(co.yiiu.pybbs.config.realm.MyCredentialsMatcher)>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><sun.rmi.runtime.NewThreadAction: java.lang.Object run()>
<java.io.FileDescriptor: void closeAll(java.io.Closeable)>-><java.io.PrintStream: void close()>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: com.hazelcast.config.Config getConfig(org.springframework.core.io.Resource)>-><org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: com.hazelcast.config.Config createConfig(java.net.URL)>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.LocalValidatorFactoryBean defaultValidator()>-><org.springframework.boot.validation.MessageInterpolatorFactory: void <init>()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>-><org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper,org.springframework.http.MediaType)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setMaxHttpHeaderSize(org.springframework.util.unit.DataSize)>
<java.util.logging.StreamHandler: void flushAndClose()>-><java.util.logging.Handler: java.util.logging.Formatter getFormatter()>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: void <init>(org.springframework.boot.web.servlet.ServletRegistrationBean[])>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isGroup()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isGroup()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<org.apache.shiro.session.mgt.AbstractNativeSessionManager: void notifyStop(org.apache.shiro.session.Session)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper get()>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.SubList$1: boolean hasNext()>
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>-><sun.net.www.MessageHeader: void set(java.lang.String,java.lang.String)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.mail.MailProperties getMailPropertiesInstance()>-><org.springframework.boot.autoconfigure.mail.MailProperties: void setUsername(java.lang.String)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.springframework.boot.web.servlet.ServletRegistrationBean: void <init>(javax.servlet.Servlet,boolean,java.lang.String[])>-><org.springframework.boot.web.servlet.DynamicRegistrationBean: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<java.util.logging.StreamHandler: void configure()>-><java.util.logging.LogManager: java.util.logging.Formatter getFormatterProperty(java.lang.String,java.util.logging.Formatter)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<java.util.logging.StreamHandler: void flushAndClose()>-><java.util.logging.Handler: void checkPermission()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.util.MimeType: java.lang.String toString()>
<org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateCustomizer[])>-><org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void <init>()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.Instant: int compareTo(java.lang.Object)>
<org.springframework.boot.context.properties.PropertyMapper$Source: void to(java.util.function.Consumer)>-><org.springframework.boot.context.properties.PropertyMapper$NullPointerExceptionSafeSupplier: java.lang.Object get()>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: boolean isExpired()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers getCacheManagerCustomizersInstance()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.rmi.server.LogStream: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,java.util.List)>-><java.lang.Object: void <init>()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.ArrayList$Itr: boolean hasNext()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<java.util.logging.StreamHandler: void configure()>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<sun.rmi.runtime.NewThreadAction: java.lang.Thread run()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<java.util.Collections$SetFromMap: boolean contains(java.lang.Object)>-><org.springframework.util.LinkedCaseInsensitiveMap: boolean containsKey(java.lang.Object)>
<org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration: org.springframework.data.mongodb.core.MongoDbFactorySupport mongoDbFactory(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.boot.autoconfigure.mongo.MongoProperties)>-><org.springframework.data.mongodb.core.SimpleMongoClientDbFactory: void <init>(com.mongodb.client.MongoClient,java.lang.String)>
<org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: org.springframework.boot.web.client.RestTemplateBuilder restTemplateBuilder(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder messageConverters(java.util.Collection)>
<org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler: void run()>-><java.lang.StringBuilder: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setEntityManagerFactoryBuilder(org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder)>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor openEntityManagerInViewInterceptor()>-><org.apache.commons.logging.LogAdapter$Slf4jLog: void warn(java.lang.Object)>
<java.util.EnumMap$Values: boolean remove(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder poolSize(int)>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>-><java.util.HashMap: void putAll(java.util.Map)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><freemarker.ext.beans.HashAdapter$1$1: boolean hasNext()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigInteger castToBigInteger(java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<sun.misc.URLClassPath$Loader$1: java.io.InputStream getInputStream()>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: java.io.InputStream getInputStream()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.GitProperties gitProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>
<org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration: org.springframework.data.mongodb.core.mapping.MongoMappingContext mongoMappingContext(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.mongo.MongoProperties,org.springframework.data.mongodb.core.convert.MongoCustomConversions)>-><org.springframework.data.mongodb.core.mapping.MongoMappingContext: void setInitialEntitySet(java.util.Set)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.config.ShiroConfig: org.apache.shiro.spring.web.ShiroFilterFactoryBean shiroFilterFactoryBean(org.apache.shiro.web.mgt.DefaultWebSecurityManager)>
<org.springframework.boot.info.GitProperties: void coercePropertyToEpoch(java.util.Properties,java.lang.String)>-><org.springframework.boot.info.GitProperties: java.lang.String coerceToEpoch(java.lang.String)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void configureMessageConverters(java.util.List)>
<org.springframework.boot.autoconfigure.flyway.FlywayMigrationScriptMissingException: void <init>(java.util.List)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration: org.springframework.boot.jackson.JsonComponentModule jsonComponentModule()>
<org.springframework.boot.autoconfigure.flyway.FlywayMigrationScriptMissingException: void <init>(java.util.List)>-><java.lang.RuntimeException: void <init>(java.lang.String)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.springframework.util.MimeType: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties: java.lang.String getPassword()>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><java.util.function.Function: java.util.function.Function identity()>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><org.elasticsearch.client.MachineLearningClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.AbstractList$Itr: boolean hasNext()>
<synthetic.method.FilterChainImpl: void <init>()>-><java.lang.Object: void <init>()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.core.io.support.EncodedResource: org.springframework.core.io.Resource getResource()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.core.io.ClassPathResource: java.lang.String getFilename()>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean build()>-><org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean: void setDataSource(javax.sql.DataSource)>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void <init>()>-><java.time.Duration: java.time.Duration ofSeconds(long)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.ProcessEnvironment$StringKeySet: java.util.Iterator iterator()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.config.ShiroConfig: org.apache.shiro.web.servlet.SimpleCookie rememberMeCookie()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setAuthenticationDatabase(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setSeparator(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.hateoas.HypermediaHttpMessageConverterConfiguration: org.springframework.boot.autoconfigure.hateoas.HypermediaHttpMessageConverterConfiguration$HalMessageConverterSupportedMediaTypesCustomizer halMessageConverterSupportedMediaTypeCustomizer()>
<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>-><org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: java.lang.Object next()>
<java.util.LinkedList: boolean remove(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void onExpiration(org.apache.shiro.session.Session,org.apache.shiro.session.ExpiredSessionException,org.apache.shiro.session.mgt.SessionKey)>-><org.apache.shiro.session.mgt.AbstractNativeSessionManager: void notifyExpiration(org.apache.shiro.session.Session)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer flywayInitializer(org.flywaydb.core.Flyway,org.springframework.beans.factory.ObjectProvider)>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: java.lang.String[] getMappingResources()>-><org.springframework.util.StringUtils: java.lang.String[] toStringArray(java.util.Collection)>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getDefaultNamedXContents()>-><org.elasticsearch.common.xcontent.NamedXContentRegistry$Entry: void <init>(java.lang.Class,org.elasticsearch.common.ParseField,org.elasticsearch.common.xcontent.ContextParser)>
<org.springframework.boot.autoconfigure.flyway.FlywayMigrationScriptMissingException: void <init>(java.util.List)>-><java.util.Vector: boolean isEmpty()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<org.apache.shiro.session.mgt.eis.MemorySessionDAO: java.util.Collection getActiveSessions()>-><org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><com.alibaba.fastjson.JSONArray: boolean isEmpty()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.springframework.jdbc.datasource.DataSourceUtils: java.sql.Connection fetchConnection(javax.sql.DataSource)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.sql.Connection getConnection()>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: java.util.Spliterator spliterator()>-><java.util.concurrent.ConcurrentHashMap$KeySetView: java.util.Spliterator spliterator()>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><org.elasticsearch.client.LicenseClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.core.io.FileSystemResource: java.lang.String getFilename()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setRestTemplateBuilder(org.springframework.boot.web.client.RestTemplateBuilder)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getServletUrlMapping()>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.lang.Boolean getBatch()>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: java.util.Date getStopTimestamp()>
<org.slf4j.event.EventRecodingLogger: void trace(java.lang.String,java.lang.Object)>-><org.slf4j.event.EventRecodingLogger: void recordEvent_1Args(org.slf4j.event.Level,org.slf4j.Marker,java.lang.String,java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.util.LinkedHashSet: void <init>(java.util.Collection)>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void <init>()>-><java.util.HashMap: void <init>()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<javax.crypto.Cipher: void chooseProvider(int,int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.AlgorithmParameters,java.security.SecureRandom)>-><javax.crypto.Cipher$Transform: int supportsModePadding(java.security.Provider$Service)>
<java.util.Optional: java.util.Optional map(java.util.function.Function)>-><java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>
<java.util.AbstractList: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>-><java.lang.Object: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: void <init>()>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><org.elasticsearch.client.SecurityClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>
<java.rmi.server.LogStream: void write(int)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.apache.http.impl.nio.client.HttpAsyncClientBuilder: org.apache.http.impl.nio.client.HttpAsyncClientBuilder setMaxConnPerRoute(int)>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.ReactiveJwtDecoder jwtDecoder()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt: java.lang.String getJwkSetUri()>
<org.apache.shiro.util.MapContext: java.util.Set entrySet()>-><java.util.HashMap: java.util.Set entrySet()>
<com.alibaba.fastjson.parser.DefaultJSONParser: java.lang.Object parseObject(java.util.Map,java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<sun.rmi.runtime.Log$LogStreamLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><sun.rmi.runtime.Log$LogStreamLog: boolean isLoggable(java.util.logging.Level)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.lang.Object)>
<java.text.AttributeEntry: int hashCode()>-><org.elasticsearch.client.Node: int hashCode()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<com.google.common.collect.ForwardingMap: boolean isEmpty()>-><java.util.concurrent.ConcurrentHashMap: boolean isEmpty()>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><java.util.stream.Stream: java.util.stream.Stream of(java.lang.Object[])>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String detectFallbackUrl(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastServerConfiguration$HazelcastServerConfigFileConfiguration: com.hazelcast.core.HazelcastInstance hazelcastInstance(org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties)>-><org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: void <init>(org.springframework.core.io.Resource)>
<org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory: void <init>()>-><org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getProvidedNamedXContents()>-><java.util.ServiceLoader$1: boolean hasNext()>
<org.springframework.context.annotation.MBeanExportConfiguration: org.springframework.jmx.export.annotation.AnnotationMBeanExporter mbeanExporter()>-><org.springframework.util.Assert: void state(boolean,java.lang.String)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.elasticsearch.client.RestClient: void setNodes(java.util.Collection)>-><java.util.Collections: java.util.List unmodifiableList(java.util.List)>
<org.springframework.boot.web.servlet.DynamicRegistrationBean: void setName(java.lang.String)>-><org.springframework.util.Assert: void hasLength(java.lang.String,java.lang.String)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool getPool()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean entityManagerFactory(org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder)>-><org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: java.lang.String[] getPackagesToScan()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration: org.springframework.data.mongodb.core.mapping.MongoMappingContext mongoMappingContext(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.mongo.MongoProperties,org.springframework.data.mongodb.core.convert.MongoCustomConversions)>-><org.springframework.data.mongodb.core.mapping.MongoMappingContext: void setFieldNamingStrategy(org.springframework.data.mapping.model.FieldNamingStrategy)>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.boot.autoconfigure.mail.MailProperties,org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.mail.javamail.JavaMailSenderImpl: void setProtocol(java.lang.String)>
<java.util.HashMap: int hash(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration: org.springframework.data.mongodb.core.MongoDbFactorySupport mongoDbFactory(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.boot.autoconfigure.mongo.MongoProperties)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<org.springframework.web.client.DefaultResponseErrorHandler: void <init>()>-><java.lang.Object: void <init>()>
<com.fasterxml.jackson.databind.util.StdDateFormat: com.fasterxml.jackson.databind.util.StdDateFormat withTimeZone(java.util.TimeZone)>-><java.util.SimpleTimeZone: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.SubList$1: boolean hasNext()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><java.rmi.server.LogStream: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.springframework.jmx.support.MBeanRegistrationSupport: void setRegistrationPolicy(org.springframework.jmx.support.RegistrationPolicy)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.util.JumboEnumSet: boolean isEmpty()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: java.lang.String[] getPackagesToScan()>-><org.springframework.boot.autoconfigure.domain.EntityScanPackages: org.springframework.boot.autoconfigure.domain.EntityScanPackages get(org.springframework.beans.factory.BeanFactory)>
<java.util.logging.StreamHandler: void <init>(java.io.OutputStream,java.util.logging.Formatter)>-><java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>
<co.yiiu.pybbs.PybbsApplication: void main(java.lang.String[])>-><co.yiiu.pybbs.PybbsApplication: void <init>()>
<org.slf4j.helpers.SubstituteLogger: void trace(java.lang.String,java.lang.Object)>-><org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>
<java.text.AttributeEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration: org.springframework.transaction.jta.JtaTransactionManager transactionManager(org.springframework.beans.factory.ObjectProvider)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.HashMap$KeySet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<com.fasterxml.jackson.dataformat.cbor.CBORFactory: void <init>(com.fasterxml.jackson.core.ObjectCodec)>-><com.fasterxml.jackson.core.JsonFactory: void <init>(com.fasterxml.jackson.core.ObjectCodec)>
<com.alibaba.fastjson.util.TypeUtils: java.lang.String castToString(java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void <init>()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><org.elasticsearch.client.RestClientBuilder$2: java.lang.Object run()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDefaultWebSecurityManager(org.apache.shiro.web.mgt.DefaultWebSecurityManager)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.WeakHashMap$KeySet: java.util.Iterator iterator()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.sql.Connection getConnection()>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String getUser()>
<org.springframework.core.io.support.PropertiesLoaderSupport: void <init>()>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers platformTransactionManagerCustomizers(org.springframework.beans.factory.ObjectProvider)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFlywaySchemaManagementProvider(org.springframework.boot.autoconfigure.flyway.FlywaySchemaManagementProvider)>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.elasticsearch.client.RestClient: org.elasticsearch.client.RestClientBuilder builder(org.apache.http.HttpHost[])>-><org.elasticsearch.client.RestClientBuilder: void <init>(java.util.List)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.apache.http.impl.nio.client.HttpAsyncClientBuilder: org.apache.http.impl.nio.client.HttpAsyncClientBuilder setSSLContext(javax.net.ssl.SSLContext)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.AbstractList: java.util.Iterator iterator()>
<java.net.URLClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: java.io.InputStream getInputStream()>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.web.client.RestTemplate: org.springframework.web.util.DefaultUriBuilderFactory initUriTemplateHandler()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder jwtDecoderByPublicKeyValue()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: byte[] getKeySpec(java.lang.String)>
<freemarker.template.DefaultObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<com.alibaba.fastjson.parser.DefaultJSONParser: java.lang.Object parseObject(java.util.Map,java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String detectFallbackUrl(java.lang.String)>-><org.flywaydb.core.internal.util.StringUtils: boolean hasText(java.lang.String)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><java.rmi.server.LogStream: java.lang.String toString()>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<freemarker.ext.beans.StringModel: java.lang.String getAsString()>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler: void run()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.apache.shiro.session.mgt.DelegatingSession: java.io.Serializable getId()>-><org.apache.shiro.session.mgt.DefaultSessionKey: java.io.Serializable getSessionId()>
<org.flywaydb.core.api.configuration.ClassicConfiguration: void setDataSource(java.lang.String,java.lang.String,java.lang.String)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<org.elasticsearch.client.RestClientBuilder: org.apache.http.impl.nio.client.CloseableHttpAsyncClient createHttpClient()>-><org.apache.http.impl.nio.client.HttpAsyncClientBuilder: org.apache.http.impl.nio.client.HttpAsyncClientBuilder setTargetAuthenticationStrategy(org.apache.http.client.AuthenticationStrategy)>
<java.util.AbstractList: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<sun.rmi.runtime.Log$LoggerLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.lang.Thread: java.lang.String getName()>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void <init>()>-><java.util.ArrayList: void <init>(java.util.Collection)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><freemarker.ext.beans.CollectionAdapter$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration: org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver freeMarkerViewResolver()>-><org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver: void <init>()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validate(org.apache.shiro.session.Session,org.apache.shiro.session.mgt.SessionKey)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setPropertyNamingStrategy(java.lang.String)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: boolean isIgnorePendingMigrations()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.TreeSet: java.util.Iterator iterator()>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void <init>()>-><org.springframework.web.servlet.view.AbstractCachingViewResolver: void <init>()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.util.Properties detectPropsForUrl(java.lang.String)>-><java.lang.String: java.lang.String substring(int,int)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setPassword(char[])>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties getRestClientPropertiesInstance()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>-><java.util.ArrayList: boolean isEmpty()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><com.alibaba.fastjson.util.FieldInfo: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskExecutionProperties: void <init>()>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool: void <init>()>
<org.apache.shiro.session.mgt.DefaultSessionManager: void onChange(org.apache.shiro.session.Session)>-><org.apache.shiro.session.mgt.eis.MemorySessionDAO: void update(org.apache.shiro.session.Session)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setAuthorizationAttributeSourceAdvisor(org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor)>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Float castToFloat(java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<sun.rmi.runtime.NewThreadAction: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,boolean)>-><java.lang.Object: void <init>()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.hazelcast.HazelcastServerConfiguration$HazelcastServerConfigFileConfiguration: com.hazelcast.core.HazelcastInstance hazelcastInstance(org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties)>
<org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>-><org.apache.shiro.util.StringUtils: java.lang.String toString(java.lang.Object[])>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestHighLevelClientConfiguration: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer(org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection,int)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validate(org.apache.shiro.session.Session,org.apache.shiro.session.mgt.SessionKey)>-><org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void doValidate(org.apache.shiro.session.Session)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<sun.rmi.runtime.Log$LoggerLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><sun.rmi.runtime.Log$LoggerLog: boolean isLoggable(java.util.logging.Level)>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.Set scan(java.lang.Class[])>-><java.util.HashSet: void <init>()>
<sun.rmi.runtime.Log$LoggerLog$2: java.lang.Void run()>-><java.util.logging.Logger: void addHandler(java.util.logging.Handler)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor preserveErrorControllerTargetClassPostProcessor()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor: void <init>()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor openEntityManagerInViewInterceptor()>-><org.apache.commons.logging.LogAdapter$Log4jLog: void warn(java.lang.Object)>
<org.springframework.context.support.AbstractApplicationContext: org.springframework.core.env.ConfigurableEnvironment getEnvironment()>-><org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: org.springframework.core.env.ConfigurableEnvironment createEnvironment()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: boolean isCleanOnValidationError()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.web.client.RestTemplate$HeadersExtractor: void <init>(org.springframework.web.client.RestTemplate$1)>-><org.springframework.web.client.RestTemplate$HeadersExtractor: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.BuildProperties buildProperties()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setBeanClassLoader(java.lang.ClassLoader)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.rmi.server.LogStream: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<sun.rmi.runtime.NewThreadAction$1: java.lang.Object run()>-><sun.rmi.runtime.NewThreadAction$1: java.lang.ThreadGroup run()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getProvidedNamedXContents()>-><java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Env: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl getSsl()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.EnumMap$EntrySet: java.util.Iterator iterator()>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><java.lang.Math: long max(long,long)>
<java.net.URLConnection: long getLastModified()>-><java.net.URLConnection: long getHeaderFieldDate(java.lang.String,long)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.io.File: int compareTo(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.web.util.NestedServletException: java.lang.String getMessage()>-><java.lang.Throwable: java.lang.String getMessage()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.flywaydb.core.internal.info.MigrationInfoImpl: int compareTo(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.gson.GsonProperties getGsonPropertiesInstance()>-><org.springframework.boot.autoconfigure.gson.GsonProperties: void setDisableInnerClassSerialization(java.lang.Boolean)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment couchbaseEnvironment()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><freemarker.ext.beans.CollectionAdapter$1: java.lang.Object next()>
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void <init>(boolean,org.springframework.core.env.Environment)>-><org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void setEnvironment(org.springframework.core.env.Environment)>
<com.alibaba.fastjson.util.TypeUtils: java.lang.String castToString(java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: void <init>(org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder,javax.sql.DataSource,org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$1)>-><org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: void <init>(org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder,javax.sql.DataSource)>
<org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>-><java.lang.Object: void <init>()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<com.google.common.collect.ForwardingMap: java.util.Set keySet()>-><java.util.concurrent.ConcurrentHashMap: java.util.Set keySet()>
<com.google.common.collect.ForwardingMap: void clear()>-><com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy: java.util.Map delegate()>
<org.springframework.cglib.core.EmitUtils$5: java.lang.Object transform(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.elasticsearch.client.SnapshotClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>-><java.lang.Object: void <init>()>
<java.util.concurrent.ConcurrentMap: void forEach(java.util.function.BiConsumer)>-><java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask: int compareTo(java.lang.Object)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><org.apache.shiro.session.mgt.DefaultSessionKey: void <init>(java.io.Serializable)>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.util.Collections$EmptyList: boolean isEmpty()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: java.lang.Object dequeue()>-><java.util.concurrent.PriorityBlockingQueue: void siftDownUsingComparator(int,java.lang.Object,java.lang.Object[],int,java.util.Comparator)>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.AbstractList$Itr: boolean hasNext()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.web.servlet.MultipartProperties)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.springframework.boot.autoconfigure.freemarker.FreeMarkerReactiveWebConfiguration: org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer freeMarkerConfigurer()>-><org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isMixed()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isMixed()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><java.lang.Long: int hashCode()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: org.springframework.cache.Cache createConcurrentMapCache(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap: void <init>(int)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><ch.qos.logback.classic.Logger: void debug(java.lang.String)>
<org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor persistenceExceptionTranslationPostProcessor(org.springframework.core.env.Environment)>-><org.springframework.aop.framework.ProxyConfig: void setProxyTargetClass(boolean)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: boolean isReplacement(org.springframework.http.converter.HttpMessageConverter,org.springframework.http.converter.HttpMessageConverter)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><java.rmi.server.LogStream: java.lang.String toString()>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isIgnorePendingMigrations()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isIgnorePendingMigrations()>
<freemarker.template.DefaultObjectWrapper: freemarker.template.TemplateModel wrap(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.String,java.lang.Class)>-><org.springframework.context.support.AbstractRefreshableApplicationContext: void assertBeanFactoryActive()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void onInvalidation(org.apache.shiro.session.Session,org.apache.shiro.session.InvalidSessionException,org.apache.shiro.session.mgt.SessionKey)>-><org.slf4j.helpers.NOPLogger: void trace(java.lang.String,java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.flywaydb.core.api.configuration.FluentConfiguration: javax.sql.DataSource getDataSource()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><org.springframework.boot.web.servlet.server.StaticResourceJars: void <init>()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><java.util.HashMap: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.lang.String getPlaceholderSuffix()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.elasticsearch.client.RestClient: void setNodes(java.util.Collection)>-><java.util.LinkedHashMap: java.util.Collection values()>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder: void <init>(org.springframework.orm.jpa.JpaVendorAdapter,java.util.Map,org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager)>-><org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder: void <init>(org.springframework.orm.jpa.JpaVendorAdapter,java.util.Map,org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager,java.net.URL)>
<java.net.URL: java.net.URLConnection openConnection()>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: java.net.URLConnection openConnection(java.net.URL)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: java.util.List determineBootstrapHosts()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties: java.util.List getBootstrapHosts()>
<org.springframework.http.converter.json.GsonHttpMessageConverter: void setGson(com.google.gson.Gson)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.apache.shiro.session.mgt.SimpleSession: int hashCode()>-><java.lang.Boolean: int hashCode()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String detectFallbackPassword(java.lang.String)>-><java.lang.System: java.lang.String getenv(java.lang.String)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFormAuthenticationFilter(org.apache.shiro.web.filter.authc.FormAuthenticationFilter)>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.lang.String getTablespace()>
<org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder cbor()>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder factory(com.fasterxml.jackson.core.JsonFactory)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.SubList$1: boolean hasNext()>
<org.springframework.core.io.support.PropertiesLoaderSupport: void <init>()>-><org.springframework.util.DefaultPropertiesPersister: void <init>()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: org.flywaydb.core.Flyway flyway(org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,org.springframework.core.io.ResourceLoader,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.Double: int compareTo(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration: void <init>()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.web.client.DefaultResponseErrorHandler: void <init>()>
<java.util.logging.StreamHandler: void configure()>-><java.util.logging.LogManager: java.util.logging.Filter getFilterProperty(java.lang.String,java.util.logging.Filter)>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<java.util.stream.ReferencePipeline$7$1: void accept(java.lang.Object)>-><java.util.stream.ReferencePipeline: void forEach(java.util.function.Consumer)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.io.File: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.Set scan(java.lang.Class[])>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration: org.springframework.web.servlet.DispatcherServlet dispatcherServlet(org.springframework.boot.autoconfigure.http.HttpProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties)>-><org.springframework.web.servlet.FrameworkServlet: void setDispatchOptionsRequest(boolean)>
<java.util.concurrent.PriorityBlockingQueue: boolean remove(java.lang.Object)>-><java.util.concurrent.locks.ReentrantLock: void unlock()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: org.flywaydb.core.Flyway flyway(org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,org.springframework.core.io.ResourceLoader,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void checkLocationExists(javax.sql.DataSource,org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.core.io.ResourceLoader)>
<org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration: org.springframework.data.mongodb.core.mapping.MongoMappingContext mongoMappingContext(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.mongo.MongoProperties,org.springframework.data.mongodb.core.convert.MongoCustomConversions)>-><org.springframework.data.mongodb.core.mapping.MongoMappingContext: void <init>()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<org.apache.shiro.spring.config.ShiroBeanConfiguration: org.apache.shiro.spring.ShiroEventBusBeanPostProcessor shiroEventBusAwareBeanPostProcessor()>-><org.apache.shiro.spring.config.AbstractShiroBeanConfiguration: org.apache.shiro.spring.ShiroEventBusBeanPostProcessor shiroEventBusAwareBeanPostProcessor()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.lang.String[] getErrorOverrides()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration: com.google.gson.GsonBuilder gsonBuilder(java.util.List)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.apache.shiro.session.mgt.SimpleSession: boolean isTimedOut()>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<org.apache.shiro.session.mgt.SimpleSession: void validate()>-><org.slf4j.helpers.NOPLogger: void trace(java.lang.String)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.util.Properties detectPropsForUrl(java.lang.String)>-><java.lang.System: java.lang.String getProperty(java.lang.String)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration: org.springframework.web.servlet.DispatcherServlet dispatcherServlet(org.springframework.boot.autoconfigure.http.HttpProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties)>-><org.springframework.web.servlet.FrameworkServlet: void setEnableLoggingRequestDetails(boolean)>
<org.springframework.boot.autoconfigure.domain.EntityScanner: java.util.Set scan(java.lang.Class[])>-><org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void <init>(boolean)>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.json.JsonbHttpMessageConverter: void <init>()>
<org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration: org.springframework.context.support.PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer()>-><org.springframework.context.support.PropertySourcesPlaceholderConfigurer: void <init>()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<javax.el.BeanELResolver$SoftConcurrentHashMap: javax.el.BeanELResolver$BeanProperties get(java.lang.Object)>-><javax.el.BeanELResolver$SoftConcurrentHashMap: void cleanup()>
<org.springframework.util.MimeType: void <init>(org.springframework.util.MimeType,java.util.Map)>-><org.springframework.util.MimeType: void <init>(java.lang.String,java.lang.String,java.util.Map)>
<org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>-><org.apache.shiro.session.mgt.SimpleSession: java.io.Serializable getId()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><java.util.Collections$EmptySet: java.util.Iterator iterator()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties getRestClientPropertiesInstance()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void setUris(java.util.List)>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: com.hazelcast.core.HazelcastInstance getHazelcastInstance()>-><com.hazelcast.core.Hazelcast: com.hazelcast.core.HazelcastInstance newHazelcastInstance(com.hazelcast.config.Config)>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.boot.autoconfigure.mail.MailProperties,org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.mail.javamail.JavaMailSenderImpl: void setUsername(java.lang.String)>
<org.elasticsearch.client.Node: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<java.rmi.server.LogStream: void write(int)>-><java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<org.springframework.boot.autoconfigure.flyway.FlywaySchemaManagementProvider: void <init>(java.lang.Iterable)>-><java.lang.Object: void <init>()>
<org.apache.shiro.session.mgt.SimpleSession: boolean isTimedOut()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.gson.internal.LinkedTreeMap$Node: int hashCode()>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setThreadPoolTaskScheduler(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>
<java.util.logging.Logger: void addHandler(java.util.logging.Handler)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Properties: java.util.Set stringPropertyNames()>
<sun.misc.URLClassPath: void check(java.net.URL)>-><java.net.URLConnection: java.security.Permission getPermission()>
<org.flywaydb.core.api.configuration.FluentConfiguration: void <init>(java.lang.ClassLoader)>-><java.lang.Object: void <init>()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration: org.springframework.jdbc.datasource.DataSourceTransactionManager transactionManager(javax.sql.DataSource,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.jdbc.datasource.DataSourceTransactionManager: void <init>(javax.sql.DataSource)>
<org.apache.shiro.spring.config.AbstractShiroBeanConfiguration: org.apache.shiro.spring.ShiroEventBusBeanPostProcessor shiroEventBusAwareBeanPostProcessor()>-><org.apache.shiro.spring.config.ShiroBeanConfiguration: org.apache.shiro.event.EventBus eventBus()>
<org.springframework.web.servlet.DispatcherServlet: void <init>()>-><org.springframework.web.servlet.FrameworkServlet: void <init>()>
<com.google.gson.internal.LinkedTreeMap$Node: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Properties)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String detectFallbackUrl(java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.SubList$1: java.lang.Object next()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayProperties: void <init>()>-><java.lang.Object: void <init>()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.ServletRegistrationBean: void <init>(javax.servlet.Servlet,boolean,java.lang.String[])>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<com.fasterxml.jackson.databind.module.SimpleModule: void <init>(com.fasterxml.jackson.core.Version)>-><com.fasterxml.jackson.core.Version: java.lang.String getArtifactId()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration: org.springframework.web.server.adapter.ForwardedHeaderTransformer forwardedHeaderTransformer()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><sun.rmi.runtime.Log$LoggerLog$2: java.lang.Object run()>
<org.elasticsearch.client.RestClient: java.util.List hostsToNodes(org.apache.http.HttpHost[])>-><java.util.ArrayList: boolean add(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$GsonHttpMessageConverterConfiguration: org.springframework.http.converter.json.GsonHttpMessageConverter gsonHttpMessageConverter(com.google.gson.Gson)>
<java.rmi.server.LogStream: void write(int)>-><java.lang.Thread: java.lang.Thread currentThread()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTaskExecutorBuilder(org.springframework.boot.task.TaskExecutorBuilder)>
<org.springframework.cache.concurrent.ConcurrentMapCache: void <init>(java.lang.String,java.util.concurrent.ConcurrentMap,boolean,org.springframework.core.serializer.support.SerializationDelegate)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory: void <init>()>-><org.springframework.boot.web.reactive.server.AbstractReactiveWebServerFactory: void <init>()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<java.util.logging.StreamHandler: void configure()>-><java.util.logging.Handler: void setFormatter(java.util.logging.Formatter)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setIgnoreIgnoredMigrations(boolean)>
<org.apache.shiro.mgt.RealmSecurityManager: void applyEventBusToRealms()>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: org.springframework.mail.javamail.JavaMailSenderImpl mailSender(org.springframework.boot.autoconfigure.mail.MailProperties)>-><org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.boot.autoconfigure.mail.MailProperties,org.springframework.mail.javamail.JavaMailSenderImpl)>
<org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>-><java.lang.Object: java.lang.Class getClass()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: java.util.Iterator iterator()>-><com.google.common.collect.ForwardingMap: java.util.Set entrySet()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration: org.springframework.boot.web.servlet.FilterRegistrationBean forwardedHeaderFilter()>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: void setDispatcherTypes(javax.servlet.DispatcherType,javax.servlet.DispatcherType[])>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder applicationContext(org.springframework.context.ApplicationContext)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service tryGet(int)>-><java.util.ArrayList$Itr: boolean hasNext()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigDecimal castToBigDecimal(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<com.alibaba.fastjson.util.TypeUtils: java.math.BigDecimal castToBigDecimal(java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.apache.shiro.session.mgt.SimpleSession: void validate()>-><ch.qos.logback.classic.Logger: void trace(java.lang.String)>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><java.util.ArrayList: void <init>()>
<org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.boot.autoconfigure.mail.MailProperties,org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.boot.autoconfigure.mail.MailProperties: java.lang.String getUsername()>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestHighLevelClientConfiguration: org.elasticsearch.client.RestHighLevelClient elasticsearchRestHighLevelClient(org.elasticsearch.client.RestClientBuilder)>-><org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClientBuilder)>
<java.util.logging.ErrorManager: void error(java.lang.String,java.lang.Exception,int)>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<java.util.concurrent.PriorityBlockingQueue: java.lang.Object[] toArray(java.lang.Object[])>-><java.util.concurrent.locks.ReentrantLock: void unlock()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder jwtDecoderByPublicKeyValue()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt: java.lang.String readPublicKey()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration: void <init>()>
<java.rmi.server.LogStream: void write(int)>-><java.lang.StringBuffer: void setLength(int)>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Float castToFloat(java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.flywaydb.core.internal.sqlscript.SqlScript: int compareTo(java.lang.Object)>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String detectFallbackUrl(java.lang.String)>-><java.lang.String: java.lang.String toLowerCase()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: java.util.List determineBootstrapHosts()>
<co.yiiu.pybbs.PybbsApplication: void main(java.lang.String[])>-><synthetic.method.HttpSessionImpl: void <init>()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.info.ProjectInfoProperties)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<org.apache.shiro.spring.config.ShiroBeanConfiguration: org.apache.shiro.event.EventBus eventBus()>-><org.apache.shiro.spring.config.AbstractShiroBeanConfiguration: org.apache.shiro.event.EventBus eventBus()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters$1: void <init>(org.springframework.boot.autoconfigure.http.HttpMessageConverters)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void <init>()>
<org.springframework.boot.task.TaskExecutorBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getServletUrlMapping()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<org.springframework.web.filter.ForwardedHeaderFilter: void <init>()>-><org.springframework.web.util.UrlPathHelper: void setUrlDecode(boolean)>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.springframework.boot.web.server.AbstractConfigurableWebServerFactory: void <init>()>-><java.lang.Object: void <init>()>
<java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection,int)>-><java.lang.IllegalArgumentException: void <init>()>
<org.springframework.web.servlet.HttpServletBean: void <init>()>-><java.lang.Object: java.lang.Class getClass()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: boolean hasNext()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.util.Vector: boolean isEmpty()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<com.alibaba.fastjson.parser.DefaultJSONParser: java.lang.Object parseObject(java.lang.reflect.Type,java.lang.Object)>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>
<java.rmi.server.LogStream: void write(int)>-><java.io.OutputStreamWriter: void flush()>
<sun.rmi.runtime.Log$LoggerLog: boolean isLoggable(java.util.logging.Level)>-><java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><java.util.Collections$UnmodifiableCollection: java.util.stream.Stream stream()>
<sun.rmi.runtime.Log$LogStreamLog: java.lang.String unqualifiedName(java.lang.String)>-><java.lang.String: java.lang.String substring(int)>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter: void <init>()>
<java.net.URLConnection: long getHeaderFieldLong(java.lang.String,long)>-><java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>
<com.alibaba.fastjson.util.TypeUtils: java.lang.String castToString(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void tryGrow(java.lang.Object[],int)>-><sun.misc.Unsafe: boolean compareAndSwapInt(java.lang.Object,long,int,int)>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>-><org.springframework.boot.autoconfigure.web.ServerProperties: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><org.apache.shiro.util.MapContext: int size()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.Collections$1: java.lang.Object next()>
<org.slf4j.helpers.SubstituteLogger: void trace(java.lang.String,java.lang.Object)>-><org.slf4j.helpers.NOPLogger: void trace(java.lang.String,java.lang.Object)>
<org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.api.configuration.FluentConfiguration callbacks(org.flywaydb.core.api.callback.Callback[])>-><org.flywaydb.core.api.configuration.ClassicConfiguration: void setCallbacks(org.flywaydb.core.api.callback.Callback[])>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.cache.CacheProperties getCachePropertiesInstance()>-><org.springframework.boot.autoconfigure.cache.CacheProperties: void <init>()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.lang.Enum: int compareTo(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.elasticsearch.client.Node: int hashCode()>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: void remove()>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: void remove()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari: com.zaxxer.hikari.HikariDataSource dataSource(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Float castToFloat(java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.SubList$1: java.lang.Object next()>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><java.util.Collections$SynchronizedCollection: boolean isEmpty()>
<java.util.logging.LogManager: java.lang.String getStringProperty(java.lang.String,java.lang.String)>-><java.util.logging.LogManager: java.lang.String getProperty(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.TreeMap$Entry: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration: org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$StringOrNumberToMigrationVersionConverter stringOrNumberMigrationVersionConverter()>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.gson.GsonProperties getGsonPropertiesInstance()>-><org.springframework.boot.autoconfigure.gson.GsonProperties: void setDisableHtmlEscaping(java.lang.Boolean)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder awaitTermination(boolean)>-><org.springframework.boot.task.TaskSchedulerBuilder: void <init>(java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,java.util.Set)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts: java.time.Duration getKeyValue()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>
<java.util.concurrent.ScheduledThreadPoolExecutor: long overflowFree(long)>-><java.util.concurrent.PriorityBlockingQueue: java.lang.Object peek()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><org.joda.time.LocalTime: int compareTo(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>
<org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source when(java.util.function.Predicate)>-><org.springframework.boot.context.properties.PropertyMapper$Source: void <init>(java.util.function.Supplier,java.util.function.Predicate)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: boolean usesVendorLocation(java.util.Collection)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMethodValidationPostProcessor(org.springframework.validation.beanvalidation.MethodValidationPostProcessor)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.zone.ZoneOffsetTransition: int compareTo(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getDefaultNamedXContents()>-><org.jsoup.helper.ChangeNotifyingArrayList: boolean add(java.lang.Object)>
<org.springframework.cglib.core.EmitUtils$5: java.lang.Object transform(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<java.util.EnumMap: int entryHashCode(int)>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isIgnoreFutureMigrations()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isIgnoreFutureMigrations()>
<org.elasticsearch.client.RestClient$FailureListener: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.lang.String getSqlMigrationSeparator()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.Year: int compareTo(java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder awaitTerminationPeriod(java.time.Duration)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void onInvalidation(org.apache.shiro.session.Session,org.apache.shiro.session.InvalidSessionException,org.apache.shiro.session.mgt.SessionKey)>-><org.apache.shiro.session.mgt.DefaultSessionManager: void onStop(org.apache.shiro.session.Session)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.AbstractMap$2$1: java.lang.Object next()>
<java.util.logging.StreamHandler: void flush()>-><java.io.OutputStreamWriter: void flush()>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: java.io.InputStream getInputStream()>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: java.io.InputStream getInputStream()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setErrorMvcAutoConfiguration$ErrorPageCustomizer(org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void <init>()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Properties)>-><java.lang.StringBuilder: void <init>()>
<org.apache.shiro.session.mgt.DefaultSessionManager: void onStop(org.apache.shiro.session.Session)>-><org.apache.shiro.session.mgt.SimpleSession: void setLastAccessTime(java.util.Date)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><co.yiiu.pybbs.config.websocket.WebSocketConfig: void <init>()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.util.Properties: void <init>()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<org.apache.shiro.session.mgt.SimpleSession: boolean isTimedOut()>-><java.util.Date: void <init>(long)>
<org.apache.commons.collections.FastHashMap$CollectionView: java.lang.Object[] toArray()>-><org.apache.commons.collections.FastHashMap$EntrySet: java.util.Collection get(java.util.Map)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.rmi.server.LogStream: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer,boolean,java.lang.String,java.util.Set,java.util.Set,java.util.function.Supplier,org.springframework.web.util.UriTemplateHandler,org.springframework.web.client.ResponseErrorHandler,org.springframework.boot.web.client.BasicAuthentication,java.util.Map,java.util.Set,java.util.Set)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source as(java.util.function.Function)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration: void <init>()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><freemarker.ext.beans.HashAdapter$1$1: boolean hasNext()>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><com.alibaba.fastjson.JSONArray: boolean isEmpty()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.springframework.web.util.NestedServletException: java.lang.String getMessage()>-><java.lang.Throwable: java.lang.Throwable getCause()>
<org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateCustomizer[])>-><org.springframework.boot.web.client.RestTemplateBuilder: java.util.Set copiedSetOf(java.lang.Object[])>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>-><org.springframework.jmx.export.MBeanExporter: void setAssembler(org.springframework.jmx.export.assembler.MBeanInfoAssembler)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<org.springframework.boot.task.TaskSchedulerBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.util.Collections: java.util.Set emptySet()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool: void <init>()>-><java.lang.Object: void <init>()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setJndiName(java.lang.String)>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: java.lang.Object next()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<org.elasticsearch.client.RestClientBuilder: void <init>(java.util.List)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.flywaydb.core.internal.jdbc.DriverDataSource: void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Properties)>-><java.util.Properties: void <init>(java.util.Properties)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setData(java.util.List)>
<freemarker.ext.beans.StringModel: java.lang.String getAsString()>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.mail.MailProperties getMailPropertiesInstance()>-><org.springframework.boot.autoconfigure.mail.MailProperties: void setJndiName(java.lang.String)>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.util.Calendar: int compareTo(java.lang.Object)>
<java.util.logging.LogManager: java.util.logging.Filter getFilterProperty(java.lang.String,java.util.logging.Filter)>-><java.util.logging.LogManager: java.lang.String getProperty(java.lang.String)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.http.client.support.HttpAccessor: void <init>()>-><org.springframework.http.HttpLogging: org.apache.commons.logging.Log forLogName(java.lang.Class)>
<java.util.Collections$EmptyList: boolean containsAll(java.util.Collection)>-><java.util.HashSet: boolean isEmpty()>
<java.util.logging.StreamHandler: void <init>(java.io.OutputStream,java.util.logging.Formatter)>-><java.util.logging.Handler: void setFormatter(java.util.logging.Formatter)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.http.HttpProperties)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getServletUrlMapping()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.Vector$Itr: boolean hasNext()>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.String getSqlMigrationSeparator()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.String getSqlMigrationSeparator()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt: java.lang.String readPublicKey()>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.ViewServiceConfig getViewServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarUrlStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>-><java.lang.String: java.lang.String substring(int,int)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service tryGet(int)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.apache.commons.collections.FastHashMap$CollectionView: boolean isEmpty()>-><java.util.AbstractCollection: boolean isEmpty()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts: java.time.Duration getView()>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: org.elasticsearch.client.RestClientBuilder elasticsearchRestClientBuilder(org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties,org.springframework.beans.factory.ObjectProvider)>-><org.elasticsearch.client.RestClientBuilder: org.elasticsearch.client.RestClientBuilder setRequestConfigCallback(org.elasticsearch.client.RestClientBuilder$RequestConfigCallback)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<org.apache.shiro.session.mgt.SimpleSession: boolean isTimedOut()>-><java.lang.StringBuilder: void <init>()>
<ch.qos.logback.core.helpers.ThrowableToStringArray: java.lang.String formatFirstLine(java.lang.Throwable,java.lang.StackTraceElement[])>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<java.net.URLStreamHandler: boolean sameFile(java.net.URL,java.net.URL)>-><java.net.URLStreamHandler: int getDefaultPort()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void checkLocationExists(javax.sql.DataSource,org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.core.io.ResourceLoader)>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: java.util.List resolveLocations(java.util.List)>
<org.elasticsearch.client.RestClientBuilder: org.elasticsearch.client.RestClient build()>-><org.apache.http.impl.nio.client.CloseableHttpAsyncClientBase: void start()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<org.apache.shiro.session.ProxiedSession: void <init>(org.apache.shiro.session.Session)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastServerConfiguration$HazelcastServerConfigFileConfiguration: com.hazelcast.core.HazelcastInstance hazelcastInstance(org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties)>-><com.hazelcast.core.Hazelcast: com.hazelcast.core.HazelcastInstance newHazelcastInstance()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setEnabled(boolean)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setUsername(java.lang.String)>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getDefaultNamedXContents()>-><com.alibaba.fastjson.JSONArray: boolean add(java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source asInt(java.util.function.Function)>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: java.lang.String[] getPackagesToScan()>-><org.springframework.util.StringUtils: java.lang.String[] toStringArray(java.util.Collection)>
<org.springframework.http.HttpHeaders: java.lang.String formatHeaders(org.springframework.util.MultiValueMap)>-><org.springframework.util.CollectionUtils$MultiValueMapAdapter: java.util.Set entrySet()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration: org.springframework.boot.autoconfigure.web.reactive.TomcatReactiveWebServerFactoryCustomizer tomcatReactiveWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getDefaultNamedXContents()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration: void <init>()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Float castToFloat(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestHighLevelClientConfiguration: org.elasticsearch.client.RestHighLevelClient elasticsearchRestHighLevelClient(org.elasticsearch.client.RestClientBuilder)>
<sun.rmi.runtime.Log$LogStreamLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.lang.Throwable: void printStackTrace(java.io.PrintStream)>
<org.springframework.boot.info.BuildProperties: void <init>(java.util.Properties)>-><org.springframework.boot.info.InfoProperties: void <init>(java.util.Properties)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.elasticsearch.common.ParseField: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.gson.GsonProperties getGsonPropertiesInstance()>-><org.springframework.boot.autoconfigure.gson.GsonProperties: void setPrettyPrinting(java.lang.Boolean)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setSchemaUsername(java.lang.String)>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: java.io.InputStream getInputStream()>-><org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: void connect()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><sun.rmi.runtime.NewThreadAction$1: java.lang.Object run()>
<java.util.concurrent.PriorityBlockingQueue: boolean offer(java.lang.Object)>-><java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSessionDAO(org.apache.shiro.session.mgt.eis.SessionDAO)>
<java.util.LinkedList: boolean remove(java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.web.server.MimeMappings: void <init>(org.springframework.boot.web.server.MimeMappings,boolean)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setWebSecurityConfigurerAdapter(org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter)>
<org.springframework.boot.context.properties.PropertyMapper: void <init>(org.springframework.boot.context.properties.PropertyMapper,org.springframework.boot.context.properties.PropertyMapper$SourceOperator)>-><java.lang.Object: void <init>()>
<org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCookieRememberMeManager(org.apache.shiro.web.mgt.CookieRememberMeManager)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<sun.rmi.runtime.Log$LoggerLog: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>-><java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setAutoIndexCreation(java.lang.Boolean)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration: org.springframework.data.mongodb.core.mapping.MongoMappingContext mongoMappingContext(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.mongo.MongoProperties,org.springframework.data.mongodb.core.convert.MongoCustomConversions)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper get()>
<org.springframework.boot.web.servlet.support.ErrorPageFilterConfiguration: org.springframework.boot.web.servlet.support.ErrorPageFilter errorPageFilter()>-><org.springframework.boot.web.servlet.support.ErrorPageFilter: void <init>()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: boolean hasNext()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><org.springframework.boot.web.server.AbstractConfigurableWebServerFactory: void <init>()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.springframework.boot.context.properties.PropertyMapper$NullPointerExceptionSafeSupplier: java.lang.Object get()>-><org.springframework.boot.context.properties.PropertyMapper$CachingSupplier: java.lang.Object get()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: org.springframework.security.oauth2.jwt.ReactiveJwtDecoder jwtDecoder()>-><org.springframework.security.oauth2.jwt.JwtValidators: org.springframework.security.oauth2.core.OAuth2TokenValidator createDefaultWithIssuer(java.lang.String)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.Collections$1: boolean hasNext()>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><java.math.BigDecimal: int compareTo(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.elasticsearch.client.RestClient$NodeTuple: void <init>(java.lang.Object,org.apache.http.client.AuthCache)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: org.flywaydb.core.Flyway flyway(org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,org.springframework.core.io.ResourceLoader,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.Flyway load()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.rmi.server.LogStream: java.lang.String toString()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.AbstractList$Itr: boolean hasNext()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.time.ZoneOffset: int compareTo(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.elasticsearch.client.RestClient: void setNodes(java.util.Collection)>-><java.util.ArrayList: boolean isEmpty()>
<org.apache.shiro.util.StringUtils: java.lang.String toString(java.lang.Object[])>-><org.apache.shiro.util.StringUtils: java.lang.String toDelimitedString(java.lang.Object[],java.lang.String)>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder entityManagerFactoryBuilder(org.springframework.orm.jpa.JpaVendorAdapter,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.orm.jpa.JpaProperties: java.util.Map getProperties()>
<org.apache.shiro.session.mgt.SimpleSession: boolean onEquals(org.apache.shiro.session.mgt.SimpleSession)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String getHost()>
<org.elasticsearch.client.RollupClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>-><java.lang.Object: void <init>()>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getDefaultNamedXContents()>-><java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.TreeMap$EntrySet: java.util.Iterator iterator()>
<org.apache.shiro.session.mgt.SimpleSession: boolean isTimedOut()>-><java.util.Date: boolean before(java.util.Date)>
<com.google.common.collect.ForwardingMap: int size()>-><java.util.concurrent.ConcurrentHashMap: int size()>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.info.GitProperties: java.util.Properties processEntries(java.util.Properties)>-><java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.apache.shiro.spring.config.ShiroBeanConfiguration: org.apache.shiro.spring.ShiroEventBusBeanPostProcessor shiroEventBusAwareBeanPostProcessor()>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.gson.GsonProperties getGsonPropertiesInstance()>-><org.springframework.boot.autoconfigure.gson.GsonProperties: void setLenient(java.lang.Boolean)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setGson(com.google.gson.Gson)>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean entityManagerFactory(org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder)>-><org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder dataSource(javax.sql.DataSource)>
<org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>-><com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory getFactory()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: boolean offer(java.lang.Object)>-><java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: void signal()>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean build()>-><org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean: void <init>()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: java.util.List replaceVendorLocations(java.util.List,org.springframework.boot.jdbc.DatabaseDriver)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.elasticsearch.client.RestClientBuilder: void <init>(java.util.List)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.hazelcast.HazelcastServerConfiguration$HazelcastServerConfigFileConfiguration: void <init>()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: java.util.List resolveLocations(java.util.List)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<java.rmi.server.LogStream: void write(int)>-><java.util.Date: java.lang.String toString()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.rmi.server.LogStream: java.lang.String toString()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Properties)>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.util.Properties detectPropsForUrl(java.lang.String)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.jdbc.DataSourceBuilder: org.springframework.boot.jdbc.DataSourceBuilder driverClassName(java.lang.String)>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback()>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>-><org.springframework.jmx.export.MBeanExporter: void setNamingStrategy(org.springframework.jmx.export.naming.ObjectNamingStrategy)>
<org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory: void <init>()>-><org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: org.springframework.boot.web.servlet.server.Jsp getJsp()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration: java.lang.Object createDataSource(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,java.lang.Class)>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isSkipDefaultCallbacks()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isSkipDefaultCallbacks()>
<org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: boolean hasNext()>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><java.util.Properties: void <init>()>
<java.util.concurrent.PriorityBlockingQueue: void removeAt(int)>-><java.util.concurrent.PriorityBlockingQueue: void siftDownUsingComparator(int,java.lang.Object,java.lang.Object[],int,java.util.Comparator)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.time.Duration: java.lang.String toString()>
<com.google.common.collect.ForwardingMap: boolean containsKey(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver: java.util.List replaceVendorLocations(java.util.List,org.springframework.boot.jdbc.DatabaseDriver)>-><java.util.Collection: java.util.stream.Stream stream()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setPlaceholderPrefix(java.lang.String)>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><java.util.Collections$EmptySet: boolean isEmpty()>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><java.util.Hashtable: void putAll(java.util.Map)>
<org.apache.shiro.session.mgt.DefaultSessionManager: java.util.Collection getActiveSessions()>-><org.apache.shiro.session.mgt.eis.MemorySessionDAO: java.util.Collection getActiveSessions()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder keepAlive(java.time.Duration)>
<org.elasticsearch.client.RestClient: java.util.List hostsToNodes(org.apache.http.HttpHost[])>-><java.util.ArrayList: void <init>(int)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<java.util.concurrent.PriorityBlockingQueue: void removeAt(int)>-><java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>
<org.springframework.boot.autoconfigure.flyway.FlywayMigrationScriptMissingException: void <init>(java.util.List)>-><java.util.Collections$UnmodifiableCollection: boolean isEmpty()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.TreeMap$Entry: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.AbstractTemplateViewResolver: void setAllowSessionOverride(boolean)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<javax.servlet.GenericServlet: void <init>()>-><java.lang.Object: void <init>()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><org.slf4j.helpers.SubstituteLogger: boolean isDebugEnabled()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter: void <init>()>
<org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.util.function.Supplier)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source getSource(java.util.function.Supplier)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Bucket couchbaseClient()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerJwtConfiguration$OAuth2WebSecurityConfigurerAdapter$1: void <init>(org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerJwtConfiguration$OAuth2WebSecurityConfigurerAdapter)>-><org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.BuildProperties buildProperties()>-><org.springframework.boot.info.BuildProperties: void <init>(java.util.Properties)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setPlaceholderSuffix(java.lang.String)>
<org.springframework.boot.info.BuildProperties: void coerceDate(java.util.Properties,java.lang.String)>-><java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Double castToDouble(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.apache.shiro.mgt.RealmSecurityManager: void setRealms(java.util.Collection)>-><com.google.common.collect.Maps$Values: boolean isEmpty()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.String castToString(java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<java.util.LinkedList: boolean remove(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer localeCharsetMappingsCustomizer()>
<org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler: void run()>-><java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.http.HttpProperties getHttpPropertiesInstance()>-><org.springframework.boot.autoconfigure.http.HttpProperties: void setLogRequestDetails(boolean)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder xml()>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean build()>-><org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder: java.net.URL access$400(org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder)>
<org.springframework.boot.info.GitProperties: java.util.Properties processEntries(java.util.Properties)>-><org.springframework.boot.info.GitProperties: void coercePropertyToEpoch(java.util.Properties,java.lang.String)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.String castToString(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties: java.lang.String getUsername()>
<org.flywaydb.core.internal.jdbc.DriverDataSource: java.sql.Connection getConnection()>-><org.flywaydb.core.internal.jdbc.DriverDataSource: java.lang.String getPassword()>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isSkipDefaultResolvers()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: boolean isSkipDefaultResolvers()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void validateSessions()>-><org.slf4j.helpers.NOPLogger: boolean isDebugEnabled()>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void onInvalidation(org.apache.shiro.session.Session,org.apache.shiro.session.InvalidSessionException,org.apache.shiro.session.mgt.SessionKey)>-><org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void onExpiration(org.apache.shiro.session.Session,org.apache.shiro.session.ExpiredSessionException,org.apache.shiro.session.mgt.SessionKey)>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.boot.autoconfigure.mail.MailProperties,org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.boot.autoconfigure.mail.MailProperties: java.lang.Integer getPort()>
<org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientConfigurations$RestClientBuilderConfiguration: org.elasticsearch.client.RestClientBuilder elasticsearchRestClientBuilder(org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.context.properties.PropertyMapper$Source: void to(java.util.function.Consumer)>
<java.util.concurrent.PriorityBlockingQueue: java.lang.Object dequeue()>-><java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>
<org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: java.lang.Object next()>-><org.apache.commons.collections.FastHashMap$EntrySet: java.lang.Object iteratorNext(java.util.Map$Entry)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.apache.shiro.authc.UsernamePasswordToken: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$2: javax.management.MBeanServer getMBeanServer()>-><org.springframework.jmx.support.WebSphereMBeanServerFactoryBean: javax.management.MBeanServer getObject()>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determineUsername()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determineDriverClassName()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: boolean hasNext()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>
<java.util.concurrent.PriorityBlockingQueue: void siftDownComparable(int,java.lang.Object,java.lang.Object[],int)>-><java.util.UUID: int compareTo(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.flywaydb.core.internal.resource.classpath.ClassPathResource: int compareTo(java.lang.Object)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setNimbusReactiveJwtDecoder(org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: boolean isOutOfOrder()>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: java.util.Iterator iterator()>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentMap: void forEach(java.util.function.BiConsumer)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: void <init>(javax.sql.DataSource,org.springframework.boot.autoconfigure.orm.jpa.JpaProperties,org.springframework.beans.factory.ObjectProvider)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List extractPartConverters(org.springframework.http.converter.FormHttpMessageConverter)>-><org.springframework.util.ReflectionUtils: java.lang.Object getField(java.lang.reflect.Field,java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.HashSet: java.util.Iterator iterator()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration: org.springframework.context.support.PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><java.util.AbstractMap$1$1: boolean hasNext()>
<org.apache.shiro.spring.config.AbstractShiroBeanConfiguration: org.apache.shiro.spring.LifecycleBeanPostProcessor lifecycleBeanPostProcessor()>-><org.apache.shiro.spring.LifecycleBeanPostProcessor: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.apache.shiro.authz.permission.WildcardPermission: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder dataSource(javax.sql.DataSource)>-><org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: void <init>(org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder,javax.sql.DataSource,org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$1)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.Double castToDouble(java.lang.Object)>-><org.elasticsearch.client.Node: java.lang.String toString()>
<java.util.TreeMap$Entry: int hashCode()>-><org.apache.shiro.subject.SimplePrincipalCollection: int hashCode()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration: org.springframework.cache.support.NoOpCacheManager cacheManager()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.boot.autoconfigure.mail.MailProperties,org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.boot.autoconfigure.mail.MailProperties: java.lang.String getPassword()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.mail.MailProperties getMailPropertiesInstance()>-><org.springframework.boot.autoconfigure.mail.MailProperties: void setDefaultEncoding(java.nio.charset.Charset)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(boolean,java.util.Collection)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>
<org.springframework.http.HttpHeaders: java.lang.String formatHeaders(org.springframework.util.MultiValueMap)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.apache.shiro.session.mgt.AbstractValidatingSessionManager: void onExpiration(org.apache.shiro.session.Session,org.apache.shiro.session.ExpiredSessionException,org.apache.shiro.session.mgt.SessionKey)>-><org.apache.shiro.session.mgt.DefaultSessionManager: void afterExpired(org.apache.shiro.session.Session)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>-><sun.net.www.MessageHeader: void <init>()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><org.springframework.boot.web.servlet.server.DocumentRoot: void <init>(org.apache.commons.logging.Log)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.lang.String toString()>
<org.springframework.beans.factory.support.DisposableBeanAdapter: java.lang.reflect.Method determineDestroyMethod(java.lang.String)>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.apache.shiro.authc.SimpleAuthenticationInfo: boolean equals(java.lang.Object)>
<java.util.logging.StreamHandler: void flushAndClose()>-><java.io.Writer: void write(java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<javax.crypto.Cipher: void chooseFirstProvider()>-><javax.crypto.Cipher$Transform: void setModePadding(javax.crypto.CipherSpi)>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><java.util.ArrayList: boolean isEmpty()>
<org.elasticsearch.client.Node: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.elasticsearch.client.Node: boolean equals(java.lang.Object)>
<org.springframework.web.client.RestTemplate: void <init>()>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.json.GsonHttpMessageConverter: void <init>()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<sun.misc.URLClassPath$JarLoader: java.util.jar.JarFile getJarFile(java.net.URL)>-><java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: javax.sql.DataSource configureDataSource(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,javax.sql.DataSource,javax.sql.DataSource)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: java.util.List getInitSqls()>
<org.springframework.http.converter.feed.RssChannelHttpMessageConverter: void <init>()>-><org.springframework.http.converter.feed.AbstractWireFeedHttpMessageConverter: void <init>(org.springframework.http.MediaType)>
<org.elasticsearch.client.RestHighLevelClient: java.util.List getDefaultNamedXContents()>-><java.util.AbstractList: boolean add(java.lang.Object)>
<org.elasticsearch.client.RestClientBuilder: void <init>(java.util.List)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: javax.sql.DataSource configureDataSource(org.flywaydb.core.api.configuration.FluentConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.boot.autoconfigure.jdbc.DataSourceProperties,javax.sql.DataSource,javax.sql.DataSource)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.web.servlet.HttpServletBean: void <init>()>-><javax.servlet.http.HttpServlet: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow: org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory undertowServletWebServerFactory(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory: java.util.Collection getDeploymentInfoCustomizers()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder taskDecorator(org.springframework.core.task.TaskDecorator)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: int compareTo(java.lang.Object)>
<org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>-><java.lang.StringBuilder: void <init>()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.gson.GsonProperties getGsonPropertiesInstance()>-><org.springframework.boot.autoconfigure.gson.GsonProperties: void setDateFormat(java.lang.String)>
<java.util.AbstractList: int hashCode()>-><org.apache.shiro.authc.SimpleAuthenticationInfo: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><java.util.TreeSet: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder awaitTermination(boolean)>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean entityManagerFactory(org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder)>-><org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration: java.lang.String[] getMappingResources()>
<org.springframework.boot.task.TaskSchedulerBuilder: void <init>(java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,java.util.Set)>-><java.lang.Object: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration: org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer standardJacksonObjectMapperBuilderCustomizer(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.jackson.JacksonProperties)>
<org.springframework.web.filter.RelativeRedirectResponseWrapper: void sendRedirect(java.lang.String)>-><javax.servlet.http.HttpServletResponseWrapper: void setHeader(java.lang.String,java.lang.String)>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration: byte[] getKeySpec(java.lang.String)>-><java.util.Base64$Decoder: byte[] decode(java.lang.String)>
<org.elasticsearch.client.RestHighLevelClient: void <init>(org.elasticsearch.client.RestClient,org.elasticsearch.common.CheckedConsumer,java.util.List)>-><java.util.Collection: java.util.stream.Stream stream()>
<freemarker.ext.beans.HashAdapter$1$1$1: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder$Builder: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean build()>-><org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean: void setJpaVendorAdapter(org.springframework.orm.jpa.JpaVendorAdapter)>
<org.springframework.http.converter.feed.AtomFeedHttpMessageConverter: void <init>()>-><org.springframework.http.converter.feed.AbstractWireFeedHttpMessageConverter: void <init>(org.springframework.http.MediaType)>
<org.apache.shiro.util.CollectionUtils: boolean isEmpty(java.util.Collection)>-><com.google.common.collect.Maps$Values: boolean isEmpty()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><java.rmi.server.LogStream: java.lang.String toString()>
<sun.rmi.runtime.NewThreadAction$2: java.lang.Object run()>-><sun.rmi.runtime.NewThreadAction$2: java.lang.ThreadGroup run()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<org.elasticsearch.client.GraphClient: void <init>(org.elasticsearch.client.RestHighLevelClient)>-><java.lang.Object: void <init>()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.flyway.FlywayProperties getFlywayPropertiesInstance()>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: void setGroup(boolean)>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: boolean hasAtLeastOneLocation(org.springframework.core.io.ResourceLoader,java.util.Collection)>-><freemarker.ext.beans.HashAdapter$1$1: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><javax.el.BeanELResolver$SoftConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<java.util.concurrent.PriorityBlockingQueue: void siftUpComparable(int,java.lang.Object,java.lang.Object[])>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: int compareTo(java.lang.Object)>
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void <init>(boolean,org.springframework.core.env.Environment)>-><java.lang.Object: java.lang.Class getClass()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void <init>()>
<org.elasticsearch.common.xcontent.NamedXContentRegistry: void <init>(java.util.List)>-><org.elasticsearch.common.ParseField: java.lang.String[] getAllNamesIncludedDeprecated()>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: java.util.Iterator iterator()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setLocaleResolver(org.springframework.web.servlet.LocaleResolver)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.apache.shiro.authz.permission.WildcardPermission: boolean equals(java.lang.Object)>
<org.springframework.util.MimeType: void <init>(java.lang.String,java.lang.String,java.util.Map)>-><java.util.Collections$UnmodifiableMap: int size()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl: java.lang.Boolean getEnabled()>
<org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers: void <init>(java.util.Collection)>-><java.util.Collections: java.util.List emptyList()>
<sun.misc.URLClassPath: void check(java.net.URL)>-><java.security.AllPermission: java.lang.String getActions()>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.apache.shiro.authc.SimpleAuthenticationInfo: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath: java.lang.String getServletUrlMapping()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.elasticsearch.common.xcontent.ObjectParser$FieldParser: java.lang.String toString()>-><org.elasticsearch.common.ParseField: java.lang.String getAllReplacedWith()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder maxPoolSize(int)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<java.util.concurrent.PriorityBlockingQueue: void tryGrow(java.lang.Object[],int)>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.apache.shiro.subject.SimplePrincipalCollection: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: org.springframework.boot.jdbc.DataSourceBuilder initializeDataSourceBuilder()>-><org.springframework.boot.jdbc.DataSourceBuilder: org.springframework.boot.jdbc.DataSourceBuilder type(java.lang.Class)>
<java.util.logging.Handler: void setFormatter(java.util.logging.Formatter)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$FlywayConfiguration: void checkLocationExists(javax.sql.DataSource,org.springframework.boot.autoconfigure.flyway.FlywayProperties,org.springframework.core.io.ResourceLoader)>-><org.springframework.boot.autoconfigure.flyway.FlywayProperties: boolean isCheckLocation()>
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: org.springframework.core.io.support.ResourcePatternResolver getResourcePatternResolver()>-><org.springframework.web.context.support.ServletContextResourcePatternResolver: void <init>(org.springframework.core.io.ResourceLoader)>
<org.springframework.boot.info.GitProperties: void coercePropertyToEpoch(java.util.Properties,java.lang.String)>-><java.util.Properties: java.lang.String getProperty(java.lang.String)>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.boot.autoconfigure.mail.MailProperties,org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.mail.javamail.JavaMailSenderImpl: void setPort(int)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.apache.shiro.session.mgt.AbstractNativeSessionManager: void notifyExpiration(org.apache.shiro.session.Session)>-><org.apache.shiro.session.mgt.AbstractNativeSessionManager: org.apache.shiro.session.Session beforeInvalidNotification(org.apache.shiro.session.Session)>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setName(java.lang.String)>
<org.apache.shiro.authz.permission.WildcardPermission: java.lang.String toString()>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration: com.google.gson.Gson gson(com.google.gson.GsonBuilder)>-><com.google.gson.GsonBuilder: com.google.gson.Gson create()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setGsonHttpMessageConverter(org.springframework.http.converter.json.GsonHttpMessageConverter)>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: void <init>(org.springframework.core.io.Resource)>-><java.lang.Object: void <init>()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupDomain(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void setDefaultDomain(java.lang.String)>
<com.google.gson.internal.LinkedTreeMap$Node: int hashCode()>-><org.elasticsearch.client.Node: int hashCode()>
<org.springframework.boot.web.embedded.jetty.JasperInitializer$WarURLConnection: void <init>(java.net.URL)>-><java.net.URL: java.net.URLConnection openConnection()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.elasticsearch.client.Node: int hashCode()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSpringApplicationAdminMXBeanRegistrar(org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJsonComponentModule(org.springframework.boot.jackson.JsonComponentModule)>
<org.springframework.http.converter.FormHttpMessageConverter: void setPartConverters(java.util.List)>-><org.springframework.util.Assert: void notEmpty(java.util.Collection,java.lang.String)>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setEventBus(org.apache.shiro.event.EventBus)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.apache.shiro.session.mgt.SimpleSession: java.lang.String toString()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: org.springframework.mail.javamail.JavaMailSenderImpl mailSender(org.springframework.boot.autoconfigure.mail.MailProperties)>-><org.springframework.mail.javamail.JavaMailSenderImpl: void <init>()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: javax.sql.DataSource getDataSource()>
<co.yiiu.pybbs.PybbsApplication: org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties getRestClientPropertiesInstance()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void setPassword(java.lang.String)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determinePassword()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: java.lang.String determineDriverClassName()>
<org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration: org.springframework.boot.autoconfigure.flyway.FlywaySchemaManagementProvider flywayDefaultDdlModeProvider(org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.flyway.FlywaySchemaManagementProvider: void <init>(java.lang.Iterable)>
<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Iterator iterator()>-><org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: void <init>(org.apache.commons.collections.FastHashMap$CollectionView)>
<org.springframework.boot.jdbc.DatabaseDriver: java.lang.String getId()>-><java.lang.String: java.lang.String toLowerCase(java.util.Locale)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration: org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean dispatcherServletRegistration(org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet getServlet()>
<org.apache.shiro.session.mgt.SimpleSession: void validate()>-><org.apache.shiro.session.mgt.SimpleSession: boolean isTimedOut()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><com.couchbase.client.core.env.KeyValueServiceConfig: com.couchbase.client.core.env.KeyValueServiceConfig create(int)>
<org.springframework.boot.web.client.RestTemplateBuilder: java.util.Set copiedSetOf(java.lang.Object[])>-><org.springframework.boot.web.client.RestTemplateBuilder: java.util.Set copiedSetOf(java.util.Collection)>
<java.text.AttributeEntry: int hashCode()>-><org.apache.shiro.session.mgt.SimpleSession: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.lang.Object next()>
<co.yiiu.pybbs.PybbsApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setPlatformTransactionManager(org.springframework.transaction.PlatformTransactionManager)>
<org.elasticsearch.client.RestClient: void setNodes(java.util.Collection)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<org.apache.shiro.subject.SimplePrincipalCollection: java.util.Set asSet()>-><java.util.LinkedHashSet: void <init>()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>
<org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.String getBaselineDescription()>-><org.flywaydb.core.internal.configuration.ConfigUtils$1: java.lang.String getBaselineDescription()>
<java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: boolean hasNext()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.apache.shiro.session.mgt.SimpleSession: boolean equals(java.lang.Object)>
<java.io.ObjectInputStream$PeekInputStream: int peek()>-><java.io.BufferedInputStream: int read()>
<org.springframework.http.client.support.HttpAccessor: void <init>()>-><java.util.ArrayList: void <init>()>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><org.apache.shiro.subject.SimplePrincipalCollection: java.util.Iterator iterator()>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><org.elasticsearch.common.xcontent.XContentParseException: java.lang.String getMessage()>
<java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)>-><java.util.logging.Handler: java.lang.String getEncoding()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<java.util.concurrent.PriorityBlockingQueue: void tryGrow(java.lang.Object[],int)>-><java.util.concurrent.locks.ReentrantLock: void lock()>
