<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: com.salesmanager.core.model.catalog.product.Product getproduct()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.Integer getid()>
<synthetic.method.MerchantRepositoryImpl: java.util.List findAllStoreCodeNameEmail()>-><com.salesmanager.core.model.merchant.MerchantStore: void setStoreEmailAddress(java.lang.String)>
<synthetic.method.CustomerRepositoryImpl: com.salesmanager.core.model.customer.Customer findByResetPasswordToken(java.lang.String,java.lang.String)>-><com.salesmanager.core.model.customer.Customer: void <init>()>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CONTENT: boolean getvisible()>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATEGORY: java.lang.Integer getdepth()>
<synthetic.method.PageableProductOptionValueRepositoryImpl: org.springframework.data.domain.Page listOptionValues(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: java.lang.Long getid()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setContinueshoppingurl(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: com.salesmanager.core.model.catalog.category.Category findByFriendlyUrl(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setCategoryImage(java.lang.String)>
<synthetic.method.datatable.CUSTOMEROPTIONVALUE: void <init>()>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorename()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.Long getid()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.math.BigDecimal getproductattributeprice()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: java.lang.String getcode()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setId(java.lang.Long)>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setId(java.lang.Long)>
<synthetic.method.PageableCatalogRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.catalog.Catalog: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorecity()>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMERATTRIBUTE: synthetic.method.datatable.CUSTOMERATTRIBUTE getInstance()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setCode(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: synthetic.method.datatable.MERCHANTSTORE getInstance()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MANUFACTURER: java.lang.String getcode()>
<synthetic.method.MerchantRepositoryImpl: java.util.List findAllStoreNames(java.lang.String)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getcode()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setUseCache(boolean)>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void setProvider(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setSortOrder(java.lang.Integer)>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.category.Category: void setVisible(boolean)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.reference.country.Country getcountry()>
<synthetic.method.ProductTypeRepositoryImpl: com.salesmanager.core.model.catalog.product.type.ProductType findByCode(java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.type.ProductType: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MANUFACTURER: java.util.Set getdescriptions()>
<synthetic.method.CustomerRepositoryImpl: com.salesmanager.core.model.customer.Customer findOne(java.lang.Long)>-><synthetic.method.datatable.CUSTOMER: synthetic.method.datatable.CUSTOMER getInstance()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.Integer getdepth()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: boolean getusecache()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void setDateOfBirth(java.util.Date)>
<synthetic.method.PageableProductOptionValueRepositoryImpl: org.springframework.data.domain.Page listOptionValues(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: java.lang.String getproductoptionvalueimage()>
<synthetic.method.PermissionRepositoryImpl: java.util.List findByGroups(java.util.Set)>-><synthetic.method.datatable.PERMISSION: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><synthetic.method.datatable.CATEGORY: boolean getcategorystatus()>
<synthetic.method.datatable.PRODUCTREVIEW: void <init>()>-><com.salesmanager.core.model.common.audit.AuditSection: void <init>()>
<synthetic.method.datatable.SHOPPINGCART: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.datatable.CUSTOMEROPTIN: void <init>()>-><com.salesmanager.core.model.system.optin.Optin: void <init>()>
<synthetic.method.PageableProductOptionValueRepositoryImpl: org.springframework.data.domain.Page listOptionValues(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setDescriptions(java.util.Set)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setDefaultLanguage(com.salesmanager.core.model.reference.language.Language)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductOptionValue(com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.reference.country.Country getcountry()>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><synthetic.method.datatable.MODULECONFIGURATION: java.util.Map getdetails()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstoreemailaddress()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void setReviews(java.util.List)>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByDates(java.util.Date,java.util.Date)>-><com.salesmanager.core.model.payments.Transaction: void setPaymentType(com.salesmanager.core.model.payments.PaymentType)>
<synthetic.method.GroupRepositoryImpl: java.util.List findByNames(java.util.List)>-><com.salesmanager.core.model.user.Group: void <init>()>
<synthetic.method.PageableProductOptionValueRepositoryImpl: org.springframework.data.domain.Page listOptionValues(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setProductOptionValueImage(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorepostalcode()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductAttributeIsFree(boolean)>
<synthetic.method.PageableCatalogRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATALOG: boolean getdefaultcatalog()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void <init>()>
<synthetic.method.datatable.PRODUCTREVIEW: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.CustomerRepositoryImpl: com.salesmanager.core.model.customer.Customer findByNick(java.lang.String,int)>-><com.salesmanager.core.model.customer.Customer: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setDescriptions(java.util.Set)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.lang.Integer gettaxpriority()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.Integer getproductoptionsortorder()>
<synthetic.method.datatable.MANUFACTURER: void <clinit>()>-><synthetic.method.datatable.MANUFACTURER: void <init>()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.MANUFACTURER: java.lang.String getcode()>
<synthetic.method.datatable.MODULECONFIGURATION: void <init>()>-><com.salesmanager.core.model.common.audit.AuditSection: void <init>()>
<synthetic.method.CountryRepositoryImpl: java.util.List listCountryZonesByLanguage(java.lang.Integer)>-><com.salesmanager.core.model.reference.country.Country: void setIsoCode(java.lang.String)>
<synthetic.method.OrderStatusHistoryRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><com.salesmanager.core.model.order.orderstatus.OrderStatusHistory: void setStatus(com.salesmanager.core.model.order.orderstatus.OrderStatus)>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByReadOnly(java.lang.Integer,java.lang.Integer,boolean)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setId(java.lang.Long)>
<synthetic.method.GroupRepositoryImpl: java.util.List findByNames(java.util.List)>-><synthetic.method.datatable.GROUP: synthetic.method.datatable.GROUP getInstance()>
<synthetic.method.ShoppingCartRepositoryImpl: com.salesmanager.core.model.shoppingcart.ShoppingCart findOne(java.lang.Long)>-><com.salesmanager.core.model.shoppingcart.ShoppingCart: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.merchant.MerchantStore getparent()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setCurrency(com.salesmanager.core.model.reference.currency.Currency)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.catalog.category.Category getparent()>
<synthetic.method.CustomerOptionRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.customer.attribute.CustomerOption: void setDescriptions(java.util.Set)>
<synthetic.method.ProductOptionSetRepositoryImpl: com.salesmanager.core.model.catalog.product.attribute.ProductOptionSet findByCode(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.PRODUCTOPTIONSET: synthetic.method.datatable.PRODUCTOPTIONSET getInstance()>
<synthetic.method.ProductOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTIONSET: java.lang.String getcode()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setRateText(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorephone()>
<synthetic.method.datatable.PRODUCTOPTION: void <clinit>()>-><synthetic.method.datatable.PRODUCTOPTION: void <init>()>
<synthetic.method.PageableProductTypeRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.type.ProductType: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.ProductTypeRepositoryImpl: com.salesmanager.core.model.catalog.product.type.ProductType findById(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.type.ProductType: void <init>()>
<synthetic.method.ProductTypeRepositoryImpl: com.salesmanager.core.model.catalog.product.type.ProductType findById(java.lang.Long,java.lang.Integer,int)>-><com.salesmanager.core.model.catalog.product.type.ProductType: void <init>()>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><com.salesmanager.core.model.system.IntegrationModule: void setCustomModule(boolean)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setContinueshoppingurl(java.lang.String)>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.category.Category: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.datatable.MERCHANTCONFIGURATION: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setLanguages(java.util.List)>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><com.salesmanager.core.model.shoppingcart.ShoppingCart: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setLineage(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setFeatured(boolean)>
<synthetic.method.ZoneRepositoryImpl: com.salesmanager.core.model.reference.zone.Zone findByCode(java.lang.String)>-><com.salesmanager.core.model.reference.zone.Zone: void setCountry(com.salesmanager.core.model.reference.country.Country)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getproductattributeisfree()>
<synthetic.method.PageableProductVariationRepositoryImpl: org.springframework.data.domain.Page list(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.variation.ProductVariation: void setProductOptionValue(com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue)>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATEGORY: synthetic.method.datatable.CATEGORY getInstance()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.Integer getsortorder()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.String getattributesortorder()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MANUFACTURER: java.lang.Long getid()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getattributerequired()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionSet: void setCustomerOption(com.salesmanager.core.model.customer.attribute.CustomerOption)>
<synthetic.method.PageableProductVariationRepositoryImpl: org.springframework.data.domain.Page list(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.variation.ProductVariation: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setZone(com.salesmanager.core.model.reference.zone.Zone)>
<synthetic.method.CustomerOptionValueRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionValue: void setCustomerOptionValueImage(java.lang.String)>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.user.GroupType)>-><synthetic.method.datatable.GROUP: java.lang.String getgroupname()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStorephone(java.lang.String)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProduct(com.salesmanager.core.model.catalog.product.Product)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.lang.String getstateprovince()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: java.lang.Integer getsortorder()>
<synthetic.method.PageableCatalogRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATALOG: java.util.Set getentry()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.CATEGORY: java.lang.Long getid()>
<synthetic.method.datatable.PRODUCTVARIATION: void <init>()>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setZone(com.salesmanager.core.model.reference.zone.Zone)>
<synthetic.method.ContentRepositoryImpl: java.util.List findByTypes(java.util.List,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: com.salesmanager.core.model.content.ContentType getcontenttype()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByIds(java.util.Set)>-><com.salesmanager.core.model.user.Group: void setPermissions(java.util.Set)>
<synthetic.method.MerchantRepositoryImpl: java.util.List findAllStoreNames()>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.ProductTypeRepositoryImpl: java.util.List findByIds(java.util.List,java.lang.Integer,int)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: java.lang.String getproductoptionvalueimage()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.reference.zone.Zone getzone()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.USER: java.lang.String getanswer2()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setCode(java.lang.String)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTREVIEW: java.lang.Long getreviewread()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setParent(com.salesmanager.core.model.catalog.category.Category)>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerAttribute: void setCustomer(com.salesmanager.core.model.customer.Customer)>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><synthetic.method.datatable.MODULECONFIGURATION: java.lang.String getconfigdetails()>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguageAndCountry(java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.reference.zone.Zone: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStorename(java.lang.String)>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void setShowBillingStateList(java.lang.String)>
<synthetic.method.UserRepositoryImpl: com.salesmanager.core.model.user.User findOne(java.lang.Long)>-><com.salesmanager.core.model.user.User: void <init>()>
<synthetic.method.datatable.MERCHANTSTORE: void <init>()>-><com.salesmanager.core.model.reference.currency.Currency: void <init>()>
<synthetic.method.datatable.CUSTOMER: void <clinit>()>-><synthetic.method.datatable.CUSTOMER: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setUseCache(boolean)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: boolean getvisible()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorecity()>
<synthetic.method.OrderStatusHistoryRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><synthetic.method.datatable.ORDERSTATUSHISTORY: synthetic.method.datatable.ORDERSTATUSHISTORY getInstance()>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><synthetic.method.datatable.SHOPPINGCART: java.lang.String getshoppingcartcode()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setVisible(boolean)>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><synthetic.method.datatable.MODULECONFIGURATION: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CONTENT: java.lang.Long getid()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.tax.taxrate.TaxRate getparent()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: java.util.Set getattributes()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCategoryStatus(boolean)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setParent(com.salesmanager.core.model.catalog.category.Category)>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguageAndCountry(java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.ZONE: java.lang.String getname()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setDescriptions(java.util.Set)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setTaxPriority(java.lang.Integer)>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerAttribute: void setTextValue(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStorecity(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.datatable.CUSTOMER: void <init>()>-><com.salesmanager.core.model.common.audit.AuditSection: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setInvoiceTemplate(java.lang.String)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeRequired(boolean)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.util.Set getstores()>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionSet: void setId(java.lang.Long)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.user.User: void setActive(boolean)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setLanguages(java.util.List)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.Long getid()>
<synthetic.method.GroupRepositoryImpl: java.util.List findAll()>-><com.salesmanager.core.model.user.Group: void setGroupName(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setCurrency(com.salesmanager.core.model.reference.currency.Currency)>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: java.lang.String getshowbillingstatelist()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long)>-><synthetic.method.datatable.PRODUCTREVIEW: java.lang.Long getid()>
<synthetic.method.CountryRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><com.salesmanager.core.model.reference.country.Country: void setName(java.lang.String)>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setProductOptionType(java.lang.String)>
<synthetic.method.datatable.CUSTOMER: void <init>()>-><java.util.Date: void <init>()>
<synthetic.method.PermissionRepositoryImpl: java.util.List findByGroups(java.util.Set)>-><com.salesmanager.core.model.user.Permission: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void setDelivery(com.salesmanager.core.model.common.Delivery)>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATEGORY: boolean getvisible()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProductNoCustomers(java.lang.Long)>-><synthetic.method.datatable.PRODUCTREVIEW: com.salesmanager.core.model.common.audit.AuditSection getaudit()>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByCustomerId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMERATTRIBUTE: com.salesmanager.core.model.customer.attribute.CustomerOptionValue getcustomeroptionvalue()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCategoryStatus(boolean)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCategoryImage(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCategoryStatus(boolean)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeAdditionalWeight(java.lang.String)>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTION: java.util.List getdescriptionslist()>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><synthetic.method.datatable.MODULECONFIGURATION: java.lang.String getimage()>
<synthetic.method.datatable.SHOPPINGCARTITEM I: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.datatable.SHOPPINGCARTITEM I: void <clinit>()>-><synthetic.method.datatable.SHOPPINGCARTITEM I: void <init>()>
<synthetic.method.LanguageRepositoryImpl: com.salesmanager.core.model.reference.language.Language findByCode(java.lang.String)>-><synthetic.method.datatable.LANGUAGE: java.util.List getstores()>
<synthetic.method.CustomerOptionRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.customer.attribute.CustomerOption: void setActive(boolean)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.String getcode()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getinvoicetemplate()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByNames(java.util.List)>-><com.salesmanager.core.model.user.Group: void setPermissions(java.util.Set)>
<synthetic.method.CountryRepositoryImpl: java.util.List listCountryZonesByLanguage(java.lang.Integer)>-><com.salesmanager.core.model.reference.country.Country: void setGeoZone(com.salesmanager.core.model.reference.geozone.GeoZone)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStoreEmailAddress(java.lang.String)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: com.salesmanager.core.model.catalog.product.attribute.ProductOption getproductoption()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.user.User: void setQuestion3(java.lang.String)>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionSet: void setSortOrder(int)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setStateProvince(java.lang.String)>
<synthetic.method.datatable.PRODUCTOPTIONSET: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.util.List getcategories()>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.category.Category: void setCategoryImage(java.lang.String)>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionSet: void setCustomerOptionValue(com.salesmanager.core.model.customer.attribute.CustomerOptionValue)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.reference.zone.Zone getzone()>
<synthetic.method.MerchantRepositoryImpl: java.util.List findAllStoreCodeNameEmail()>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByDates(java.util.Date,java.util.Date)>-><synthetic.method.datatable.TRANSACTION: com.salesmanager.core.model.payments.TransactionType gettransactiontype()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByProductInCategoryId(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCT: java.lang.Integer getorder()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: boolean getpiggyback()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductAttributeWeight(java.math.BigDecimal)>
<synthetic.method.GroupRepositoryImpl: java.util.List findAll()>-><synthetic.method.datatable.GROUP: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void <init>()>
<synthetic.method.PageableProductOptionValueRepositoryImpl: org.springframework.data.domain.Page listOptionValues(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: java.util.List getdescriptionslist()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setDescriptions(java.util.Set)>
<synthetic.method.OrderStatusHistoryRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><com.salesmanager.core.model.order.orderstatus.OrderStatusHistory: void setId(java.lang.Long)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getdatebusinesssince()>
<synthetic.method.ZoneRepositoryImpl: com.salesmanager.core.model.reference.zone.Zone findByCode(java.lang.String)>-><com.salesmanager.core.model.reference.zone.Zone: void setName(java.lang.String)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: com.salesmanager.core.model.catalog.product.Product getproduct()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: synthetic.method.datatable.CONTENT getInstance()>
<synthetic.method.datatable.OPTIN: void <init>()>-><java.util.Date: void <init>()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.USER: java.lang.String getfirstname()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: boolean getpiggyback()>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMEROPTIONSET: com.salesmanager.core.model.customer.attribute.CustomerOptionValue getcustomeroptionvalue()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.reference.language.Language getdefaultlanguage()>
<synthetic.method.datatable.PRODUCTREVIEW: void <init>()>-><com.salesmanager.core.model.catalog.product.Product: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.util.Set getdescriptions()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.user.GroupType)>-><synthetic.method.datatable.GROUP: com.salesmanager.core.model.user.GroupType getgrouptype()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.Integer getsortorder()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue getproductoptionvalue()>
<synthetic.method.PageableCatalogRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.catalog.Catalog: void setCode(java.lang.String)>
<synthetic.method.MerchantRepositoryImpl: java.util.List findAllStoreCodeNameEmail()>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getcode()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setSortOrder(java.lang.Integer)>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByDates(java.util.Date,java.util.Date)>-><com.salesmanager.core.model.payments.Transaction: void setTransactionType(com.salesmanager.core.model.payments.TransactionType)>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: java.lang.String getcode()>
<synthetic.method.datatable.TAXRATE: void <init>()>-><com.salesmanager.core.model.common.audit.AuditSection: void <init>()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.reference.zone.Zone getzone()>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CONTENT: boolean getlinktomenu()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.math.BigDecimal getproductattributeweight()>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByReadOnly(java.lang.Integer,java.lang.Integer,boolean)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setProductOptionValueSortOrder(java.lang.Integer)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: boolean getcurrencyformatnational()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.CATEGORY: synthetic.method.datatable.CATEGORY getInstance()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.lang.String getratetext()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.USER: boolean getactive()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void <init>()>
<synthetic.method.ProductTypeRepositoryImpl: java.util.List findByIds(java.util.List,java.lang.Integer,int)>-><synthetic.method.datatable.PRODUCTTYPE: java.util.Set getdescriptions()>
<synthetic.method.PageableProductOptionValueRepositoryImpl: org.springframework.data.domain.Page listOptionValues(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: synthetic.method.datatable.PRODUCTOPTIONVALUE getInstance()>
<synthetic.method.TaxClassRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.tax.taxclass.TaxClass: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: boolean getusecache()>
<synthetic.method.CountryRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><com.salesmanager.core.model.reference.country.Country: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setRetailer(java.lang.Boolean)>
<synthetic.method.datatable.TRANSACTION: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerAttribute: void setCustomerOptionValue(com.salesmanager.core.model.customer.attribute.CustomerOptionValue)>
<synthetic.method.ZoneRepositoryImpl: com.salesmanager.core.model.reference.zone.Zone findByCode(java.lang.String)>-><synthetic.method.datatable.ZONE: java.lang.String getname()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getattributedisplayonly()>
<synthetic.method.MerchantRepositoryImpl: com.salesmanager.core.model.merchant.MerchantStore getById(int)>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.reference.currency.Currency getcurrency()>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><synthetic.method.datatable.ZONE: synthetic.method.datatable.ZONE getInstance()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MANUFACTURER: synthetic.method.datatable.MANUFACTURER getInstance()>
<synthetic.method.datatable.PRODUCT: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void <init>()>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionSet: void <init>()>
<synthetic.method.MerchantRepositoryImpl: java.util.List findAllStoreNames()>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.MerchantRepositoryImpl: java.util.List findAllStoreCodeNameEmail()>-><synthetic.method.datatable.MERCHANTSTORE: synthetic.method.datatable.MERCHANTSTORE getInstance()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProduct(com.salesmanager.core.model.catalog.product.Product)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProductNoCustomers(java.lang.Long)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setCustomer(com.salesmanager.core.model.customer.Customer)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductAttributeWeight(java.math.BigDecimal)>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.content.Content: void setVisible(boolean)>
<synthetic.method.datatable.PRODUCTOPTION: void <init>()>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByCustomerId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerAttribute: void <init>()>
<synthetic.method.MerchantConfigurationRepositoryImpl: java.util.List findByMerchantStoreAndType(java.lang.Integer,com.salesmanager.core.model.system.MerchantConfigurationType)>-><synthetic.method.datatable.MERCHANTCONFIGURATION: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.datatable.CONTENT: void <clinit>()>-><synthetic.method.datatable.CONTENT: void <init>()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.user.User: void setLastAccess(java.util.Date)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: com.salesmanager.core.model.catalog.product.attribute.ProductOption getproductoption()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.datatable.CUSTOMER: void <init>()>-><com.salesmanager.core.model.common.Delivery: void <init>()>
<com.salesmanager.core.business.services.shoppingcart.ShoppingCartServiceImpl: void lambda$deleteShoppingCartItem$1(com.salesmanager.core.model.shoppingcart.ShoppingCartAttributeItem)>-><synthetic.method.ShoppingCartAttributeRepositoryImpl: void deleteById(java.lang.Object)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.ProductOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTIONSET: com.salesmanager.core.model.merchant.MerchantStore getstore()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.reference.language.Language getdefaultlanguage()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setCountry(com.salesmanager.core.model.reference.country.Country)>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setId(java.lang.Long)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setDescriptions(java.util.Set)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.Integer getproductoptionsortorder()>
<synthetic.method.datatable.CATALOG: void <init>()>-><com.salesmanager.core.model.common.audit.AuditSection: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getdomainname()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setWeightunitcode(java.lang.String)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductAttributeWeight(java.math.BigDecimal)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long)>-><synthetic.method.datatable.PRODUCTREVIEW: java.lang.Long getreviewread()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: boolean getfeatured()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: boolean getusecache()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByIds(java.util.Set)>-><synthetic.method.datatable.GROUP: java.lang.Integer getid()>
<synthetic.method.CustomerReviewRepositoryImpl: java.util.List findByReviewed(java.lang.Long)>-><com.salesmanager.core.model.customer.review.CustomerReview: void setReviewDate(java.util.Date)>
<synthetic.method.GroupRepositoryImpl: java.util.List findAll()>-><com.salesmanager.core.model.user.Group: void setPermissions(java.util.Set)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setParent(com.salesmanager.core.model.tax.taxrate.TaxRate)>
<synthetic.method.PageableCatalogRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.catalog.Catalog: void setEntry(java.util.Set)>
<synthetic.method.ContentRepositoryImpl: com.salesmanager.core.model.content.Content findOne(java.lang.Long)>-><com.salesmanager.core.model.content.Content: void <init>()>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setId(java.lang.Long)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCode(java.lang.String)>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: java.lang.Long getid()>
<synthetic.method.CustomerOptionRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.customer.attribute.CustomerOption: void setSortOrder(java.lang.Integer)>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setOrder(java.lang.Integer)>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setCode(java.lang.String)>
<synthetic.method.ProductTypeRepositoryImpl: java.util.List findByIds(java.util.List,java.lang.Integer,int)>-><synthetic.method.datatable.PRODUCTTYPE: java.lang.Boolean getallowaddtocart()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: synthetic.method.datatable.MERCHANTSTORE getInstance()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: boolean getcurrencyformatnational()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: boolean getvisible()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: boolean getcategorystatus()>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><com.salesmanager.core.model.reference.zone.Zone: void setCountry(com.salesmanager.core.model.reference.country.Country)>
<synthetic.method.ContentRepositoryImpl: java.util.List findByTypes(java.util.List,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: java.util.List getdescriptions()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void <init>()>
<synthetic.method.ProductTypeRepositoryImpl: com.salesmanager.core.model.catalog.product.type.ProductType findById(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTTYPE: synthetic.method.datatable.PRODUCTTYPE getInstance()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setTaxClass(com.salesmanager.core.model.tax.taxclass.TaxClass)>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.user.User: void setAnswer2(java.lang.String)>
<synthetic.method.datatable.ORDER: void <clinit>()>-><synthetic.method.datatable.ORDER: void <init>()>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMEROPTIONSET: com.salesmanager.core.model.customer.attribute.CustomerOption getcustomeroption()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: boolean getvisible()>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByReadOnly(java.lang.Integer,java.lang.Integer,boolean)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setDescriptions(java.util.Set)>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: java.lang.Integer getcustomerreviewcount()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setDescriptions(java.util.Set)>
<synthetic.method.datatable.CUSTOMEROPTION: void <clinit>()>-><synthetic.method.datatable.CUSTOMEROPTION: void <init>()>
<synthetic.method.datatable.ORDERSTATUSHISTORY: void <clinit>()>-><synthetic.method.datatable.ORDERSTATUSHISTORY: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.String getcode()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: synthetic.method.datatable.CATEGORY getInstance()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setCurrencyFormatNational(boolean)>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setDescriptionsList(java.util.List)>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.user.User: void setId(java.lang.Long)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProductNoCustomers(java.lang.Long)>-><synthetic.method.datatable.PRODUCTREVIEW: com.salesmanager.core.model.catalog.product.Product getproduct()>
<synthetic.method.CustomerOptionValueRepositoryImpl: com.salesmanager.core.model.customer.attribute.CustomerOptionValue findByCode(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionValue: void <init>()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.user.User: void setAdminPassword(java.lang.String)>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMEROPTIONSET: synthetic.method.datatable.CUSTOMEROPTIONSET getInstance()>
<synthetic.method.ProductTypeRepositoryImpl: com.salesmanager.core.model.catalog.product.type.ProductType findById(java.lang.Long,java.lang.Integer,int)>-><synthetic.method.datatable.PRODUCTTYPE: synthetic.method.datatable.PRODUCTTYPE getInstance()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.catalog.category.Category getparent()>
<synthetic.method.UserRepositoryImpl: com.salesmanager.core.model.user.User findByUserName(java.lang.String)>-><com.salesmanager.core.model.user.User: void <init>()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setTaxRate(java.math.BigDecimal)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: com.salesmanager.core.model.catalog.product.Product getproduct()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeAdditionalWeight(java.lang.String)>
<synthetic.method.OrderStatusHistoryRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><synthetic.method.datatable.ORDERSTATUSHISTORY: com.salesmanager.core.model.order.orderstatus.OrderStatus getstatus()>
<synthetic.method.CategoryRepositoryImpl: com.salesmanager.core.model.catalog.category.Category findByIdAndLanguage(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void <init>()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void setId(java.lang.Long)>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.content.Content: void setCode(java.lang.String)>
<synthetic.method.datatable.TAXCLASS: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.CustomerOptionValueRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionValue: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: boolean getfeatured()>
<synthetic.method.OrderProductDownloadRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><com.salesmanager.core.model.order.orderproduct.OrderProductDownload: void setOrderProductFilename(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setCurrency(com.salesmanager.core.model.reference.currency.Currency)>
<synthetic.method.ProductOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTIONSET: java.util.List getvalues()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.reference.language.Language getdefaultlanguage()>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CONTENT: synthetic.method.datatable.CONTENT getInstance()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MANUFACTURER: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.USER: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.CustomerOptionValueRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProductNoCustomers(java.lang.Long)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setReviewDate(java.util.Date)>
<synthetic.method.ContentRepositoryImpl: java.util.List findByTypes(java.util.List,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMERATTRIBUTE: com.salesmanager.core.model.customer.attribute.CustomerOptionValue getcustomeroptionvalue()>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.category.Category: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStorepostalcode(java.lang.String)>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setProductOptionSortOrder(java.lang.Integer)>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.USER: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATEGORY: java.lang.String getcode()>
<synthetic.method.ProductTypeRepositoryImpl: java.util.List findByIds(java.util.List,java.lang.Integer,int)>-><synthetic.method.datatable.PRODUCTTYPE: synthetic.method.datatable.PRODUCTTYPE getInstance()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.user.User: void setGroups(java.util.List)>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MANUFACTURER: java.lang.String getcode()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeSortOrder(java.lang.String)>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><synthetic.method.datatable.SHOPPINGCART: java.util.Set getlineitems()>
<synthetic.method.ManufacturerRepositoryImpl: java.lang.Long countByProduct(java.lang.Long)>-><synthetic.method.datatable.PRODUCT: synthetic.method.datatable.PRODUCT getInstance()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.tax.taxrate.TaxRate getparent()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: boolean getcategorystatus()>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguageAndCountry(java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.ZONE: java.lang.Long getid()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setParent(com.salesmanager.core.model.catalog.category.Category)>
<synthetic.method.CustomerReviewRepositoryImpl: java.util.List findByReviewed(java.lang.Long)>-><com.salesmanager.core.model.customer.review.CustomerReview: void setCustomer(com.salesmanager.core.model.customer.Customer)>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByReadOnly(java.lang.Integer,java.lang.Integer,boolean)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void <init>()>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.content.Content: void setCode(java.lang.String)>
<synthetic.method.CustomerOptionRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CUSTOMEROPTION: boolean getpublicoption()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long)>-><synthetic.method.datatable.PRODUCTREVIEW: java.lang.Double getreviewrating()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setCode(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.String getlineage()>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><com.salesmanager.core.model.system.IntegrationModule: void setDetails(java.util.Map)>
<synthetic.method.CustomerRepositoryImpl: com.salesmanager.core.model.customer.Customer findByResetPasswordToken(java.lang.String,java.lang.String)>-><synthetic.method.datatable.CUSTOMER: synthetic.method.datatable.CUSTOMER getInstance()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCategories(java.util.List)>
<synthetic.method.PageableProductVariationRepositoryImpl: org.springframework.data.domain.Page list(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.variation.ProductVariation: void <init>()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: java.lang.String getshowdeliverystatelist()>
<synthetic.method.PageableProductOptionValueRepositoryImpl: org.springframework.data.domain.Page listOptionValues(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: java.util.Set getdescriptions()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByCategoriesAndLanguage(java.util.List,java.lang.Integer)>-><synthetic.method.datatable.PRODUCT: java.lang.Long getid()>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByDates(java.util.Date,java.util.Date)>-><synthetic.method.datatable.TRANSACTION: java.lang.String getdetails()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setDescriptions(java.util.Set)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getattributedefault()>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><synthetic.method.datatable.MODULECONFIGURATION: java.lang.String getconfiguration()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setProduct(com.salesmanager.core.model.catalog.product.Product)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByCategoriesAndLanguage(java.util.List,java.lang.Integer)>-><java.lang.Long: void <init>(long)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStorestateprovince(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.Integer getdepth()>
<synthetic.method.MerchantRepositoryImpl: com.salesmanager.core.model.merchant.MerchantStore findByCode(java.lang.String)>-><synthetic.method.datatable.MERCHANTSTORE: synthetic.method.datatable.MERCHANTSTORE getInstance()>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.Integer getdepth()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setReviewRating(java.lang.Double)>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.content.Content: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setVisible(boolean)>
<synthetic.method.datatable.COUNTRY: void <clinit>()>-><synthetic.method.datatable.COUNTRY: void <init>()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.USER: java.lang.String getadminemail()>
<synthetic.method.MerchantConfigurationRepositoryImpl: com.salesmanager.core.model.system.MerchantConfiguration findByMerchantStoreAndKey(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.MERCHANTCONFIGURATION: synthetic.method.datatable.MERCHANTCONFIGURATION getInstance()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setDepth(java.lang.Integer)>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.user.User: void setAnswer3(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><synthetic.method.datatable.CATEGORY: java.util.Set getdescriptions()>
<synthetic.method.TaxClassRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.TAXCLASS: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByReadOnly(java.lang.Integer,java.lang.Integer,boolean)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: java.util.List getdescriptionslist()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.user.User: void setLastName(java.lang.String)>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTION: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setRetailer(java.lang.Boolean)>
<synthetic.method.ProductVariationRepositoryImpl: com.salesmanager.core.model.catalog.product.variation.ProductVariation findByCode(java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.variation.ProductVariation: void <init>()>
<synthetic.method.OrderStatusHistoryRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><synthetic.method.datatable.ORDERSTATUSHISTORY: java.lang.Integer getcustomernotified()>
<synthetic.method.MerchantConfigurationRepositoryImpl: java.util.List findByMerchantStoreAndType(java.lang.Integer,com.salesmanager.core.model.system.MerchantConfigurationType)>-><com.salesmanager.core.model.system.MerchantConfiguration: void setId(java.lang.Long)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getproductattributeisfree()>
<synthetic.method.PageableProductTypeRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTTYPE: synthetic.method.datatable.PRODUCTTYPE getInstance()>
<synthetic.method.PageableCatalogEntryRepositoryImpl: org.springframework.data.domain.Page listByCatalog(java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATALOGCATEGORYENTRY: synthetic.method.datatable.CATALOGCATEGORYENTRY getInstance()>
<synthetic.method.OrderStatusHistoryRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><com.salesmanager.core.model.order.orderstatus.OrderStatusHistory: void setDateAdded(java.util.Date)>
<synthetic.method.ProductTypeRepositoryImpl: java.util.List findByIds(java.util.List,java.lang.Integer,int)>-><synthetic.method.datatable.PRODUCTTYPE: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setImage(java.lang.String)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setId(java.lang.Long)>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void <init>()>
<synthetic.method.datatable.PRODUCTIMAGE: void <clinit>()>-><synthetic.method.datatable.PRODUCTIMAGE: void <init>()>
<synthetic.method.PageableCatalogEntryRepositoryImpl: org.springframework.data.domain.Page listByCatalog(java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATALOGCATEGORYENTRY: com.salesmanager.core.model.catalog.catalog.Catalog getcatalog()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setDescriptions(java.util.List)>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByCustomerId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerAttribute: void setTextValue(java.lang.String)>
<synthetic.method.GroupRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.user.GroupType)>-><synthetic.method.datatable.GROUP: java.util.Set getpermissions()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCategoryStatus(boolean)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.lang.String getcode()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setSortOrder(java.lang.Integer)>
<synthetic.method.datatable.SHOPPINGCART: void <init>()>-><java.util.Date: void <init>()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.lang.Integer gettaxpriority()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.OrderProductDownloadRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByProductInCategoryId(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCT: java.lang.Long getid()>
<synthetic.method.PageableProductTypeRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTTYPE: java.lang.Boolean getvisible()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getcode()>
<synthetic.method.datatable.CUSTOMEROPTIN: void <init>()>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getcode()>
<synthetic.method.CustomerOptionRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CUSTOMEROPTION: java.util.Set getdescriptions()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByIds(java.util.Set)>-><com.salesmanager.core.model.user.Group: void setGroupName(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCategories(java.util.List)>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMEROPTIONSET: java.lang.Integer getsortorder()>
<synthetic.method.GroupRepositoryImpl: java.util.List findAll()>-><com.salesmanager.core.model.user.Group: void setGroupType(com.salesmanager.core.model.user.GroupType)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductAttributePrice(java.math.BigDecimal)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getcode()>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguageAndCountry(java.lang.String,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><synthetic.method.datatable.ZONE: java.lang.Long getid()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getdomainname()>
<synthetic.method.PermissionRepositoryImpl: java.util.List findByGroups(java.util.Set)>-><synthetic.method.datatable.PERMISSION: synthetic.method.datatable.PERMISSION getInstance()>
<synthetic.method.TaxClassRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.TAXCLASS: java.util.List getproducts()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorename()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductAttributeIsFree(boolean)>
<synthetic.method.datatable.SHOPPINGCARTITEM: void <clinit>()>-><synthetic.method.datatable.SHOPPINGCARTITEM: void <init>()>
<synthetic.method.datatable.CATEGORYDESCRIPTION: void <clinit>()>-><synthetic.method.datatable.CATEGORYDESCRIPTION: void <init>()>
<synthetic.method.CategoryDescriptionRepositoryImpl: java.util.List listByCategoryId(java.lang.Long)>-><com.salesmanager.core.model.catalog.category.CategoryDescription: void setMetatagDescription(java.lang.String)>
<synthetic.method.CustomerOptionRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CUSTOMEROPTION: synthetic.method.datatable.CUSTOMEROPTION getInstance()>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTION: java.util.Set getdescriptions()>
<synthetic.method.datatable.CONTENT: void <init>()>-><com.salesmanager.core.model.common.audit.AuditSection: void <init>()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void setDefaultLanguage(com.salesmanager.core.model.reference.language.Language)>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByReadOnly(java.lang.Integer,java.lang.Integer,boolean)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByDates(java.util.Date,java.util.Date)>-><synthetic.method.datatable.TRANSACTION: java.util.Date gettransactiondate()>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMERATTRIBUTE: com.salesmanager.core.model.customer.Customer getcustomer()>
<synthetic.method.datatable.CUSTOMEROPTION: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setReadOnly(boolean)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void <init>()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.String getattributesortorder()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setRateText(java.lang.String)>
<synthetic.method.datatable.MERCHANTSTORE: void <init>()>-><com.salesmanager.core.model.reference.zone.Zone: void <init>()>
<synthetic.method.PermissionRepositoryImpl: java.util.List findByGroups(java.util.Set)>-><com.salesmanager.core.model.user.Permission: void setId(java.lang.Integer)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><com.salesmanager.core.model.shoppingcart.ShoppingCart: void setShoppingCartCode(java.lang.String)>
<synthetic.method.datatable.CUSTOMERATTRIBUTE: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeRequired(boolean)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTREVIEW: java.util.Date getreviewdate()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.math.BigDecimal getproductattributeweight()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.content.Content: void setContentType(com.salesmanager.core.model.content.ContentType)>
<synthetic.method.CustomerOptionValueRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CUSTOMEROPTIONVALUE: java.lang.String getcustomeroptionvalueimage()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setId(java.lang.Long)>
<synthetic.method.TaxRateRepositoryImpl: com.salesmanager.core.model.tax.taxrate.TaxRate findByStoreAndId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.TAXRATE: synthetic.method.datatable.TAXRATE getInstance()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorecity()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.user.GroupType)>-><synthetic.method.datatable.GROUP: synthetic.method.datatable.GROUP getInstance()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void setGroups(java.util.List)>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByOrder(java.lang.Long)>-><synthetic.method.datatable.TRANSACTION: com.salesmanager.core.model.payments.TransactionType gettransactiontype()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setStatus(java.lang.Integer)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCategoryImage(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setVisible(boolean)>
<synthetic.method.MerchantConfigurationRepositoryImpl: java.util.List findByMerchantStoreAndType(java.lang.Integer,com.salesmanager.core.model.system.MerchantConfigurationType)>-><synthetic.method.datatable.MERCHANTCONFIGURATION: com.salesmanager.core.model.system.MerchantConfigurationType getmerchantconfigurationtype()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.util.List getdescriptions()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeDisplayOnly(boolean)>
<synthetic.method.ContentRepositoryImpl: com.salesmanager.core.model.content.Content findByCode(java.lang.String,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: synthetic.method.datatable.CONTENT getInstance()>
<synthetic.method.datatable.SHOPPINGCARTITEM: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getdomainname()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getinvoicetemplate()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.String getlineage()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProductNoCustomers(java.lang.Long)>-><synthetic.method.datatable.PRODUCTREVIEW: com.salesmanager.core.model.customer.Customer getcustomer()>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerAttribute: void setCustomerOption(com.salesmanager.core.model.customer.attribute.CustomerOption)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setDepth(java.lang.Integer)>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByOrder(java.lang.Long)>-><synthetic.method.datatable.TRANSACTION: java.lang.Long getid()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><synthetic.method.datatable.CATEGORY: java.util.List getcategories()>
<synthetic.method.datatable.ZONE: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.datatable.PRODUCTOPTIONVALUE: void <clinit>()>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: void <init>()>
<synthetic.method.datatable.CUSTOMERATTRIBUTE: void <init>()>-><com.salesmanager.core.model.customer.attribute.CustomerOptionValue: void <init>()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByProductInCategoryId(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.PageableProductOptionValueRepositoryImpl: org.springframework.data.domain.Page listOptionValues(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: java.lang.String getcode()>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><synthetic.method.datatable.MODULECONFIGURATION: java.lang.String getcode()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void <init>()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getattributedefault()>
<synthetic.method.datatable.TAXRATE: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.String getcategoryimage()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.CountryRepositoryImpl: java.util.List listCountryZonesByLanguage(java.lang.Integer)>-><synthetic.method.datatable.COUNTRY: java.util.Set getdescriptions()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.util.List getdescriptions()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCategories(java.util.List)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setTaxPriority(java.lang.Integer)>
<synthetic.method.PageableCatalogRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.catalog.Catalog: void setSortOrder(java.lang.Integer)>
<synthetic.method.CustomerOptionSetRepositoryImpl: com.salesmanager.core.model.customer.attribute.CustomerOptionSet findOne(java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionSet: void <init>()>
<synthetic.method.datatable.PRODUCTVARIATION: void <init>()>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void <init>()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: java.util.List getdescriptions()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.Long getid()>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMEROPTIONSET: java.lang.Long getid()>
<synthetic.method.CustomerOptinRepositoryImpl: com.salesmanager.core.model.system.optin.CustomerOptin findByMerchantAndCodeAndEmail(java.lang.Integer,java.lang.String,java.lang.String)>-><synthetic.method.datatable.CUSTOMEROPTIN: synthetic.method.datatable.CUSTOMEROPTIN getInstance()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.String getattributeprice()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductOptionValue(com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.util.Set getdescriptions()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.String getlineage()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getattributedisplayonly()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getseizeunitcode()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: boolean getcategorystatus()>
<synthetic.method.datatable.LANGUAGE: void <init>()>-><com.salesmanager.core.model.common.audit.AuditSection: void <init>()>
<synthetic.method.CategoryRepositoryImpl: com.salesmanager.core.model.catalog.category.Category findByCode(java.lang.String,java.lang.String)>-><synthetic.method.datatable.CATEGORY: synthetic.method.datatable.CATEGORY getInstance()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.CATEGORY: java.util.Set getdescriptions()>
<synthetic.method.CategoryDescriptionRepositoryImpl: java.util.List listByCategoryId(java.lang.Long)>-><com.salesmanager.core.model.catalog.category.CategoryDescription: void <init>()>
<synthetic.method.datatable.DIGITALPRODUCT: void <clinit>()>-><synthetic.method.datatable.DIGITALPRODUCT: void <init>()>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATEGORY: java.util.Set getdescriptions()>
<synthetic.method.CustomerReviewRepositoryImpl: java.util.List findByReviewed(java.lang.Long)>-><synthetic.method.datatable.CUSTOMERREVIEW: java.lang.Double getreviewrating()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.USER: java.lang.String getadminpassword()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getattributediscounted()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStorepostalcode(java.lang.String)>
<synthetic.method.CategoryDescriptionRepositoryImpl: java.util.List listByCategoryId(java.lang.Long)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.content.Content: void setProductGroup(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setLineage(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setId(java.lang.Integer)>
<synthetic.method.LanguageRepositoryImpl: com.salesmanager.core.model.reference.language.Language findByCode(java.lang.String)>-><com.salesmanager.core.model.reference.language.Language: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeAdditionalWeight(java.lang.String)>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CONTENT: com.salesmanager.core.model.content.ContentPosition getcontentposition()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.lang.String getcode()>
<synthetic.method.CategoryRepositoryImpl: com.salesmanager.core.model.catalog.category.Category findByCode(java.lang.String,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void <init>()>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByDates(java.util.Date,java.util.Date)>-><synthetic.method.datatable.TRANSACTION: com.salesmanager.core.model.payments.PaymentType getpaymenttype()>
<synthetic.method.ProductOptionValueRepositoryImpl: com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue findOne(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void <init>()>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><synthetic.method.datatable.MODULECONFIGURATION: java.lang.Long getid()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: boolean getfeatured()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><synthetic.method.datatable.CATEGORY: java.lang.Integer getsortorder()>
<synthetic.method.GroupRepositoryImpl: java.util.List findAll()>-><synthetic.method.datatable.GROUP: java.lang.Integer getid()>
<synthetic.method.datatable.PRODUCTVARIATION: void <init>()>-><com.salesmanager.core.model.common.audit.AuditSection: void <init>()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setCode(java.lang.String)>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.util.Date getinbusinesssince()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.MerchantRepositoryImpl: java.util.List findAllStoreNames()>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorename()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setParent(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.MerchantRepositoryImpl: java.util.List findAllStoreNames(java.lang.String)>-><synthetic.method.datatable.MERCHANTSTORE: synthetic.method.datatable.MERCHANTSTORE getInstance()>
<synthetic.method.datatable.MERCHANTCONFIGURATION: void <clinit>()>-><synthetic.method.datatable.MERCHANTCONFIGURATION: void <init>()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: boolean getlinktomenu()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setId(java.lang.Integer)>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguageAndCountry(java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.ZONE: java.lang.String getcode()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeDiscounted(boolean)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.Boolean getretailer()>
<synthetic.method.ZoneRepositoryImpl: com.salesmanager.core.model.reference.zone.Zone findByCode(java.lang.String)>-><com.salesmanager.core.model.reference.zone.Zone: void setCode(java.lang.String)>
<synthetic.method.datatable.TRANSACTION: void <init>()>-><com.salesmanager.core.model.common.audit.AuditSection: void <init>()>
<synthetic.method.ProductOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTIONSET: java.lang.Integer getid()>
<synthetic.method.PageableCatalogRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.catalog.Catalog: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setTaxClass(com.salesmanager.core.model.tax.taxclass.TaxClass)>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguageAndCountry(java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.ZONE: com.salesmanager.core.model.reference.country.Country getcountry()>
<synthetic.method.CustomerOptionRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.customer.attribute.CustomerOption: void setCustomerOptionType(java.lang.String)>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguageAndCountry(java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.reference.zone.Zone: void setId(java.lang.Long)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: boolean getfeatured()>
<synthetic.method.TaxClassRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.TAXCLASS: java.lang.Integer getid()>
<synthetic.method.CustomerOptionValueRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionValue: void setDescriptionsList(java.util.List)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setDescriptions(java.util.List)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setParent(com.salesmanager.core.model.tax.taxrate.TaxRate)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstoretemplate()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.user.User: void setAdminEmail(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCategories(java.util.List)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.MANUFACTURER: java.lang.String getcode()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTREVIEW: com.salesmanager.core.model.catalog.product.Product getproduct()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: synthetic.method.datatable.CATEGORY getInstance()>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><synthetic.method.datatable.MODULECONFIGURATION: java.util.Map getmoduleconfigs()>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.content.Content: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setDescriptions(java.util.Set)>
<synthetic.method.datatable.PERMISSION: void <clinit>()>-><synthetic.method.datatable.PERMISSION: void <init>()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.content.Content: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.datatable.MERCHANTSTORE: void <init>()>-><com.salesmanager.core.model.common.audit.AuditSection: void <init>()>
<synthetic.method.ProductImageRepositoryImpl: com.salesmanager.core.model.catalog.product.image.ProductImage findOne(java.lang.Long)>-><com.salesmanager.core.model.catalog.product.image.ProductImage: void <init>()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeDiscounted(boolean)>
<synthetic.method.CountryRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><synthetic.method.datatable.COUNTRY: java.lang.String getname()>
<synthetic.method.PageableProductOptionRepositoryImpl: org.springframework.data.domain.Page listOptions(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setReadOnly(boolean)>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionSet: void setCustomerOptionValue(com.salesmanager.core.model.customer.attribute.CustomerOptionValue)>
<synthetic.method.MerchantConfigurationRepositoryImpl: java.util.List findByMerchantStoreAndType(java.lang.Integer,com.salesmanager.core.model.system.MerchantConfigurationType)>-><synthetic.method.datatable.MERCHANTCONFIGURATION: java.lang.String getvalue()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.util.Set getdescriptions()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.CustomerOptionRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CUSTOMEROPTION: java.lang.Integer getsortorder()>
<synthetic.method.datatable.ORDERPRODUCTDOWNLOAD: void <init>()>-><com.salesmanager.core.model.order.orderproduct.OrderProduct: void <init>()>
<synthetic.method.datatable.PRODUCT: void <init>()>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMEROPTIONSET: synthetic.method.datatable.CUSTOMEROPTIONSET getInstance()>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByCustomerId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMERATTRIBUTE: com.salesmanager.core.model.customer.attribute.CustomerOption getcustomeroption()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.USER: java.lang.String getanswer3()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getweightunitcode()>
<synthetic.method.MerchantRepositoryImpl: java.util.List findAllStoreNames()>-><com.salesmanager.core.model.merchant.MerchantStore: void setStorename(java.lang.String)>
<synthetic.method.CustomerReviewRepositoryImpl: java.util.List findByReviewed(java.lang.Long)>-><com.salesmanager.core.model.customer.review.CustomerReview: void setStatus(java.lang.Integer)>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATEGORY: boolean getcategorystatus()>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><com.salesmanager.core.model.shoppingcart.ShoppingCart: void setIpAddress(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setSeizeunitcode(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setCurrencyFormatNational(boolean)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><synthetic.method.datatable.CATEGORY: java.lang.Long getid()>
<synthetic.method.datatable.PRODUCTATTRIBUTE: void <clinit>()>-><synthetic.method.datatable.PRODUCTATTRIBUTE: void <init>()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void setCustomerReviewAvg(java.math.BigDecimal)>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.category.Category: void setDepth(java.lang.Integer)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getattributedefault()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getdatebusinesssince()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByIds(java.util.Set)>-><com.salesmanager.core.model.user.Group: void setGroupType(com.salesmanager.core.model.user.GroupType)>
<synthetic.method.datatable.CUSTOMEROPTIN: void <clinit>()>-><synthetic.method.datatable.CUSTOMEROPTIN: void <init>()>
<synthetic.method.ProductOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionSet: void setCode(java.lang.String)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getattributedefault()>
<synthetic.method.datatable.TAXRATE: void <init>()>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><com.salesmanager.core.model.reference.zone.Zone: void setName(java.lang.String)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProductNoCustomers(java.lang.Long)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setReviewRead(java.lang.Long)>
<synthetic.method.ShoppingCartRepositoryImpl: com.salesmanager.core.model.shoppingcart.ShoppingCart findOne(java.lang.Long)>-><synthetic.method.datatable.SHOPPINGCART: synthetic.method.datatable.SHOPPINGCART getInstance()>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><synthetic.method.datatable.SHOPPINGCART: boolean getobsolete()>
<synthetic.method.datatable.USER: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setCategoryStatus(boolean)>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByDates(java.util.Date,java.util.Date)>-><com.salesmanager.core.model.payments.Transaction: void setAmount(java.math.BigDecimal)>
<synthetic.method.MerchantConfigurationRepositoryImpl: com.salesmanager.core.model.system.MerchantConfiguration findByMerchantStoreAndKey(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.system.MerchantConfiguration: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.CATEGORY: java.util.List getcategories()>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATEGORY: java.lang.Integer getsortorder()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.util.List getcategories()>
<synthetic.method.PageableProductTypeRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTTYPE: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerAttribute: void setId(java.lang.Long)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.Integer getsortorder()>
<synthetic.method.datatable.PRODUCTREVIEW: void <clinit>()>-><synthetic.method.datatable.PRODUCTREVIEW: void <init>()>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByOrder(java.lang.Long)>-><synthetic.method.datatable.TRANSACTION: java.math.BigDecimal getamount()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.USER: java.lang.String getadminname()>
<synthetic.method.CategoryDescriptionRepositoryImpl: java.util.List listByCategoryId(java.lang.Long)>-><com.salesmanager.core.model.catalog.category.CategoryDescription: void setCategoryHighlight(java.lang.String)>
<synthetic.method.ZoneRepositoryImpl: com.salesmanager.core.model.reference.zone.Zone findByCode(java.lang.String)>-><com.salesmanager.core.model.reference.zone.Zone: void <init>()>
<synthetic.method.PageableProductOptionRepositoryImpl: org.springframework.data.domain.Page listOptions(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTOPTION: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.content.Content: void setLinkToMenu(boolean)>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByCustomerId(java.lang.Integer,java.lang.Long)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.OrderStatusHistoryRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><com.salesmanager.core.model.order.orderstatus.OrderStatusHistory: void setOrder(com.salesmanager.core.model.order.Order)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.math.BigDecimal gettaxrate()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.reference.currency.Currency getcurrency()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setParent(com.salesmanager.core.model.catalog.category.Category)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.Long getid()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setDescriptions(java.util.Set)>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProductNoCustomers(java.lang.Long)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setDescriptions(java.util.Set)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.String getattributeprice()>
<synthetic.method.PageableProductOptionValueRepositoryImpl: org.springframework.data.domain.Page listOptionValues(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setProductOptionDisplayOnly(boolean)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setParent(com.salesmanager.core.model.catalog.category.Category)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.String getcode()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductOption(com.salesmanager.core.model.catalog.product.attribute.ProductOption)>
<synthetic.method.datatable.MANUFACTURER: void <init>()>-><com.salesmanager.core.model.common.audit.AuditSection: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setUseCache(boolean)>
<synthetic.method.PageableProductTypeRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.type.ProductType: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.content.Content: void setVisible(boolean)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductAttributePrice(java.math.BigDecimal)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.String getcategoryimage()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.Integer getsortorder()>
<synthetic.method.CatalogRepositoryImpl: boolean existsByCode(java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.CATALOG: boolean getcount c > 0()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCategoryImage(java.lang.String)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setOrder(java.lang.Integer)>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMEROPTIONSET: java.lang.Integer getsortorder()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByNames(java.util.List)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setCode(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstoreaddress()>
<synthetic.method.ShoppingCartItemRepositoryImpl: void deleteById(java.lang.Long)>-><synthetic.method.datatable.SHOPPINGCARTITEM I: synthetic.method.datatable.SHOPPINGCARTITEM I getInstance()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.String getattributeprice()>
<synthetic.method.TaxClassRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.tax.taxclass.TaxClass: void setTaxRates(java.util.List)>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.ManufacturerRepositoryImpl: com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer findByCodeAndMerchandStore(java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void <init>()>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CUSTOMEROPTIONSET: com.salesmanager.core.model.customer.attribute.CustomerOption getcustomeroption()>
<synthetic.method.ZoneRepositoryImpl: com.salesmanager.core.model.reference.zone.Zone findByCode(java.lang.String)>-><com.salesmanager.core.model.reference.zone.Zone: void setId(java.lang.Long)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.lang.String getstateprovince()>
<synthetic.method.ZoneRepositoryImpl: com.salesmanager.core.model.reference.zone.Zone findByCode(java.lang.String)>-><synthetic.method.datatable.ZONE: java.lang.String getcode()>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: boolean getproductoptiondisplayonly()>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByDates(java.util.Date,java.util.Date)>-><synthetic.method.datatable.TRANSACTION: java.math.BigDecimal getamount()>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.user.User: void setQuestion1(java.lang.String)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.Integer getproductoptionsortorder()>
<synthetic.method.CustomerOptionValueRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CUSTOMEROPTIONVALUE: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.PageableProductOptionRepositoryImpl: org.springframework.data.domain.Page listOptions(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTOPTION: java.lang.String getproductoptiontype()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setParent(com.salesmanager.core.model.catalog.category.Category)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByCategoriesAndLanguage(java.util.List,java.lang.Integer)>-><synthetic.method.datatable.PRODUCT: java.lang.String getimage()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setCategoryStatus(boolean)>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void setPassword(java.lang.String)>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setCode(java.lang.String)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void <init>()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setId(java.lang.Long)>
<synthetic.method.datatable.ORDERPRODUCTDOWNLOAD: void <clinit>()>-><synthetic.method.datatable.ORDERPRODUCTDOWNLOAD: void <init>()>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByDates(java.util.Date,java.util.Date)>-><com.salesmanager.core.model.payments.Transaction: void setDetails(java.lang.String)>
<synthetic.method.OrderRepositoryImpl: com.salesmanager.core.model.order.Order findOne(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.order.Order: void <init>()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.lang.Integer gettaxpriority()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductAttributePrice(java.math.BigDecimal)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: synthetic.method.datatable.CATEGORY getInstance()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.Boolean getretailer()>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><com.salesmanager.core.model.shoppingcart.ShoppingCart: void setPromoCode(java.lang.String)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long)>-><synthetic.method.datatable.PRODUCTREVIEW: com.salesmanager.core.model.customer.Customer getcustomer()>
<synthetic.method.datatable.CATEGORY: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByProductInCategoryId(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCT: synthetic.method.datatable.PRODUCT getInstance()>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CONTENT: com.salesmanager.core.model.content.ContentType getcontenttype()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setCode(java.lang.String)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setCountry(com.salesmanager.core.model.reference.country.Country)>
<synthetic.method.CountryRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><com.salesmanager.core.model.reference.country.Country: void setId(java.lang.Integer)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getcontinueshoppingurl()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCategories(java.util.List)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: synthetic.method.datatable.TAXRATE getInstance()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstoreemailaddress()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.String getattributesortorder()>
<synthetic.method.OrderProductDownloadRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><com.salesmanager.core.model.order.orderproduct.OrderProductDownload: void <init>()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.math.BigDecimal getproductattributeprice()>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionSet: void <init>()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.math.BigDecimal gettaxrate()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProductNoCustomers(java.lang.Long)>-><synthetic.method.datatable.PRODUCTREVIEW: java.util.Date getreviewdate()>
<synthetic.method.PermissionRepositoryImpl: java.util.List findByGroups(java.util.Set)>-><com.salesmanager.core.model.user.Permission: void setPermissionName(java.lang.String)>
<synthetic.method.datatable.TAXRATE: void <init>()>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setDepth(java.lang.Integer)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorelogo()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MANUFACTURER: java.lang.Integer getorder()>
<synthetic.method.ProductAttributeRepositoryImpl: com.salesmanager.core.model.catalog.product.attribute.ProductAttribute findOne(java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: synthetic.method.datatable.PRODUCTATTRIBUTE getInstance()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void <init>()>
<synthetic.method.PageableProductOptionRepositoryImpl: org.springframework.data.domain.Page listOptions(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTOPTION: java.util.Set getdescriptions()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: boolean getcategorystatus()>
<synthetic.method.UserRepositoryImpl: com.salesmanager.core.model.user.User findOne(java.lang.Long)>-><synthetic.method.datatable.USER: synthetic.method.datatable.USER getInstance()>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATEGORY: java.lang.String getlineage()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: boolean getcategorystatus()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByNames(java.util.List)>-><synthetic.method.datatable.GROUP: java.lang.Integer getid()>
<synthetic.method.datatable.PERMISSION: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.MerchantRepositoryImpl: java.util.List findAllStoreNames(java.lang.String)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorename()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.Integer getproductoptionsortorder()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getdatebusinesssince()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.MANUFACTURER: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue getproductoptionvalue()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: com.salesmanager.core.model.catalog.product.Product getproduct()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void setGender(com.salesmanager.core.model.customer.CustomerGender)>
<synthetic.method.CustomerRepositoryImpl: com.salesmanager.core.model.customer.Customer findByNick(java.lang.String,int)>-><synthetic.method.datatable.CUSTOMER: synthetic.method.datatable.CUSTOMER getInstance()>
<synthetic.method.CountryRepositoryImpl: java.util.List listCountryZonesByLanguage(java.lang.Integer)>-><synthetic.method.datatable.COUNTRY: boolean getsupported()>
<synthetic.method.datatable.CATALOG: void <clinit>()>-><synthetic.method.datatable.CATALOG: void <init>()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.tax.taxclass.TaxClass gettaxclass()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStorestateprovince(java.lang.String)>
<synthetic.method.ZoneRepositoryImpl: com.salesmanager.core.model.reference.zone.Zone findByCode(java.lang.String)>-><synthetic.method.datatable.ZONE: java.util.List getdescriptions()>
<synthetic.method.LanguageRepositoryImpl: com.salesmanager.core.model.reference.language.Language findByCode(java.lang.String)>-><synthetic.method.datatable.LANGUAGE: java.util.List getstoresdefaultlanguage()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setId(java.lang.Long)>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.PageableProductTypeRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.type.ProductType: void setCode(java.lang.String)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getattributerequired()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setPiggyback(boolean)>
<synthetic.method.PermissionRepositoryImpl: java.util.List findByGroups(java.util.Set)>-><synthetic.method.datatable.PERMISSION: java.lang.String getpermissionname()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByTypes(java.util.List,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: java.lang.String getcode()>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMERATTRIBUTE: java.lang.Long getid()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductOption(com.salesmanager.core.model.catalog.product.attribute.ProductOption)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstoretemplate()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: boolean getfeatured()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstoretemplate()>
<synthetic.method.TaxRateRepositoryImpl: com.salesmanager.core.model.tax.taxrate.TaxRate findByStoreAndId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void <init>()>
<synthetic.method.CustomerReviewRepositoryImpl: java.util.List findByReviewed(java.lang.Long)>-><synthetic.method.datatable.CUSTOMERREVIEW: com.salesmanager.core.model.common.audit.AuditSection getaudit()>
<synthetic.method.CustomerOptionRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CUSTOMEROPTION: java.lang.Integer getcode()>
<synthetic.method.CategoryRepositoryImpl: com.salesmanager.core.model.catalog.category.Category findByIdAndStore(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void <init>()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setCountry(com.salesmanager.core.model.reference.country.Country)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setWeightunitcode(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.CATEGORY: java.lang.String getcategoryimage()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getdatebusinesssince()>
<synthetic.method.datatable.CATEGORYDESCRIPTION: void <init>()>-><com.salesmanager.core.model.catalog.category.Category: void <init>()>
<synthetic.method.ProductOptionSetRepositoryImpl: com.salesmanager.core.model.catalog.product.attribute.ProductOptionSet findByCode(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionSet: void <init>()>
<synthetic.method.CustomerRepositoryImpl: com.salesmanager.core.model.customer.Customer findOne(java.lang.Long)>-><com.salesmanager.core.model.customer.Customer: void <init>()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.user.User: void setAnswer1(java.lang.String)>
<synthetic.method.OrderProductDownloadRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><com.salesmanager.core.model.order.orderproduct.OrderProductDownload: void setOrderProduct(com.salesmanager.core.model.order.orderproduct.OrderProduct)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerAttribute: void <init>()>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATEGORY: boolean getfeatured()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue getproductoptionvalue()>
<synthetic.method.ProductImageRepositoryImpl: com.salesmanager.core.model.catalog.product.image.ProductImage findOne(java.lang.Long)>-><synthetic.method.datatable.PRODUCTIMAGE: synthetic.method.datatable.PRODUCTIMAGE getInstance()>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByCustomerId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMERATTRIBUTE: java.lang.String gettextvalue()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getseizeunitcode()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.user.User: void setQuestion2(java.lang.String)>
<synthetic.method.ProductOptionSetRepositoryImpl: com.salesmanager.core.model.catalog.product.attribute.ProductOptionSet findOne(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionSet: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.datatable.TAXRATE: void <init>()>-><com.salesmanager.core.model.reference.zone.Zone: void <init>()>
<synthetic.method.CustomerReviewRepositoryImpl: java.util.List findByReviewed(java.lang.Long)>-><com.salesmanager.core.model.customer.review.CustomerReview: void setReviewRating(java.lang.Double)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setLineage(java.lang.String)>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.CountryRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><synthetic.method.datatable.COUNTRY: java.util.Set getzones()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: java.math.BigDecimal getcustomerreviewavg()>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><synthetic.method.datatable.MODULECONFIGURATION: java.util.Set getregionsset()>
<synthetic.method.PageableProductOptionRepositoryImpl: org.springframework.data.domain.Page listOptions(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTOPTION: java.lang.String getcode()>
<synthetic.method.datatable.CUSTOMEROPTIONVALUE: void <clinit>()>-><synthetic.method.datatable.CUSTOMEROPTIONVALUE: void <init>()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByProductInCategoryId(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCT: java.lang.String getimage()>
<synthetic.method.datatable.PRODUCTVARIATION: void <init>()>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void <init>()>
<synthetic.method.CustomerOptionRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.customer.attribute.CustomerOption: void setCode(java.lang.String)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: com.salesmanager.core.model.catalog.product.Product getproduct()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByOrder(java.lang.Long)>-><synthetic.method.datatable.TRANSACTION: java.lang.String getdetails()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.ShippingOriginRepositoryImpl: com.salesmanager.core.model.shipping.ShippingOrigin findByStore(java.lang.Integer)>-><synthetic.method.datatable.SHIPPINGORIGIN: synthetic.method.datatable.SHIPPINGORIGIN getInstance()>
<synthetic.method.ZoneRepositoryImpl: com.salesmanager.core.model.reference.zone.Zone findByCode(java.lang.String)>-><synthetic.method.datatable.ZONE: java.lang.Long getid()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeAdditionalWeight(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstoreemailaddress()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MANUFACTURER: java.lang.Integer getmerchantstore()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.util.List getdescriptions()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByIds(java.util.Set)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.datatable.CUSTOMEROPTION: void <init>()>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.USER: java.util.List getgroups()>
<synthetic.method.datatable.ZONE: void <clinit>()>-><synthetic.method.datatable.ZONE: void <init>()>
<synthetic.method.datatable.CUSTOMERATTRIBUTE: void <init>()>-><com.salesmanager.core.model.customer.attribute.CustomerOption: void <init>()>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setProductOptionType(java.lang.String)>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MANUFACTURER: java.lang.Integer getorder()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setDateBusinessSince(java.lang.String)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setStateProvince(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><synthetic.method.datatable.CATEGORY: boolean getvisible()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: synthetic.method.datatable.CUSTOMER getInstance()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.CustomerOptionValueRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CUSTOMEROPTIONVALUE: java.util.Set getdescriptions()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setSortOrder(java.lang.Integer)>
<synthetic.method.PageableProductVariationRepositoryImpl: org.springframework.data.domain.Page list(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTVARIATION: com.salesmanager.core.model.catalog.product.attribute.ProductOption getoption()>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByReadOnly(java.lang.Integer,java.lang.Integer,boolean)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setCode(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setLineage(java.lang.String)>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setDescriptions(java.util.Set)>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByOrder(java.lang.Long)>-><com.salesmanager.core.model.payments.Transaction: void setAmount(java.math.BigDecimal)>
<synthetic.method.TaxClassRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.tax.taxclass.TaxClass: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.reference.currency.Currency getcurrency()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.Boolean getretailer()>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><synthetic.method.datatable.MODULECONFIGURATION: java.lang.String getmodule()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.MANUFACTURER: java.lang.Integer getmerchantstore()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MANUFACTURER: java.lang.String getimage()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStoreLogo(java.lang.String)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.MANUFACTURER: java.lang.Integer getmerchantstore()>
<synthetic.method.TaxClassRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.tax.taxclass.TaxClass: void setCode(java.lang.String)>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><com.salesmanager.core.model.reference.zone.Zone: void setCode(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.catalog.category.Category getparent()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByCategoriesAndLanguage(java.util.List,java.lang.Integer)>-><synthetic.method.datatable.PRODUCT: java.lang.Integer getorder()>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionSet: void <init>()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByTypes(java.util.List,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: java.lang.Integer getsortorder()>
<synthetic.method.TaxClassRepositoryImpl: com.salesmanager.core.model.tax.taxclass.TaxClass findByCode(java.lang.String)>-><synthetic.method.datatable.TAXCLASS: synthetic.method.datatable.TAXCLASS getInstance()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setId(java.lang.Long)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorename()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getattributedisplayonly()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.Long getid()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.Integer getdepth()>
<synthetic.method.PageableCatalogEntryRepositoryImpl: org.springframework.data.domain.Page listByCatalog(java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.catalog.CatalogCategoryEntry: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.content.Content: void setId(java.lang.Long)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeSortOrder(java.lang.String)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.String getattributeprice()>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.content.Content: void setContentType(com.salesmanager.core.model.content.ContentType)>
<synthetic.method.datatable.PRODUCTOPTIONSET: void <init>()>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStorestateprovince(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setParent(com.salesmanager.core.model.catalog.category.Category)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.ZoneRepositoryImpl: com.salesmanager.core.model.reference.zone.Zone findByCode(java.lang.String)>-><synthetic.method.datatable.ZONE: synthetic.method.datatable.ZONE getInstance()>
<synthetic.method.PageableProductOptionRepositoryImpl: org.springframework.data.domain.Page listOptions(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setProductOptionType(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.Long getid()>
<synthetic.method.datatable.CATEGORY: void <init>()>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.user.GroupType)>-><com.salesmanager.core.model.user.Group: void <init>()>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMERATTRIBUTE: com.salesmanager.core.model.customer.attribute.CustomerOption getcustomeroption()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.lang.String getcode()>
<synthetic.method.TaxClassRepositoryImpl: com.salesmanager.core.model.tax.taxclass.TaxClass findByStoreAndCode(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.tax.taxclass.TaxClass: void <init>()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.content.Content: void setContentPosition(com.salesmanager.core.model.content.ContentPosition)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorelogo()>
<synthetic.method.ManufacturerRepositoryImpl: java.lang.Long countByProduct(java.lang.Long)>-><synthetic.method.datatable.PRODUCT: java.lang.Long getcount distinct p()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributePrice(java.lang.String)>
<synthetic.method.MerchantRepositoryImpl: com.salesmanager.core.model.merchant.MerchantStore findByCode(java.lang.String)>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getproductattributeisfree()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setPiggyback(boolean)>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: com.salesmanager.core.model.reference.language.Language getdefaultlanguage()>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByOrder(java.lang.Long)>-><synthetic.method.datatable.TRANSACTION: com.salesmanager.core.model.payments.PaymentType getpaymenttype()>
<synthetic.method.datatable.PRODUCTIMAGE: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: synthetic.method.datatable.TAXRATE getInstance()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.Integer getid()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByOrder(java.lang.Long)>-><com.salesmanager.core.model.payments.Transaction: void setId(java.lang.Long)>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByDates(java.util.Date,java.util.Date)>-><synthetic.method.datatable.TRANSACTION: java.util.Map gettransactiondetails()>
<synthetic.method.CountryRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><synthetic.method.datatable.COUNTRY: synthetic.method.datatable.COUNTRY getInstance()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setDateBusinessSince(java.lang.String)>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><synthetic.method.datatable.SHOPPINGCART: java.lang.Long getid()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByProductInCategoryId(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.CatalogRepositoryImpl: java.util.Optional findByCode(java.lang.String,java.lang.Integer)>-><java.util.Optional: void <init>()>
<synthetic.method.MerchantConfigurationRepositoryImpl: java.util.List findByMerchantStoreAndType(java.lang.Integer,com.salesmanager.core.model.system.MerchantConfigurationType)>-><com.salesmanager.core.model.system.MerchantConfiguration: void setActive(java.lang.Boolean)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setFeatured(boolean)>
<synthetic.method.PageableProductOptionValueRepositoryImpl: org.springframework.data.domain.Page listOptionValues(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setId(java.lang.Long)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductAttributeWeight(java.math.BigDecimal)>
<synthetic.method.PageableProductOptionRepositoryImpl: org.springframework.data.domain.Page listOptions(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTOPTION: java.lang.Integer getproductoptionsortorder()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByNames(java.util.List)>-><synthetic.method.datatable.GROUP: com.salesmanager.core.model.user.GroupType getgrouptype()>
<synthetic.method.ProductOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionSet: void setProductTypes(java.util.Set)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: synthetic.method.datatable.TAXRATE getInstance()>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByOrder(java.lang.Long)>-><synthetic.method.datatable.TRANSACTION: com.salesmanager.core.model.order.Order getorder()>
<synthetic.method.CategoryRepositoryImpl: com.salesmanager.core.model.catalog.category.Category findById(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void <init>()>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByReadOnly(java.lang.Integer,java.lang.Integer,boolean)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: java.lang.Long getid()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByNames(java.util.List)>-><synthetic.method.datatable.GROUP: java.lang.String getgroupname()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStorestateprovince(java.lang.String)>
<synthetic.method.LanguageRepositoryImpl: com.salesmanager.core.model.reference.language.Language findByCode(java.lang.String)>-><synthetic.method.datatable.LANGUAGE: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><synthetic.method.datatable.MODULECONFIGURATION: java.lang.String getregions()>
<synthetic.method.OrderStatusHistoryRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setDescriptions(java.util.List)>
<synthetic.method.datatable.ZONE: void <init>()>-><com.salesmanager.core.model.reference.country.Country: void <init>()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeDiscounted(boolean)>
<synthetic.method.ProductVariationRepositoryImpl: com.salesmanager.core.model.catalog.product.variation.ProductVariation findByCode(java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTVARIATION: synthetic.method.datatable.PRODUCTVARIATION getInstance()>
<synthetic.method.ProductOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTIONSET: com.salesmanager.core.model.catalog.product.attribute.ProductOption getoption()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: java.util.List getgroups()>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><com.salesmanager.core.model.reference.zone.Zone: void <init>()>
<synthetic.method.CustomerOptionValueRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CUSTOMEROPTIONVALUE: java.lang.Integer getcode()>
<synthetic.method.CustomerOptionRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CUSTOMEROPTION: boolean getactive()>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionSet: void setSortOrder(int)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.math.BigDecimal getproductattributeprice()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setImage(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setCountry(com.salesmanager.core.model.reference.country.Country)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByProductInCategoryId(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCT: java.lang.String getcode()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void setNick(java.lang.String)>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.category.Category: void setSortOrder(java.lang.Integer)>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMERATTRIBUTE: java.lang.String gettextvalue()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByTypes(java.util.List,java.lang.Integer,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.MerchantConfigurationRepositoryImpl: java.util.List findByMerchantStoreAndType(java.lang.Integer,com.salesmanager.core.model.system.MerchantConfigurationType)>-><synthetic.method.datatable.MERCHANTCONFIGURATION: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getcontinueshoppingurl()>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguageAndCountry(java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.reference.zone.Zone: void setCountry(com.salesmanager.core.model.reference.country.Country)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.String getattributeadditionalweight()>
<synthetic.method.datatable.CATALOGCATEGORYENTRY: void <init>()>-><com.salesmanager.core.model.catalog.catalog.Catalog: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setCurrencyFormatNational(boolean)>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByDates(java.util.Date,java.util.Date)>-><synthetic.method.datatable.TRANSACTION: java.lang.Long getid()>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setParent(com.salesmanager.core.model.tax.taxrate.TaxRate)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setZone(com.salesmanager.core.model.reference.zone.Zone)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long)>-><synthetic.method.datatable.PRODUCTREVIEW: synthetic.method.datatable.PRODUCTREVIEW getInstance()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.reference.zone.Zone getzone()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.math.BigDecimal getproductattributeweight()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStoreEmailAddress(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStoreLogo(java.lang.String)>
<synthetic.method.CategoryDescriptionRepositoryImpl: java.util.List listByCategoryId(java.lang.Long)>-><com.salesmanager.core.model.catalog.category.CategoryDescription: void setCategory(com.salesmanager.core.model.catalog.category.Category)>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionSet: void setCustomerOption(com.salesmanager.core.model.customer.attribute.CustomerOption)>
<synthetic.method.GroupRepositoryImpl: java.util.List findAll()>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.datatable.USER: void <clinit>()>-><synthetic.method.datatable.USER: void <init>()>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><com.salesmanager.core.model.shoppingcart.ShoppingCart: void setObsolete(boolean)>
<synthetic.method.GroupRepositoryImpl: java.util.List findAll()>-><com.salesmanager.core.model.user.Group: void setId(java.lang.Integer)>
<synthetic.method.datatable.MERCHANTSTORE: void <init>()>-><com.salesmanager.core.model.reference.country.Country: void <init>()>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><synthetic.method.datatable.SHOPPINGCART: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorestateprovince()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setTaxRates(java.util.List)>
<synthetic.method.OrderProductDownloadRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><com.salesmanager.core.model.order.orderproduct.OrderProductDownload: void setDownloadCount(java.lang.Integer)>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMERATTRIBUTE: synthetic.method.datatable.CUSTOMERATTRIBUTE getInstance()>
<synthetic.method.CountryRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><synthetic.method.datatable.COUNTRY: boolean getsupported()>
<synthetic.method.PageableProductVariationRepositoryImpl: org.springframework.data.domain.Page list(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTVARIATION: com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue getproductoptionvalue()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setId(java.lang.Long)>
<synthetic.method.CustomerReviewRepositoryImpl: java.util.List findByReviewed(java.lang.Long)>-><synthetic.method.datatable.CUSTOMERREVIEW: com.salesmanager.core.model.customer.Customer getcustomer()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setZone(com.salesmanager.core.model.reference.zone.Zone)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.MANUFACTURER: java.util.Set getdescriptions()>
<synthetic.method.OrderProductDownloadRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><synthetic.method.datatable.ORDERPRODUCTDOWNLOAD: java.lang.Long getid()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setId(java.lang.Integer)>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByReadOnly(java.lang.Integer,java.lang.Integer,boolean)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: org.springframework.web.multipart.MultipartFile getimage()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstoreemailaddress()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setId(java.lang.Long)>
<synthetic.method.OrderStatusHistoryRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><synthetic.method.datatable.ORDERSTATUSHISTORY: com.salesmanager.core.model.order.Order getorder()>
<synthetic.method.ProductOptionRepositoryImpl: com.salesmanager.core.model.catalog.product.attribute.ProductOption findOne(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTOPTION: synthetic.method.datatable.PRODUCTOPTION getInstance()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.reference.country.Country getcountry()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void <init>()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: com.salesmanager.core.model.catalog.product.attribute.ProductOption getproductoption()>
<synthetic.method.datatable.CUSTOMEROPTIN: void <init>()>-><java.util.Date: void <init>()>
<synthetic.method.datatable.CATALOG: void <init>()>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><synthetic.method.datatable.CATEGORY: synthetic.method.datatable.CATEGORY getInstance()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorestateprovince()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getattributerequired()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.user.GroupType)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.datatable.CATALOGCATEGORYENTRY: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><synthetic.method.datatable.SHOPPINGCART: java.lang.String getipaddress()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.lang.String getratetext()>
<synthetic.method.OrderStatusHistoryRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><synthetic.method.datatable.ORDERSTATUSHISTORY: java.lang.Long getid()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.MANUFACTURER: java.lang.Long getid()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setCategories(java.util.List)>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTION: java.lang.String getproductoptiontype()>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeDiscounted(boolean)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.reference.country.Country getcountry()>
<synthetic.method.PageableProductOptionValueRepositoryImpl: org.springframework.data.domain.Page listOptionValues(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: java.lang.Integer getproductoptionvaluesortorder()>
<synthetic.method.CustomerOptionValueRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CUSTOMEROPTIONVALUE: java.util.List getdescriptionslist()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByCategoriesAndLanguage(java.util.List,java.lang.Integer)>-><synthetic.method.datatable.PRODUCT: synthetic.method.datatable.PRODUCT getInstance()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.catalog.category.Category getparent()>
<synthetic.method.CategoryDescriptionRepositoryImpl: java.util.List listByCategoryId(java.lang.Long)>-><synthetic.method.datatable.CATEGORYDESCRIPTION: java.lang.String getmetatagkeywords()>
<synthetic.method.LanguageRepositoryImpl: com.salesmanager.core.model.reference.language.Language findByCode(java.lang.String)>-><com.salesmanager.core.model.reference.language.Language: void <init>()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MANUFACTURER: java.lang.Long getid()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void <init>()>
<synthetic.method.datatable.PRODUCTTYPE: void <init>()>-><com.salesmanager.core.model.common.audit.AuditSection: void <init>()>
<synthetic.method.PermissionRepositoryImpl: java.util.List findByGroups(java.util.Set)>-><com.salesmanager.core.model.user.Permission: void setGroups(java.util.List)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStoreTemplate(java.lang.String)>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByReadOnly(java.lang.Integer,java.lang.Integer,boolean)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByDates(java.util.Date,java.util.Date)>-><synthetic.method.datatable.TRANSACTION: synthetic.method.datatable.TRANSACTION getInstance()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProductNoCustomers(java.lang.Long)>-><synthetic.method.datatable.PRODUCTREVIEW: java.lang.Long getid()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long)>-><synthetic.method.datatable.PRODUCTREVIEW: java.lang.Integer getstatus()>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.datatable.CUSTOMERREVIEW: void <init>()>-><java.util.Date: void <init>()>
<synthetic.method.ProductImageRepositoryImpl: com.salesmanager.core.model.catalog.product.image.ProductImage finById(java.lang.Long,java.lang.Long,java.lang.String)>-><com.salesmanager.core.model.catalog.product.image.ProductImage: void <init>()>
<synthetic.method.PageableProductOptionValueRepositoryImpl: org.springframework.data.domain.Page listOptionValues(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: boolean getproductoptiondisplayonly()>
<synthetic.method.UserRepositoryImpl: com.salesmanager.core.model.user.User findByUserName(java.lang.String,java.lang.String)>-><synthetic.method.datatable.USER: synthetic.method.datatable.USER getInstance()>
<synthetic.method.PageableProductVariationRepositoryImpl: org.springframework.data.domain.Page list(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.variation.ProductVariation: void setOption(com.salesmanager.core.model.catalog.product.attribute.ProductOption)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorephone()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: boolean getfeatured()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.merchant.MerchantStore getparent()>
<synthetic.method.PageableProductOptionRepositoryImpl: org.springframework.data.domain.Page listOptions(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setId(java.lang.Long)>
<synthetic.method.PageableProductTypeRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTTYPE: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setLineage(java.lang.String)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setReviewRead(java.lang.Long)>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTION: boolean getreadonly()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setTaxPriority(java.lang.Integer)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setDefaultLanguage(com.salesmanager.core.model.reference.language.Language)>
<synthetic.method.datatable.CUSTOMEROPTIONSET: void <init>()>-><com.salesmanager.core.model.customer.attribute.CustomerOption: void <init>()>
<synthetic.method.CustomerOptinRepositoryImpl: com.salesmanager.core.model.system.optin.CustomerOptin findByMerchantAndCodeAndEmail(java.lang.Integer,java.lang.String,java.lang.String)>-><com.salesmanager.core.model.system.optin.CustomerOptin: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByProductInCategoryId(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setId(java.lang.Long)>
<synthetic.method.ProductTypeRepositoryImpl: com.salesmanager.core.model.catalog.product.type.ProductType findByCode(java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTTYPE: synthetic.method.datatable.PRODUCTTYPE getInstance()>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMEROPTIONSET: com.salesmanager.core.model.customer.attribute.CustomerOption getcustomeroption()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setDomainName(java.lang.String)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.String getattributeprice()>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><com.salesmanager.core.model.system.IntegrationModule: void setConfigDetails(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCode(java.lang.String)>
<synthetic.method.datatable.MERCHANTSTORE: void <init>()>-><com.salesmanager.core.model.reference.language.Language: void <init>()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.USER: synthetic.method.datatable.USER getInstance()>
<synthetic.method.CountryRepositoryImpl: java.util.List listCountryZonesByLanguage(java.lang.Integer)>-><com.salesmanager.core.model.reference.country.Country: void setZones(java.util.Set)>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMERATTRIBUTE: java.lang.Long getid()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: boolean getvisible()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeRequired(boolean)>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByCustomerId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerAttribute: void setCustomerOptionValue(com.salesmanager.core.model.customer.attribute.CustomerOptionValue)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setDefaultLanguage(com.salesmanager.core.model.reference.language.Language)>
<synthetic.method.CustomerReviewRepositoryImpl: java.util.List findByReviewed(java.lang.Long)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByDates(java.util.Date,java.util.Date)>-><com.salesmanager.core.model.payments.Transaction: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.USER: java.lang.String getquestion3()>
<synthetic.method.datatable.CATEGORY: void <clinit>()>-><synthetic.method.datatable.CATEGORY: void <init>()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeSortOrder(java.lang.String)>
<synthetic.method.PageableProductTypeRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.type.ProductType: void setId(java.lang.Long)>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setCode(java.lang.String)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributePrice(java.lang.String)>
<synthetic.method.CountryRepositoryImpl: java.util.List listCountryZonesByLanguage(java.lang.Integer)>-><synthetic.method.datatable.COUNTRY: java.lang.String getname()>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByReadOnly(java.lang.Integer,java.lang.Integer,boolean)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: boolean getproductoptiondisplayonly()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStorephone(java.lang.String)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProductNoCustomers(java.lang.Long)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setProduct(com.salesmanager.core.model.catalog.product.Product)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setParent(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStorephone(java.lang.String)>
<synthetic.method.PageableProductOptionRepositoryImpl: org.springframework.data.domain.Page listOptions(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTOPTION: boolean getreadonly()>
<synthetic.method.ContentRepositoryImpl: com.salesmanager.core.model.content.Content findByCode(java.lang.String,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.content.Content: void <init>()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setTaxRates(java.util.List)>
<synthetic.method.datatable.USER: void <init>()>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: com.salesmanager.core.model.common.Billing getbilling()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><synthetic.method.datatable.CATEGORY: java.lang.String getcategoryimage()>
<synthetic.method.PageableCatalogEntryRepositoryImpl: org.springframework.data.domain.Page listByCatalog(java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.catalog.CatalogCategoryEntry: void setVisible(boolean)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.util.List gettaxrates()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.util.Set getstores()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setTaxRate(java.math.BigDecimal)>
<synthetic.method.PageableCatalogRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATALOG: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStorename(java.lang.String)>
<synthetic.method.PageableProductOptionRepositoryImpl: org.springframework.data.domain.Page listOptions(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setDescriptionsList(java.util.List)>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByOrder(java.lang.Long)>-><com.salesmanager.core.model.payments.Transaction: void setTransactionDate(java.util.Date)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductOption(com.salesmanager.core.model.catalog.product.attribute.ProductOption)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProductNoCustomers(java.lang.Long)>-><synthetic.method.datatable.PRODUCTREVIEW: java.util.Set getdescriptions()>
<synthetic.method.CategoryDescriptionRepositoryImpl: java.util.List listByCategoryId(java.lang.Long)>-><synthetic.method.datatable.CATEGORYDESCRIPTION: synthetic.method.datatable.CATEGORYDESCRIPTION getInstance()>
<synthetic.method.CatalogRepositoryImpl: java.util.Optional findById(java.lang.Long,java.lang.Integer)>-><java.util.Optional: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setId(java.lang.Long)>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setProductOptionValueImage(java.lang.String)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByCategoriesAndLanguage(java.util.List,java.lang.Integer)>-><synthetic.method.datatable.PRODUCT: java.lang.Long getmd.language.id()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStoreaddress(java.lang.String)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeRequired(boolean)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByProductInCategoryId(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCT: java.util.Set getdescriptions()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByReadOnly(java.lang.Integer,java.lang.Integer,boolean)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setProductOptionDisplayOnly(boolean)>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByReadOnly(java.lang.Integer,java.lang.Integer,boolean)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: java.lang.String getproductoptionvalueimage()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setReviewDate(java.util.Date)>
<synthetic.method.ProductTypeRepositoryImpl: com.salesmanager.core.model.catalog.product.type.ProductType findById(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTTYPE: java.lang.Long getpm.id()>
<synthetic.method.ContentRepositoryImpl: com.salesmanager.core.model.content.Content findByCodeAndType(java.lang.String,com.salesmanager.core.model.content.ContentType,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: synthetic.method.datatable.CONTENT getInstance()>
<synthetic.method.datatable.MODULECONFIGURATION: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTION: java.lang.String getcode()>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMERATTRIBUTE: com.salesmanager.core.model.customer.attribute.CustomerOptionValue getcustomeroptionvalue()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.reference.country.Country getcountry()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.CustomerOptionValueRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionValue: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.util.Date getinbusinesssince()>
<synthetic.method.PageableCatalogEntryRepositoryImpl: org.springframework.data.domain.Page listByCatalog(java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.catalog.CatalogCategoryEntry: void setCategory(com.salesmanager.core.model.catalog.category.Category)>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setImage(org.springframework.web.multipart.MultipartFile)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setFeatured(boolean)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setCountry(com.salesmanager.core.model.reference.country.Country)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.catalog.category.Category getparent()>
<synthetic.method.ProductTypeRepositoryImpl: java.util.List findByIds(java.util.List,java.lang.Integer,int)>-><java.lang.Long: void <init>(long)>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByDates(java.util.Date,java.util.Date)>-><com.salesmanager.core.model.payments.Transaction: void setOrder(com.salesmanager.core.model.order.Order)>
<synthetic.method.GroupRepositoryImpl: java.util.List findByNames(java.util.List)>-><com.salesmanager.core.model.user.Group: void setGroupType(com.salesmanager.core.model.user.GroupType)>
<synthetic.method.CustomerOptionRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CUSTOMEROPTION: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.CategoryRepositoryImpl: com.salesmanager.core.model.catalog.category.Category findByCode(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void <init>()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByTypes(java.util.List,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: com.salesmanager.core.model.content.ContentPosition getcontentposition()>
<synthetic.method.DigitalProductRepositoryImpl: com.salesmanager.core.model.catalog.product.file.DigitalProduct findByProduct(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.file.DigitalProduct: void <init>()>
<synthetic.method.PageableCatalogEntryRepositoryImpl: org.springframework.data.domain.Page listByCatalog(java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.catalog.CatalogCategoryEntry: void <init>()>
<synthetic.method.CustomerOptionRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.customer.attribute.CustomerOption: void setDescriptionsList(java.util.List)>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><synthetic.method.datatable.SHOPPINGCART: synthetic.method.datatable.SHOPPINGCART getInstance()>
<synthetic.method.datatable.PRODUCTOPTIONSET: void <clinit>()>-><synthetic.method.datatable.PRODUCTOPTIONSET: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getseizeunitcode()>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByDates(java.util.Date,java.util.Date)>-><com.salesmanager.core.model.payments.Transaction: void setTransactionDetails(java.util.Map)>
<synthetic.method.UserRepositoryImpl: com.salesmanager.core.model.user.User findByUserId(java.lang.Long,java.lang.String)>-><com.salesmanager.core.model.user.User: void <init>()>
<synthetic.method.CountryRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><com.salesmanager.core.model.reference.country.Country: void setIsoCode(java.lang.String)>
<synthetic.method.datatable.PRODUCTTYPE: void <clinit>()>-><synthetic.method.datatable.PRODUCTTYPE: void <init>()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProductNoCustomers(java.lang.Long)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setId(java.lang.Long)>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTION: java.lang.Integer getproductoptionsortorder()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getcontinueshoppingurl()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setDepth(java.lang.Integer)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.OrderStatusHistoryRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><com.salesmanager.core.model.order.orderstatus.OrderStatusHistory: void setComments(java.lang.String)>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.USER: java.util.Date getlogintime()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByOrder(java.lang.Long)>-><com.salesmanager.core.model.payments.Transaction: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setSeizeunitcode(java.lang.String)>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setDescriptions(java.util.Set)>
<synthetic.method.CustomerReviewRepositoryImpl: java.util.List findByReviewed(java.lang.Long)>-><synthetic.method.datatable.CUSTOMERREVIEW: java.lang.Long getid()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setId(java.lang.Long)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setTaxClass(com.salesmanager.core.model.tax.taxclass.TaxClass)>
<synthetic.method.CustomerOptionValueRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionValue: void setDescriptions(java.util.Set)>
<synthetic.method.MerchantRepositoryImpl: java.util.List findAllStoreNames()>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getcode()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void <init>()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: java.lang.Long getid()>
<synthetic.method.datatable.TAXRATE: void <clinit>()>-><synthetic.method.datatable.TAXRATE: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setFeatured(boolean)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributePrice(java.lang.String)>
<synthetic.method.PermissionRepositoryImpl: java.util.List findByGroups(java.util.Set)>-><synthetic.method.datatable.PERMISSION: java.util.List getgroups()>
<synthetic.method.datatable.ORDERSTATUSHISTORY: void <init>()>-><java.util.Date: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.CATEGORY: java.lang.String getlineage()>
<synthetic.method.ShippingOriginRepositoryImpl: com.salesmanager.core.model.shipping.ShippingOrigin findByStore(java.lang.Integer)>-><com.salesmanager.core.model.shipping.ShippingOrigin: void <init>()>
<synthetic.method.CountryRepositoryImpl: com.salesmanager.core.model.reference.country.Country findByIsoCode(java.lang.String)>-><synthetic.method.datatable.COUNTRY: synthetic.method.datatable.COUNTRY getInstance()>
<synthetic.method.datatable.PRODUCTOPTION: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.PageableCatalogRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATALOG: java.lang.Integer getsortorder()>
<synthetic.method.datatable.CATALOGCATEGORYENTRY: void <init>()>-><com.salesmanager.core.model.common.audit.AuditSection: void <init>()>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTION: java.lang.Integer getproductoptionsortorder()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.merchant.MerchantStore getparent()>
<synthetic.method.CountryRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><synthetic.method.datatable.COUNTRY: com.salesmanager.core.model.reference.geozone.GeoZone getgeozone()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCode(java.lang.String)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductAttributeIsFree(boolean)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.String getcategoryimage()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setDescriptions(java.util.Set)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.datatable.SHIPPINGORIGIN: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.MerchantConfigurationRepositoryImpl: java.util.List findByMerchantStoreAndType(java.lang.Integer,com.salesmanager.core.model.system.MerchantConfigurationType)>-><com.salesmanager.core.model.system.MerchantConfiguration: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getattributedisplayonly()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.USER: com.salesmanager.core.model.reference.language.Language getdefaultlanguage()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.catalog.category.Category getparent()>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><com.salesmanager.core.model.system.IntegrationModule: void setImage(java.lang.String)>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: java.lang.Long getid()>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStorename(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.reference.currency.Currency getcurrency()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCategoryStatus(boolean)>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: com.salesmanager.core.model.common.Delivery getdelivery()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.math.BigDecimal getproductattributeprice()>
<synthetic.method.LanguageRepositoryImpl: com.salesmanager.core.model.reference.language.Language findByCode(java.lang.String)>-><com.salesmanager.core.model.reference.language.Language: void setSortOrder(java.lang.Integer)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setFeatured(boolean)>
<synthetic.method.ProductOptionValueRepositoryImpl: com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue findOne(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: synthetic.method.datatable.PRODUCTOPTIONVALUE getInstance()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setId(java.lang.Long)>
<synthetic.method.GroupRepositoryImpl: java.util.List findByIds(java.util.Set)>-><com.salesmanager.core.model.user.Group: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorephone()>
<synthetic.method.ContentRepositoryImpl: com.salesmanager.core.model.content.Content findByCode(java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: synthetic.method.datatable.CONTENT getInstance()>
<synthetic.method.GroupRepositoryImpl: java.util.List findAll()>-><com.salesmanager.core.model.user.Group: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setInBusinessSince(java.util.Date)>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: java.lang.String getprovider()>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByOrder(java.lang.Long)>-><synthetic.method.datatable.TRANSACTION: java.util.Map gettransactiondetails()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: java.lang.String getshowcustomerstatelist()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: boolean getvisible()>
<synthetic.method.PageableProductVariationRepositoryImpl: org.springframework.data.domain.Page list(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTVARIATION: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.MANUFACTURER: synthetic.method.datatable.MANUFACTURER getInstance()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setFeatured(boolean)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorestateprovince()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.util.List getlanguages()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setDepth(java.lang.Integer)>
<synthetic.method.PageableCatalogEntryRepositoryImpl: org.springframework.data.domain.Page listByCatalog(java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATALOGCATEGORYENTRY: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.user.User: void setDefaultLanguage(com.salesmanager.core.model.reference.language.Language)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setCurrencyFormatNational(boolean)>
<synthetic.method.datatable.TAXRATE: void <init>()>-><com.salesmanager.core.model.reference.country.Country: void <init>()>
<synthetic.method.ManufacturerRepositoryImpl: int count(java.lang.Integer)>-><synthetic.method.datatable.MANUFACTURER: int getcount distinct m()>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTION: java.util.List getdescriptionslist()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setDomainName(java.lang.String)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.datatable.CUSTOMERATTRIBUTE: void <init>()>-><com.salesmanager.core.model.customer.Customer: void <init>()>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: java.util.Set getdescriptions()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.String getlineage()>
<synthetic.method.CustomerReviewRepositoryImpl: java.util.List findByReviewed(java.lang.Long)>-><synthetic.method.datatable.CUSTOMERREVIEW: synthetic.method.datatable.CUSTOMERREVIEW getInstance()>
<synthetic.method.datatable.CUSTOMER: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><synthetic.method.datatable.SHOPPINGCART: java.lang.Long getorderid()>
<synthetic.method.datatable.OPTIN: void <clinit>()>-><synthetic.method.datatable.OPTIN: void <init>()>
<synthetic.method.PageableProductOptionRepositoryImpl: org.springframework.data.domain.Page listOptions(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setDescriptions(java.util.Set)>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.USER: java.lang.Long getid()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setTaxRates(java.util.List)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setUseCache(boolean)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCategoryImage(java.lang.String)>
<synthetic.method.GroupRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.user.GroupType)>-><com.salesmanager.core.model.user.Group: void setGroupType(com.salesmanager.core.model.user.GroupType)>
<synthetic.method.ContentRepositoryImpl: java.util.List findByTypes(java.util.List,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.content.ContentType: void <init>(java.lang.String,int)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProductNoCustomers(java.lang.Long)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setReviewRating(java.lang.Double)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductOptionSortOrder(java.lang.Integer)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getattributerequired()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setInBusinessSince(java.util.Date)>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.content.Content: void setDescriptions(java.util.List)>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: java.util.List getdescriptionslist()>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionSet: void setCustomerOption(com.salesmanager.core.model.customer.attribute.CustomerOption)>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByOrder(java.lang.Long)>-><com.salesmanager.core.model.payments.Transaction: void setTransactionType(com.salesmanager.core.model.payments.TransactionType)>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><com.salesmanager.core.model.reference.zone.Zone: void setId(java.lang.Long)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getseizeunitcode()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByCategoriesAndLanguage(java.util.List,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.datatable.PRODUCTVARIATION: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.PageableProductTypeRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.type.ProductType: void setDescriptions(java.util.Set)>
<synthetic.method.datatable.DIGITALPRODUCT: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: java.lang.String getnick()>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByReadOnly(java.lang.Integer,java.lang.Integer,boolean)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setImage(org.springframework.web.multipart.MultipartFile)>
<synthetic.method.ProductReviewRepositoryImpl: com.salesmanager.core.model.catalog.product.review.ProductReview findByProductAndCustomer(java.lang.Long,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setParent(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTION: synthetic.method.datatable.PRODUCTOPTION getInstance()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeSortOrder(java.lang.String)>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTION: boolean getreadonly()>
<synthetic.method.CustomerOptionRepositoryImpl: com.salesmanager.core.model.customer.attribute.CustomerOption findByCode(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.customer.attribute.CustomerOption: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setParent(com.salesmanager.core.model.catalog.category.Category)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setTaxRates(java.util.List)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorepostalcode()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeDisplayOnly(boolean)>
<synthetic.method.GroupRepositoryImpl: java.util.List findByNames(java.util.List)>-><com.salesmanager.core.model.user.Group: void setId(java.lang.Integer)>
<synthetic.method.datatable.PRODUCTTYPE: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: synthetic.method.datatable.CATEGORY getInstance()>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTION: java.lang.Long getid()>
<synthetic.method.LanguageRepositoryImpl: com.salesmanager.core.model.reference.language.Language findByCode(java.lang.String)>-><com.salesmanager.core.model.reference.language.Language: void setCode(java.lang.String)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: synthetic.method.datatable.PRODUCTATTRIBUTE getInstance()>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByDates(java.util.Date,java.util.Date)>-><synthetic.method.datatable.TRANSACTION: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.Long getid()>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void <init>()>
<synthetic.method.PageableCatalogRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATALOG: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.TaxClassRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.datatable.SHOPPINGCART: void <init>()>-><com.salesmanager.core.model.common.audit.AuditSection: void <init>()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void setShowCustomerStateList(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getweightunitcode()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void <init>()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.content.Content: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: boolean getcurrencyformatnational()>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMERATTRIBUTE: java.lang.String gettextvalue()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setLanguages(java.util.List)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductOption(com.salesmanager.core.model.catalog.product.attribute.ProductOption)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setDescriptions(java.util.Set)>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByCustomerId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMERATTRIBUTE: synthetic.method.datatable.CUSTOMERATTRIBUTE getInstance()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getweightunitcode()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.lang.Integer getid()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setId(java.lang.Long)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.MANUFACTURER: java.util.Set getdescriptions()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setInBusinessSince(java.util.Date)>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguageAndCountry(java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.reference.zone.Zone: void setName(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setRetailer(java.lang.Boolean)>
<synthetic.method.ProductOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionSet: void setId(java.lang.Long)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStoreLogo(java.lang.String)>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CONTENT: java.util.List getdescriptions()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByNames(java.util.List)>-><com.salesmanager.core.model.user.Group: void setGroupName(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setSortOrder(java.lang.Integer)>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByCustomerId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMERATTRIBUTE: java.lang.Long getid()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: java.lang.String getproductgroup()>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><synthetic.method.datatable.SHOPPINGCART: java.lang.Long getcustomerid()>
<synthetic.method.ProductOptionRepositoryImpl: com.salesmanager.core.model.catalog.product.attribute.ProductOption findByCode(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void <init>()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.USER: java.util.Date getlastaccess()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStoreaddress(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstoretemplate()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setZone(com.salesmanager.core.model.reference.zone.Zone)>
<synthetic.method.PageableProductVariationRepositoryImpl: org.springframework.data.domain.Page list(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.variation.ProductVariation: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByReadOnly(java.lang.Integer,java.lang.Integer,boolean)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: java.util.Set getdescriptions()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.CATEGORY: boolean getfeatured()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setDateBusinessSince(java.lang.String)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.util.List gettaxrates()>
<synthetic.method.TaxClassRepositoryImpl: com.salesmanager.core.model.tax.taxclass.TaxClass findByStoreAndCode(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.TAXCLASS: synthetic.method.datatable.TAXCLASS getInstance()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByProductInCategoryId(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setDescriptions(java.util.Set)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.lang.String getcode()>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setDescriptions(java.util.Set)>
<synthetic.method.datatable.OPTIN: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void <init>()>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.content.Content: void setSortOrder(java.lang.Integer)>
<synthetic.method.datatable.USER: void <init>()>-><java.util.Date: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByCustomerId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerAttribute: void setCustomerOption(com.salesmanager.core.model.customer.attribute.CustomerOption)>
<synthetic.method.TaxClassRepositoryImpl: com.salesmanager.core.model.tax.taxclass.TaxClass findByCode(java.lang.String)>-><com.salesmanager.core.model.tax.taxclass.TaxClass: void <init>()>
<synthetic.method.datatable.LANGUAGE: void <clinit>()>-><synthetic.method.datatable.LANGUAGE: void <init>()>
<synthetic.method.CustomerOptionValueRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CUSTOMEROPTIONVALUE: java.lang.Integer getsortorder()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void setAttributes(java.util.Set)>
<synthetic.method.LanguageRepositoryImpl: com.salesmanager.core.model.reference.language.Language findByCode(java.lang.String)>-><synthetic.method.datatable.LANGUAGE: java.lang.String getcode()>
<synthetic.method.PageableCatalogRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.catalog.Catalog: void setDefaultCatalog(boolean)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.util.Set getdescriptions()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStores(java.util.Set)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: synthetic.method.datatable.PRODUCTATTRIBUTE getInstance()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductOptionSortOrder(java.lang.Integer)>
<synthetic.method.PageableProductTypeRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.type.ProductType: void setAllowAddToCart(boolean)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProduct(com.salesmanager.core.model.catalog.product.Product)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue getproductoptionvalue()>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.category.Category: void setCategoryStatus(boolean)>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.user.User: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setStateProvince(java.lang.String)>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setDescriptionsList(java.util.List)>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguageAndCountry(java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.ZONE: synthetic.method.datatable.ZONE getInstance()>
<synthetic.method.ShoppingCartRepositoryImpl: com.salesmanager.core.model.shoppingcart.ShoppingCart findByCode(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.shoppingcart.ShoppingCart: void <init>()>
<synthetic.method.datatable.COUNTRY: void <init>()>-><com.salesmanager.core.model.reference.geozone.GeoZone: void <init>()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.user.GroupType)>-><com.salesmanager.core.model.user.Group: void setId(java.lang.Integer)>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTION: synthetic.method.datatable.PRODUCTOPTION getInstance()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setSortOrder(java.lang.Integer)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStoreaddress(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setDepth(java.lang.Integer)>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByCustomerId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerAttribute: void setCustomer(com.salesmanager.core.model.customer.Customer)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setFeatured(boolean)>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByOrder(java.lang.Long)>-><com.salesmanager.core.model.payments.Transaction: void setOrder(com.salesmanager.core.model.order.Order)>
<synthetic.method.ProductOptionRepositoryImpl: com.salesmanager.core.model.catalog.product.attribute.ProductOption findByCode(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.PRODUCTOPTION: synthetic.method.datatable.PRODUCTOPTION getInstance()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStores(java.util.Set)>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.lang.Integer getid()>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CONTENT: java.lang.Integer getsortorder()>
<synthetic.method.ProductOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTIONSET: java.util.Set getproducttypes()>
<synthetic.method.CatalogRepositoryImpl: boolean existsByCode(java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.CATALOG: synthetic.method.datatable.CATALOG getInstance()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.String getlineage()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorephone()>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTION: java.lang.String getproductoptiontype()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.ProductTypeRepositoryImpl: com.salesmanager.core.model.catalog.product.type.ProductType findById(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTTYPE: java.lang.Long getp.id()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStorephone(java.lang.String)>
<synthetic.method.GroupRepositoryImpl: com.salesmanager.core.model.user.Group findByGroupName(java.lang.String)>-><com.salesmanager.core.model.user.Group: void <init>()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.tax.taxrate.TaxRate getparent()>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setId(java.lang.Long)>
<synthetic.method.CustomerRepositoryImpl: com.salesmanager.core.model.customer.Customer findByNick(java.lang.String)>-><synthetic.method.datatable.CUSTOMER: synthetic.method.datatable.CUSTOMER getInstance()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.CATEGORY: java.lang.Integer getdepth()>
<synthetic.method.ShoppingCartItemRepositoryImpl: com.salesmanager.core.model.shoppingcart.ShoppingCartItem findOne(java.lang.Long)>-><synthetic.method.datatable.SHOPPINGCARTITEM: synthetic.method.datatable.SHOPPINGCARTITEM getInstance()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductOptionSortOrder(java.lang.Integer)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStoreTemplate(java.lang.String)>
<synthetic.method.PageableProductTypeRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTTYPE: java.lang.Boolean getallowaddtocart()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.merchant.MerchantStore getparent()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getattributediscounted()>
<synthetic.method.datatable.MERCHANTSTORE: void <clinit>()>-><synthetic.method.datatable.MERCHANTSTORE: void <init>()>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><com.salesmanager.core.model.system.IntegrationModule: void setType(java.lang.String)>
<synthetic.method.GroupRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.user.GroupType)>-><synthetic.method.datatable.GROUP: java.lang.Integer getid()>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTION: java.lang.String getcode()>
<synthetic.method.MerchantConfigurationRepositoryImpl: java.util.List findByMerchantStoreAndType(java.lang.Integer,com.salesmanager.core.model.system.MerchantConfigurationType)>-><com.salesmanager.core.model.system.MerchantConfiguration: void <init>()>
<synthetic.method.PageableCatalogEntryRepositoryImpl: org.springframework.data.domain.Page listByCatalog(java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATALOGCATEGORYENTRY: boolean getvisible()>
<synthetic.method.ProductOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductOptionValue(com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue)>
<synthetic.method.MerchantConfigurationRepositoryImpl: java.util.List findByMerchantStoreAndType(java.lang.Integer,com.salesmanager.core.model.system.MerchantConfigurationType)>-><synthetic.method.datatable.MERCHANTCONFIGURATION: java.lang.String getkey()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.reference.zone.Zone getzone()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setImage(java.lang.String)>
<synthetic.method.TaxRateRepositoryImpl: com.salesmanager.core.model.tax.taxrate.TaxRate findByStoreAndCode(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setDomainName(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: synthetic.method.datatable.MERCHANTSTORE getInstance()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByTypes(java.util.List,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: java.lang.String getproductgroup()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.String getcode()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.util.Date getinbusinesssince()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setCode(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorename()>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByReadOnly(java.lang.Integer,java.lang.Integer,boolean)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setDescriptionsList(java.util.List)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.tax.taxrate.TaxRate getparent()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setReviewRead(java.lang.Long)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.catalog.category.Category getparent()>
<synthetic.method.CustomerOptionValueRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CUSTOMEROPTIONVALUE: synthetic.method.datatable.CUSTOMEROPTIONVALUE getInstance()>
<synthetic.method.PageableCatalogRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATALOG: boolean getvisible()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getdomainname()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCategoryImage(java.lang.String)>
<synthetic.method.LanguageRepositoryImpl: com.salesmanager.core.model.reference.language.Language findByCode(java.lang.String)>-><synthetic.method.datatable.LANGUAGE: synthetic.method.datatable.LANGUAGE getInstance()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setDescriptions(java.util.Set)>
<synthetic.method.datatable.CATEGORY: void <init>()>-><com.salesmanager.core.model.common.audit.AuditSection: void <init>()>
<synthetic.method.CustomerReviewRepositoryImpl: java.util.List findByReviewed(java.lang.Long)>-><synthetic.method.datatable.CUSTOMERREVIEW: java.lang.Integer getstatus()>
<synthetic.method.PageableProductTypeRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTTYPE: java.lang.String getcode()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByIds(java.util.Set)>-><com.salesmanager.core.model.user.Group: void setId(java.lang.Integer)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByProductInCategoryId(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void <init>()>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionSet: void setId(java.lang.Long)>
<synthetic.method.datatable.CUSTOMERREVIEW: void <init>()>-><com.salesmanager.core.model.customer.Customer: void <init>()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: boolean getpiggyback()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.Long getid()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getattributediscounted()>
<synthetic.method.ProductOptionSetRepositoryImpl: com.salesmanager.core.model.catalog.product.attribute.ProductOptionSet findOne(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTIONSET: synthetic.method.datatable.PRODUCTOPTIONSET getInstance()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: synthetic.method.datatable.PRODUCTATTRIBUTE getInstance()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setCountry(com.salesmanager.core.model.reference.country.Country)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setCountry(com.salesmanager.core.model.reference.country.Country)>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setProductOptionDisplayOnly(boolean)>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.category.Category: void setFeatured(boolean)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.String getcategoryimage()>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByDates(java.util.Date,java.util.Date)>-><synthetic.method.datatable.TRANSACTION: com.salesmanager.core.model.order.Order getorder()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.USER: java.lang.String getquestion2()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByIds(java.util.Set)>-><synthetic.method.datatable.GROUP: synthetic.method.datatable.GROUP getInstance()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.Long getid()>
<synthetic.method.datatable.SHOPPINGCART: void <clinit>()>-><synthetic.method.datatable.SHOPPINGCART: void <init>()>
<synthetic.method.datatable.TAXRATE: void <init>()>-><com.salesmanager.core.model.tax.taxclass.TaxClass: void <init>()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setCustomer(com.salesmanager.core.model.customer.Customer)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.Integer getid()>
<synthetic.method.CatalogRepositoryImpl: java.util.Optional findById(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.CATALOG: synthetic.method.datatable.CATALOG getInstance()>
<synthetic.method.TaxClassRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.tax.taxclass.TaxClass: void setTitle(java.lang.String)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setReviewDate(java.util.Date)>
<synthetic.method.TaxClassRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.TAXCLASS: java.lang.Integer getcode()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setId(java.lang.Long)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.String getattributeadditionalweight()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.util.Set getdescriptions()>
<synthetic.method.CountryRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><synthetic.method.datatable.COUNTRY: java.util.Set getdescriptions()>
<synthetic.method.GroupRepositoryImpl: java.util.List findAll()>-><com.salesmanager.core.model.user.Group: void <init>()>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CONTENT: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: synthetic.method.datatable.TAXRATE getInstance()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductAttributeWeight(java.math.BigDecimal)>
<synthetic.method.OrderProductDownloadRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><synthetic.method.datatable.ORDERPRODUCTDOWNLOAD: synthetic.method.datatable.ORDERPRODUCTDOWNLOAD getInstance()>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByOrder(java.lang.Long)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setInvoiceTemplate(java.lang.String)>
<synthetic.method.MerchantRepositoryImpl: java.util.List findAllStoreNames(java.lang.String)>-><com.salesmanager.core.model.merchant.MerchantStore: void setCode(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.util.List getcategories()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.datatable.PRODUCTOPTIONVALUE: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.PageableCatalogEntryRepositoryImpl: org.springframework.data.domain.Page listByCatalog(java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATALOGCATEGORYENTRY: com.salesmanager.core.model.catalog.category.Category getcategory()>
<synthetic.method.OrderStatusHistoryRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><com.salesmanager.core.model.order.orderstatus.OrderStatusHistory: void setCustomerNotified(java.lang.Integer)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setCode(java.lang.String)>
<synthetic.method.CountryRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><synthetic.method.datatable.COUNTRY: java.lang.Integer getid()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByOrder(java.lang.Long)>-><synthetic.method.datatable.TRANSACTION: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByProductInCategoryId(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setCode(java.lang.String)>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CONTENT: java.lang.String getcode()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setDescriptions(java.util.Set)>
<synthetic.method.PageableProductVariationRepositoryImpl: org.springframework.data.domain.Page list(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTVARIATION: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.MerchantRepositoryImpl: com.salesmanager.core.model.merchant.MerchantStore getById(int)>-><synthetic.method.datatable.MERCHANTSTORE: synthetic.method.datatable.MERCHANTSTORE getInstance()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setTaxRate(java.math.BigDecimal)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeDefault(boolean)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProduct(com.salesmanager.core.model.catalog.product.Product)>
<synthetic.method.LanguageRepositoryImpl: com.salesmanager.core.model.reference.language.Language findByCode(java.lang.String)>-><synthetic.method.datatable.LANGUAGE: java.lang.Integer getsortorder()>
<synthetic.method.datatable.PRODUCTTYPE: void <init>()>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setRetailer(java.lang.Boolean)>
<synthetic.method.datatable.CUSTOMEROPTIONSET: void <init>()>-><com.salesmanager.core.model.customer.attribute.CustomerOptionValue: void <init>()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.math.BigDecimal getproductattributeprice()>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerAttribute: void setTextValue(java.lang.String)>
<synthetic.method.ProductOptionRepositoryImpl: com.salesmanager.core.model.catalog.product.attribute.ProductOption findOne(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void <init>()>
<synthetic.method.MerchantRepositoryImpl: java.util.List findAllStoreNames(java.lang.String)>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.datatable.CUSTOMERATTRIBUTE: void <clinit>()>-><synthetic.method.datatable.CUSTOMERATTRIBUTE: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.Integer getsortorder()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.tax.taxclass.TaxClass gettaxclass()>
<synthetic.method.ManufacturerRepositoryImpl: int count(java.lang.Integer)>-><synthetic.method.datatable.MANUFACTURER: synthetic.method.datatable.MANUFACTURER getInstance()>
<synthetic.method.CustomerOptionRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.customer.attribute.CustomerOption: void setId(java.lang.Long)>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: com.salesmanager.core.model.customer.CustomerGender getgender()>
<synthetic.method.MerchantRepositoryImpl: java.util.List findAllStoreNames()>-><com.salesmanager.core.model.merchant.MerchantStore: void setCode(java.lang.String)>
<synthetic.method.datatable.PRODUCTREVIEW: void <init>()>-><java.util.Date: void <init>()>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByReadOnly(java.lang.Integer,java.lang.Integer,boolean)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setProductOptionValueImage(java.lang.String)>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><com.salesmanager.core.model.system.IntegrationModule: void setModuleConfigs(java.util.Map)>
<synthetic.method.OrderProductDownloadRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><com.salesmanager.core.model.order.orderproduct.OrderProductDownload: void setMaxdays(java.lang.Integer)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStorecity(java.lang.String)>
<synthetic.method.ProductVariationRepositoryImpl: com.salesmanager.core.model.catalog.product.variation.ProductVariation findOne(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.variation.ProductVariation: void <init>()>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByOrder(java.lang.Long)>-><com.salesmanager.core.model.payments.Transaction: void setDetails(java.lang.String)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.MANUFACTURER: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.CustomerReviewRepositoryImpl: com.salesmanager.core.model.customer.review.CustomerReview findByRevieweAndReviewed(java.lang.Long,java.lang.Long)>-><synthetic.method.datatable.CUSTOMERREVIEW: synthetic.method.datatable.CUSTOMERREVIEW getInstance()>
<synthetic.method.datatable.TRANSACTION: void <init>()>-><java.util.Date: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setLineage(java.lang.String)>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><com.salesmanager.core.model.system.IntegrationModule: void setRegionsSet(java.util.Set)>
<synthetic.method.PageableProductOptionRepositoryImpl: org.springframework.data.domain.Page listOptions(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void <init>()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MANUFACTURER: java.util.Set getdescriptions()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void <init>()>
<synthetic.method.datatable.TAXCLASS: void <init>()>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.MerchantConfigurationRepositoryImpl: java.util.List findByMerchantStoreAndType(java.lang.Integer,com.salesmanager.core.model.system.MerchantConfigurationType)>-><com.salesmanager.core.model.system.MerchantConfiguration: void setMerchantConfigurationType(com.salesmanager.core.model.system.MerchantConfigurationType)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.MerchantConfigurationRepositoryImpl: java.util.List findByMerchantStoreAndType(java.lang.Integer,com.salesmanager.core.model.system.MerchantConfigurationType)>-><synthetic.method.datatable.MERCHANTCONFIGURATION: synthetic.method.datatable.MERCHANTCONFIGURATION getInstance()>
<synthetic.method.ProductTypeRepositoryImpl: com.salesmanager.core.model.catalog.product.type.ProductType findById(java.lang.Long,java.lang.Integer,int)>-><synthetic.method.datatable.PRODUCTTYPE: java.lang.Long getpm.id()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setRateText(java.lang.String)>
<synthetic.method.datatable.CUSTOMEROPTIONSET: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.util.Date getinbusinesssince()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.user.GroupType)>-><com.salesmanager.core.model.user.Group: void setPermissions(java.util.Set)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductAttributePrice(java.math.BigDecimal)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStorecity(java.lang.String)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByProductInCategoryId(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCT: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByIds(java.util.Set)>-><synthetic.method.datatable.GROUP: java.util.Set getpermissions()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setDescriptions(java.util.List)>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CUSTOMEROPTIONSET: com.salesmanager.core.model.customer.attribute.CustomerOptionValue getcustomeroptionvalue()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setVisible(boolean)>
<synthetic.method.datatable.GROUP: void <init>()>-><com.salesmanager.core.model.common.audit.AuditSection: void <init>()>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATEGORY: java.util.List getcategories()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorelogo()>
<synthetic.method.CatalogRepositoryImpl: java.util.Optional findByCode(java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.CATALOG: synthetic.method.datatable.CATALOG getInstance()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: synthetic.method.datatable.PRODUCTATTRIBUTE getInstance()>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setProductOptionValueSortOrder(java.lang.Integer)>
<synthetic.method.CountryRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><com.salesmanager.core.model.reference.country.Country: void setGeoZone(com.salesmanager.core.model.reference.geozone.GeoZone)>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByReadOnly(java.lang.Integer,java.lang.Integer,boolean)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.Long getid()>
<synthetic.method.UserRepositoryImpl: com.salesmanager.core.model.user.User findByUserName(java.lang.String)>-><synthetic.method.datatable.USER: synthetic.method.datatable.USER getInstance()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setRateText(java.lang.String)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void <init>()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setId(java.lang.Long)>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByReadOnly(java.lang.Integer,java.lang.Integer,boolean)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: java.lang.Integer getproductoptionvaluesortorder()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCategoryImage(java.lang.String)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setId(java.lang.Long)>
<synthetic.method.PageableCatalogRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATALOG: java.lang.String getcode()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.MANUFACTURER: synthetic.method.datatable.MANUFACTURER getInstance()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStoreaddress(java.lang.String)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><synthetic.method.datatable.MODULECONFIGURATION: java.lang.String gettype()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.CATEGORY: boolean getvisible()>
<synthetic.method.TaxRateRepositoryImpl: com.salesmanager.core.model.tax.taxrate.TaxRate findByStoreAndCode(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.TAXRATE: synthetic.method.datatable.TAXRATE getInstance()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.USER: java.lang.Integer getum.id()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.Integer getdepth()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: boolean getpiggyback()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getproductattributeisfree()>
<synthetic.method.ShoppingCartRepositoryImpl: com.salesmanager.core.model.shoppingcart.ShoppingCart findById(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.SHOPPINGCART: synthetic.method.datatable.SHOPPINGCART getInstance()>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTION: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.TaxClassRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.TAXCLASS: java.util.List gettaxrates()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.String getattributeadditionalweight()>
<synthetic.method.MerchantRepositoryImpl: java.util.List findAllStoreNames(java.lang.String)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.CustomerOptionSetRepositoryImpl: com.salesmanager.core.model.customer.attribute.CustomerOptionSet findOne(java.lang.Long)>-><synthetic.method.datatable.CUSTOMEROPTIONSET: synthetic.method.datatable.CUSTOMEROPTIONSET getInstance()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStoreLogo(java.lang.String)>
<synthetic.method.ProductTypeRepositoryImpl: java.util.List findByIds(java.util.List,java.lang.Integer,int)>-><synthetic.method.datatable.PRODUCTTYPE: java.lang.Boolean getvisible()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorecity()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setId(java.lang.Integer)>
<synthetic.method.GroupRepositoryImpl: java.util.List findByNames(java.util.List)>-><com.salesmanager.core.model.user.Group: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setTaxPriority(java.lang.Integer)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProductNoCustomers(java.lang.Long)>-><synthetic.method.datatable.PRODUCTREVIEW: synthetic.method.datatable.PRODUCTREVIEW getInstance()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.util.List gettaxrates()>
<synthetic.method.datatable.CUSTOMER: void <init>()>-><com.salesmanager.core.model.common.CredentialsReset: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setContinueshoppingurl(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.PageableProductOptionRepositoryImpl: org.springframework.data.domain.Page listOptions(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTOPTION: synthetic.method.datatable.PRODUCTOPTION getInstance()>
<synthetic.method.PageableCatalogRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.catalog.Catalog: void setId(java.lang.Long)>
<synthetic.method.CustomerOptionValueRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionValue: void setId(java.lang.Long)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.Integer getproductoptionsortorder()>
<synthetic.method.PermissionRepositoryImpl: java.util.List findByGroups(java.util.Set)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.user.User: void <init>()>
<synthetic.method.TaxClassRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.TAXCLASS: synthetic.method.datatable.TAXCLASS getInstance()>
<synthetic.method.datatable.ORDERSTATUSHISTORY: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><synthetic.method.datatable.ZONE: java.util.List getdescriptions()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setPiggyback(boolean)>
<synthetic.method.datatable.MERCHANTSTORE: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.datatable.CATEGORYDESCRIPTION: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.String getattributesortorder()>
<synthetic.method.PageableProductOptionValueRepositoryImpl: org.springframework.data.domain.Page listOptionValues(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setCode(java.lang.String)>
<synthetic.method.CustomerOptionRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CUSTOMEROPTION: java.lang.String getcustomeroptiontype()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: boolean getvisible()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setVisible(boolean)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.MANUFACTURER: java.lang.Integer getorder()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByProductInCategoryId(java.lang.Integer,java.lang.String,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.CountryRepositoryImpl: java.util.List listCountryZonesByLanguage(java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.PageableProductOptionValueRepositoryImpl: org.springframework.data.domain.Page listOptionValues(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.CategoryRepositoryImpl: com.salesmanager.core.model.catalog.category.Category findByFriendlyUrl(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.CATEGORY: synthetic.method.datatable.CATEGORY getInstance()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductOptionSortOrder(java.lang.Integer)>
<synthetic.method.LanguageRepositoryImpl: com.salesmanager.core.model.reference.language.Language findByCode(java.lang.String)>-><synthetic.method.datatable.LANGUAGE: java.lang.Integer getid()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setDescriptions(java.util.Set)>
<synthetic.method.CountryRepositoryImpl: java.util.List listCountryZonesByLanguage(java.lang.Integer)>-><synthetic.method.datatable.COUNTRY: java.util.Set getzones()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setTaxRate(java.math.BigDecimal)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: boolean getvisible()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long)>-><synthetic.method.datatable.PRODUCTREVIEW: com.salesmanager.core.model.catalog.product.Product getproduct()>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATEGORY: java.lang.String getcategoryimage()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByProductInCategoryId(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCT: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><synthetic.method.datatable.MODULECONFIGURATION: synthetic.method.datatable.MODULECONFIGURATION getInstance()>
<synthetic.method.ProductTypeRepositoryImpl: java.util.List findByIds(java.util.List,java.lang.Integer,int)>-><synthetic.method.datatable.PRODUCTTYPE: java.lang.Long getp.id()>
<synthetic.method.datatable.CONTENT: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.datatable.PRODUCTATTRIBUTE: void <init>()>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setCategories(java.util.List)>
<synthetic.method.OrderProductDownloadRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><com.salesmanager.core.model.order.orderproduct.OrderProductDownload: void setId(java.lang.Long)>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.content.Content: void setLinkToMenu(boolean)>
<synthetic.method.GroupRepositoryImpl: java.util.List findByIds(java.util.Set)>-><synthetic.method.datatable.GROUP: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.PageableProductOptionValueRepositoryImpl: org.springframework.data.domain.Page listOptionValues(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><synthetic.method.datatable.SHOPPINGCART: java.lang.String getpromocode()>
<synthetic.method.OrderProductDownloadRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><synthetic.method.datatable.ORDERPRODUCTDOWNLOAD: java.lang.Integer getdownloadcount()>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByCustomerId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMERATTRIBUTE: com.salesmanager.core.model.customer.Customer getcustomer()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstoreaddress()>
<synthetic.method.CustomerReviewRepositoryImpl: java.util.List findByReviewed(java.lang.Long)>-><com.salesmanager.core.model.customer.review.CustomerReview: void setId(java.lang.Long)>
<synthetic.method.OrderStatusHistoryRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><synthetic.method.datatable.ORDERSTATUSHISTORY: java.util.Date getdateadded()>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CONTENT: java.lang.String getproductgroup()>
<synthetic.method.PageableProductOptionValueRepositoryImpl: org.springframework.data.domain.Page listOptionValues(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setId(java.lang.Long)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setInvoiceTemplate(java.lang.String)>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.user.User: void setFirstName(java.lang.String)>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><synthetic.method.datatable.ZONE: com.salesmanager.core.model.reference.country.Country getcountry()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setId(java.lang.Long)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getproductattributeisfree()>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setProductOptionSortOrder(java.lang.Integer)>
<synthetic.method.CustomerReviewRepositoryImpl: java.util.List findByReviewed(java.lang.Long)>-><com.salesmanager.core.model.customer.review.CustomerReview: void setDescriptions(java.util.Set)>
<synthetic.method.ManufacturerRepositoryImpl: com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer findOne(java.lang.Long)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void <init>()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProductNoCustomers(java.lang.Long)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguageAndCountry(java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.reference.zone.Zone: void setCode(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.Integer getsortorder()>
<synthetic.method.datatable.SHOPPINGCART: void <init>()>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.MANUFACTURER: java.lang.String getimage()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeDefault(boolean)>
<synthetic.method.ProductOptionValueRepositoryImpl: com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue findByCode(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void <init>()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: com.salesmanager.core.model.common.CredentialsReset getcredentialsresetrequest()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getattributerequired()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.CATEGORY: java.lang.Integer getsortorder()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductAttributeIsFree(boolean)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorepostalcode()>
<synthetic.method.MerchantRepositoryImpl: java.util.List findAllStoreCodeNameEmail()>-><com.salesmanager.core.model.merchant.MerchantStore: void setStorename(java.lang.String)>
<synthetic.method.OrderProductDownloadRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><synthetic.method.datatable.ORDERPRODUCTDOWNLOAD: java.lang.String getorderproductfilename()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.CATEGORY: java.lang.String getcode()>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByOrder(java.lang.Long)>-><com.salesmanager.core.model.payments.Transaction: void setPaymentType(com.salesmanager.core.model.payments.PaymentType)>
<synthetic.method.MerchantConfigurationRepositoryImpl: java.util.List findByMerchantStoreAndType(java.lang.Integer,com.salesmanager.core.model.system.MerchantConfigurationType)>-><com.salesmanager.core.model.system.MerchantConfiguration: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.category.Category: void setCategories(java.util.List)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.reference.zone.Zone getzone()>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.content.Content: void <init>()>
<synthetic.method.CategoryDescriptionRepositoryImpl: java.util.List listByCategoryId(java.lang.Long)>-><com.salesmanager.core.model.catalog.category.CategoryDescription: void setMetatagKeywords(java.lang.String)>
<synthetic.method.ProductOptionValueRepositoryImpl: com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue findByCode(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: synthetic.method.datatable.PRODUCTOPTIONVALUE getInstance()>
<synthetic.method.PageableProductTypeRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.type.ProductType: void <init>()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByCategoriesAndLanguage(java.util.List,java.lang.Integer)>-><synthetic.method.datatable.PRODUCT: java.lang.String getcode()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.lang.Integer getid()>
<synthetic.method.PageableProductTypeRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTTYPE: java.util.Set getdescriptions()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setId(java.lang.Long)>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByDates(java.util.Date,java.util.Date)>-><com.salesmanager.core.model.payments.Transaction: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setId(java.lang.Long)>
<synthetic.method.datatable.ORDERSTATUSHISTORY: void <init>()>-><com.salesmanager.core.model.order.Order: void <init>()>
<synthetic.method.ManufacturerRepositoryImpl: com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer findOne(java.lang.Long)>-><synthetic.method.datatable.MANUFACTURER: synthetic.method.datatable.MANUFACTURER getInstance()>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void <init>()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void <init>()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeSortOrder(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorelogo()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStorename(java.lang.String)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.MANUFACTURER: java.lang.Integer getorder()>
<synthetic.method.ProductOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionSet: void setStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.datatable.PRODUCTVARIATION: void <clinit>()>-><synthetic.method.datatable.PRODUCTVARIATION: void <init>()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByTypes(java.util.List,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: java.lang.Long getid()>
<synthetic.method.PermissionRepositoryImpl: java.util.List findByGroups(java.util.Set)>-><synthetic.method.datatable.PERMISSION: java.lang.Integer getid()>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: synthetic.method.datatable.PRODUCTOPTIONVALUE getInstance()>
<synthetic.method.CategoryDescriptionRepositoryImpl: java.util.List listByCategoryId(java.lang.Long)>-><synthetic.method.datatable.CATEGORYDESCRIPTION: com.salesmanager.core.model.catalog.category.Category getcategory()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setDepth(java.lang.Integer)>
<synthetic.method.GroupRepositoryImpl: java.util.List findAll()>-><synthetic.method.datatable.GROUP: synthetic.method.datatable.GROUP getInstance()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setProduct(com.salesmanager.core.model.catalog.product.Product)>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><com.salesmanager.core.model.system.IntegrationModule: void <init>()>
<synthetic.method.ProductReviewRepositoryImpl: com.salesmanager.core.model.catalog.product.review.ProductReview findByProductAndCustomer(java.lang.Long,java.lang.Long)>-><synthetic.method.datatable.PRODUCTREVIEW: synthetic.method.datatable.PRODUCTREVIEW getInstance()>
<synthetic.method.datatable.CUSTOMEROPTIN: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setCode(java.lang.String)>
<synthetic.method.PageableProductTypeRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTTYPE: java.lang.Long getpm.id()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setDefaultLanguage(com.salesmanager.core.model.reference.language.Language)>
<synthetic.method.ManufacturerRepositoryImpl: com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer findByCodeAndMerchandStore(java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.MANUFACTURER: synthetic.method.datatable.MANUFACTURER getInstance()>
<synthetic.method.datatable.GROUP: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByDates(java.util.Date,java.util.Date)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getinvoicetemplate()>
<synthetic.method.ProductVariationRepositoryImpl: com.salesmanager.core.model.catalog.product.variation.ProductVariation findOne(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTVARIATION: synthetic.method.datatable.PRODUCTVARIATION getInstance()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getinvoicetemplate()>
<synthetic.method.PageableCatalogRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATALOG: synthetic.method.datatable.CATALOG getInstance()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.content.Content: void setDescriptions(java.util.List)>
<synthetic.method.CustomerOptionRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.customer.attribute.CustomerOption: void setPublicOption(boolean)>
<synthetic.method.CustomerOptionValueRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionValue: void setCode(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setInBusinessSince(java.util.Date)>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.USER: java.lang.String getlastname()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: java.lang.String getcompany()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: synthetic.method.datatable.CATEGORY getInstance()>
<synthetic.method.CategoryDescriptionRepositoryImpl: java.util.List listByCategoryId(java.lang.Long)>-><synthetic.method.datatable.CATEGORYDESCRIPTION: java.lang.String getmetatagdescription()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.util.List getcategories()>
<synthetic.method.LanguageRepositoryImpl: com.salesmanager.core.model.reference.language.Language findByCode(java.lang.String)>-><com.salesmanager.core.model.reference.language.Language: void setId(java.lang.Integer)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.util.Set getstores()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setZone(com.salesmanager.core.model.reference.zone.Zone)>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByCustomerId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerAttribute: void setId(java.lang.Long)>
<synthetic.method.ContentRepositoryImpl: com.salesmanager.core.model.content.Content findByCodeAndType(java.lang.String,com.salesmanager.core.model.content.ContentType,java.lang.Integer)>-><com.salesmanager.core.model.content.Content: void <init>()>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionSet: void setId(java.lang.Long)>
<synthetic.method.PageableProductOptionValueRepositoryImpl: org.springframework.data.domain.Page listOptionValues(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setImage(org.springframework.web.multipart.MultipartFile)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProduct(com.salesmanager.core.model.catalog.product.Product)>
<synthetic.method.ContentRepositoryImpl: java.util.List findByTypes(java.util.List,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.datatable.MERCHANTSTORE: void <init>()>-><java.util.Date: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: boolean getcategorystatus()>
<synthetic.method.datatable.COUNTRY: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributePrice(java.lang.String)>
<synthetic.method.CustomerOptionRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.PageableCatalogEntryRepositoryImpl: org.springframework.data.domain.Page listByCatalog(java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.catalog.CatalogCategoryEntry: void setCatalog(com.salesmanager.core.model.catalog.catalog.Catalog)>
<synthetic.method.datatable.CUSTOMER: void <init>()>-><com.salesmanager.core.model.reference.language.Language: void <init>()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.user.User: void setCredentialsResetRequest(com.salesmanager.core.model.common.CredentialsReset)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStores(java.util.Set)>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATEGORY: java.lang.Long getid()>
<synthetic.method.datatable.PRODUCTATTRIBUTE: void <init>()>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void <init>()>
<synthetic.method.PageableProductOptionRepositoryImpl: org.springframework.data.domain.Page listOptions(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setProductOptionSortOrder(java.lang.Integer)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.reference.language.Language getdefaultlanguage()>
<synthetic.method.ShoppingCartRepositoryImpl: com.salesmanager.core.model.shoppingcart.ShoppingCart findByCode(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.SHOPPINGCART: synthetic.method.datatable.SHOPPINGCART getInstance()>
<synthetic.method.CountryRepositoryImpl: com.salesmanager.core.model.reference.country.Country findByIsoCode(java.lang.String)>-><com.salesmanager.core.model.reference.country.Country: void <init>()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByNames(java.util.List)>-><synthetic.method.datatable.GROUP: java.util.Set getpermissions()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><synthetic.method.datatable.CATEGORY: boolean getfeatured()>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByOrder(java.lang.Long)>-><synthetic.method.datatable.TRANSACTION: java.util.Date gettransactiondate()>
<synthetic.method.UserRepositoryImpl: com.salesmanager.core.model.user.User findByUserId(java.lang.Long,java.lang.String)>-><synthetic.method.datatable.USER: synthetic.method.datatable.USER getInstance()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setSeizeunitcode(java.lang.String)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long)>-><synthetic.method.datatable.PRODUCTREVIEW: com.salesmanager.core.model.common.audit.AuditSection getaudit()>
<synthetic.method.datatable.GROUP: void <clinit>()>-><synthetic.method.datatable.GROUP: void <init>()>
<synthetic.method.PageableProductVariationRepositoryImpl: org.springframework.data.domain.Page list(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTVARIATION: java.lang.String getcode()>
<synthetic.method.UserRepositoryImpl: com.salesmanager.core.model.user.User findByResetPasswordToken(java.lang.String,java.lang.String)>-><com.salesmanager.core.model.user.User: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setCountry(com.salesmanager.core.model.reference.country.Country)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.util.List getlanguages()>
<synthetic.method.CountryRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><com.salesmanager.core.model.reference.country.Country: void setSupported(boolean)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTREVIEW: java.util.Set getdescriptions()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.util.List gettaxrates()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.math.BigDecimal gettaxrate()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: com.salesmanager.core.model.catalog.product.attribute.ProductOption getproductoption()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: com.salesmanager.core.model.content.ContentType getcontenttype()>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><synthetic.method.datatable.SHOPPINGCART: java.util.Date getpromoadded()>
<synthetic.method.datatable.PRODUCTATTRIBUTE: void <init>()>-><com.salesmanager.core.model.catalog.product.Product: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.util.List getlanguages()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProductNoCustomers(java.lang.Long)>-><synthetic.method.datatable.PRODUCTREVIEW: java.lang.Integer getstatus()>
<synthetic.method.PageableProductOptionValueRepositoryImpl: org.springframework.data.domain.Page listOptionValues(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setProductOptionValueSortOrder(java.lang.Integer)>
<synthetic.method.datatable.TRANSACTION: void <init>()>-><com.salesmanager.core.model.order.Order: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setLineage(java.lang.String)>
<synthetic.method.MerchantRepositoryImpl: java.util.List findAllStoreCodeNameEmail()>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstoreemailaddress()>
<synthetic.method.MerchantRepositoryImpl: java.util.List findAllStoreNames()>-><synthetic.method.datatable.MERCHANTSTORE: synthetic.method.datatable.MERCHANTSTORE getInstance()>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setCode(java.lang.String)>
<synthetic.method.datatable.CUSTOMER: void <init>()>-><com.salesmanager.core.model.common.Billing: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setVisible(boolean)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByCategoriesAndLanguage(java.util.List,java.lang.Integer)>-><synthetic.method.datatable.PRODUCT: java.util.Set getdescriptions()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.CATEGORY: boolean getcategorystatus()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setCurrency(com.salesmanager.core.model.reference.currency.Currency)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setReviewRating(java.lang.Double)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributePrice(java.lang.String)>
<synthetic.method.CustomerReviewRepositoryImpl: java.util.List findByReviewed(java.lang.Long)>-><com.salesmanager.core.model.customer.review.CustomerReview: void setReviewRead(java.lang.Long)>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><synthetic.method.datatable.MODULECONFIGURATION: boolean getcustommodule()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.util.List getlanguages()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByNames(java.util.List)>-><synthetic.method.datatable.GROUP: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.Boolean getretailer()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: com.salesmanager.core.model.catalog.product.attribute.ProductOption getproductoption()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorepostalcode()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: synthetic.method.datatable.MERCHANTSTORE getInstance()>
<synthetic.method.CustomerOptionValueRepositoryImpl: com.salesmanager.core.model.customer.attribute.CustomerOptionValue findByCode(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.CUSTOMEROPTIONVALUE: synthetic.method.datatable.CUSTOMEROPTIONVALUE getInstance()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: synthetic.method.datatable.PRODUCTATTRIBUTE getInstance()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeRequired(boolean)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setZone(com.salesmanager.core.model.reference.zone.Zone)>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerAttribute: void setId(java.lang.Long)>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><com.salesmanager.core.model.system.IntegrationModule: void setRegions(java.lang.String)>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MANUFACTURER: java.lang.Integer getmerchantstore()>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMERATTRIBUTE: com.salesmanager.core.model.customer.attribute.CustomerOption getcustomeroption()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStoreTemplate(java.lang.String)>
<synthetic.method.PageableCatalogEntryRepositoryImpl: org.springframework.data.domain.Page listByCatalog(java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATALOGCATEGORYENTRY: java.lang.Long getid()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: boolean getcurrencyformatnational()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProductNoCustomers(java.lang.Long)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void <init>()>
<synthetic.method.PageableProductOptionRepositoryImpl: org.springframework.data.domain.Page listOptions(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.CategoryDescriptionRepositoryImpl: java.util.List listByCategoryId(java.lang.Long)>-><synthetic.method.datatable.CATEGORYDESCRIPTION: java.lang.String getcategoryhighlight()>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.catalog.category.Category getparent()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MANUFACTURER: synthetic.method.datatable.MANUFACTURER getInstance()>
<synthetic.method.PageableCatalogEntryRepositoryImpl: org.springframework.data.domain.Page listByCatalog(java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.catalog.CatalogCategoryEntry: void setId(java.lang.Long)>
<synthetic.method.CategoryDescriptionRepositoryImpl: java.util.List listByCategoryId(java.lang.Long)>-><synthetic.method.datatable.CATEGORYDESCRIPTION: java.lang.String getseurl()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstoreaddress()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.util.Set getdescriptions()>
<synthetic.method.CountryRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><com.salesmanager.core.model.reference.country.Country: void setZones(java.util.Set)>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMERATTRIBUTE: com.salesmanager.core.model.customer.Customer getcustomer()>
<synthetic.method.OrderProductDownloadRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><synthetic.method.datatable.ORDERPRODUCTDOWNLOAD: com.salesmanager.core.model.order.orderproduct.OrderProduct getorderproduct()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getattributedefault()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.USER: java.lang.String getcredentialsresetrequest()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeDisplayOnly(boolean)>
<synthetic.method.ContentRepositoryImpl: java.util.List findByTypes(java.util.List,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: boolean getlinktomenu()>
<synthetic.method.CountryRepositoryImpl: java.util.List listCountryZonesByLanguage(java.lang.Integer)>-><com.salesmanager.core.model.reference.country.Country: void setSupported(boolean)>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CUSTOMEROPTIONSET: java.lang.Long getid()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.math.BigDecimal gettaxrate()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.ProductTypeRepositoryImpl: java.util.List findByIds(java.util.List,java.lang.Integer,int)>-><synthetic.method.datatable.PRODUCTTYPE: java.lang.Long getid()>
<synthetic.method.DigitalProductRepositoryImpl: com.salesmanager.core.model.catalog.product.file.DigitalProduct findByProduct(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.DIGITALPRODUCT: synthetic.method.datatable.DIGITALPRODUCT getInstance()>
<synthetic.method.OptinRepositoryImpl: com.salesmanager.core.model.system.optin.Optin findByMerchantAndCode(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.system.optin.Optin: void <init>()>
<synthetic.method.CountryRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><com.salesmanager.core.model.reference.country.Country: void setDescriptions(java.util.Set)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeDefault(boolean)>
<synthetic.method.CustomerOptionRepositoryImpl: com.salesmanager.core.model.customer.attribute.CustomerOption findByCode(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.CUSTOMEROPTION: synthetic.method.datatable.CUSTOMEROPTION getInstance()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByIds(java.util.Set)>-><com.salesmanager.core.model.user.Group: void <init>()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: java.lang.String getemailaddress()>
<synthetic.method.datatable.CATALOG: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.tax.taxclass.TaxClass gettaxclass()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.lang.String getratetext()>
<synthetic.method.datatable.PERMISSION: void <init>()>-><com.salesmanager.core.model.common.audit.AuditSection: void <init>()>
<synthetic.method.CategoryRepositoryImpl: com.salesmanager.core.model.catalog.category.Category findById(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: synthetic.method.datatable.CATEGORY getInstance()>
<synthetic.method.OrderStatusHistoryRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><com.salesmanager.core.model.order.orderstatus.OrderStatusHistory: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setSeizeunitcode(java.lang.String)>
<synthetic.method.datatable.MERCHANTSTORE: void <init>()>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setId(java.lang.Long)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.content.Content: void setId(java.lang.Long)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void <init>()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductOption(com.salesmanager.core.model.catalog.product.attribute.ProductOption)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setWeightunitcode(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstoreaddress()>
<synthetic.method.ProductImageRepositoryImpl: com.salesmanager.core.model.catalog.product.image.ProductImage finById(java.lang.Long,java.lang.Long,java.lang.String)>-><synthetic.method.datatable.PRODUCTIMAGE: synthetic.method.datatable.PRODUCTIMAGE getInstance()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setSortOrder(java.lang.Integer)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTREVIEW: java.lang.Double getreviewrating()>
<synthetic.method.CountryRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><synthetic.method.datatable.COUNTRY: java.lang.String getisocode()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.reference.country.Country getcountry()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setZone(com.salesmanager.core.model.reference.zone.Zone)>
<synthetic.method.PageableProductOptionRepositoryImpl: org.springframework.data.domain.Page listOptions(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTOPTION: java.lang.Long getid()>
<synthetic.method.PageableCatalogRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATALOG: java.lang.Long getid()>
<synthetic.method.ProductTypeRepositoryImpl: java.util.List findByIds(java.util.List,java.lang.Integer,int)>-><synthetic.method.datatable.PRODUCTTYPE: java.lang.String getcode()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.MANUFACTURER: java.lang.Long getid()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.USER: java.lang.String getanswer1()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStoreEmailAddress(java.lang.String)>
<synthetic.method.datatable.PRODUCTOPTIONVALUE: void <init>()>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByTypes(java.util.List,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: synthetic.method.datatable.CONTENT getInstance()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.util.List getcategories()>
<synthetic.method.CustomerReviewRepositoryImpl: java.util.List findByReviewed(java.lang.Long)>-><synthetic.method.datatable.CUSTOMERREVIEW: java.lang.Long getreviewread()>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.category.Category: void setLineage(java.lang.String)>
<synthetic.method.UserRepositoryImpl: com.salesmanager.core.model.user.User findByUserName(java.lang.String,java.lang.String)>-><com.salesmanager.core.model.user.User: void <init>()>
<synthetic.method.ProductTypeRepositoryImpl: java.util.List findByIds(java.util.List,java.lang.Integer,int)>-><synthetic.method.datatable.PRODUCTTYPE: java.lang.Long getpm.id()>
<synthetic.method.datatable.MANUFACTURER: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: org.springframework.web.multipart.MultipartFile getimage()>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByOrder(java.lang.Long)>-><synthetic.method.datatable.TRANSACTION: synthetic.method.datatable.TRANSACTION getInstance()>
<synthetic.method.PageableProductVariationRepositoryImpl: org.springframework.data.domain.Page list(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTVARIATION: java.lang.Integer getid()>
<synthetic.method.datatable.PRODUCT: void <init>()>-><com.salesmanager.core.model.common.audit.AuditSection: void <init>()>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><com.salesmanager.core.model.system.IntegrationModule: void setCode(java.lang.String)>
<synthetic.method.GroupRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.user.GroupType)>-><com.salesmanager.core.model.user.Group: void setGroupName(java.lang.String)>
<synthetic.method.GroupRepositoryImpl: java.util.List findAll()>-><synthetic.method.datatable.GROUP: java.lang.String getgroupname()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.reference.zone.Zone getzone()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: synthetic.method.datatable.CATEGORY getInstance()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductOptionSortOrder(java.lang.Integer)>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionSet: void setSortOrder(int)>
<synthetic.method.datatable.USER: void <init>()>-><com.salesmanager.core.model.reference.language.Language: void <init>()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProductNoCustomers(java.lang.Long)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setStatus(java.lang.Integer)>
<synthetic.method.CategoryDescriptionRepositoryImpl: java.util.List listByCategoryId(java.lang.Long)>-><com.salesmanager.core.model.catalog.category.CategoryDescription: void setSeUrl(java.lang.String)>
<synthetic.method.ContentRepositoryImpl: com.salesmanager.core.model.content.Content findOne(java.lang.Long)>-><synthetic.method.datatable.CONTENT: synthetic.method.datatable.CONTENT getInstance()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.String getlineage()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setTaxClass(com.salesmanager.core.model.tax.taxclass.TaxClass)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeDefault(boolean)>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><com.salesmanager.core.model.shoppingcart.ShoppingCart: void setPromoAdded(java.util.Date)>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><com.salesmanager.core.model.shoppingcart.ShoppingCart: void setOrderId(java.lang.Long)>
<synthetic.method.CustomerReviewRepositoryImpl: java.util.List findByReviewed(java.lang.Long)>-><com.salesmanager.core.model.customer.review.CustomerReview: void <init>()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.math.BigDecimal getproductattributeweight()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setId(java.lang.Long)>
<synthetic.method.OrderRepositoryImpl: com.salesmanager.core.model.order.Order findOne(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.ORDER: synthetic.method.datatable.ORDER getInstance()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setVisible(boolean)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.String getattributeadditionalweight()>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><synthetic.method.datatable.ZONE: java.lang.String getcode()>
<synthetic.method.datatable.CUSTOMEROPTIONSET: void <clinit>()>-><synthetic.method.datatable.CUSTOMEROPTIONSET: void <init>()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void setAnonymous(boolean)>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.category.Category: void setId(java.lang.Long)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.reference.zone.Zone getzone()>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CUSTOMEROPTIONSET: java.lang.Integer getsortorder()>
<synthetic.method.ShoppingCartRepositoryImpl: com.salesmanager.core.model.shoppingcart.ShoppingCart findById(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.shoppingcart.ShoppingCart: void <init>()>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><com.salesmanager.core.model.shoppingcart.ShoppingCart: void setLineItems(java.util.Set)>
<synthetic.method.CountryRepositoryImpl: java.util.List listCountryZonesByLanguage(java.lang.Integer)>-><com.salesmanager.core.model.reference.country.Country: void setDescriptions(java.util.Set)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setDateBusinessSince(java.lang.String)>
<synthetic.method.ProductTypeRepositoryImpl: com.salesmanager.core.model.catalog.product.type.ProductType findById(java.lang.Long,java.lang.Integer,int)>-><synthetic.method.datatable.PRODUCTTYPE: java.lang.Long getp.id()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.String getattributesortorder()>
<synthetic.method.MerchantConfigurationRepositoryImpl: java.util.List findByMerchantStoreAndType(java.lang.Integer,com.salesmanager.core.model.system.MerchantConfigurationType)>-><synthetic.method.datatable.MERCHANTCONFIGURATION: java.lang.Boolean getactive()>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><synthetic.method.datatable.SHOPPINGCART: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.Integer get>()>
<synthetic.method.datatable.MERCHANTCONFIGURATION: void <init>()>-><com.salesmanager.core.model.common.audit.AuditSection: void <init>()>
<synthetic.method.UserRepositoryImpl: com.salesmanager.core.model.user.User findByResetPasswordToken(java.lang.String,java.lang.String)>-><synthetic.method.datatable.USER: synthetic.method.datatable.USER getInstance()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCategories(java.util.List)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setDomainName(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStorepostalcode(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setCode(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setContinueshoppingurl(java.lang.String)>
<synthetic.method.CustomerOptionValueRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CUSTOMEROPTIONVALUE: java.lang.Long getid()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: boolean getanonymous()>
<synthetic.method.CustomerReviewRepositoryImpl: java.util.List findByReviewed(java.lang.Long)>-><synthetic.method.datatable.CUSTOMERREVIEW: com.salesmanager.core.model.customer.Customer getreviewedcustomer()>
<synthetic.method.datatable.TRANSACTION: void <clinit>()>-><synthetic.method.datatable.TRANSACTION: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.String getcategoryimage()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getattributediscounted()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.reference.country.Country getcountry()>
<synthetic.method.MerchantRepositoryImpl: java.util.List findAllStoreCodeNameEmail()>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorename()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.content.Content: void <init>()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeDefault(boolean)>
<synthetic.method.GroupRepositoryImpl: java.util.List findByIds(java.util.Set)>-><synthetic.method.datatable.GROUP: java.lang.String getgroupname()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><com.salesmanager.core.model.shoppingcart.ShoppingCart: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerAttribute: void <init>()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.content.Content: void setProductGroup(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setCategoryImage(java.lang.String)>
<synthetic.method.CustomerOptionRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.customer.attribute.CustomerOption: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTREVIEW: java.lang.Integer getstatus()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTREVIEW: com.salesmanager.core.model.customer.Customer getcustomer()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.lang.Integer getid()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.USER: java.lang.String getquestion1()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setCustomer(com.salesmanager.core.model.customer.Customer)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeAdditionalWeight(java.lang.String)>
<synthetic.method.ShoppingCartItemRepositoryImpl: com.salesmanager.core.model.shoppingcart.ShoppingCartItem findOne(java.lang.Long)>-><com.salesmanager.core.model.shoppingcart.ShoppingCartItem: void <init>()>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><com.salesmanager.core.model.system.IntegrationModule: void setConfiguration(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setVisible(boolean)>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTION: java.util.Set getdescriptions()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: com.salesmanager.core.model.reference.country.Country getcountry()>
<synthetic.method.CountryRepositoryImpl: java.util.List listCountryZonesByLanguage(java.lang.Integer)>-><synthetic.method.datatable.COUNTRY: java.lang.String getisocode()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeDisplayOnly(boolean)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setSortOrder(java.lang.Integer)>
<synthetic.method.ProductTypeRepositoryImpl: com.salesmanager.core.model.catalog.product.type.ProductType findByCode(java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTTYPE: java.lang.Long getpm.id()>
<synthetic.method.MerchantConfigurationRepositoryImpl: java.util.List findByMerchantStoreAndType(java.lang.Integer,com.salesmanager.core.model.system.MerchantConfigurationType)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.TaxClassRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.tax.taxclass.TaxClass: void setId(java.lang.Long)>
<synthetic.method.CountryRepositoryImpl: java.util.List listCountryZonesByLanguage(java.lang.Integer)>-><com.salesmanager.core.model.reference.country.Country: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCategoryStatus(boolean)>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CONTENT: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void setStatus(java.lang.Integer)>
<synthetic.method.GroupRepositoryImpl: java.util.List findAll()>-><synthetic.method.datatable.GROUP: java.util.Set getpermissions()>
<synthetic.method.CategoryRepositoryImpl: com.salesmanager.core.model.catalog.category.Category findByCode(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.CATEGORY: synthetic.method.datatable.CATEGORY getInstance()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.util.List getcategories()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.tax.taxclass.TaxClass gettaxclass()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.lang.String getratetext()>
<synthetic.method.datatable.PRODUCT: void <clinit>()>-><synthetic.method.datatable.PRODUCT: void <init>()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.lang.String getstateprovince()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MANUFACTURER: java.lang.String getimage()>
<synthetic.method.OrderProductDownloadRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><synthetic.method.datatable.ORDERPRODUCTDOWNLOAD: java.lang.Integer getmaxdays()>
<synthetic.method.CustomerReviewRepositoryImpl: java.util.List findByReviewed(java.lang.Long)>-><com.salesmanager.core.model.customer.review.CustomerReview: void setReviewedCustomer(com.salesmanager.core.model.customer.Customer)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductOptionValue(com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue)>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.category.Category: void setParent(com.salesmanager.core.model.catalog.category.Category)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setCode(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getcode()>
<synthetic.method.MerchantConfigurationRepositoryImpl: java.util.List findByMerchantStoreAndType(java.lang.Integer,com.salesmanager.core.model.system.MerchantConfigurationType)>-><synthetic.method.datatable.MERCHANTCONFIGURATION: java.lang.Long getid()>
<synthetic.method.ProductTypeRepositoryImpl: java.util.List findByIds(java.util.List,java.lang.Integer,int)>-><synthetic.method.datatable.PRODUCTTYPE: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.MerchantRepositoryImpl: java.util.List findAllStoreCodeNameEmail()>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.PageableCatalogRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.catalog.Catalog: void setVisible(boolean)>
<synthetic.method.datatable.SHIPPINGORIGIN: void <clinit>()>-><synthetic.method.datatable.SHIPPINGORIGIN: void <init>()>
<synthetic.method.datatable.LANGUAGE: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.PageableProductVariationRepositoryImpl: org.springframework.data.domain.Page list(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.variation.ProductVariation: void setId(java.lang.Long)>
<synthetic.method.CategoryDescriptionRepositoryImpl: java.util.List listByCategoryId(java.lang.Long)>-><com.salesmanager.core.model.catalog.category.CategoryDescription: void setMetatagTitle(java.lang.String)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByProductId(java.lang.Integer,java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductOptionValue(com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue)>
<synthetic.method.PageableProductVariationRepositoryImpl: org.springframework.data.domain.Page list(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTVARIATION: synthetic.method.datatable.PRODUCTVARIATION getInstance()>
<synthetic.method.MerchantRepositoryImpl: java.util.List findAllStoreNames(java.lang.String)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStorename(java.lang.String)>
<synthetic.method.datatable.PRODUCTOPTIONSET: void <init>()>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.category.Category: void setDescriptions(java.util.Set)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByProductInCategoryId(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setImage(java.lang.String)>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByReadOnly(java.lang.Integer,java.lang.Integer,boolean)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: java.lang.String getcode()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getweightunitcode()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getattributedisplayonly()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><synthetic.method.datatable.CATEGORY: java.lang.String getcode()>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByReadOnly(java.lang.Integer,java.lang.Integer,boolean)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: synthetic.method.datatable.PRODUCTOPTIONVALUE getInstance()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: java.lang.String getpassword()>
<synthetic.method.datatable.MERCHANTCONFIGURATION: void <init>()>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.ProductOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTIONSET: synthetic.method.datatable.PRODUCTOPTIONSET getInstance()>
<synthetic.method.datatable.CONTENT: void <init>()>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.GroupRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.user.GroupType)>-><synthetic.method.datatable.GROUP: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setOrder(java.lang.Integer)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setDepth(java.lang.Integer)>
<synthetic.method.PageableProductOptionValueRepositoryImpl: org.springframework.data.domain.Page listOptionValues(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: org.springframework.web.multipart.MultipartFile getimage()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setPiggyback(boolean)>
<synthetic.method.datatable.CUSTOMEROPTIONVALUE: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.CountryRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setId(java.lang.Long)>
<synthetic.method.PageableProductTypeRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.type.ProductType: void setVisible(java.lang.Boolean)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductAttributeIsFree(boolean)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setLineage(java.lang.String)>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguageAndCountry(java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.ZONE: java.util.List getdescriptions()>
<synthetic.method.datatable.OPTIN: void <init>()>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.review.ProductReview: void <init>()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByCategoriesAndLanguage(java.util.List,java.lang.Integer)>-><synthetic.method.datatable.PRODUCT: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProductNoCustomers(java.lang.Long)>-><synthetic.method.datatable.PRODUCTREVIEW: java.lang.Double getreviewrating()>
<synthetic.method.PageableProductOptionValueRepositoryImpl: org.springframework.data.domain.Page listOptionValues(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue: void setDescriptionsList(java.util.List)>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.category.Category: void setCode(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: boolean getusecache()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void setEmailAddress(java.lang.String)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.Integer getid()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.MANUFACTURER: java.lang.String getimage()>
<synthetic.method.OptinRepositoryImpl: com.salesmanager.core.model.system.optin.Optin findByMerchantAndCode(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.OPTIN: synthetic.method.datatable.OPTIN getInstance()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setOrder(java.lang.Integer)>
<synthetic.method.datatable.PRODUCTATTRIBUTE: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MANUFACTURER: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.CountryRepositoryImpl: java.util.List listCountryZonesByLanguage(java.lang.Integer)>-><synthetic.method.datatable.COUNTRY: com.salesmanager.core.model.reference.geozone.GeoZone getgeozone()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void setCustomerReviewCount(java.lang.Integer)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setWeightunitcode(java.lang.String)>
<synthetic.method.ProductOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionSet: void setOptionDisplayOnly(boolean)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.util.Set getstores()>
<synthetic.method.PageableProductVariationRepositoryImpl: org.springframework.data.domain.Page list(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.variation.ProductVariation: void setCode(java.lang.String)>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void setShowDeliveryStateList(java.lang.String)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.util.List getdescriptions()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.user.User: void setLoginTime(java.util.Date)>
<synthetic.method.datatable.USER: void <init>()>-><com.salesmanager.core.model.common.audit.AuditSection: void <init>()>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTREVIEW: java.lang.Long getid()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.lang.Integer gettaxpriority()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: boolean getattributediscounted()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStoreTemplate(java.lang.String)>
<synthetic.method.GroupRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.user.GroupType)>-><com.salesmanager.core.model.user.Group: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.CountryRepositoryImpl: java.util.List listCountryZonesByLanguage(java.lang.Integer)>-><synthetic.method.datatable.COUNTRY: java.lang.Integer getid()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getstorestateprovince()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCode(java.lang.String)>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setReadOnly(boolean)>
<register-finalize <synthetic.method.ContentRepositoryImpl: java.util.List findByTypes(java.util.List,java.lang.Integer,java.lang.Integer)>-><java.lang.ref.Finalizer: void register(java.lang.Object)>
<synthetic.method.PageableCatalogRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.catalog.Catalog: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStoreEmailAddress(java.lang.String)>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByOrder(java.lang.Long)>-><com.salesmanager.core.model.payments.Transaction: void setTransactionDetails(java.util.Map)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndZoneAndCountryAndLanguage(java.lang.Integer,java.lang.Long,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: java.lang.String getstateprovince()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void <init>()>
<synthetic.method.CustomerOptionRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.customer.attribute.CustomerOption: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><synthetic.method.datatable.CATEGORY: java.lang.Integer getdepth()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.user.User: void setAdminName(java.lang.String)>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setCode(java.lang.String)>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: java.util.Date getdateofbirth()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setInvoiceTemplate(java.lang.String)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.catalog.category.Category getparent()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCode(java.lang.String)>
<synthetic.method.CountryRepositoryImpl: java.util.List listCountryZonesByLanguage(java.lang.Integer)>-><com.salesmanager.core.model.reference.country.Country: void setName(java.lang.String)>
<synthetic.method.GroupRepositoryImpl: java.util.List findByIds(java.util.Set)>-><synthetic.method.datatable.GROUP: com.salesmanager.core.model.user.GroupType getgrouptype()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.content.Content: void setSortOrder(java.lang.Integer)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAll(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStorepostalcode(java.lang.String)>
<synthetic.method.datatable.ORDER: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.MERCHANTSTORE: java.lang.String getcontinueshoppingurl()>
<synthetic.method.GroupRepositoryImpl: com.salesmanager.core.model.user.Group findByGroupName(java.lang.String)>-><synthetic.method.datatable.GROUP: synthetic.method.datatable.GROUP getInstance()>
<synthetic.method.ZoneRepositoryImpl: com.salesmanager.core.model.reference.zone.Zone findByCode(java.lang.String)>-><synthetic.method.datatable.ZONE: com.salesmanager.core.model.reference.country.Country getcountry()>
<synthetic.method.OrderStatusHistoryRepositoryImpl: java.util.List findByOrderId(java.lang.Long)>-><synthetic.method.datatable.ORDERSTATUSHISTORY: java.lang.String getcomments()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProductNoCustomers(java.lang.Long)>-><synthetic.method.datatable.PRODUCTREVIEW: java.lang.Long getreviewread()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByParent(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.String getcode()>
<synthetic.method.ContentRepositoryImpl: java.util.List findByType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: com.salesmanager.core.model.content.ContentPosition getcontentposition()>
<synthetic.method.datatable.MODULECONFIGURATION: void <clinit>()>-><synthetic.method.datatable.MODULECONFIGURATION: void <init>()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setProductAttributePrice(java.math.BigDecimal)>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><com.salesmanager.core.model.shoppingcart.ShoppingCart: void setId(java.lang.Long)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><com.salesmanager.core.model.catalog.category.Category: void setCode(java.lang.String)>
<synthetic.method.datatable.CUSTOMERREVIEW: void <init>()>-><com.salesmanager.core.model.common.audit.AuditSection: void <init>()>
<synthetic.method.PageableProductTypeRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTTYPE: java.lang.Long getid()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setCode(java.lang.String)>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionSet: void setCustomerOptionValue(com.salesmanager.core.model.customer.attribute.CustomerOptionValue)>
<synthetic.method.MerchantConfigurationRepositoryImpl: java.util.List findByMerchantStoreAndType(java.lang.Integer,com.salesmanager.core.model.system.MerchantConfigurationType)>-><com.salesmanager.core.model.system.MerchantConfiguration: void setValue(java.lang.String)>
<synthetic.method.CustomerReviewRepositoryImpl: java.util.List findByReviewed(java.lang.Long)>-><synthetic.method.datatable.CUSTOMERREVIEW: java.util.Set getdescriptions()>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByDates(java.util.Date,java.util.Date)>-><com.salesmanager.core.model.payments.Transaction: void setTransactionDate(java.util.Date)>
<synthetic.method.CategoryRepositoryImpl: com.salesmanager.core.model.catalog.category.Category findByIdAndStore(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: synthetic.method.datatable.CATEGORY getInstance()>
<synthetic.method.CountryRepositoryImpl: java.util.List listCountryZonesByLanguage(java.lang.Integer)>-><synthetic.method.datatable.COUNTRY: synthetic.method.datatable.COUNTRY getInstance()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.Long getid()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByCategoriesAndLanguage(java.util.List,java.lang.Integer)>-><synthetic.method.datatable.PRODUCT: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByCodes(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.Integer getdepth()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStores(java.util.Set)>
<synthetic.method.datatable.CATALOGCATEGORYENTRY: void <clinit>()>-><synthetic.method.datatable.CATALOGCATEGORYENTRY: void <init>()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setParent(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.TaxClassRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><synthetic.method.datatable.TAXCLASS: java.lang.String gettitle()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><synthetic.method.datatable.CUSTOMER: java.util.List getreviews()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void setCredentialsResetRequest(com.salesmanager.core.model.common.CredentialsReset)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeDiscounted(boolean)>
<synthetic.method.CategoryRepositoryImpl: com.salesmanager.core.model.catalog.category.Category findByIdAndLanguage(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: synthetic.method.datatable.CATEGORY getInstance()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTREVIEW: synthetic.method.datatable.PRODUCTREVIEW getInstance()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setStateProvince(java.lang.String)>
<synthetic.method.CustomerRepositoryImpl: com.salesmanager.core.model.customer.Customer findByNick(java.lang.String)>-><com.salesmanager.core.model.customer.Customer: void <init>()>
<synthetic.method.ProductOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionSet: void setOption(com.salesmanager.core.model.catalog.product.attribute.ProductOption)>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerAttribute: void setCustomer(com.salesmanager.core.model.customer.Customer)>
<synthetic.method.datatable.PRODUCTREVIEW: void <init>()>-><com.salesmanager.core.model.customer.Customer: void <init>()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long)>-><synthetic.method.datatable.PRODUCTREVIEW: java.util.Set getdescriptions()>
<synthetic.method.UserRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.user.User: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.MerchantConfigurationRepositoryImpl: java.util.List findByMerchantStoreAndType(java.lang.Integer,com.salesmanager.core.model.system.MerchantConfigurationType)>-><com.salesmanager.core.model.system.MerchantConfiguration: void setKey(java.lang.String)>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTION: java.lang.Long getid()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void setBilling(com.salesmanager.core.model.common.Billing)>
<synthetic.method.CategoryDescriptionRepositoryImpl: java.util.List listByCategoryId(java.lang.Long)>-><synthetic.method.datatable.CATEGORYDESCRIPTION: java.lang.String getmetatagtitle()>
<synthetic.method.datatable.ORDERPRODUCTDOWNLOAD: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.datatable.TAXCLASS: void <clinit>()>-><synthetic.method.datatable.TAXCLASS: void <init>()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void <init>()>
<synthetic.method.ProductOptionValueRepositoryImpl: java.util.List findByStoreId(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTIONVALUE: java.lang.Integer getproductoptionvaluesortorder()>
<synthetic.method.datatable.CUSTOMER: void <init>()>-><com.salesmanager.core.model.merchant.MerchantStore: void <init>()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long)>-><synthetic.method.datatable.PRODUCTREVIEW: java.util.Date getreviewdate()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.String,java.lang.String)>-><synthetic.method.datatable.CATEGORY: java.lang.String getlineage()>
<synthetic.method.ProductOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionSet: void setValues(java.util.List)>
<synthetic.method.datatable.CATALOGCATEGORYENTRY: void <init>()>-><com.salesmanager.core.model.catalog.category.Category: void <init>()>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><com.salesmanager.core.model.system.IntegrationModule: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.PageableManufacturerRepositoryImpl: org.springframework.data.domain.Page findByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setDescriptions(java.util.Set)>
<synthetic.method.ProductOptionRepositoryImpl: java.util.List findByName(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setDescriptionsList(java.util.List)>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerAttribute: void setCustomerOption(com.salesmanager.core.model.customer.attribute.CustomerOption)>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CUSTOMEROPTIONSET: synthetic.method.datatable.CUSTOMEROPTIONSET getInstance()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByMerchantAndProvinceAndCountryAndLanguage(java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.tax.taxrate.TaxRate: void setParent(com.salesmanager.core.model.tax.taxrate.TaxRate)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByIds(java.lang.Integer,java.util.List,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.ProductReviewRepositoryImpl: java.util.List findByProduct(java.lang.Long,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTREVIEW: com.salesmanager.core.model.common.audit.AuditSection getaudit()>
<synthetic.method.ZoneRepositoryImpl: java.util.List listByLanguage(java.lang.Integer)>-><synthetic.method.datatable.ZONE: java.lang.String getname()>
<synthetic.method.ProductOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTOPTIONSET: boolean getoptiondisplayonly()>
<synthetic.method.CustomerOptionValueRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.customer.attribute.CustomerOptionValue: void setSortOrder(java.lang.Integer)>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listAllRetailers(java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setLanguages(java.util.List)>
<synthetic.method.ContentRepositoryImpl: com.salesmanager.core.model.content.Content findByCode(java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.content.Content: void <init>()>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.category.Category: void setMerchantStore(com.salesmanager.core.model.merchant.MerchantStore)>
<synthetic.method.datatable.CATEGORY: void <init>()>-><com.salesmanager.core.model.catalog.category.Category: void <init>()>
<synthetic.method.TaxRateRepositoryImpl: java.util.List findByStoreAndLanguage(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.TAXRATE: com.salesmanager.core.model.merchant.MerchantStore getmerchantstore()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByProductInCategoryId(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setOrder(java.lang.Integer)>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByLineage(java.lang.Integer,java.lang.String)>-><com.salesmanager.core.model.catalog.category.Category: void setFeatured(boolean)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findByAttributeIds(java.lang.Integer,java.lang.Long,java.util.List)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: com.salesmanager.core.model.catalog.product.attribute.ProductOptionValue getproductoptionvalue()>
<synthetic.method.CustomerAttributeRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><com.salesmanager.core.model.customer.attribute.CustomerAttribute: void setCustomerOptionValue(com.salesmanager.core.model.customer.attribute.CustomerOptionValue)>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.lang.String getattributeadditionalweight()>
<synthetic.method.MerchantRepositoryImpl: java.util.List findAllStoreCodeNameEmail()>-><com.salesmanager.core.model.merchant.MerchantStore: void setCode(java.lang.String)>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByOptionId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMEROPTIONSET: com.salesmanager.core.model.customer.attribute.CustomerOptionValue getcustomeroptionvalue()>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><com.salesmanager.core.model.system.IntegrationModule: void setId(java.lang.Long)>
<synthetic.method.GroupRepositoryImpl: java.util.List findAll()>-><synthetic.method.datatable.GROUP: com.salesmanager.core.model.user.GroupType getgrouptype()>
<synthetic.method.CustomerOptionRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CUSTOMEROPTION: java.util.List getdescriptionslist()>
<synthetic.method.datatable.CUSTOMERREVIEW: void <clinit>()>-><synthetic.method.datatable.CUSTOMERREVIEW: void <init>()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void setAttributeDisplayOnly(boolean)>
<synthetic.method.ContentRepositoryImpl: java.util.List findByTypes(java.util.List,java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CONTENT: boolean getvisible()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.String getcode()>
<synthetic.method.PageableProductOptionRepositoryImpl: org.springframework.data.domain.Page listOptions(int,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOption: void setCode(java.lang.String)>
<synthetic.method.ModuleConfigurationRepositoryImpl: com.salesmanager.core.model.system.IntegrationModule findByCode(java.lang.String)>-><com.salesmanager.core.model.system.IntegrationModule: void setModule(java.lang.String)>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><com.salesmanager.core.model.shoppingcart.ShoppingCart: void setCustomerId(java.lang.Long)>
<synthetic.method.CustomerOptionSetRepositoryImpl: java.util.List findByOptionValueId(java.lang.Integer,java.lang.Long)>-><synthetic.method.datatable.CUSTOMEROPTIONSET: java.lang.Long getid()>
<synthetic.method.datatable.CUSTOMERREVIEW: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.CountryRepositoryImpl: java.util.List listCountryZonesByLanguage(java.lang.Integer)>-><com.salesmanager.core.model.reference.country.Country: void setId(java.lang.Integer)>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByDates(java.util.Date,java.util.Date)>-><com.salesmanager.core.model.payments.Transaction: void setId(java.lang.Long)>
<synthetic.method.ShoppingCartRepositoryImpl: java.util.List findByCustomer(java.lang.Long)>-><com.salesmanager.core.model.shoppingcart.ShoppingCart: void <init>()>
<synthetic.method.CategoryRepositoryImpl: java.util.List findByDepthFilterByFeatured(java.lang.Integer,int,java.lang.Integer)>-><synthetic.method.datatable.CATEGORY: java.lang.String getcategoryimage()>
<synthetic.method.ManufacturerRepositoryImpl: java.util.List findByStore(java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.manufacturer.Manufacturer: void setImage(java.lang.String)>
<synthetic.method.ProductOptionSetRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><com.salesmanager.core.model.catalog.product.attribute.ProductOptionSet: void <init>()>
<synthetic.method.ProductAttributeRepositoryImpl: java.util.List findOptionsByCategoryLineage(java.lang.Integer,java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.PRODUCTATTRIBUTE: java.math.BigDecimal getproductattributeweight()>
<synthetic.method.ProductAttributeRepositoryImpl: com.salesmanager.core.model.catalog.product.attribute.ProductAttribute findOne(java.lang.Long)>-><com.salesmanager.core.model.catalog.product.attribute.ProductAttribute: void <init>()>
<synthetic.method.TransactionRepositoryImpl: java.util.List findByOrder(java.lang.Long)>-><com.salesmanager.core.model.payments.Transaction: void setAuditSection(com.salesmanager.core.model.common.audit.AuditSection)>
<synthetic.method.PageableProductOptionRepositoryImpl: org.springframework.data.domain.Page listOptions(int,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.PRODUCTOPTION: java.util.List getdescriptionslist()>
<synthetic.method.CustomerReviewRepositoryImpl: java.util.List findByReviewed(java.lang.Long)>-><synthetic.method.datatable.CUSTOMERREVIEW: java.util.Date getreviewdate()>
<synthetic.method.PageableMerchantRepositoryImpl: org.springframework.data.domain.Page listByGroup(java.lang.String,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.merchant.MerchantStore: void setStorecity(java.lang.String)>
<synthetic.method.CustomerReviewRepositoryImpl: com.salesmanager.core.model.customer.review.CustomerReview findByRevieweAndReviewed(java.lang.Long,java.lang.Long)>-><com.salesmanager.core.model.customer.review.CustomerReview: void <init>()>
<synthetic.method.PageContentRepositoryImpl: org.springframework.data.domain.Page findByContentType(com.salesmanager.core.model.content.ContentType,java.lang.Integer,org.springframework.data.domain.Pageable)>-><com.salesmanager.core.model.content.Content: void setContentPosition(com.salesmanager.core.model.content.ContentPosition)>
<synthetic.method.PageableCategoryRepositoryImpl: org.springframework.data.domain.Page listByStore(java.lang.Integer,java.lang.Integer,java.lang.String,org.springframework.data.domain.Pageable)>-><synthetic.method.datatable.CATEGORY: com.salesmanager.core.model.common.audit.AuditSection getauditsection()>
<synthetic.method.CustomerOptionRepositoryImpl: java.util.List findByStore(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.CUSTOMEROPTION: java.lang.Long getid()>
<synthetic.method.CustomerRepositoryImpl: java.util.List findByStore(int)>-><com.salesmanager.core.model.customer.Customer: void setCompany(java.lang.String)>
<synthetic.method.PermissionRepositoryImpl: java.util.List findByGroups(java.util.Set)>-><com.salesmanager.core.model.user.Permission: void <init>()>
