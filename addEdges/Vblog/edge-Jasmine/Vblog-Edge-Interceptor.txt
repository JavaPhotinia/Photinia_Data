<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean uploadImg(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.ArticleController$$InterceptorProxy: java.util.Map getArticleByState(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.User getUserById(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.UserController$$InterceptorProxy: void <init>()>-><org.sang.controller.UserController: void <init>()>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean loginError(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.UserController$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.sang.controller.UserController getUserController()>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean loginSuccess(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.User getUserById(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean loginPage(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean loginSuccess(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.LoginRegController: org.sang.bean.RespBean loginSuccess()>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.Article getArticleById(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.String currentUserEmail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.Article getArticleById(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.User getUserById(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.ArticleController$$InterceptorProxy: java.util.Map dataStatistics(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.ArticleController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean updateArticleState(java.lang.Long[],java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.ArticleController: org.sang.bean.RespBean updateArticleState(java.lang.Long[],java.lang.Integer)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean updateArticleState(java.lang.Long[],java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.admin.AdminController$$InterceptorProxy: org.sang.bean.RespBean updateArticleState(java.lang.Long[],java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.CategoryController$$InterceptorProxy: org.sang.bean.RespBean deleteById(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.CategoryController$$InterceptorProxy: java.lang.String getString()>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.Boolean isAdmin(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.Article getArticleById(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.CategoryController$$InterceptorProxy: java.util.List getAllCategories(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.CategoryController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.admin.AdminController$$InterceptorProxy: java.util.Map getArticleByStateByAdmin(java.lang.Integer,java.lang.Integer,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.String currentUserEmail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: java.util.List getUserByNickname(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.CategoryController$$InterceptorProxy: org.sang.bean.RespBean updateCate(org.sang.bean.Category,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.CategoryController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.sang.controller.CategoryController$$InterceptorProxy: org.sang.bean.RespBean deleteById(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean loginPage(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.sang.controller.admin.UserManaController getUserManaController()>
<org.sang.controller.CategoryController$$InterceptorProxy: java.util.List getAllCategories(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.Boolean isAdmin(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.UserController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: java.util.List getUserByNickname(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.admin.UserManaController$$InterceptorProxy: java.lang.String getString()>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: java.util.List getAllRole(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.admin.UserManaController: java.util.List getAllRole()>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean loginPage(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.Boolean isAdmin(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean uploadImg(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean loginError(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.admin.AdminController$$InterceptorProxy: org.sang.bean.RespBean updateArticleState(java.lang.Long[],java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.admin.AdminController: org.sang.bean.RespBean updateArticleState(java.lang.Long[],java.lang.Integer)>
<org.sang.controller.admin.AdminController$$InterceptorProxy: java.util.Map getArticleByStateByAdmin(java.lang.Integer,java.lang.Integer,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.UserController$$InterceptorProxy: org.sang.bean.RespBean updateUserEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.UserController: org.sang.bean.RespBean updateUserEmail(java.lang.String)>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.String currentUserEmail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.CategoryController$$InterceptorProxy: org.sang.bean.RespBean updateCate(org.sang.bean.Category,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean reg(org.sang.bean.User,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.LoginRegController: org.sang.bean.RespBean reg(org.sang.bean.User)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: java.util.List getUserByNickname(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean updateArticleState(java.lang.Long[],java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.RespBean updateUserEnabled(java.lang.Boolean,java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.admin.UserManaController: org.sang.bean.RespBean updateUserEnabled(java.lang.Boolean,java.lang.Long)>
<org.sang.controller.ArticleController$$InterceptorProxy: java.util.Map dataStatistics(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.LoginRegController$$InterceptorProxy: void <init>()>-><org.sang.controller.LoginRegController: void <init>()>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.Boolean isAdmin(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.UserController: java.lang.Boolean isAdmin()>
<org.sang.controller.CategoryController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean addNewArticle(org.sang.bean.Article,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean reg(org.sang.bean.User,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.sang.controller.ArticleController$$InterceptorProxy: java.util.Map getArticleByState(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.ArticleController: java.util.Map getArticleByState(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String)>
<org.sang.controller.CategoryController$$InterceptorProxy: java.util.List getAllCategories(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.CategoryController$$InterceptorProxy: org.sang.bean.RespBean deleteById(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean loginPage(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.LoginRegController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.User getUserById(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.admin.UserManaController: org.sang.bean.User getUserById(java.lang.Long)>
<org.sang.controller.CategoryController$$InterceptorProxy: org.sang.bean.RespBean updateCate(org.sang.bean.Category,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.String currentUserName(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean restoreArticle(java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.RespBean deleteUserById(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.ArticleController$$InterceptorProxy: java.util.Map getArticleByState(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.UserController$$InterceptorProxy: org.sang.bean.RespBean updateUserEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.UserController$$InterceptorProxy: java.lang.String getString()>
<org.sang.controller.CategoryController$$InterceptorProxy: org.sang.bean.RespBean addNewCate(org.sang.bean.Category,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.CategoryController: org.sang.bean.RespBean addNewCate(org.sang.bean.Category)>
<org.sang.controller.CategoryController$$InterceptorProxy: org.sang.bean.RespBean deleteById(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.CategoryController$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.sang.controller.CategoryController getCategoryController()>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.String currentUserEmail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.UserController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean loginSuccess(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.CategoryController$$InterceptorProxy: org.sang.bean.RespBean updateCate(org.sang.bean.Category,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.CategoryController: org.sang.bean.RespBean updateCate(org.sang.bean.Category)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean uploadImg(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.User getUserById(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.admin.UserManaController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean updateArticleState(java.lang.Long[],java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.UserController$$InterceptorProxy: org.sang.bean.RespBean updateUserEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.Long currentUserId(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean updateArticleState(java.lang.Long[],java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.ArticleController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.RespBean updateUserEnabled(java.lang.Boolean,java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.RespBean updateUserEnabled(java.lang.Boolean,java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.ArticleController$$InterceptorProxy: java.util.Map dataStatistics(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.ArticleController$$InterceptorProxy: java.util.Map getArticleByState(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.ArticleController$$InterceptorProxy: java.lang.String getString()>
<org.sang.controller.CategoryController$$InterceptorProxy: org.sang.bean.RespBean addNewCate(org.sang.bean.Category,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.CategoryController$$InterceptorProxy: org.sang.bean.RespBean addNewCate(org.sang.bean.Category,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.RespBean updateUserRoles(java.lang.Long[],java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.CategoryController$$InterceptorProxy: org.sang.bean.RespBean addNewCate(org.sang.bean.Category,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.CategoryController$$InterceptorProxy: void <init>()>-><org.sang.controller.CategoryController: void <init>()>
<org.sang.controller.UserController$$InterceptorProxy: org.sang.bean.RespBean updateUserEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.admin.AdminController$$InterceptorProxy: org.sang.bean.RespBean updateArticleState(java.lang.Long[],java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.sang.controller.UserController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean addNewArticle(org.sang.bean.Article,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean updateArticleState(java.lang.Long[],java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean loginPage(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.LoginRegController: org.sang.bean.RespBean loginPage()>
<org.sang.controller.CategoryController$$InterceptorProxy: org.sang.bean.RespBean deleteById(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.CategoryController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.UserController$$InterceptorProxy: org.sang.bean.RespBean updateUserEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.ArticleController$$InterceptorProxy: java.util.Map getArticleByState(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.String currentUserName(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.LoginRegController$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.sang.controller.LoginRegController getLoginRegController()>
<org.sang.controller.CategoryController$$InterceptorProxy: java.util.List getAllCategories(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: java.util.List getAllRole(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.String currentUserName(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.UserController: java.lang.String currentUserName()>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean restoreArticle(java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.Long currentUserId(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: java.util.List getUserByNickname(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean loginError(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.LoginRegController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean restoreArticle(java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.ArticleController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.ArticleController$$InterceptorProxy: java.util.Map dataStatistics(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.RespBean updateUserRoles(java.lang.Long[],java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean loginSuccess(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.LoginRegController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.ArticleController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean loginError(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.UserController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.Boolean isAdmin(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.Article getArticleById(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.ArticleController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.String currentUserName(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.UserController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.CategoryController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.Long currentUserId(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.admin.AdminController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.sang.controller.CategoryController$$InterceptorProxy: java.util.List getAllCategories(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.UserController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.sang.controller.admin.AdminController$$InterceptorProxy: java.util.Map getArticleByStateByAdmin(java.lang.Integer,java.lang.Integer,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.admin.AdminController$$InterceptorProxy: java.lang.String getString()>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean addNewArticle(org.sang.bean.Article,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.ArticleController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.Long currentUserId(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.UserController: java.lang.Long currentUserId()>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean reg(org.sang.bean.User,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.CategoryController$$InterceptorProxy: java.util.List getAllCategories(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.CategoryController: java.util.List getAllCategories()>
<org.sang.controller.ArticleController$$InterceptorProxy: void <init>()>-><org.sang.controller.ArticleController: void <init>()>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean loginError(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.LoginRegController: org.sang.bean.RespBean loginError()>
<org.sang.controller.ArticleController$$InterceptorProxy: java.util.Map getArticleByState(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.admin.AdminController$$InterceptorProxy: java.util.Map getArticleByStateByAdmin(java.lang.Integer,java.lang.Integer,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.admin.AdminController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.CategoryController$$InterceptorProxy: org.sang.bean.RespBean updateCate(org.sang.bean.Category,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.admin.AdminController$$InterceptorProxy: void <init>()>-><org.sang.controller.admin.AdminController: void <init>()>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean uploadImg(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.ArticleController: org.sang.bean.RespBean uploadImg(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile)>
<org.sang.controller.UserController$$InterceptorProxy: org.sang.bean.RespBean updateUserEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean restoreArticle(java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.ArticleController: org.sang.bean.RespBean restoreArticle(java.lang.Integer)>
<org.sang.controller.admin.AdminController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean loginSuccess(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.UserController$$InterceptorProxy: org.sang.bean.RespBean updateUserEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.UserController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: java.util.List getAllRole(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.UserController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean loginPage(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean reg(org.sang.bean.User,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.CategoryController$$InterceptorProxy: org.sang.bean.RespBean addNewCate(org.sang.bean.Category,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean restoreArticle(java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean loginSuccess(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.admin.AdminController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: java.util.List getAllRole(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: java.util.List getAllRole(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.admin.UserManaController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: java.util.List getUserByNickname(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.admin.UserManaController: java.util.List getUserByNickname(java.lang.String)>
<org.sang.controller.admin.AdminController$$InterceptorProxy: org.sang.bean.RespBean updateArticleState(java.lang.Long[],java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.Article getArticleById(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: java.util.List getUserByNickname(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.String currentUserName(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.CategoryController$$InterceptorProxy: org.sang.bean.RespBean addNewCate(org.sang.bean.Category,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.CategoryController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.ArticleController$$InterceptorProxy: java.util.Map dataStatistics(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.ArticleController: java.util.Map dataStatistics()>
<org.sang.controller.CategoryController$$InterceptorProxy: org.sang.bean.RespBean deleteById(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.admin.AdminController$$InterceptorProxy: java.util.Map getArticleByStateByAdmin(java.lang.Integer,java.lang.Integer,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.RespBean updateUserRoles(java.lang.Long[],java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.admin.UserManaController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.String currentUserEmail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.UserController: java.lang.String currentUserEmail()>
<org.sang.controller.admin.AdminController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.sang.controller.ArticleController$$InterceptorProxy: java.util.Map dataStatistics(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.RespBean updateUserEnabled(java.lang.Boolean,java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean uploadImg(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.RespBean updateUserRoles(java.lang.Long[],java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.admin.UserManaController: org.sang.bean.RespBean updateUserRoles(java.lang.Long[],java.lang.Long)>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.String currentUserEmail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.admin.AdminController$$InterceptorProxy: org.sang.bean.RespBean updateArticleState(java.lang.Long[],java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.RespBean deleteUserById(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.RespBean updateUserRoles(java.lang.Long[],java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.RespBean deleteUserById(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.admin.UserManaController: org.sang.bean.RespBean deleteUserById(java.lang.Long)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.RespBean updateUserEnabled(java.lang.Boolean,java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.RespBean updateUserEnabled(java.lang.Boolean,java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.admin.UserManaController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean addNewArticle(org.sang.bean.Article,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.Long currentUserId(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.UserController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.admin.AdminController$$InterceptorProxy: java.util.Map getArticleByStateByAdmin(java.lang.Integer,java.lang.Integer,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.admin.AdminController: java.util.Map getArticleByStateByAdmin(java.lang.Integer,java.lang.Integer,java.lang.String)>
<org.sang.controller.admin.AdminController$$InterceptorProxy: java.util.Map getArticleByStateByAdmin(java.lang.Integer,java.lang.Integer,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean addNewArticle(org.sang.bean.Article,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.ArticleController: org.sang.bean.RespBean addNewArticle(org.sang.bean.Article)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean restoreArticle(java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.CategoryController$$InterceptorProxy: org.sang.bean.RespBean updateCate(org.sang.bean.Category,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.CategoryController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: void <init>()>-><org.sang.controller.admin.UserManaController: void <init>()>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: java.util.List getAllRole(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean reg(org.sang.bean.User,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.RespBean deleteUserById(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.admin.UserManaController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean loginError(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.RespBean deleteUserById(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.Article getArticleById(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.ArticleController: org.sang.bean.Article getArticleById(java.lang.Long)>
<org.sang.controller.ArticleController$$InterceptorProxy: java.util.Map getArticleByState(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.ArticleController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.Long currentUserId(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.User getUserById(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.sang.controller.admin.AdminController$$InterceptorProxy: org.sang.bean.RespBean updateArticleState(java.lang.Long[],java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.admin.AdminController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.String currentUserName(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean uploadImg(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.ArticleController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.UserController$$InterceptorProxy: java.lang.Boolean isAdmin(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.sang.controller.LoginRegController$$InterceptorProxy: org.sang.bean.RespBean reg(org.sang.bean.User,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.LoginRegController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.RespBean deleteUserById(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: java.util.List getUserByNickname(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.admin.UserManaController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.sang.controller.admin.AdminController$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.sang.controller.admin.AdminController getAdminController()>
<org.sang.controller.CategoryController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.sang.controller.ArticleController$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.sang.controller.ArticleController getArticleController()>
<org.sang.controller.ArticleController$$InterceptorProxy: org.sang.bean.RespBean addNewArticle(org.sang.bean.Article,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.admin.UserManaController$$InterceptorProxy: org.sang.bean.RespBean updateUserRoles(java.lang.Long[],java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.sang.controller.CategoryController$$InterceptorProxy: org.sang.bean.RespBean deleteById(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.sang.controller.CategoryController: org.sang.bean.RespBean deleteById(java.lang.String)>
<org.sang.controller.ArticleController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
