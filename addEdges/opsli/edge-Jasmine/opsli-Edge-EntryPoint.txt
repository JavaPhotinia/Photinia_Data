<org.opsli.modulars.tools.common.CommonRestController: void <init>(org.opsli.modulars.tools.common.bean.VerificationCodeBean)>-><java.lang.Object: void <init>()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.common.exception.ServiceException: java.lang.String getErrorMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.opsli.modulars.system.dict.web.DictRestController: org.opsli.api.base.result.ResultWrapper update(org.opsli.api.wrapper.system.dict.DictModel)>-><org.opsli.api.wrapper.system.user.UserModel: java.lang.String getUsername()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper getPublicKey()>-><org.opsli.core.utils.OptionsUtil: org.opsli.api.wrapper.system.options.OptionsModel getOptionByCode(org.opsli.common.enums.OptionsType)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.tools.common.OperationAuthRestController: void <init>(org.opsli.modulars.tools.common.bean.VerificationCodeBean)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.JsonMappingException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.springframework.core.NestedIOException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.gentest.carinfo.web.TestCarRestController: void <init>()>
<org.opsli.modulars.system.monitor.web.MonitorController: org.opsli.api.base.result.ResultWrapper getSystemInfo()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.awt.HeadlessException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.yaml.snakeyaml.error.MarkedYAMLException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<org.opsli.modulars.system.monitor.web.MonitorController: org.opsli.api.base.result.ResultWrapper getCpuInfo()>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getSuccessResultWrapper(java.lang.Object)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.opsli.modulars.system.org.web.SysOrgRestController: org.opsli.api.base.result.ResultWrapper del(java.lang.String)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getSuccessResultWrapperByMsg(java.lang.String)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.opsli.modulars.system.login.web.LoginByAccountRestController: void captcha(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.servlet.http.HttpServlet$NoBodyResponse: javax.servlet.ServletOutputStream getOutputStream()>
<org.opsli.modulars.system.user.web.UserRestController: org.opsli.api.base.result.ResultWrapper updatePassword(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.api.base.warpper.ApiWrapper: java.lang.String getId()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.springframework.context.expression.MapAccessor$MapAccessException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><org.opsli.api.wrapper.system.user.UserModel: java.lang.String getMobile()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><javassist.compiler.CompileError: java.lang.String getMessage()>
<org.opsli.modulars.system.menu.web.MenuRestController: java.util.List getBeanMapList(java.util.List,java.lang.String[])>-><com.google.common.collect.AbstractIterator: boolean hasNext()>
<org.opsli.modulars.system.user.web.UserRestController: org.opsli.api.base.result.ResultWrapper resetPasswordById(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.api.wrapper.system.options.OptionsModel: java.lang.String getOptionValue()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><org.springframework.cglib.core.ReflectUtils$6: java.lang.String getMessage()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><reactor.core.publisher.FluxOnAssembly$OnAssemblyException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><javassist.compiler.CompileError: java.lang.String getMessage()>
<org.opsli.modulars.tools.api.ApiController: void <init>()>-><java.lang.Object: void <init>()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.opsli.modulars.system.login.web.LoginByCodeRestController: void init(org.springframework.security.authentication.AuthenticationManager,org.opsli.modulars.system.login.handler.before.LoginCodeModelVerifyCodeBeforeHandler,org.opsli.modulars.system.login.handler.success.LoginCodeModelCreateAccessTokenHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessAfterVerifyHandler,org.opsli.modulars.system.login.handler.success.LoginClearErrorSuccessHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessLogHandler,org.opsli.plugins.security.handler.AuthServiceErrorHandler,org.opsli.modulars.system.login.handler.error.BizServiceErrorHandler,org.opsli.plugins.security.handler.OtherErrorHandler,org.opsli.plugins.security.handler.AuthErrorHandler,org.opsli.plugins.security.handler.SecurityErrorHandler)>-><org.opsli.plugins.security.handler.LoginHandler$Builder: org.opsli.plugins.security.handler.LoginHandler$Builder$AccessSuccessListenerBuilder accessSuccess()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><java.awt.HeadlessException: java.lang.String getMessage()>
<org.opsli.modulars.system.menu.web.MenuRestController: org.opsli.api.base.result.ResultWrapper getMenuAndPermsTree(java.lang.String)>-><org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getMenuAllListByUserId(java.lang.String,java.lang.String)>
<org.opsli.modulars.system.user.web.UserRestController: org.opsli.api.base.result.ResultWrapper updatePasswordByForget(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.api.base.warpper.ApiWrapper: java.lang.String getId()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.yaml.snakeyaml.error.MarkedYAMLException: java.lang.String getMessage()>
<org.opsli.modulars.system.login.web.LoginByCodeRestController: void init(org.springframework.security.authentication.AuthenticationManager,org.opsli.modulars.system.login.handler.before.LoginCodeModelVerifyCodeBeforeHandler,org.opsli.modulars.system.login.handler.success.LoginCodeModelCreateAccessTokenHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessAfterVerifyHandler,org.opsli.modulars.system.login.handler.success.LoginClearErrorSuccessHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessLogHandler,org.opsli.plugins.security.handler.AuthServiceErrorHandler,org.opsli.modulars.system.login.handler.error.BizServiceErrorHandler,org.opsli.plugins.security.handler.OtherErrorHandler,org.opsli.plugins.security.handler.AuthErrorHandler,org.opsli.plugins.security.handler.SecurityErrorHandler)>-><org.opsli.plugins.security.handler.LoginHandler$Builder$AccessDeniedListenerBuilder: org.opsli.plugins.security.handler.LoginHandler$Builder$AccessDeniedListenerBuilder addListener(org.opsli.plugins.security.handler.LoginAccessDeniedListener)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.logs.web.LoginLogsRestController: void <init>()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getErrorResultWrapper()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><java.io.WriteAbortedException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><com.fasterxml.jackson.databind.JsonMappingException: java.lang.String getMessage()>
<org.opsli.modulars.system.login.web.LoginByCodeRestController: void login(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.plugins.security.handler.LoginHandler: void login(java.lang.Object,java.util.function.Function)>
<org.opsli.modulars.system.menu.web.MenuRestController: java.util.List getBeanMapList(java.util.List,java.lang.String[])>-><org.springframework.http.server.reactive.TomcatHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><java.nio.file.FileSystemException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><jdk.internal.org.xml.sax.SAXException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.opsli.modulars.system.dict.web.DictRestController: org.opsli.api.base.result.ResultWrapper del(java.lang.String)>-><org.opsli.api.wrapper.system.user.UserModel: java.lang.String getUsername()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getSuccessResultWrapperByMsg(java.lang.String)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><java.awt.HeadlessException: java.lang.String getMessage()>
<org.opsli.core.base.controller.BaseRestController: java.util.List handleTreeHasChildren(java.util.List,java.util.function.Function)>-><org.springframework.http.server.reactive.TomcatHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.opsli.modulars.system.login.web.LoginByCodeRestController: void init(org.springframework.security.authentication.AuthenticationManager,org.opsli.modulars.system.login.handler.before.LoginCodeModelVerifyCodeBeforeHandler,org.opsli.modulars.system.login.handler.success.LoginCodeModelCreateAccessTokenHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessAfterVerifyHandler,org.opsli.modulars.system.login.handler.success.LoginClearErrorSuccessHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessLogHandler,org.opsli.plugins.security.handler.AuthServiceErrorHandler,org.opsli.modulars.system.login.handler.error.BizServiceErrorHandler,org.opsli.plugins.security.handler.OtherErrorHandler,org.opsli.plugins.security.handler.AuthErrorHandler,org.opsli.plugins.security.handler.SecurityErrorHandler)>-><org.opsli.plugins.security.handler.LoginHandler$Builder: org.opsli.plugins.security.handler.LoginHandler$Builder initLoginModelClass(java.lang.Class)>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><org.springframework.context.expression.MapAccessor$MapAccessException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.gentest.user.web.TestUserRestController: void <init>()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><reactor.core.publisher.FluxOnAssembly$OnAssemblyException: java.lang.String getMessage()>
<org.opsli.core.base.controller.BaseRestController: void handleTreeHasChildren(java.util.List,java.util.Map)>-><com.google.common.collect.AbstractIterator: boolean hasNext()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper getPublicKey()>-><org.opsli.api.wrapper.system.options.OptionsModel: java.lang.String getOptionValue()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><org.opsli.common.enums.VerificationTypeEnum: java.util.Optional getEnumByType(java.lang.String)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.awt.HeadlessException: java.lang.String getMessage()>
<org.opsli.modulars.system.org.web.SysOrgRestController: org.opsli.api.base.result.ResultWrapper insert(org.opsli.api.wrapper.system.org.SysOrgModel)>-><org.opsli.api.wrapper.system.org.SysOrgModel: java.lang.String getParentId()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getSuccessResultWrapper(java.lang.Object)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><org.springframework.core.NestedIOException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.io.InvalidClassException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><org.opsli.core.utils.VerificationCodeUtil: java.lang.String checkEmailCodeToCreateCertificate(java.lang.String,java.lang.String,java.lang.String)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.opsli.modulars.system.menu.web.MenuRestController: org.opsli.api.base.result.ResultWrapper getMenuAndPermsTree(java.lang.String)>-><java.util.Collections$SingletonList: boolean removeIf(java.util.function.Predicate)>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: org.opsli.api.base.result.ResultWrapper setPermsV2(org.opsli.api.wrapper.system.role.RoleMenuRefModel)>-><org.opsli.api.wrapper.system.role.RoleMenuRefModel: java.lang.String getRoleId()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getSuccessResultWrapperByMsg(java.lang.String)>
<org.opsli.modulars.system.org.web.SysOrgRestController: org.opsli.api.base.result.ResultWrapper delAll(java.lang.String)>-><org.opsli.core.base.controller.BaseRestController: void demoError()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.opsli.modulars.system.area.web.SysAreaRestController: org.opsli.api.base.result.ResultWrapper insert(org.opsli.api.wrapper.system.area.SysAreaModel)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getSuccessResultWrapperByMsg(java.lang.String)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getCustomResultWrapper(int,java.lang.String)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><java.io.WriteAbortedException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.lang.Integer: int intValue()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper getPublicKey()>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getErrorResultWrapper()>
<org.opsli.modulars.system.area.web.SysAreaRestController: org.opsli.api.base.result.ResultWrapper update(org.opsli.api.wrapper.system.area.SysAreaModel)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getSuccessResultWrapperByMsg(java.lang.String)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><java.lang.Integer: int intValue()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.options.web.SysOptionsRestController: void <init>()>
<org.opsli.modulars.system.menu.web.MenuRestController: org.opsli.api.base.result.ResultWrapper getMenuAndPermsTree(java.lang.String)>-><java.util.Vector: boolean removeIf(java.util.function.Predicate)>
<org.opsli.modulars.generator.table.web.GenTableRestController: org.opsli.api.base.result.ResultWrapper sync(java.lang.String)>-><org.opsli.modulars.generator.column.service.impl.GenTableColumnServiceImpl: java.util.List getByTableId(java.lang.String)>
<org.opsli.modulars.system.area.web.SysAreaRestController: org.opsli.api.base.result.ResultWrapper del(java.lang.String)>-><org.opsli.core.base.controller.BaseRestController: void demoError()>
<org.opsli.modulars.tools.common.CommonRestController: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.opsli.modulars.generator.logs.web.GenLogsRestController: void create(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.opsli.modulars.system.menu.web.MenuRestController: org.opsli.api.base.result.ResultWrapper getMenuAndPermsTree(java.lang.String)>-><org.opsli.api.base.warpper.ApiWrapper: java.lang.String getId()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper setMsg(java.lang.String)>
<org.opsli.modulars.system.org.web.SysOrgRestController: org.opsli.api.base.result.ResultWrapper update(org.opsli.api.wrapper.system.org.SysOrgModel)>-><org.opsli.core.base.controller.BaseRestController: void demoError()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><org.springframework.core.NestedIOException: java.lang.String getMessage()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.opsli.modulars.system.menu.web.MenuRestController: org.opsli.api.base.result.ResultWrapper findMenuTree()>-><org.opsli.api.base.warpper.ApiWrapper: java.lang.String getId()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><org.opsli.common.enums.VerificationTypeEnum: java.util.Optional getEnumByType(java.lang.String)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><jdk.internal.org.xml.sax.SAXException: java.lang.String getMessage()>
<org.opsli.modulars.system.monitor.web.MonitorController: org.opsli.api.base.result.ResultWrapper getJvmInfo()>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getSuccessResultWrapper(java.lang.Object)>
<org.opsli.modulars.system.org.web.SysOrgRestController: org.opsli.api.base.result.ResultWrapper insert(org.opsli.api.wrapper.system.org.SysOrgModel)>-><org.opsli.common.exception.ServiceException: void <init>(org.opsli.common.base.msg.BaseMsg)>
<org.opsli.modulars.system.area.web.SysAreaRestController: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.opsli.modulars.system.area.web.SysAreaRestController: org.opsli.api.base.result.ResultWrapper delAll(java.lang.String)>-><org.opsli.core.base.controller.BaseRestController: void demoError()>
<org.opsli.modulars.system.org.web.SysOrgRestController: org.opsli.api.base.result.ResultWrapper insert(org.opsli.api.wrapper.system.org.SysOrgModel)>-><org.opsli.api.wrapper.system.role.RoleModel: java.lang.String getDataScope()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><org.springframework.context.expression.MapAccessor$MapAccessException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.generator.template.web.GenTemplateRestController: void <init>()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><java.lang.Integer: int intValue()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><javassist.compiler.CompileError: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: void <init>(org.opsli.modulars.tools.common.bean.VerificationCodeBean)>-><synthetic.method.SingletonFactory: org.opsli.modulars.tools.common.bean.VerificationCodeBean getVerificationCodeBean()>
<org.opsli.modulars.generator.table.web.GenTableRestController: void <init>()>-><synthetic.method.SingletonFactory: org.opsli.modulars.generator.column.service.impl.GenTableColumnServiceImpl getGenTableColumnServiceImpl()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.opsli.core.base.controller.BaseRestController: java.util.List handleTreeHasChildren(java.util.List,java.util.function.Function)>-><org.springframework.http.server.reactive.TomcatHeadersAdapter$HeaderNamesIterator: java.lang.Object next()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><org.yaml.snakeyaml.error.MarkedYAMLException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>
<org.opsli.modulars.system.org.web.SysOrgRestController: org.opsli.api.base.result.ResultWrapper insert(org.opsli.api.wrapper.system.org.SysOrgModel)>-><org.opsli.core.utils.UserUtil: org.opsli.api.wrapper.system.role.RoleModel getUserDefRoleByUserId(java.lang.String)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.common.exception.ServiceException lambda$createMobileCode$1()>-><org.opsli.common.exception.ServiceException: void <init>(org.opsli.common.base.msg.BaseMsg)>
<org.opsli.modulars.system.user.web.UserRestController: org.opsli.api.base.result.ResultWrapper switchTenant(java.lang.String)>-><org.opsli.api.wrapper.system.user.UserModel: void setSwitchTenantUserId(java.lang.String)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><com.fasterxml.jackson.core.JsonProcessingException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><jdk.internal.org.xml.sax.SAXException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.tools.oss.web.OssRestController: void <init>()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><org.springframework.core.NestedCheckedException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><reactor.core.publisher.FluxOnAssembly$OnAssemblyException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><javassist.compiler.CompileError: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><jdk.internal.org.xml.sax.SAXException: java.lang.String getMessage()>
<org.opsli.modulars.system.login.web.LoginByCodeRestController: void init(org.springframework.security.authentication.AuthenticationManager,org.opsli.modulars.system.login.handler.before.LoginCodeModelVerifyCodeBeforeHandler,org.opsli.modulars.system.login.handler.success.LoginCodeModelCreateAccessTokenHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessAfterVerifyHandler,org.opsli.modulars.system.login.handler.success.LoginClearErrorSuccessHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessLogHandler,org.opsli.plugins.security.handler.AuthServiceErrorHandler,org.opsli.modulars.system.login.handler.error.BizServiceErrorHandler,org.opsli.plugins.security.handler.OtherErrorHandler,org.opsli.plugins.security.handler.AuthErrorHandler,org.opsli.plugins.security.handler.SecurityErrorHandler)>-><org.opsli.plugins.security.handler.LoginHandler$Builder: org.opsli.plugins.security.handler.LoginHandler$Builder$BeforeListenerBuilder before()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><org.opsli.common.exception.ServiceException: java.lang.String getErrorMessage()>
<org.opsli.modulars.system.dict.web.DictRestController: org.opsli.api.base.result.ResultWrapper delAll(java.lang.String)>-><org.opsli.api.wrapper.system.user.UserModel: java.lang.String getUsername()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><org.springframework.core.NestedCheckedException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: void <init>(org.opsli.modulars.tools.common.bean.VerificationCodeBean)>-><synthetic.method.SingletonFactory: org.opsli.modulars.tools.common.bean.VerificationCodeBean getVerificationCodeBean()>
<org.opsli.modulars.system.org.web.SysOrgRestController: org.opsli.api.base.result.ResultWrapper insert(org.opsli.api.wrapper.system.org.SysOrgModel)>-><org.apache.commons.lang3.StringUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<org.opsli.core.base.controller.BaseRestController: void handleTreeHasChildren(java.util.List,java.util.Map)>-><org.springframework.http.server.reactive.TomcatHeadersAdapter$HeaderNamesIterator: java.lang.Object next()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><reactor.core.publisher.FluxOnAssembly$OnAssemblyException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.org.web.SysOrgRestController: void <init>()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.opsli.modulars.system.area.web.SysAreaRestController: org.opsli.api.base.result.ResultWrapper delAll(java.lang.String)>-><cn.hutool.core.convert.Convert: java.lang.String[] toStrArray(java.lang.Object)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><org.opsli.modulars.tools.common.bean.VerificationCodeBean: void sendEmailCode(java.lang.String,java.lang.String)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.api.base.encrypt.EncryptModel: java.lang.String getEncryptData()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><com.fasterxml.jackson.core.JsonProcessingException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><javassist.compiler.CompileError: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><org.opsli.common.exception.ServiceException: java.lang.Integer getCode()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.common.exception.ServiceException lambda$createEmailCode$0()>-><org.opsli.common.exception.ServiceException: void <init>(org.opsli.common.base.msg.BaseMsg)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.springframework.cglib.core.ReflectUtils$6: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><java.awt.HeadlessException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><javassist.compiler.CompileError: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><org.opsli.core.utils.UserUtil: org.opsli.api.wrapper.system.user.UserModel getUserBySource()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.common.exception.ServiceException: java.lang.Integer getCode()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.springframework.core.NestedCheckedException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><org.opsli.common.exception.ServiceException: java.lang.String getErrorMessage()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: void <init>()>-><synthetic.method.SingletonFactory: org.opsli.core.autoconfigure.properties.GlobalProperties getGlobalProperties()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.common.utils.WrapperUtil: java.lang.Object transformInstance(java.lang.Object,java.lang.Class)>
<org.opsli.modulars.system.menu.web.MenuRestController: java.util.List getBeanMapList(java.util.List,java.lang.String[])>-><org.springframework.http.server.reactive.TomcatHeadersAdapter$HeaderNamesIterator: boolean hasNext()>
<org.opsli.modulars.system.login.web.LoginByCodeRestController: void init(org.springframework.security.authentication.AuthenticationManager,org.opsli.modulars.system.login.handler.before.LoginCodeModelVerifyCodeBeforeHandler,org.opsli.modulars.system.login.handler.success.LoginCodeModelCreateAccessTokenHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessAfterVerifyHandler,org.opsli.modulars.system.login.handler.success.LoginClearErrorSuccessHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessLogHandler,org.opsli.plugins.security.handler.AuthServiceErrorHandler,org.opsli.modulars.system.login.handler.error.BizServiceErrorHandler,org.opsli.plugins.security.handler.OtherErrorHandler,org.opsli.plugins.security.handler.AuthErrorHandler,org.opsli.plugins.security.handler.SecurityErrorHandler)>-><org.opsli.plugins.security.handler.LoginHandler$Builder$BeforeListenerBuilder: org.opsli.plugins.security.handler.LoginHandler$Builder and()>
<org.opsli.modulars.system.area.web.SysAreaRestController: org.opsli.api.base.result.ResultWrapper delAll(java.lang.String)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getSuccessResultWrapperByMsg(java.lang.String)>
<org.opsli.modulars.system.login.web.LoginByCodeRestController: void init(org.springframework.security.authentication.AuthenticationManager,org.opsli.modulars.system.login.handler.before.LoginCodeModelVerifyCodeBeforeHandler,org.opsli.modulars.system.login.handler.success.LoginCodeModelCreateAccessTokenHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessAfterVerifyHandler,org.opsli.modulars.system.login.handler.success.LoginClearErrorSuccessHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessLogHandler,org.opsli.plugins.security.handler.AuthServiceErrorHandler,org.opsli.modulars.system.login.handler.error.BizServiceErrorHandler,org.opsli.plugins.security.handler.OtherErrorHandler,org.opsli.plugins.security.handler.AuthErrorHandler,org.opsli.plugins.security.handler.SecurityErrorHandler)>-><org.opsli.plugins.security.handler.LoginHandler$Builder: org.opsli.plugins.security.handler.LoginHandler$Builder initAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getCustomResultWrapper(int,java.lang.String)>
<org.opsli.modulars.system.menu.web.MenuRestController: org.opsli.api.base.result.ResultWrapper getMenuAndPermsTree(java.lang.String)>-><java.util.ArrayList: boolean removeIf(java.util.function.Predicate)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.springframework.context.expression.MapAccessor$MapAccessException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><java.lang.Integer: int intValue()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: org.opsli.api.base.result.ResultWrapper setPermsV2(org.opsli.api.wrapper.system.role.RoleMenuRefModel)>-><org.opsli.modulars.system.role.web.RoleMenuRefRestController: void demoError()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><org.springframework.cglib.core.ReflectUtils$6: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.common.exception.ServiceException lambda$createEmailCode$0()>-><org.opsli.common.exception.ServiceException: void <init>(org.opsli.common.base.msg.BaseMsg)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.opsli.modulars.system.user.web.UserRestController: org.opsli.api.base.result.ResultWrapper getInfoById(java.lang.String)>-><org.opsli.api.wrapper.system.user.UserModel: java.lang.String getUsername()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><org.opsli.core.utils.UserUtil: org.opsli.api.wrapper.system.user.UserModel getUser()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getSuccessResultWrapper(java.lang.Object)>
<org.opsli.modulars.system.dict.web.DictDetailRestController: org.opsli.api.base.result.ResultWrapper delAll(java.lang.String)>-><org.opsli.api.wrapper.system.user.UserModel: java.lang.String getUsername()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><org.opsli.core.utils.UserUtil: org.opsli.api.wrapper.system.user.UserModel getUser()>
<org.opsli.modulars.system.user.web.UserRestController: org.opsli.api.base.result.ResultWrapper updateAvatar(org.opsli.api.wrapper.system.user.UserAvatarModel)>-><org.opsli.api.base.warpper.ApiWrapper: java.lang.String getId()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><jdk.internal.org.xml.sax.SAXException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><org.springframework.core.NestedIOException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><java.io.InvalidClassException: java.lang.String getMessage()>
<org.opsli.modulars.system.dict.web.DictDetailRestController: org.opsli.api.base.result.ResultWrapper update(org.opsli.api.wrapper.system.dict.DictDetailModel)>-><org.opsli.api.wrapper.system.user.UserModel: java.lang.String getUsername()>
<org.opsli.modulars.system.monitor.web.MonitorController: org.opsli.api.base.result.ResultWrapper getSystemInfo()>-><org.opsli.core.utils.SystemInfoUtil: cn.hutool.system.oshi.CpuInfo getCpuInfo()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getErrorResultWrapper()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getSuccessResultWrapperByMsg(java.lang.String)>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><java.io.InvalidClassException: java.lang.String getMessage()>
<org.opsli.modulars.system.monitor.web.MonitorController: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getCustomResultWrapper(int,java.lang.String)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<org.opsli.modulars.system.login.web.LoginByCodeRestController: void init(org.springframework.security.authentication.AuthenticationManager,org.opsli.modulars.system.login.handler.before.LoginCodeModelVerifyCodeBeforeHandler,org.opsli.modulars.system.login.handler.success.LoginCodeModelCreateAccessTokenHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessAfterVerifyHandler,org.opsli.modulars.system.login.handler.success.LoginClearErrorSuccessHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessLogHandler,org.opsli.plugins.security.handler.AuthServiceErrorHandler,org.opsli.modulars.system.login.handler.error.BizServiceErrorHandler,org.opsli.plugins.security.handler.OtherErrorHandler,org.opsli.plugins.security.handler.AuthErrorHandler,org.opsli.plugins.security.handler.SecurityErrorHandler)>-><org.opsli.plugins.security.handler.LoginHandler$Builder$AccessDeniedListenerBuilder: org.opsli.plugins.security.handler.LoginHandler$Builder and()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><org.opsli.common.enums.VerificationTypeEnum: java.util.Optional getEnumByType(java.lang.String)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.user.web.UserRestController: void <init>()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><org.opsli.common.exception.ServiceException: java.lang.String getErrorMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getErrorResultWrapper()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.opsli.modulars.system.user.web.UserRestController: org.opsli.api.base.result.ResultWrapper switchTenant(java.lang.String)>-><org.opsli.api.wrapper.system.user.UserModel: void setSwitchTenantId(java.lang.String)>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.opsli.modulars.system.org.web.SysOrgRestController: org.opsli.api.base.result.ResultWrapper delAll(java.lang.String)>-><cn.hutool.core.convert.Convert: java.lang.String[] toStrArray(java.lang.Object)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><java.io.InvalidClassException: java.lang.String getMessage()>
<org.opsli.modulars.system.login.web.LoginByCodeRestController: void init(org.springframework.security.authentication.AuthenticationManager,org.opsli.modulars.system.login.handler.before.LoginCodeModelVerifyCodeBeforeHandler,org.opsli.modulars.system.login.handler.success.LoginCodeModelCreateAccessTokenHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessAfterVerifyHandler,org.opsli.modulars.system.login.handler.success.LoginClearErrorSuccessHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessLogHandler,org.opsli.plugins.security.handler.AuthServiceErrorHandler,org.opsli.modulars.system.login.handler.error.BizServiceErrorHandler,org.opsli.plugins.security.handler.OtherErrorHandler,org.opsli.plugins.security.handler.AuthErrorHandler,org.opsli.plugins.security.handler.SecurityErrorHandler)>-><org.opsli.plugins.security.handler.LoginHandler$Builder: void <init>()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><com.fasterxml.jackson.core.JsonProcessingException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: void demoError()>-><org.apache.commons.lang3.StringUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><com.fasterxml.jackson.databind.JsonMappingException: java.lang.String getMessage()>
<org.opsli.modulars.system.user.web.UserRestController: org.opsli.api.base.result.ResultWrapper switchOneself()>-><org.opsli.api.wrapper.system.user.UserModel: java.lang.String getEnableSwitchTenant()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><java.nio.file.FileSystemException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.generator.template.web.GenTemplateDetailRestController: void <init>()>
<org.opsli.modulars.system.user.web.UserRestController: org.opsli.api.base.result.ResultWrapper getInfoById(java.lang.String)>-><org.opsli.api.base.warpper.ApiWrapper: java.lang.String getId()>
<org.opsli.modulars.system.menu.web.MenuRestController: java.util.List getBeanMapList(java.util.List,java.lang.String[])>-><org.springframework.http.server.reactive.TomcatHeadersAdapter$EntryIterator: boolean hasNext()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: void <init>()>-><java.lang.Object: void <init>()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><org.opsli.common.exception.ServiceException: java.lang.String getErrorMessage()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: void demoError()>-><org.opsli.core.autoconfigure.properties.GlobalProperties: boolean isEnableDemo()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>
<org.opsli.modulars.system.org.web.SysOrgRestController: org.opsli.api.base.result.ResultWrapper insert(org.opsli.api.wrapper.system.org.SysOrgModel)>-><org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.opsli.modulars.system.user.web.UserRestController: org.opsli.api.base.result.ResultWrapper switchTenant(java.lang.String)>-><org.opsli.api.wrapper.system.user.UserModel: java.lang.String getEnableSwitchTenant()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.springframework.cglib.core.ReflectUtils$6: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><org.opsli.common.exception.ServiceException: java.lang.Integer getCode()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><org.springframework.core.NestedIOException: java.lang.String getMessage()>
<org.opsli.modulars.system.menu.web.MenuRestController: java.util.List getBeanMapList(java.util.List,java.lang.String[])>-><org.springframework.http.server.reactive.TomcatHeadersAdapter$HeaderNamesIterator: java.lang.Object next()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><com.fasterxml.jackson.core.JsonProcessingException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><org.opsli.core.utils.UserUtil: org.opsli.api.wrapper.system.user.UserModel getUserBySource()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.opsli.modulars.system.login.web.LoginByCodeRestController: void init(org.springframework.security.authentication.AuthenticationManager,org.opsli.modulars.system.login.handler.before.LoginCodeModelVerifyCodeBeforeHandler,org.opsli.modulars.system.login.handler.success.LoginCodeModelCreateAccessTokenHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessAfterVerifyHandler,org.opsli.modulars.system.login.handler.success.LoginClearErrorSuccessHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessLogHandler,org.opsli.plugins.security.handler.AuthServiceErrorHandler,org.opsli.modulars.system.login.handler.error.BizServiceErrorHandler,org.opsli.plugins.security.handler.OtherErrorHandler,org.opsli.plugins.security.handler.AuthErrorHandler,org.opsli.plugins.security.handler.SecurityErrorHandler)>-><org.opsli.plugins.security.handler.LoginHandler$Builder: org.opsli.plugins.security.handler.LoginHandler build()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.opsli.modulars.tools.email.web.EmailRestController: void <init>()>-><java.lang.Object: void <init>()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.opsli.modulars.system.menu.web.MenuRestController: void <init>()>-><synthetic.method.SingletonFactory: org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl getUserRoleRefServiceImpl()>
<org.opsli.modulars.system.login.web.LoginByCodeRestController: void init(org.springframework.security.authentication.AuthenticationManager,org.opsli.modulars.system.login.handler.before.LoginCodeModelVerifyCodeBeforeHandler,org.opsli.modulars.system.login.handler.success.LoginCodeModelCreateAccessTokenHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessAfterVerifyHandler,org.opsli.modulars.system.login.handler.success.LoginClearErrorSuccessHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessLogHandler,org.opsli.plugins.security.handler.AuthServiceErrorHandler,org.opsli.modulars.system.login.handler.error.BizServiceErrorHandler,org.opsli.plugins.security.handler.OtherErrorHandler,org.opsli.plugins.security.handler.AuthErrorHandler,org.opsli.plugins.security.handler.SecurityErrorHandler)>-><org.opsli.plugins.security.handler.LoginHandler$Builder: org.opsli.plugins.security.handler.LoginHandler$Builder$AccessDeniedListenerBuilder accessDenied()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.opsli.core.base.controller.BaseRestController: java.util.List handleTreeHasChildren(java.util.List,java.util.function.Function)>-><com.google.common.collect.AbstractIterator: java.lang.Object next()>
<org.opsli.modulars.system.monitor.web.MonitorController: org.opsli.api.base.result.ResultWrapper getSystemInfo()>-><org.opsli.core.utils.SystemInfoUtil: org.opsli.core.utils.SystemInfoUtil$JvmInfo getJvmInfo()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><javassist.compiler.CompileError: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.io.InvalidClassException: java.lang.String getMessage()>
<org.opsli.modulars.system.monitor.web.MonitorController: org.opsli.api.base.result.ResultWrapper getMemInfo()>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getSuccessResultWrapper(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.monitor.web.MonitorController: void <init>()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.common.enums.VerificationTypeEnum: java.util.Optional getEnumByType(java.lang.String)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><org.springframework.context.expression.MapAccessor$MapAccessException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.springframework.core.NestedIOException: java.lang.String getMessage()>
<org.opsli.modulars.system.org.web.SysOrgRestController: org.opsli.api.base.result.ResultWrapper delAll(java.lang.String)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getSuccessResultWrapperByMsg(java.lang.String)>
<org.opsli.modulars.tools.email.web.EmailRestController: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.opsli.modulars.generator.table.web.GenTableRestController: org.opsli.api.base.result.ResultWrapper get(org.opsli.modulars.generator.table.wrapper.GenTableModel)>-><org.opsli.modulars.generator.column.service.impl.GenTableColumnServiceImpl: java.util.List getByTableId(java.lang.String)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><java.nio.file.FileSystemException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.core.utils.ValidatorUtil: void verify(java.lang.Object)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><java.nio.file.FileSystemException: java.lang.String getMessage()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>
<org.opsli.modulars.system.org.web.SysOrgRestController: org.opsli.api.base.result.ResultWrapper insert(org.opsli.api.wrapper.system.org.SysOrgModel)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><org.opsli.plugins.email.service.EmailPluginImpl: java.lang.String send(java.lang.String,java.lang.String,java.lang.String,org.opsli.plugins.email.conf.EmailConfig)>
<org.opsli.modulars.tools.email.web.EmailRestController: void <init>()>-><synthetic.method.SingletonFactory: org.opsli.plugins.email.service.EmailPluginImpl getEmailPluginImpl()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><org.springframework.context.expression.MapAccessor$MapAccessException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><org.opsli.common.exception.ServiceException: java.lang.Integer getCode()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><org.springframework.core.NestedCheckedException: java.lang.String getMessage()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: org.opsli.api.base.result.ResultWrapper setPermsV2(org.opsli.api.wrapper.system.role.RoleMenuRefModel)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper setMsg(java.lang.String)>
<org.opsli.modulars.system.user.web.UserRestController: org.opsli.api.base.result.ResultWrapper getInfo(javax.servlet.http.HttpServletRequest)>-><org.opsli.api.base.warpper.ApiWrapper: java.lang.String getId()>
<org.opsli.modulars.system.monitor.web.MonitorController: org.opsli.api.base.result.ResultWrapper getCpuInfo()>-><org.opsli.core.utils.SystemInfoUtil: cn.hutool.system.oshi.CpuInfo getCpuInfo()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: void demoError()>-><org.opsli.api.wrapper.system.user.UserModel: java.lang.String getUsername()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getCustomResultWrapper(int,java.lang.String)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><org.yaml.snakeyaml.error.MarkedYAMLException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.common.exception.ServiceException: java.lang.Integer getCode()>
<org.opsli.modulars.system.dict.web.DictDetailRestController: org.opsli.api.base.result.ResultWrapper del(java.lang.String)>-><org.opsli.api.wrapper.system.user.UserModel: java.lang.String getUsername()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.logs.web.LogsRestController: void <init>()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getSuccessResultWrapperByMsg(java.lang.String)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.modulars.tools.common.bean.VerificationCodeBean: void sendMobileCode(java.lang.String,java.lang.String)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.JsonMappingException: java.lang.String getMessage()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: org.opsli.api.base.result.ResultWrapper setPerms(org.opsli.api.wrapper.system.role.RoleMenuRefModel)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper setMsg(java.lang.String)>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><org.opsli.plugins.email.wrapper.EmailModel: java.lang.String getTo()>
<org.opsli.modulars.tools.common.OperationAuthRestController: void <init>(org.opsli.modulars.tools.common.bean.VerificationCodeBean)>-><java.lang.Object: void <init>()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><org.opsli.core.utils.VerificationCodeUtil: java.lang.String checkMobileCodeToCreateCertificate(java.lang.String,java.lang.String,java.lang.String)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>
<org.opsli.modulars.system.monitor.web.MonitorController: void <init>()>-><java.lang.Object: void <init>()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: org.opsli.api.base.result.ResultWrapper setPermsV2(org.opsli.api.wrapper.system.role.RoleMenuRefModel)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getErrorResultWrapper()>
<org.opsli.modulars.system.area.web.SysAreaRestController: org.opsli.api.base.result.ResultWrapper insert(org.opsli.api.wrapper.system.area.SysAreaModel)>-><org.opsli.core.base.controller.BaseRestController: void demoError()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><java.io.WriteAbortedException: java.lang.String getMessage()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><org.springframework.cglib.core.ReflectUtils$6: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.io.WriteAbortedException: java.lang.String getMessage()>
<org.opsli.modulars.system.user.web.UserRoleRefRestController: void <init>()>-><synthetic.method.SingletonFactory: org.opsli.core.autoconfigure.properties.GlobalProperties getGlobalProperties()>
<org.opsli.modulars.system.menu.web.MenuRestController: org.opsli.api.base.result.ResultWrapper getMenuAndPermsTree(java.lang.String)>-><java.util.Collection: boolean removeIf(java.util.function.Predicate)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.opsli.modulars.system.monitor.web.MonitorController: org.opsli.api.base.result.ResultWrapper getSystemInfo()>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getSuccessResultWrapper(java.lang.Object)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><com.fasterxml.jackson.databind.JsonMappingException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.opsli.core.base.controller.BaseRestController: void handleTreeHasChildren(java.util.List,java.util.Map)>-><org.springframework.http.server.reactive.TomcatHeadersAdapter$HeaderNamesIterator: boolean hasNext()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><org.opsli.api.wrapper.system.user.UserModel: java.lang.String getEmail()>
<org.opsli.modulars.system.user.web.UserRestController: org.opsli.api.base.result.ResultWrapper switchOneself()>-><org.opsli.api.wrapper.system.user.UserModel: void setSwitchTenantId(java.lang.String)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.common.exception.ServiceException lambda$createMobileCode$2()>-><org.opsli.common.exception.ServiceException: void <init>(org.opsli.common.base.msg.BaseMsg)>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: org.opsli.api.base.result.ResultWrapper setPerms(org.opsli.api.wrapper.system.role.RoleMenuRefModel)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getSuccessResultWrapper()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><org.springframework.core.NestedCheckedException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.user.web.UserRoleRefRestController: void <init>()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.opsli.modulars.system.monitor.web.MonitorController: org.opsli.api.base.result.ResultWrapper getJvmInfo()>-><org.opsli.core.utils.SystemInfoUtil: org.opsli.core.utils.SystemInfoUtil$JvmInfo getJvmInfo()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.lang.Integer: int intValue()>
<org.opsli.modulars.system.monitor.web.MonitorController: org.opsli.api.base.result.ResultWrapper getSystemInfo()>-><org.opsli.core.utils.SystemInfoUtil: java.util.List getDiskInfo()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.dict.web.DictRestController: void <init>()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: org.opsli.api.base.result.ResultWrapper setPerms(org.opsli.api.wrapper.system.role.RoleMenuRefModel)>-><org.opsli.api.wrapper.system.role.RoleMenuRefModel: java.lang.String[] getPermsIds()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.test.web.TestRestController: void <init>()>
<org.opsli.core.base.controller.BaseRestController: java.util.List handleTreeHasChildren(java.util.List,java.util.function.Function)>-><org.springframework.http.server.reactive.TomcatHeadersAdapter$EntryIterator: boolean hasNext()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><com.fasterxml.jackson.databind.JsonMappingException: java.lang.String getMessage()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: org.opsli.api.base.result.ResultWrapper setPerms(org.opsli.api.wrapper.system.role.RoleMenuRefModel)>-><org.opsli.api.wrapper.system.role.RoleMenuRefModel: java.lang.String getRoleId()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getCustomResultWrapper(int,java.lang.String)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.user.web.UserOrgRefRestController: void <init>()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.common.exception.ServiceException lambda$checkMobileCode$3()>-><org.opsli.common.exception.ServiceException: void <init>(org.opsli.common.base.msg.BaseMsg)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><java.awt.HeadlessException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.springframework.core.NestedCheckedException: java.lang.String getMessage()>
<org.opsli.modulars.system.org.web.SysOrgRestController: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><org.springframework.cglib.core.ReflectUtils$6: java.lang.String getMessage()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><java.lang.StringBuilder: void <init>()>
<org.opsli.modulars.system.org.web.SysOrgRestController: org.opsli.api.base.result.ResultWrapper insert(org.opsli.api.wrapper.system.org.SysOrgModel)>-><org.opsli.api.base.warpper.ApiWrapper: java.lang.String getId()>
<org.opsli.modulars.tools.common.OperationAuthRestController: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.tenant.web.TenantRestController: void <init>()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><org.yaml.snakeyaml.error.MarkedYAMLException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><org.springframework.cglib.core.ReflectUtils$6: java.lang.String getMessage()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.opsli.modulars.system.monitor.web.MonitorController: org.opsli.api.base.result.ResultWrapper getSystemInfo()>-><org.opsli.core.utils.SystemInfoUtil: org.opsli.core.utils.SystemInfoUtil$MemoryInfo getMemoryInfo()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>
<org.opsli.modulars.system.menu.web.MenuRestController: org.opsli.api.base.result.ResultWrapper getMenuAndPermsTree(java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList: boolean removeIf(java.util.function.Predicate)>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><com.fasterxml.jackson.core.JsonProcessingException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><jdk.internal.org.xml.sax.SAXException: java.lang.String getMessage()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: void <init>()>-><synthetic.method.SingletonFactory: org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl getRoleMenuRefServiceImpl()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.opsli.modulars.system.login.web.LoginByCodeRestController: void init(org.springframework.security.authentication.AuthenticationManager,org.opsli.modulars.system.login.handler.before.LoginCodeModelVerifyCodeBeforeHandler,org.opsli.modulars.system.login.handler.success.LoginCodeModelCreateAccessTokenHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessAfterVerifyHandler,org.opsli.modulars.system.login.handler.success.LoginClearErrorSuccessHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessLogHandler,org.opsli.plugins.security.handler.AuthServiceErrorHandler,org.opsli.modulars.system.login.handler.error.BizServiceErrorHandler,org.opsli.plugins.security.handler.OtherErrorHandler,org.opsli.plugins.security.handler.AuthErrorHandler,org.opsli.plugins.security.handler.SecurityErrorHandler)>-><org.opsli.plugins.security.handler.LoginHandler$Builder$AccessSuccessListenerBuilder: org.opsli.plugins.security.handler.LoginHandler$Builder$AccessSuccessListenerBuilder addListener(org.opsli.plugins.security.handler.LoginAccessSuccessListener)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: org.opsli.api.base.result.ResultWrapper setPermsV2(org.opsli.api.wrapper.system.role.RoleMenuRefModel)>-><org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPermsV2(java.lang.String,java.lang.String[])>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.logs.web.OperationLogRestController: void <init>()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<org.opsli.modulars.system.menu.web.MenuRestController: org.opsli.api.base.result.ResultWrapper getMenuAndPermsTree(java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: boolean removeIf(java.util.function.Predicate)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><org.yaml.snakeyaml.error.MarkedYAMLException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.tools.searchhis.web.SearchHisRestController: void <init>()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><org.opsli.common.enums.VerificationTypeEnum: java.util.Optional getEnumByType(java.lang.String)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.io.WriteAbortedException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.generator.logs.web.GenLogsRestController: void <init>()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><org.opsli.api.wrapper.system.user.UserModel: java.lang.String getMobile()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><java.io.InvalidClassException: java.lang.String getMessage()>
<org.opsli.modulars.system.org.web.SysOrgRestController: org.opsli.api.base.result.ResultWrapper del(java.lang.String)>-><org.opsli.core.base.controller.BaseRestController: void demoError()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getErrorResultWrapper()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><com.fasterxml.jackson.core.JsonProcessingException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.core.utils.ValidatorUtil: void verify(java.lang.Object)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>
<org.opsli.modulars.system.menu.web.MenuRestController: org.opsli.api.base.result.ResultWrapper getMenuAndPermsTree(java.lang.String)>-><com.google.common.collect.ImmutableCollection: boolean removeIf(java.util.function.Predicate)>
<org.opsli.core.base.controller.BaseRestController: java.util.List handleTreeHasChildren(java.util.List,java.util.function.Function)>-><com.google.common.collect.AbstractIterator: boolean hasNext()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.opsli.modulars.system.user.web.UserRestController: org.opsli.api.base.result.ResultWrapper switchOneself()>-><org.opsli.api.wrapper.system.user.UserModel: void setSwitchTenantUserId(java.lang.String)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getErrorResultWrapper()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.opsli.modulars.system.area.web.SysAreaRestController: org.opsli.api.base.result.ResultWrapper update(org.opsli.api.wrapper.system.area.SysAreaModel)>-><org.opsli.core.base.controller.BaseRestController: void demoError()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: org.opsli.api.base.result.ResultWrapper setPerms(org.opsli.api.wrapper.system.role.RoleMenuRefModel)>-><org.opsli.modulars.system.role.web.RoleMenuRefRestController: void demoError()>
<org.opsli.modulars.system.org.web.SysOrgRestController: org.opsli.api.base.result.ResultWrapper update(org.opsli.api.wrapper.system.org.SysOrgModel)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getSuccessResultWrapperByMsg(java.lang.String)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getCustomResultWrapper(int,java.lang.String)>
<org.opsli.modulars.system.monitor.web.MonitorController: org.opsli.api.base.result.ResultWrapper getSystemInfo()>-><org.opsli.core.utils.SystemInfoUtil: org.opsli.core.utils.SystemInfoUtil$SysInfo getSysInfo()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.common.exception.ServiceException: java.lang.String getErrorMessage()>
<org.opsli.core.base.controller.BaseRestController: void handleTreeHasChildren(java.util.List,java.util.Map)>-><org.springframework.http.server.reactive.TomcatHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><org.yaml.snakeyaml.error.MarkedYAMLException: java.lang.String getMessage()>
<org.opsli.modulars.system.user.web.UserRoleRefRestController: void <init>()>-><synthetic.method.SingletonFactory: org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl getUserRoleRefServiceImpl()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.opsli.modulars.system.login.web.LoginByCodeRestController: void init(org.springframework.security.authentication.AuthenticationManager,org.opsli.modulars.system.login.handler.before.LoginCodeModelVerifyCodeBeforeHandler,org.opsli.modulars.system.login.handler.success.LoginCodeModelCreateAccessTokenHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessAfterVerifyHandler,org.opsli.modulars.system.login.handler.success.LoginClearErrorSuccessHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessLogHandler,org.opsli.plugins.security.handler.AuthServiceErrorHandler,org.opsli.modulars.system.login.handler.error.BizServiceErrorHandler,org.opsli.plugins.security.handler.OtherErrorHandler,org.opsli.plugins.security.handler.AuthErrorHandler,org.opsli.plugins.security.handler.SecurityErrorHandler)>-><org.opsli.plugins.security.handler.LoginHandler$Builder$AccessSuccessListenerBuilder: org.opsli.plugins.security.handler.LoginHandler$Builder and()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.core.utils.CryptoUtil: java.lang.Object asymmetricDecryptToObj(java.lang.String)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><java.io.WriteAbortedException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.opsli.modulars.system.user.web.UserRestController: void <init>()>-><synthetic.method.SingletonFactory: org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl getUserRoleRefServiceImpl()>
<org.opsli.core.base.controller.BaseRestController: void handleTreeHasChildren(java.util.List,java.util.Map)>-><org.springframework.http.server.reactive.TomcatHeadersAdapter$EntryIterator: boolean hasNext()>
<org.opsli.modulars.system.monitor.web.MonitorController: org.opsli.api.base.result.ResultWrapper getSystemInfo()>-><com.google.common.collect.Maps: java.util.HashMap newHashMapWithExpectedSize(int)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.api.base.encrypt.EncryptModel: java.lang.String getEncryptData()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.dict.web.DictDetailRestController: void <init>()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>
<org.opsli.modulars.system.org.web.SysOrgRestController: org.opsli.api.base.result.ResultWrapper insert(org.opsli.api.wrapper.system.org.SysOrgModel)>-><org.opsli.api.wrapper.system.user.UserModel: java.lang.String getUsername()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.menu.web.MenuRestController: void <init>()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><org.springframework.context.expression.MapAccessor$MapAccessException: java.lang.String getMessage()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: org.opsli.api.base.result.ResultWrapper setPermsV2(org.opsli.api.wrapper.system.role.RoleMenuRefModel)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getCustomResultWrapper(org.opsli.common.base.msg.BaseMsg)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.opsli.modulars.system.menu.web.MenuRestController: java.util.List getBeanMapList(java.util.List,java.lang.String[])>-><com.google.common.collect.AbstractIterator: java.lang.Object next()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.common.enums.VerificationTypeEnum: java.util.Optional getEnumByType(java.lang.String)>
<org.opsli.modulars.system.login.web.LoginByAccountRestController: void captcha(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.servlet.http.HttpServlet$NoBodyResponse: void setHeader(java.lang.String,java.lang.String)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.generator.table.web.GenTableRestController: void <init>()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.opsli.modulars.system.user.web.UserOrgRefRestController: void <init>()>-><synthetic.method.SingletonFactory: org.opsli.modulars.system.user.service.impl.UserOrgRefServiceImpl getUserOrgRefServiceImpl()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.common.utils.WrapperUtil: java.lang.Object transformInstance(java.lang.Object,java.lang.Class)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><java.io.InvalidClassException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><com.fasterxml.jackson.databind.JsonMappingException: java.lang.String getMessage()>
<org.opsli.core.base.controller.BaseRestController: void demoError()>-><org.opsli.api.wrapper.system.user.UserModel: java.lang.String getUsername()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><com.fasterxml.jackson.core.JsonProcessingException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><java.io.WriteAbortedException: java.lang.String getMessage()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: void demoError()>-><org.opsli.core.utils.UserUtil: org.opsli.api.wrapper.system.user.UserModel getUser()>
<org.opsli.modulars.system.user.web.UserOrgRefRestController: void <init>()>-><synthetic.method.SingletonFactory: org.opsli.core.autoconfigure.properties.GlobalProperties getGlobalProperties()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: void demoError()>-><org.opsli.common.exception.ServiceException: void <init>(org.opsli.common.base.msg.BaseMsg)>
<org.opsli.modulars.system.login.web.LoginByCodeRestController: void init(org.springframework.security.authentication.AuthenticationManager,org.opsli.modulars.system.login.handler.before.LoginCodeModelVerifyCodeBeforeHandler,org.opsli.modulars.system.login.handler.success.LoginCodeModelCreateAccessTokenHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessAfterVerifyHandler,org.opsli.modulars.system.login.handler.success.LoginClearErrorSuccessHandler,org.opsli.modulars.system.login.handler.success.LoginSuccessLogHandler,org.opsli.plugins.security.handler.AuthServiceErrorHandler,org.opsli.modulars.system.login.handler.error.BizServiceErrorHandler,org.opsli.plugins.security.handler.OtherErrorHandler,org.opsli.plugins.security.handler.AuthErrorHandler,org.opsli.plugins.security.handler.SecurityErrorHandler)>-><org.opsli.plugins.security.handler.LoginHandler$Builder$BeforeListenerBuilder: org.opsli.plugins.security.handler.LoginHandler$Builder$BeforeListenerBuilder addListener(org.opsli.plugins.security.handler.LoginBeforeListener)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><org.opsli.api.wrapper.system.user.UserModel: java.lang.String getEmail()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.tools.common.CommonRestController: void <init>(org.opsli.modulars.tools.common.bean.VerificationCodeBean)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><jdk.internal.org.xml.sax.SAXException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.role.web.RoleRestController: void <init>()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.opsli.OpsliApplication: void main(java.lang.String[])>-><org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.boot.autoconfigure.web.ErrorProperties)>
<org.opsli.modulars.system.user.web.UserRestController: org.opsli.api.base.result.ResultWrapper getInfoById(java.lang.String)>-><org.opsli.api.wrapper.system.user.UserModel: java.lang.String getSwitchTenantUserId()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper getPublicKey()>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getSuccessResultWrapper(java.lang.Object)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><org.opsli.plugins.email.wrapper.EmailModel: java.lang.String getContent()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><org.opsli.core.options.EmailConfigFactory: org.opsli.plugins.email.conf.EmailConfig getConfig()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><org.springframework.core.NestedIOException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.nio.file.FileSystemException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.common.exception.ServiceException lambda$checkEmailCode$1()>-><org.opsli.common.exception.ServiceException: void <init>(org.opsli.common.base.msg.BaseMsg)>
<org.opsli.modulars.system.org.web.SysOrgRestController: org.opsli.api.base.result.ResultWrapper insert(org.opsli.api.wrapper.system.org.SysOrgModel)>-><org.opsli.api.wrapper.system.user.UserModel: java.lang.String getTenantId()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.tools.email.web.EmailRestController: void <init>()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.opsli.modulars.system.user.web.UserRestController: org.opsli.api.base.result.ResultWrapper getOrg()>-><org.opsli.api.base.warpper.ApiWrapper: java.lang.String getId()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><reactor.core.publisher.FluxOnAssembly$OnAssemblyException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><org.springframework.core.NestedCheckedException: java.lang.String getMessage()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><org.opsli.modulars.tools.common.bean.VerificationCodeBean: void sendMobileCode(java.lang.String,java.lang.String)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><reactor.core.publisher.FluxOnAssembly$OnAssemblyException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.opsli.modulars.system.menu.web.MenuRestController: org.opsli.api.base.result.ResultWrapper getMenuAndPermsTree(java.lang.String)>-><java.util.Collections$UnmodifiableCollection: boolean removeIf(java.util.function.Predicate)>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><reactor.core.publisher.FluxOnAssembly$OnAssemblyException: java.lang.String getMessage()>
<org.opsli.modulars.system.user.web.UserRestController: org.opsli.api.base.result.ResultWrapper getInfoById(java.lang.String)>-><org.opsli.api.wrapper.system.role.RoleModel: java.lang.String getDataScope()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.opsli.modulars.system.area.web.SysAreaRestController: org.opsli.api.base.result.ResultWrapper del(java.lang.String)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getSuccessResultWrapperByMsg(java.lang.String)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: org.opsli.api.base.result.ResultWrapper setPerms(org.opsli.api.wrapper.system.role.RoleMenuRefModel)>-><org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPerms(java.lang.String,java.lang.String[])>
<org.opsli.modulars.system.menu.web.MenuRestController: org.opsli.api.base.result.ResultWrapper getMenuAndPermsTree(java.lang.String)>-><java.util.Collections$EmptyList: boolean removeIf(java.util.function.Predicate)>
<org.opsli.modulars.system.monitor.web.MonitorController: org.opsli.api.base.result.ResultWrapper getMemInfo()>-><org.opsli.core.utils.SystemInfoUtil: org.opsli.core.utils.SystemInfoUtil$MemoryInfo getMemoryInfo()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><org.opsli.plugins.email.wrapper.EmailModel: java.lang.String getSubject()>
<org.opsli.modulars.system.org.web.SysOrgRestController: org.opsli.api.base.result.ResultWrapper insert(org.opsli.api.wrapper.system.org.SysOrgModel)>-><org.opsli.common.enums.DictType: java.lang.String getValue()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: org.opsli.api.base.result.ResultWrapper setPerms(org.opsli.api.wrapper.system.role.RoleMenuRefModel)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getCustomResultWrapper(org.opsli.common.base.msg.BaseMsg)>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><java.nio.file.FileSystemException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getSuccessResultWrapperByMsg(java.lang.String)>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: org.opsli.api.base.result.ResultWrapper setPerms(org.opsli.api.wrapper.system.role.RoleMenuRefModel)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getErrorResultWrapper()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.opsli.modulars.system.org.web.SysOrgRestController: org.opsli.api.base.result.ResultWrapper insert(org.opsli.api.wrapper.system.org.SysOrgModel)>-><org.opsli.core.utils.UserUtil: org.opsli.api.wrapper.system.user.UserModel getUser()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.nio.file.FileSystemException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><java.lang.Integer: int intValue()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: org.opsli.api.base.result.ResultWrapper setPermsV2(org.opsli.api.wrapper.system.role.RoleMenuRefModel)>-><org.opsli.api.wrapper.system.role.RoleMenuRefModel: java.lang.String[] getPermsIds()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<org.opsli.modulars.system.org.web.SysOrgRestController: org.opsli.api.base.result.ResultWrapper insert(org.opsli.api.wrapper.system.org.SysOrgModel)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getSuccessResultWrapperByMsg(java.lang.String)>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.tools.api.ApiController: void <init>()>
<org.opsli.core.base.controller.BaseRestController: java.util.List handleTreeHasChildren(java.util.List,java.util.function.Function)>-><org.springframework.http.server.reactive.TomcatHeadersAdapter$HeaderNamesIterator: boolean hasNext()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.role.web.RoleMenuRefRestController: void <init>()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.opsli.modulars.system.menu.web.MenuRestController: org.opsli.api.base.result.ResultWrapper getMenuAndPermsTree(java.lang.String)>-><org.springframework.core.io.buffer.LimitedDataBufferList: boolean removeIf(java.util.function.Predicate)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkEmailCode(java.lang.String,java.lang.String)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: org.opsli.api.base.result.ResultWrapper setPermsV2(org.opsli.api.wrapper.system.role.RoleMenuRefModel)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getSuccessResultWrapper()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.opsli.core.base.controller.BaseRestController: void handleTreeHasChildren(java.util.List,java.util.Map)>-><com.google.common.collect.AbstractIterator: java.lang.Object next()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.opsli.modulars.tools.email.web.EmailRestController: org.opsli.api.base.result.ResultWrapper testSend(org.opsli.plugins.email.wrapper.EmailModel)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getErrorResultWrapper()>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper checkMobileCode(java.lang.String,java.lang.String)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.api.base.result.ResultWrapper: org.opsli.api.base.result.ResultWrapper getErrorResultWrapper()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.area.web.SysAreaRestController: void <init>()>
<org.opsli.modulars.system.user.web.UserRestController: org.opsli.api.base.result.ResultWrapper getRoleIdsByUserId(java.lang.String)>-><org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getRoleIdList(java.lang.String)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(java.lang.String)>-><java.awt.HeadlessException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.modulars.tools.common.bean.VerificationCodeBean: void sendEmailCode(java.lang.String,java.lang.String)>
<org.opsli.modulars.system.menu.web.MenuRestController: org.opsli.api.base.result.ResultWrapper getMenuAndPermsTree(java.lang.String)>-><java.util.Collections$SynchronizedCollection: boolean removeIf(java.util.function.Predicate)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.opsli.modulars.tools.common.CommonRestController: org.opsli.api.base.result.ResultWrapper createEmailCode(org.opsli.api.base.encrypt.EncryptModel)>-><org.opsli.core.utils.CryptoUtil: java.lang.Object asymmetricDecryptToObj(java.lang.String)>
<org.opsli.modulars.tools.common.OperationAuthRestController: org.opsli.api.base.result.ResultWrapper createMobileCode(java.lang.String)>-><org.opsli.common.exception.ServiceException: java.lang.Integer getCode()>
