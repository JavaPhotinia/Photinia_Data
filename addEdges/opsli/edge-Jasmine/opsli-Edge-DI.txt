<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.Collections$1: boolean hasNext()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.Collections$SingletonList: java.util.Iterator iterator()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<org.opsli.core.security.service.UidUserDetailDetailServiceImpl: java.util.Optional loadUserByPrincipal(java.lang.Object)>-><org.springframework.http.server.reactive.TomcatHeadersAdapter$EntryIterator: boolean hasNext()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.tools.common.OperationAuthRestController: void <init>(org.opsli.modulars.tools.common.bean.VerificationCodeBean)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.gentest.carinfo.web.TestCarRestController: void <init>()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPermsV2(java.lang.String,java.lang.String[])>-><org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>
<org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getMenuAllListByUserId(java.lang.String,java.lang.String)>-><org.opsli.core.persistence.querybuilder.GenQueryBuilder: void <init>()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPermsV2(java.lang.String,java.lang.String[])>-><org.opsli.common.exception.ServiceException: void <init>(org.opsli.common.base.msg.BaseMsg)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><com.google.common.collect.Iterators$1: boolean hasNext()>
<org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getUserIdListByRoleId(java.lang.String)>-><com.baomidou.mybatisplus.core.conditions.query.QueryWrapper: void <init>()>
<com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveOrUpdate(java.lang.Object)>-><org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.lang.Object getById(java.io.Serializable)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>
<org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getMenuAllListByUserId(java.lang.String,java.lang.String)>-><org.opsli.core.base.service.impl.CrudServiceImpl: java.util.List findList(com.baomidou.mybatisplus.core.conditions.query.QueryWrapper)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<org.opsli.modulars.system.menu.web.MenuRestController: org.opsli.api.base.result.ResultWrapper getMenuAndPermsTree(java.lang.String)>-><org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getMenuAllListByUserId(java.lang.String,java.lang.String)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.ArrayList: java.util.Iterator iterator()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.logs.web.LoginLogsRestController: void <init>()>
<org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getMenuAllListByUserId(java.lang.String,java.lang.String)>-><com.baomidou.mybatisplus.core.conditions.interfaces.Compare: java.lang.Object like(java.lang.Object,java.lang.Object)>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: java.lang.Object getOne(com.baomidou.mybatisplus.core.conditions.Wrapper,boolean)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.AbstractSequentialList: java.util.Iterator iterator()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPermsV2(java.lang.String,java.lang.String[])>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveBatch(java.util.Collection)>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: long count(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.gentest.user.web.TestUserRestController: void <init>()>
<org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getUserIdListByRoleId(java.lang.String)>-><org.opsli.common.enums.DictType: java.lang.String getValue()>
<org.opsli.core.security.service.UidUserDetailDetailServiceImpl: java.util.Optional loadUserByPrincipal(java.lang.Object)>-><org.opsli.api.wrapper.system.user.UserModel: java.lang.String getEnable()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: boolean hasNext()>
<org.opsli.core.security.service.UidUserDetailDetailServiceImpl: java.util.Optional loadUserByPrincipal(java.lang.Object)>-><org.springframework.http.server.reactive.TomcatHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.util.List listObjs(java.util.function.Function)>-><org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.util.List listObjs(com.baomidou.mybatisplus.core.conditions.Wrapper,java.util.function.Function)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean removeById(java.lang.Object)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object next()>
<org.opsli.core.base.service.impl.CrudServiceImpl: org.opsli.api.base.warpper.ApiWrapper get(java.lang.String)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: java.lang.Object getById(java.io.Serializable)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.TreeMap$NavigableSubMap$SubMapIterator: boolean hasNext()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean updateById(java.lang.Object)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap$KeySetIterator: java.lang.Object next()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.util.List listMaps(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.opsli.common.utils.MessUtil: java.lang.String getMes(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>-><java.security.Provider$Service: java.lang.String toString()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage)>-><org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: long count(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: long retCount(java.lang.Long)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getMenuAllListByUserId(java.lang.String,java.lang.String)>-><com.baomidou.mybatisplus.core.conditions.interfaces.Compare: java.lang.Object eq(java.lang.Object,java.lang.Object)>
<org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getMenuAllListByUserId(java.lang.String,java.lang.String)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: java.lang.Object next()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.options.web.SysOptionsRestController: void <init>()>
<org.opsli.modulars.generator.table.web.GenTableRestController: org.opsli.api.base.result.ResultWrapper sync(java.lang.String)>-><org.opsli.modulars.generator.column.service.impl.GenTableColumnServiceImpl: java.util.List getByTableId(java.lang.String)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean delPermsByRoleIds(java.util.List)>-><com.baomidou.mybatisplus.core.conditions.query.QueryWrapper: void <init>()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.util.List listMaps()>-><org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.util.List listMaps(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><org.opsli.core.utils.UserUtil: boolean refreshUserAllPerms(java.lang.String)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPerms(java.lang.String,java.lang.String[])>-><org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><io.netty.util.collection.IntObjectHashMap$MapIterator: boolean hasNext()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPermsV2(java.lang.String,java.lang.String[])>-><org.opsli.modulars.system.role.entity.SysRoleMenuRef: void <init>()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><com.alibaba.fastjson.JSONArray: java.util.Iterator iterator()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.util.List list(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><org.opsli.core.utils.UserUtil: boolean refreshUserDefRole(java.lang.String)>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean saveOrUpdate(java.lang.Object,com.baomidou.mybatisplus.core.conditions.Wrapper)>-><org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean update(java.lang.Object,com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getMenuAllListByUserId(java.lang.String,java.lang.String)>-><cn.hutool.core.collection.ListUtil: java.util.List empty()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean removeByIds(java.util.Collection,boolean)>-><com.baomidou.mybatisplus.core.toolkit.CollectionUtils: boolean isEmpty(java.util.Collection)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.generator.template.web.GenTemplateRestController: void <init>()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.util.List listObjs(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.util.List listObjs(com.baomidou.mybatisplus.core.conditions.Wrapper,java.util.function.Function)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<org.opsli.modulars.tools.common.CommonRestController: void <init>(org.opsli.modulars.tools.common.bean.VerificationCodeBean)>-><synthetic.method.SingletonFactory: org.opsli.modulars.tools.common.bean.VerificationCodeBean getVerificationCodeBean()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPerms(java.lang.String,java.lang.String[])>-><org.opsli.common.exception.ServiceException: void <init>(org.opsli.common.base.msg.BaseMsg)>
<org.opsli.modulars.generator.table.web.GenTableRestController: void <init>()>-><synthetic.method.SingletonFactory: org.opsli.modulars.generator.column.service.impl.GenTableColumnServiceImpl getGenTableColumnServiceImpl()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><com.google.common.collect.ImmutableList: java.util.Iterator iterator()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean remove(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean save(java.lang.Object)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue$WeakIterator: boolean hasNext()>
<org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getUserIdListByRoleId(java.lang.String)>-><cn.hutool.core.collection.ListUtil: java.util.List empty()>
<org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getUserIdListByRoleId(java.lang.String)>-><cn.hutool.core.collection.CollUtil: boolean isEmpty(java.util.Collection)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.tools.oss.web.OssRestController: void <init>()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPerms(java.lang.String,java.lang.String[])>-><org.opsli.modulars.system.role.entity.SysRoleMenuRef: void setRoleId(java.lang.String)>
<org.opsli.core.security.service.UidUserDetailDetailServiceImpl: java.util.Optional loadUserByPrincipal(java.lang.Object)>-><org.opsli.api.wrapper.system.user.UserModel: java.lang.String getPassword()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPerms(java.lang.String,java.lang.String[])>-><com.google.common.collect.Lists: java.util.ArrayList newArrayListWithCapacity(int)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><io.netty.util.collection.IntObjectHashMap$KeySet$1: boolean hasNext()>
<org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getMenuAllListByUserId(java.lang.String,java.lang.String)>-><org.opsli.common.utils.ListDistinctUtil: java.util.List distinct(java.util.List,java.util.Comparator)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><io.netty.util.collection.IntObjectHashMap$KeySet$1: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: com.baomidou.mybatisplus.extension.conditions.update.LambdaUpdateChainWrapper lambdaUpdate()>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: java.util.Iterator iterator()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage pageMaps(com.baomidou.mybatisplus.core.metadata.IPage)>-><com.baomidou.mybatisplus.core.toolkit.Wrappers: com.baomidou.mybatisplus.core.conditions.query.QueryWrapper emptyWrapper()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue$WeakIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<org.opsli.modulars.tools.common.OperationAuthRestController: void <init>(org.opsli.modulars.tools.common.bean.VerificationCodeBean)>-><synthetic.method.SingletonFactory: org.opsli.modulars.tools.common.bean.VerificationCodeBean getVerificationCodeBean()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.org.web.SysOrgRestController: void <init>()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: com.baomidou.mybatisplus.extension.conditions.query.LambdaQueryChainWrapper lambdaQuery()>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><com.google.common.collect.SingletonImmutableList: java.util.Iterator iterator()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean remove(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.opsli.core.security.service.UidUserDetailDetailServiceImpl: java.util.Optional loadUserByPrincipal(java.lang.Object)>-><com.google.common.collect.AbstractIterator: boolean hasNext()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: void <init>()>-><synthetic.method.SingletonFactory: org.opsli.core.autoconfigure.properties.GlobalProperties getGlobalProperties()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean save(java.lang.Object)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPerms(java.lang.String,java.lang.String[])>-><org.opsli.modulars.system.role.entity.SysRoleMenuRef: void <init>()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper query()>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: com.baomidou.mybatisplus.extension.kotlin.KtQueryChainWrapper ktQuery()>-><com.baomidou.mybatisplus.extension.toolkit.ChainWrappers: com.baomidou.mybatisplus.extension.kotlin.KtQueryChainWrapper ktQueryChain(com.baomidou.mybatisplus.core.mapper.BaseMapper,java.lang.Class)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: boolean hasNext()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><org.springframework.http.server.reactive.TomcatHeadersAdapter$HeaderNamesIterator: boolean hasNext()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPerms(java.lang.String,java.lang.String[])>-><org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean delPermsByRoleIds(java.util.List)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPerms(java.lang.String,java.lang.String[])>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.AbstractList: java.util.Iterator iterator()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.SubList: java.util.Iterator iterator()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean remove(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean save(java.lang.Object)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><org.opsli.core.utils.UserUtil: boolean refreshUserOrgs(java.lang.String)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.user.web.UserRestController: void <init>()>
<org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getMenuAllListByUserId(java.lang.String,java.lang.String)>-><org.opsli.core.base.service.impl.CrudServiceImpl: org.opsli.api.base.warpper.ApiWrapper get(java.lang.String)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPermsV2(java.lang.String,java.lang.String[])>-><com.google.common.collect.Lists: java.util.ArrayList newArrayListWithCapacity(int)>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean updateById(java.lang.Object)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPermsV2(java.lang.String,java.lang.String[])>-><cn.hutool.core.convert.Convert: java.util.List toList(java.lang.Class,java.lang.Object)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><cn.hutool.core.collection.CollUtil: boolean isNotEmpty(java.util.Collection)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.Vector$Itr: boolean hasNext()>
<org.opsli.core.security.service.UidUserDetailDetailServiceImpl: java.util.Optional loadUserByPrincipal(java.lang.Object)>-><org.springframework.http.server.reactive.TomcatHeadersAdapter$HeaderNamesIterator: boolean hasNext()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.util.List listObjs(com.baomidou.mybatisplus.core.conditions.Wrapper,java.util.function.Function)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.generator.template.web.GenTemplateDetailRestController: void <init>()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: boolean hasNext()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean removeById(java.lang.Object)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.opsli.core.base.service.impl.CrudServiceImpl: org.opsli.api.base.warpper.ApiWrapper update(org.opsli.api.base.warpper.ApiWrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean updateById(java.lang.Object)>
<org.opsli.core.base.service.impl.CrudServiceImpl: java.util.List findList(com.baomidou.mybatisplus.core.conditions.query.QueryWrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: java.util.List list(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPerms(java.lang.String,java.lang.String[])>-><org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: com.baomidou.mybatisplus.extension.kotlin.KtUpdateChainWrapper ktUpdate()>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: com.baomidou.mybatisplus.extension.kotlin.KtQueryChainWrapper ktQuery()>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: java.lang.Class getEntityClass()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.OpsliApplication: void <init>()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><org.springframework.http.server.reactive.TomcatHeadersAdapter$HeaderNamesIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><org.opsli.core.utils.UserUtil: boolean refreshUserMenus(java.lang.String)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean remove(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPerms(java.lang.String,java.lang.String[])>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveBatch(java.util.Collection)>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: com.baomidou.mybatisplus.extension.conditions.query.LambdaQueryChainWrapper lambdaQuery()>-><com.baomidou.mybatisplus.extension.toolkit.ChainWrappers: com.baomidou.mybatisplus.extension.conditions.query.LambdaQueryChainWrapper lambdaQueryChain(com.baomidou.mybatisplus.core.mapper.BaseMapper)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><org.opsli.core.utils.UserUtil: boolean refreshUserRoles(java.lang.String)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue$WeakIterator: boolean hasNext()>
<org.opsli.modulars.system.menu.web.MenuRestController: void <init>()>-><synthetic.method.SingletonFactory: org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl getUserRoleRefServiceImpl()>
<org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getMenuAllListByUserId(java.lang.String,java.lang.String)>-><cn.hutool.core.collection.CollUtil: boolean isEmpty(java.util.Collection)>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: void delByTableIds(java.lang.String[])>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean remove(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.util.List listObjs()>-><java.util.function.Function: java.util.function.Function identity()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.monitor.web.MonitorController: void <init>()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPerms(java.lang.String,java.lang.String[])>-><cn.hutool.core.convert.Convert: java.util.List toList(java.lang.Class,java.lang.Object)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.opsli.core.security.service.UidUserDetailDetailServiceImpl: java.util.Optional loadUserByPrincipal(java.lang.Object)>-><org.opsli.api.base.warpper.ApiWrapper: java.lang.String getId()>
<org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getRoleIdList(java.lang.String)>-><org.opsli.common.utils.ListDistinctUtil: java.util.List distinct(java.util.List)>
<org.opsli.modulars.generator.table.web.GenTableRestController: org.opsli.api.base.result.ResultWrapper get(org.opsli.modulars.generator.table.wrapper.GenTableModel)>-><org.opsli.modulars.generator.column.service.impl.GenTableColumnServiceImpl: java.util.List getByTableId(java.lang.String)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.AbstractMap$1$1: boolean hasNext()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPermsV2(java.lang.String,java.lang.String[])>-><org.opsli.modulars.system.role.entity.SysRoleMenuRef: void setMenuId(java.lang.String)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveOrUpdate(java.lang.Object)>-><org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean save(java.lang.Object)>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: com.baomidou.mybatisplus.extension.kotlin.KtQueryChainWrapper ktQuery()>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.opsli.modulars.tools.email.web.EmailRestController: void <init>()>-><synthetic.method.SingletonFactory: org.opsli.plugins.email.service.EmailPluginImpl getEmailPluginImpl()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<org.opsli.core.base.service.impl.CrudServiceImpl: org.opsli.api.base.warpper.ApiWrapper insert(org.opsli.api.base.warpper.ApiWrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean save(java.lang.Object)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean delPermsByRoleIds(java.util.List)>-><com.baomidou.mybatisplus.core.conditions.interfaces.Func: java.lang.Object in(java.lang.Object,java.util.Collection)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.logs.web.LogsRestController: void <init>()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><com.google.common.collect.Iterators$9: java.lang.Object next()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean removeByIds(java.util.Collection,boolean)>-><org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean removeBatchByIds(java.util.Collection,boolean)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean update(java.lang.Object,com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.util.List list()>-><org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.util.List list(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean removeBatchByIds(java.util.Collection,boolean)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean removeBatchByIds(java.util.Collection,int,boolean)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getUserIdListByRoleId(java.lang.String)>
<org.opsli.common.utils.MessUtil: java.lang.String getMes(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>-><reactor.core.scheduler.DelegateServiceScheduler$UnsupportedScheduledExecutorService: java.lang.String toString()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: com.baomidou.mybatisplus.extension.conditions.update.UpdateChainWrapper update()>-><com.baomidou.mybatisplus.extension.toolkit.ChainWrappers: com.baomidou.mybatisplus.extension.conditions.update.UpdateChainWrapper updateChain(com.baomidou.mybatisplus.core.mapper.BaseMapper)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean remove(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><com.google.common.collect.ImmutableList$SubList: java.util.Iterator iterator()>
<org.opsli.core.security.service.UidUserDetailDetailServiceImpl: java.util.Optional loadUserByPrincipal(java.lang.Object)>-><org.opsli.api.wrapper.system.user.UserModel: java.lang.String getUsername()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>
<org.opsli.modulars.system.user.web.UserRoleRefRestController: void <init>()>-><synthetic.method.SingletonFactory: org.opsli.core.autoconfigure.properties.GlobalProperties getGlobalProperties()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPerms(java.lang.String,java.lang.String[])>-><org.opsli.modulars.system.role.entity.SysRoleMenuRef: void setMenuId(java.lang.String)>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage page(com.baomidou.mybatisplus.core.metadata.IPage)>-><com.baomidou.mybatisplus.core.toolkit.Wrappers: com.baomidou.mybatisplus.core.conditions.query.QueryWrapper emptyWrapper()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><cn.hutool.json.JSONArray: java.util.Iterator iterator()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.util.List list()>-><com.baomidou.mybatisplus.core.toolkit.Wrappers: com.baomidou.mybatisplus.core.conditions.query.QueryWrapper emptyWrapper()>
<org.opsli.common.utils.MessUtil: java.lang.String getMes(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>-><org.springframework.core.convert.support.GenericConversionService: java.lang.String toString()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><org.opsli.common.exception.ServiceException: void <init>(org.opsli.common.base.msg.BaseMsg)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.user.web.UserRoleRefRestController: void <init>()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean update(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean update(java.lang.Object,com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<org.opsli.core.security.service.UidUserDetailDetailServiceImpl: java.util.Optional loadUserByPrincipal(java.lang.Object)>-><com.google.common.collect.AbstractIterator: java.lang.Object next()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.dict.web.DictRestController: void <init>()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: com.baomidou.mybatisplus.extension.kotlin.KtUpdateChainWrapper ktUpdate()>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: java.lang.Class getEntityClass()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean removeBatchByIds(java.util.Collection)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean removeBatchByIds(java.util.Collection,int)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.test.web.TestRestController: void <init>()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.lang.Object getById(java.io.Serializable)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.util.List listByIds(java.util.Collection)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveOrUpdate(java.lang.Object)>-><org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean updateById(java.lang.Object)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap$EntryIterator: boolean hasNext()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean removeByIds(java.util.Collection,boolean)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getMenuAllListByUserId(java.lang.String,java.lang.String)>-><com.baomidou.mybatisplus.core.conditions.interfaces.Func: java.lang.Object notIn(java.lang.Object,java.lang.Object[])>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.user.web.UserOrgRefRestController: void <init>()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><org.springframework.http.server.reactive.TomcatHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.ArrayList$SubList: java.util.Iterator iterator()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.Vector: java.util.Iterator iterator()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.SubList$1: boolean hasNext()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean removeByIds(java.util.Collection,boolean)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.tenant.web.TenantRestController: void <init>()>
<org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getMenuAllListByUserId(java.lang.String,java.lang.String)>-><java.util.Comparator: java.util.Comparator comparing(java.util.function.Function)>
<org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getUserIdListByRoleId(java.lang.String)>-><com.baomidou.mybatisplus.core.conditions.interfaces.Compare: java.lang.Object eq(java.lang.Object,java.lang.Object)>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage pageMaps(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: boolean hasNext()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean delPermsByRoleIds(java.util.List)>-><org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean remove(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean removeByMap(java.util.Map)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: void <init>()>-><synthetic.method.SingletonFactory: org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl getRoleMenuRefServiceImpl()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.SubList$1: java.lang.Object next()>
<org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getMenuAllListByUserId(java.lang.String,java.lang.String)>-><org.opsli.common.enums.DictType: java.lang.String getValue()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: long count()>-><org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: long count(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: org.opsli.api.base.result.ResultWrapper setPermsV2(org.opsli.api.wrapper.system.role.RoleMenuRefModel)>-><org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPermsV2(java.lang.String,java.lang.String[])>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.logs.web.OperationLogRestController: void <init>()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.tools.searchhis.web.SearchHisRestController: void <init>()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.generator.logs.web.GenLogsRestController: void <init>()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: com.baomidou.mybatisplus.extension.conditions.update.LambdaUpdateChainWrapper lambdaUpdate()>-><com.baomidou.mybatisplus.extension.toolkit.ChainWrappers: com.baomidou.mybatisplus.extension.conditions.update.LambdaUpdateChainWrapper lambdaUpdateChain(com.baomidou.mybatisplus.core.mapper.BaseMapper)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: boolean hasNext()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean saveOrUpdate(java.lang.Object,com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveOrUpdate(java.lang.Object)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.AbstractList$Itr: boolean hasNext()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean saveOrUpdateBatch(java.util.Collection)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveOrUpdateBatch(java.util.Collection,int)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.Collections$1: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<org.opsli.core.base.service.impl.CrudServiceImpl: org.opsli.core.persistence.Page findPage(org.opsli.core.persistence.Page)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: java.util.List list(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.opsli.modulars.system.user.web.UserRoleRefRestController: void <init>()>-><synthetic.method.SingletonFactory: org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl getUserRoleRefServiceImpl()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue$WeakIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage pageMaps(com.baomidou.mybatisplus.core.metadata.IPage)>-><org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: com.baomidou.mybatisplus.core.metadata.IPage pageMaps(com.baomidou.mybatisplus.core.metadata.IPage,com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPermsV2(java.lang.String,java.lang.String[])>-><org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>
<org.opsli.modulars.system.user.web.UserRestController: void <init>()>-><synthetic.method.SingletonFactory: org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl getUserRoleRefServiceImpl()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean remove(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.dict.web.DictDetailRestController: void <init>()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.menu.web.MenuRestController: void <init>()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean updateById(java.lang.Object)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getMenuAllListByUserId(java.lang.String,java.lang.String)>-><org.apache.commons.lang3.StringUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean removeById(java.lang.Object)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.generator.table.web.GenTableRestController: void <init>()>
<org.opsli.modulars.system.user.web.UserOrgRefRestController: void <init>()>-><synthetic.method.SingletonFactory: org.opsli.modulars.system.user.service.impl.UserOrgRefServiceImpl getUserOrgRefServiceImpl()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: com.baomidou.mybatisplus.extension.conditions.update.UpdateChainWrapper update()>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPermsV2(java.lang.String,java.lang.String[])>-><org.opsli.modulars.system.role.entity.SysRoleMenuRef: void setRoleId(java.lang.String)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><io.netty.util.collection.IntObjectHashMap$MapIterator: java.lang.Object next()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: void delByTableId(java.lang.String)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean remove(com.baomidou.mybatisplus.core.conditions.Wrapper)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<org.opsli.core.security.service.UidUserDetailDetailServiceImpl: java.util.Optional loadUserByPrincipal(java.lang.Object)>-><org.springframework.http.server.reactive.TomcatHeadersAdapter$HeaderNamesIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><com.google.common.collect.Iterators$1: java.lang.Object next()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: long count()>-><com.baomidou.mybatisplus.core.toolkit.Wrappers: com.baomidou.mybatisplus.core.conditions.query.QueryWrapper emptyWrapper()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean removeByMap(java.util.Map)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<org.opsli.modulars.system.user.web.UserOrgRefRestController: void <init>()>-><synthetic.method.SingletonFactory: org.opsli.core.autoconfigure.properties.GlobalProperties getGlobalProperties()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPermsV2(java.lang.String,java.lang.String[])>-><org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean delPermsByRoleIds(java.util.List)>
<org.opsli.modulars.generator.importable.service.MySQLDatabaseTableServiceImpl: void <init>()>-><org.redisson.RedissonPriorityBlockingDeque: void <init>(org.redisson.command.CommandAsyncExecutor,java.lang.String,org.redisson.api.RedissonClient)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.tools.common.CommonRestController: void <init>(org.opsli.modulars.tools.common.bean.VerificationCodeBean)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.Vector$Itr: java.lang.Object next()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean removeByMap(java.util.Map)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><com.google.common.collect.Iterators$9: boolean hasNext()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.role.web.RoleRestController: void <init>()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getMenuAllListByUserId(java.lang.String,java.lang.String)>-><org.opsli.core.persistence.querybuilder.GenQueryBuilder: com.baomidou.mybatisplus.core.conditions.query.QueryWrapper build()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><com.google.common.collect.AbstractIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap$EntrySetIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap$ValuesIterator: java.lang.Object next()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper query()>-><com.baomidou.mybatisplus.extension.toolkit.ChainWrappers: com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper queryChain(com.baomidou.mybatisplus.core.mapper.BaseMapper)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.tools.email.web.EmailRestController: void <init>()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean updateBatchById(java.util.Collection)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean updateBatchById(java.util.Collection,int)>
<org.opsli.modulars.system.role.web.RoleMenuRefRestController: org.opsli.api.base.result.ResultWrapper setPerms(org.opsli.api.wrapper.system.role.RoleMenuRefModel)>-><org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPerms(java.lang.String,java.lang.String[])>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.util.List listObjs()>-><org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.util.List listObjs(java.util.function.Function)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: java.lang.Object next()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean removeByMap(java.util.Map)>-><com.baomidou.mybatisplus.core.toolkit.Assert: void notEmpty(java.util.Map,java.lang.String,java.lang.Object[])>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: com.baomidou.mybatisplus.extension.kotlin.KtUpdateChainWrapper ktUpdate()>-><com.baomidou.mybatisplus.extension.toolkit.ChainWrappers: com.baomidou.mybatisplus.extension.kotlin.KtUpdateChainWrapper ktUpdateChain(com.baomidou.mybatisplus.core.mapper.BaseMapper,java.lang.Class)>
<org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getUserIdListByRoleId(java.lang.String)>-><org.opsli.common.utils.ListDistinctUtil: java.util.List distinct(java.util.List)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><org.springframework.http.server.reactive.TomcatHeadersAdapter$EntryIterator: boolean hasNext()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getMenuAllListByUserId(java.lang.String,java.lang.String)>-><org.opsli.common.utils.WrapperUtil: java.util.List transformInstance(java.util.Collection,java.lang.Class)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><io.netty.util.collection.IntObjectHashMap$2$1: java.lang.Object next()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.util.List listObjs(com.baomidou.mybatisplus.core.conditions.Wrapper,java.util.function.Function)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.util.List listByMap(java.util.Map)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean update(java.lang.Object,com.baomidou.mybatisplus.core.conditions.Wrapper)>-><com.baomidou.mybatisplus.extension.toolkit.SqlHelper: boolean retBool(java.lang.Integer)>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.util.List listObjs(java.util.function.Function)>-><com.baomidou.mybatisplus.core.toolkit.Wrappers: com.baomidou.mybatisplus.core.conditions.query.QueryWrapper emptyWrapper()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: boolean setPermsV2(java.lang.String,java.lang.String[])>-><java.util.ArrayList: boolean add(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.tools.api.ApiController: void <init>()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.role.web.RoleMenuRefRestController: void <init>()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.core.handler.GlobalExceptionHandler: void <init>()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><io.netty.util.collection.IntObjectHashMap$2$1: boolean hasNext()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean removeByIds(java.util.Collection,boolean)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: com.baomidou.mybatisplus.core.mapper.BaseMapper getBaseMapper()>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean update(java.lang.Object,com.baomidou.mybatisplus.core.conditions.Wrapper)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: boolean saveBatch(java.util.Collection)>-><com.baomidou.mybatisplus.extension.service.impl.ServiceImpl: boolean saveBatch(java.util.Collection,int)>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><com.google.common.collect.AbstractIterator: boolean hasNext()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.opsli.modulars.system.area.web.SysAreaRestController: void <init>()>
<org.opsli.modulars.system.role.service.impl.RoleMenuRefServiceImpl: void clearCache(java.lang.String)>-><org.opsli.core.utils.UserUtil: boolean refreshUserDefOrg(java.lang.String)>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.util.List listObjs(com.baomidou.mybatisplus.core.conditions.Wrapper)>-><java.util.function.Function: java.util.function.Function identity()>
<org.opsli.modulars.system.user.web.UserRestController: org.opsli.api.base.result.ResultWrapper getRoleIdsByUserId(java.lang.String)>-><org.opsli.modulars.system.user.service.impl.UserRoleRefServiceImpl: java.util.List getRoleIdList(java.lang.String)>
<org.opsli.modulars.generator.logs.service.impl.GenLogsServiceImpl: java.util.List listMaps()>-><com.baomidou.mybatisplus.core.toolkit.Wrappers: com.baomidou.mybatisplus.core.conditions.query.QueryWrapper emptyWrapper()>
