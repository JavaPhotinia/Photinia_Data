<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void configurePathMatch(org.springframework.web.servlet.config.annotation.PathMatchConfigurer)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configurePathMatch(org.springframework.web.servlet.config.annotation.PathMatchConfigurer)>
<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>-><java.util.concurrent.ConcurrentHashMap$ValuesView: void forEach(java.util.function.Consumer)>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<org.codehaus.groovy.classgen.asm.OperandStack: void newInstance(groovyjarjarasm.asm.MethodVisitor,java.lang.Object)>-><javax.security.auth.Subject: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.codehaus.groovy.ast.tools.WideningCategories$LowestUpperBoundClassNode: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer getPageableHandlerMethodArgumentResolverCustomizer()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.lang.ProcessEnvironment$StringValues: java.util.Iterator iterator()>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$1: javax.management.MBeanServer getMBeanServer()>-><org.springframework.jmx.MBeanServerNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientPropertiesRegistrationAdapter: java.util.Map getClientRegistrations(org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties)>-><java.util.HashMap: void forEach(java.util.function.BiConsumer)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String toString()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.hibernate.EntityMode: java.lang.String toString()>
<org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor: void <init>(org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$1)>-><org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor: void <init>()>
<org.springframework.util.MimeType: void <init>(org.springframework.util.MimeType,java.util.Map)>-><org.springframework.util.MimeType: java.lang.String getType()>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>-><org.springframework.jmx.export.naming.MetadataNamingStrategy: void <init>(org.springframework.jmx.export.metadata.JmxAttributeSource)>
<org.springframework.boot.info.BuildProperties: java.util.Properties processEntries(java.util.Properties)>-><org.springframework.boot.info.BuildProperties: void coerceDate(java.util.Properties,java.lang.String)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer$TimeoutRequestFactoryCustomizer: java.lang.reflect.Method findMethod(org.springframework.http.client.ClientHttpRequestFactory)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription: int hashCode()>
<javax.security.auth.Subject$2: java.lang.Object run()>-><javax.security.auth.Subject$2: java.security.AccessControlContext run()>
<org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory: void <init>()>-><org.springframework.boot.web.reactive.server.AbstractReactiveWebServerFactory: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.Map getCorsConfigurations()>-><org.springframework.web.servlet.config.annotation.CorsRegistry: void <init>()>
<org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: org.springframework.core.io.Resource getResourceByPath(java.lang.String)>-><org.springframework.core.io.DefaultResourceLoader$ClassPathContextResource: void <init>(java.lang.String,java.lang.ClassLoader)>
<org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>-><java.lang.Object: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><com.favorites.domain.Entitys: java.lang.String toString()>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter: void <init>()>
<org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateCustomizer[])>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: void <init>(org.springframework.context.ApplicationContext)>-><org.springframework.context.support.GenericApplicationContext: java.lang.ClassLoader getClassLoader()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void setPathPrefixes(java.util.Map)>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver thymeleafViewResolver(org.thymeleaf.spring5.ISpringWebFluxTemplateEngine)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.AbstractMap$SimpleEntry: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.context.annotation.MBeanExportConfiguration: org.springframework.jmx.export.annotation.AnnotationMBeanExporter mbeanExporter()>
<org.springframework.beans.factory.support.StaticListableBeanFactory$1: java.lang.Object getIfUnique()>-><org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(org.springframework.core.ResolvableType)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: java.lang.Integer getTemplateResolverOrder()>
<org.springframework.boot.task.TaskSchedulerBuilder: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.validation.Validator mvcValidator()>-><org.springframework.beans.factory.BeanInitializationException: void <init>(java.lang.String,java.lang.Throwable)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.JapaneseImperialCalendar: int hashCode()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.time.Year: int hashCode()>
<org.springframework.util.ReflectionUtils: java.lang.Object getField(java.lang.reflect.Field,java.lang.Object)>-><org.springframework.util.ReflectionUtils: void handleReflectionException(java.lang.Exception)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<org.springframework.beans.factory.config.PlaceholderConfigurerSupport: void <init>()>-><org.springframework.beans.factory.config.PropertyResourceConfigurer: void <init>()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<org.springframework.transaction.config.JtaTransactionManagerFactoryBean: void <init>()>-><java.lang.Class: java.lang.ClassLoader getClassLoader()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.asm.ConstantDynamic: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisXAConnectionFactoryConfiguration: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.expr.PostfixExpression: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.context.annotation.MBeanExportConfiguration: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>
<org.springframework.web.client.RestTemplate: void <init>()>-><java.util.ArrayList: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: int hashCode()>
<org.springframework.mock.web.MockHttpServletRequest: int getServerPort()>-><java.lang.Integer: int parseInt(java.lang.String)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.expression.spel.ast.NullLiteral: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerAutoConfiguration: void <init>()>
<org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>-><org.apache.commons.logging.LogAdapter$Log4jLog: void warn(java.lang.Object,java.lang.Throwable)>
<org.springframework.web.filter.RequestContextFilter: void <init>()>-><org.springframework.web.filter.OncePerRequestFilter: void <init>()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object get(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties getHazelcastPropertiesInstance()>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.util.Assert: void state(boolean,java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<org.springframework.http.converter.feed.AtomFeedHttpMessageConverter: void <init>()>-><org.springframework.http.MediaType: void <init>(java.lang.String,java.lang.String)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.test.autoconfigure.web.client.WebClientRestTemplateAutoConfiguration: org.springframework.web.client.RestTemplate restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>-><java.util.AbstractList: int hashCode()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer: org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer mediaTypes(java.util.Map)>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><org.springframework.boot.web.servlet.server.Jsp: void <init>()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: void <init>(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.SpringTemplateEngine)>-><org.thymeleaf.spring5.SpringTemplateEngine: void <init>()>
<javax.security.auth.Subject: int hashCode()>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>-><com.couchbase.client.java.CouchbaseCluster: com.couchbase.client.java.CouchbaseCluster create(com.couchbase.client.java.env.CouchbaseEnvironment,java.util.List)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: org.springframework.http.client.ClientHttpRequestFactory unwrapRequestFactoryIfNecessary(org.springframework.http.client.ClientHttpRequestFactory)>-><org.springframework.util.ReflectionUtils: java.lang.reflect.Field findField(java.lang.Class,java.lang.String)>
<org.springframework.mock.web.MockRequestDispatcher: void <init>(java.lang.String)>-><java.lang.Object: java.lang.Class getClass()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$2: javax.management.MBeanServer getMBeanServer()>-><org.springframework.jmx.support.WebSphereMBeanServerFactoryBean: void <init>()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.batch.BatchConfigurerConfiguration$JpaBatchConfiguration: org.springframework.boot.autoconfigure.batch.JpaBatchConfigurer batchConfigurer(org.springframework.boot.autoconfigure.batch.BatchProperties,javax.sql.DataSource,org.springframework.beans.factory.ObjectProvider,javax.persistence.EntityManagerFactory)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setUseForwardHeaders(java.lang.Boolean)>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration: void <init>(org.springframework.context.ApplicationContext)>-><org.springframework.boot.web.servlet.context.XmlServletWebServerApplicationContext: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: java.lang.String[] getResourceLocations(java.lang.String[])>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<org.springframework.boot.test.mock.web.SpringBootMockServletContext: java.net.URL getResource(java.lang.String)>-><java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastServerConfiguration$HazelcastServerConfigFileConfiguration: com.hazelcast.core.HazelcastInstance hazelcastInstance(org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties)>-><org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: com.hazelcast.core.HazelcastInstance getHazelcastInstance()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$StatementMeta: java.lang.String toString()>
<org.springframework.boot.autoconfigure.validation.ValidatorAdapter: org.springframework.validation.Validator create()>-><org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean: void <init>()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.WeakHashMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: void <init>(org.springframework.context.ApplicationContext)>-><org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.ClassLoader getClassLoader()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>-><java.util.Arrays$ArrayList: void forEach(java.util.function.Consumer)>
<org.springframework.web.servlet.config.annotation.InterceptorRegistry: java.util.List getInterceptors()>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateCustomizer[])>-><java.util.LinkedHashSet: void <init>(java.util.Collection)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.security.CodeSigner: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration: org.springframework.boot.web.servlet.FilterRegistrationBean resourceUrlEncodingFilter()>-><org.springframework.boot.web.servlet.FilterRegistrationBean: void <init>(javax.servlet.Filter,org.springframework.boot.web.servlet.ServletRegistrationBean[])>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addCorsMappings(org.springframework.web.servlet.config.annotation.CorsRegistry)>-><java.util.ArrayList$Itr: boolean hasNext()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setThymeleafViewResolver(org.thymeleaf.spring5.view.ThymeleafViewResolver)>
<javax.security.auth.Subject: int hashCode()>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><javax.security.auth.Subject: int hashCode()>
<org.springframework.beans.factory.config.PropertyResourceConfigurer: void <init>()>-><org.springframework.core.io.support.PropertiesLoaderSupport: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<javax.security.auth.Subject: int hashCode()>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.nodes.XmlDeclaration: java.lang.String toString()>
<java.util.Collections$UnmodifiableMap: void forEach(java.util.function.BiConsumer)>-><java.util.Collections$UnmodifiableMap: void forEach(java.util.function.BiConsumer)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: org.thymeleaf.spring5.SpringWebFluxTemplateEngine templateEngine()>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$1: java.util.stream.Stream orderedStream()>
<org.thymeleaf.TemplateEngine: java.util.Set getDialects()>-><java.util.HashSet: boolean add(java.lang.Object)>
<javax.security.auth.Subject: int hashCode()>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration: org.springframework.cache.support.NoOpCacheManager cacheManager()>
<org.springframework.core.io.support.PropertiesLoaderUtils: java.util.Properties loadProperties(org.springframework.core.io.support.EncodedResource)>-><org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource)>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider: java.util.stream.Stream orderedStream()>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>-><java.nio.charset.Charset: java.lang.String name()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSpringTemplateEngine(org.thymeleaf.spring5.SpringTemplateEngine)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(org.springframework.core.ResolvableType)>-><org.springframework.core.ResolvableType: boolean isInstance(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration: org.springframework.boot.autoconfigure.context.MessageSourceProperties messageSourceProperties()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.security.util.ObjectIdentifier: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<java.util.AbstractList: int hashCode()>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.YearMonth: java.lang.String toString()>
<java.util.Objects: int hashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.InternalResourceViewResolver defaultViewResolver()>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setSuffix(java.lang.String)>
<org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: void onClose()>-><org.springframework.context.support.AbstractApplicationContext: void onClose()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureAsyncSupport(org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.apache.catalina.security.SecurityUtil: void doAsPrivilege(java.lang.String,javax.servlet.Servlet,java.lang.Class[],java.lang.Object[],java.security.Principal)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: org.apache.activemq.artemis.jms.server.config.JMSConfiguration artemisJmsConfiguration()>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void addAll(java.util.List,java.util.Collection)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.reflect.Method: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.security.PermissionCollection: java.lang.String toString()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object get(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setNoOpCacheManager(org.springframework.cache.support.NoOpCacheManager)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer$TimeoutRequestFactoryCustomizer: java.lang.reflect.Method findMethod(org.springframework.http.client.ClientHttpRequestFactory)>-><java.lang.StringBuilder: void <init>()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate build(java.lang.Class)>-><org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate configure(org.springframework.web.client.RestTemplate)>
<java.io.File$TempDirectory: java.io.File generateFile(java.lang.String,java.lang.String,java.io.File)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties: boolean isPreferFileSystemAccess()>
<com.fasterxml.jackson.module.paramnames.ParameterNamesModule: void <init>(com.fasterxml.jackson.annotation.JsonCreator$Mode)>-><com.fasterxml.jackson.databind.module.SimpleModule: void <init>(com.fasterxml.jackson.core.Version)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<java.util.Objects: int hashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: org.springframework.beans.factory.ObjectProvider getBeanProvider(org.springframework.core.ResolvableType)>-><org.springframework.beans.factory.support.StaticListableBeanFactory: org.springframework.beans.factory.ObjectProvider getBeanProvider(org.springframework.core.ResolvableType)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.bind.support.ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer()>-><org.springframework.web.bind.support.ConfigurableWebBindingInitializer: void setValidator(org.springframework.validation.Validator)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setResourceHttpRequestHandler(org.springframework.web.servlet.resource.ResourceHttpRequestHandler)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$IsEmpty: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.io.ObjectStreamClass$WeakClassKey: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.classgen.asm.BytecodeVariable: java.lang.String toString()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.Optional: int hashCode()>
<javax.security.auth.SubjectDomainCombiner: void <init>(javax.security.auth.Subject)>-><java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray(java.lang.Object[])>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler)>-><org.springframework.boot.autoconfigure.mustache.MustacheProperties: java.lang.String getSuffix()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors()>-><org.springframework.web.servlet.config.annotation.InterceptorRegistry: java.util.List getInterceptors()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Vector$Itr: boolean hasNext()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><javax.management.MBeanAttributeInfo: int hashCode()>
<javax.security.auth.Subject: int hashCode()>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerAutoConfiguration: org.springframework.test.web.client.MockRestServiceServer createDeferredMockRestServiceServer(org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer)>-><java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSpringApplicationAdminMXBeanRegistrar(org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setOrderedFormContentFilter(org.springframework.boot.web.servlet.filter.OrderedFormContentFilter)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.hibernate.boot.model.naming.Identifier: java.lang.String toString()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.AbstractTemplateViewResolver: void setAllowRequestOverride(boolean)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int hashCode()>-><java.util.Vector$Itr: java.lang.Object next()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate configure(org.springframework.web.client.RestTemplate)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createNativeConnectionFactory(java.lang.Class)>-><java.util.HashMap: void <init>()>
<javax.security.auth.Subject: int hashCode()>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor build()>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor build(java.lang.Class)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: boolean isReplacement(org.springframework.http.converter.HttpMessageConverter,org.springframework.http.converter.HttpMessageConverter)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory doCreateConnectionFactory(java.lang.Class)>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createEmbeddedConnectionFactory(java.lang.Class)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<org.hibernate.boot.model.naming.Identifier: int compareTo(org.hibernate.boot.model.naming.Identifier)>-><org.hibernate.boot.model.naming.Identifier: java.lang.String getCanonicalName()>
<org.springframework.transaction.config.JtaTransactionManagerFactoryBean: void <init>()>-><java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers: void <init>(java.util.Collection)>-><java.lang.Object: void <init>()>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getObject()>-><org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor openEntityManagerInViewInterceptor()>-><org.apache.commons.logging.LogAdapter$Log4jLog: void warn(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.temporal.ChronoUnit: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer: void <init>(javax.servlet.ServletContext)>-><java.util.HashMap: void <init>()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<org.springframework.boot.info.GitProperties: java.lang.String coerceToEpoch(java.lang.String)>-><java.text.SimpleDateFormat: void <init>(java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: int hashCode()>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void <init>()>-><java.util.concurrent.ConcurrentHashMap: void <init>(int)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.QueryServiceConfig getQueryServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints$CouchbaseService getQueryservice()>
<org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: void <init>()>-><org.springframework.web.context.support.GenericWebApplicationContext: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer: void <init>(javax.servlet.ServletContext)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setThymeleafReactiveViewResolver(org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int hashCode()>-><java.util.HashMap$HashIterator: boolean hasNext()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.asm.MemberSubstitution$Replacement$ForElementMatchers$Factory: int hashCode()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider getDataSourcePoolMetadataProvider()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration: org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor embeddedDataSourceBeanFactoryPostProcessor()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.temporal.IsoFields$Field$1: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration: org.springframework.boot.autoconfigure.http.HttpMessageConverters messageConverters()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.Validator getValidator()>-><java.util.ArrayList: java.util.Iterator iterator()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.BuildProperties buildProperties()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.security.provider.PolicyFile$SelfPermission: int hashCode()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><javax.security.auth.Subject: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createNativeConnectionFactory(java.lang.Class)>-><java.lang.Class: java.lang.String getName()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: org.apache.activemq.artemis.jms.server.embedded.EmbeddedJMS artemisServer(org.apache.activemq.artemis.core.config.Configuration,org.apache.activemq.artemis.jms.server.config.JMSConfiguration)>-><org.apache.activemq.artemis.jms.server.embedded.EmbeddedJMS: org.apache.activemq.artemis.jms.server.embedded.EmbeddedJMS setRegistry(org.apache.activemq.artemis.spi.core.naming.BindingRegistry)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionWrapper: void setProperty(java.lang.String,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: javax.management.MBeanServer getMBeanServer()>
<org.apache.catalina.core.ApplicationFilterChain: void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>-><org.springframework.mock.web.MockHttpServletRequest: java.security.Principal getUserPrincipal()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setStringHttpMessageConverter(org.springframework.http.converter.StringHttpMessageConverter)>
<org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder cbor()>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder$CborFactoryInitializer: com.fasterxml.jackson.core.JsonFactory create()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<org.springframework.boot.task.TaskSchedulerBuilder: void <init>(java.lang.Integer,java.lang.String,java.util.Set)>-><java.lang.Object: void <init>()>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer$TimeoutRequestFactoryCustomizer: void customize(org.springframework.http.client.ClientHttpRequestFactory)>-><java.lang.Math: int toIntExact(long)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<org.springframework.util.ReflectionUtils: java.lang.Object getField(java.lang.reflect.Field,java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.mock.web.HeaderValueHolder: org.springframework.mock.web.HeaderValueHolder getByName(java.util.Map,java.lang.String)>-><java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.test.mock.web.SpringBootMockServletContext: java.lang.String getResourceLocation(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.security.util.DerValue: java.lang.String toString()>
<javax.security.auth.Subject: int hashCode()>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.security.UnresolvedPermission: java.lang.String toString()>
<org.springframework.boot.util.LambdaSafe$Callbacks: void <init>(java.lang.Class,java.util.Collection,java.lang.Object,java.lang.Object[],org.springframework.boot.util.LambdaSafe$1)>-><org.springframework.boot.util.LambdaSafe$Callbacks: void <init>(java.lang.Class,java.util.Collection,java.lang.Object,java.lang.Object[])>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.AbstractMap$SimpleEntry: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.asm.Handle: java.lang.String toString()>
<javax.security.auth.Subject: int hashCode()>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: java.sql.Connection getConnection()>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: java.sql.Connection getConnection()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><ch.qos.logback.core.subst.Node: int hashCode()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>-><java.lang.String: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$IndexEquals: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><net.bytebuddy.description.annotation.AnnotationValue$ForConstant: java.lang.String toString()>
<java.lang.reflect.Field: int hashCode()>-><java.lang.reflect.Field: java.lang.String getName()>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.Class)>-><org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.security.CodeSigner: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><javax.security.auth.Subject: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: org.apache.activemq.artemis.jms.server.config.JMSConfiguration artemisJmsConfiguration()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.ResourceRegionHttpMessageConverter: void <init>()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<nz.net.ultraq.thymeleaf.LayoutDialect: void <init>()>-><nz.net.ultraq.thymeleaf.LayoutDialect: org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.Validator getValidator()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.temporal.WeekFields$ComputedDayOfField: java.lang.String toString()>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: int hashCode()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<java.security.AccessControlContext: void <init>(java.security.AccessControlContext,java.security.DomainCombiner)>-><java.security.AccessControlContext: void <init>(java.security.AccessControlContext,java.security.DomainCombiner,boolean)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerReactiveWebConfiguration: org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer freeMarkerConfigurer()>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(org.springframework.core.ResolvableType)>-><org.springframework.util.StringUtils: java.lang.String[] toStringArray(java.util.Collection)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport$NoOpValidator: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(org.springframework.core.ResolvableType)>-><java.util.HashMap$Node: java.lang.Object getKey()>
<org.springframework.web.servlet.handler.SimpleUrlHandlerMapping: void setUrlMap(java.util.Map)>-><java.util.HashMap: void putAll(java.util.Map)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerAutoConfiguration: org.springframework.test.web.client.MockRestServiceServer mockRestServiceServer(org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer)>-><org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerAutoConfiguration: org.springframework.test.web.client.MockRestServiceServer createDeferredMockRestServiceServer(org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer)>
<javax.security.auth.Subject: int hashCode()>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor(org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.thymeleaf.templateresolver.AbstractTemplateResolver: void setCheckExistence(boolean)>
<java.io.DeleteOnExitHook: void runHooks()>-><java.io.File: boolean delete()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.Object: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.context.MessageSourceProperties: void <init>()>-><java.lang.Object: void <init>()>
<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object[])>-><org.slf4j.event.EventRecodingLogger: void warn(java.lang.String,java.lang.Object[])>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean compareEqual(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>-><org.springframework.web.servlet.handler.AbstractHandlerMapping: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver thymeleafViewResolver(org.thymeleaf.spring5.ISpringWebFluxTemplateEngine)>-><org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver: void <init>()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object remove(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder messageConverters(java.util.Collection)>-><org.springframework.boot.web.client.RestTemplateBuilder: void <init>(boolean,java.lang.String,java.util.Set,java.util.function.Supplier,org.springframework.web.util.UriTemplateHandler,org.springframework.web.client.ResponseErrorHandler,org.springframework.http.client.support.BasicAuthenticationInterceptor,java.util.Set,org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer,java.util.Set)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><javax.security.auth.Subject: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<java.util.LinkedHashMap$LinkedEntrySet: void forEach(java.util.function.Consumer)>-><java.lang.NullPointerException: void <init>()>
<org.springframework.mock.web.MockHttpSession: java.lang.Object getAttribute(java.lang.String)>-><org.springframework.mock.web.MockHttpSession: void assertIsValid()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: void <init>(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ListableBeanFactory)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider: java.lang.Object getIfUnique()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: java.lang.String[] getExcludedViewNames()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><ch.qos.logback.core.joran.action.Action: java.lang.String toString()>
<org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source as(java.util.function.Function)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.ResourceHttpMessageConverter: void <init>(boolean)>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.format.support.FormattingConversionService$AnnotationParserConverter: java.lang.String toString()>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.LocalValidatorFactoryBean defaultValidator()>-><org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: void <init>()>
<net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList$AnnotatedTypeVariable: net.bytebuddy.description.type.TypeList$Generic getUpperBounds()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setType(java.lang.Class)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.Map getDefaultMediaTypes()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><ch.qos.logback.core.status.StatusBase: int hashCode()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.reflect.Constructor: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: java.util.List sortErrorViewResolvers(java.util.List)>-><org.springframework.core.annotation.AnnotationAwareOrderComparator: void sortIfNecessary(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)>-><org.springframework.core.io.ClassPathResource: boolean exists()>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler)>-><org.springframework.web.reactive.result.view.UrlBasedViewResolver: void setOrder(int)>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder customizers(java.util.Collection)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: int compareTo(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: com.fasterxml.jackson.databind.ObjectMapper build()>
<org.springframework.boot.info.BuildProperties: void coerceDate(java.util.Properties,java.lang.String)>-><java.time.format.DateTimeFormatter: java.lang.Object parse(java.lang.CharSequence,java.time.temporal.TemporalQuery)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: int hashCode()>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.xml.SourceHttpMessageConverter: void <init>()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setRequestContextAttribute(java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.security.MessageDigest: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>-><org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver: java.lang.Class requiredViewClass()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory$1: java.util.stream.Stream stream()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSimpleCacheManager(org.springframework.cache.support.SimpleCacheManager)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$1: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory,org.springframework.core.ResolvableType)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.aop.support.AbstractPointcutAdvisor: int hashCode()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><java.util.ArrayList$Itr: java.lang.Object next()>
<javax.security.auth.Subject: java.lang.Object doAsPrivileged(javax.security.auth.Subject,java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>-><java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>
<org.springframework.web.filter.FormContentFilter: void <init>()>-><org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.TreeMap$Entry: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void forEach(java.util.function.Consumer)>-><java.util.LinkedHashMap$LinkedKeySet: void forEach(java.util.function.Consumer)>
<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object[])>-><org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object[])>
<org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration: void addInitParameters(org.springframework.boot.web.servlet.DynamicRegistrationBean)>-><org.springframework.boot.autoconfigure.jersey.JerseyProperties: java.util.Map getInit()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.core.convert.TypeDescriptor: int hashCode()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setCorsConfigurations(java.util.Map)>-><org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.springframework.boot.autoconfigure.validation.ValidatorAdapter: org.springframework.validation.Validator create()>-><org.springframework.boot.autoconfigure.validation.ValidatorAdapter: org.springframework.validation.Validator wrap(org.springframework.validation.Validator,boolean)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<org.springframework.jmx.export.MBeanExporter: void setAutodetectMode(int)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.QueryServiceConfig getQueryServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><com.couchbase.client.core.env.QueryServiceConfig: com.couchbase.client.core.env.QueryServiceConfig create(int,int)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration: org.thymeleaf.spring5.SpringTemplateEngine templateEngine()>-><org.thymeleaf.spring5.SpringTemplateEngine: void setEnableSpringELCompiler(boolean)>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>-><java.util.Collections$SingletonList: void forEach(java.util.function.Consumer)>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.ByteArrayHttpMessageConverter: void <init>()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.mail.javamail.JavaMailSenderImpl: void setJavaMailProperties(java.util.Properties)>
<org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>-><java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.StringHttpMessageConverter: void <init>()>
<org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration: org.springframework.test.web.servlet.setup.DefaultMockMvcBuilder mockMvcBuilder(java.util.List)>-><org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration$MockMvcDispatcherServletCustomizer: void <init>(org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler: void <init>()>-><org.springframework.util.ConcurrentReferenceHashMap: void <init>(int,org.springframework.util.ConcurrentReferenceHashMap$ReferenceType)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJackson2ObjectMapperBuilder(org.springframework.http.converter.json.Jackson2ObjectMapperBuilder)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.runtime.metaclass.ReflectionMetaMethod: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.util.locale.provider.RuleBasedBreakIterator: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.reflect.Proxy$KeyX: int hashCode()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.net.URI: int compareTo(java.lang.Object)>
<org.thymeleaf.templateresolver.AbstractTemplateResolver: void <init>()>-><org.thymeleaf.util.PatternSpec: void <init>()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><org.springframework.web.servlet.handler.AbstractUrlHandlerMapping: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder smile()>
<org.springframework.web.util.DefaultUriBuilderFactory: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>-><java.util.ArrayList: void <init>()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSpringBootMockMvcBuilderCustomizer(org.springframework.boot.test.autoconfigure.web.servlet.SpringBootMockMvcBuilderCustomizer)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.lang.Short: int compareTo(java.lang.Object)>
<org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>-><org.springframework.http.MediaType: void <init>(java.lang.String,java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.batch.BatchProperties getBatchPropertiesInstance()>-><org.springframework.boot.autoconfigure.batch.BatchProperties: void setSchema(java.lang.String)>
<org.springframework.beans.factory.support.StaticListableBeanFactory$1: void <init>(org.springframework.beans.factory.support.StaticListableBeanFactory,org.springframework.core.ResolvableType)>-><java.lang.Object: void <init>()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><javax.security.auth.Subject: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.invoke.LambdaForm: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration: void <init>(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,java.util.Collection,org.springframework.beans.factory.ObjectProvider)>-><groovy.lang.EmptyRange: void <init>(java.lang.Comparable)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.nodes.TextNode: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean: void <init>(org.springframework.web.servlet.DispatcherServlet,java.lang.String)>
<org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration: org.springframework.boot.web.servlet.ServletRegistrationBean jerseyServletRegistration(org.springframework.boot.autoconfigure.web.servlet.JerseyApplicationPath)>-><org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration: void addInitParameters(org.springframework.boot.web.servlet.DynamicRegistrationBean)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<org.thymeleaf.spring5.view.ThymeleafViewResolver: void <init>()>-><org.springframework.web.servlet.view.AbstractCachingViewResolver: void <init>()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>-><org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>
<org.springframework.http.converter.json.Jackson2ObjectMapperBuilder$CborFactoryInitializer: void <init>(org.springframework.http.converter.json.Jackson2ObjectMapperBuilder$1)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder$CborFactoryInitializer: void <init>()>
<org.springframework.core.io.FileSystemResourceLoader: org.springframework.core.io.Resource getResourceByPath(java.lang.String)>-><java.lang.String: java.lang.String substring(int)>
<org.thymeleaf.spring5.view.ThymeleafViewResolver: void <init>()>-><java.util.LinkedHashMap: void <init>(int)>
<org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source as(java.util.function.Function)>-><org.springframework.boot.context.properties.PropertyMapper$Source: void <init>(java.util.function.Supplier,java.util.function.Predicate)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor persistenceExceptionTranslationPostProcessor(org.springframework.core.env.Environment)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: org.apache.activemq.artemis.jms.server.config.JMSConfiguration artemisJmsConfiguration()>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void addQueues(org.apache.activemq.artemis.jms.server.config.JMSConfiguration,java.lang.String[])>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.boot.test.mock.web.SpringBootMockServletContext: java.net.URL getResource(java.lang.String)>-><org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.web.reactive.result.view.MustacheViewResolver: void <init>(com.samskivert.mustache.Mustache$Compiler)>-><org.springframework.boot.web.reactive.result.view.MustacheViewResolver: java.lang.Class requiredViewClass()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers platformTransactionManagerCustomizers(org.springframework.beans.factory.ObjectProvider)>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(org.springframework.core.ResolvableType)>-><java.lang.Class: boolean isAssignableFrom(java.lang.Class)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><java.lang.Boolean: boolean booleanValue()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setConnectionFactory(javax.jms.ConnectionFactory)>
<javax.security.auth.Subject: int hashCode()>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: org.springframework.boot.util.LambdaSafe$LambdaSafeCallback withLogger(java.lang.Class)>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<org.springframework.boot.autoconfigure.jmx.ParentAwareNamingStrategy: void <init>(org.springframework.jmx.export.metadata.JmxAttributeSource)>-><org.springframework.jmx.export.naming.MetadataNamingStrategy: void <init>(org.springframework.jmx.export.metadata.JmxAttributeSource)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$OptionalPathExtensionContentNegotiationStrategy: void <init>(org.springframework.web.accept.ContentNegotiationStrategy)>-><java.lang.Object: void <init>()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.mock.web.MockServletContext: void <init>(java.lang.String,org.springframework.core.io.ResourceLoader)>-><java.lang.Object: java.lang.Class getClass()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void forEach(java.util.function.Consumer)>-><java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>
<org.thymeleaf.TemplateEngine: java.util.Set getDialects()>-><java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
<org.springframework.boot.test.mock.web.SpringBootMockServletContext: java.net.URL getResource(java.lang.String)>-><java.net.URI: java.net.URL toURL()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.lang.reflect.Field: sun.reflect.generics.repository.FieldRepository getGenericInfo()>-><java.lang.reflect.Field: sun.reflect.generics.factory.GenericsFactory getFactory()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration: org.springframework.boot.test.autoconfigure.web.servlet.SpringBootMockMvcBuilderCustomizer springBootMockMvcBuilderCustomizer()>
<org.springframework.beans.factory.support.StaticListableBeanFactory$1: java.lang.Object getIfUnique()>-><org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)>
<org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean compareEqual(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<org.springframework.boot.test.autoconfigure.json.JsonTestersAutoConfiguration$JsonMarshalTestersBeanPostProcessor: void <init>()>-><org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessorAdapter: void <init>()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.mock.web.MockHttpServletRequest: java.lang.StringBuffer getRequestURL()>-><java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>-><java.lang.Class: boolean isInstance(java.lang.Object)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJavaDate()>-><org.springframework.format.datetime.DateFormatterRegistrar: void registerFormatters(org.springframework.format.FormatterRegistry)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration: void <init>(javax.sql.DataSource,org.springframework.beans.factory.ObjectProvider)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setStandardServletMultipartResolver(org.springframework.web.multipart.support.StandardServletMultipartResolver)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer getSortHandlerMethodArgumentResolverCustomizer()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<org.codehaus.groovy.GroovyBugError: java.lang.String getMessage()>-><org.hibernate.QueryException: java.lang.String getMessage()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration: void <init>(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,java.util.Collection,org.springframework.beans.factory.ObjectProvider)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setName(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder customizers(java.lang.Iterable)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.web.servlet.handler.HandlerInterceptorAdapter: void <init>()>
<org.springframework.boot.info.GitProperties: java.util.Properties processEntries(java.util.Properties)>-><java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate$1: void <init>(org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate,int,float,boolean)>-><java.util.LinkedHashMap: void <init>(int,float,boolean)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: int compareTo(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void <init>()>-><org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void <init>(java.time.Duration,java.time.Duration)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$Record: java.lang.String toString()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object remove(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.validation.Validator mvcValidator()>-><org.springframework.boot.autoconfigure.validation.ValidatorAdapter: org.springframework.validation.Validator get(org.springframework.context.ApplicationContext,org.springframework.validation.Validator)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder customizers(java.lang.Iterable)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<javax.security.auth.Subject: int hashCode()>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureAsyncSupport(org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: void <init>(org.springframework.beans.factory.ListableBeanFactory,org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapReactiveProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.util.function.Supplier)>
<groovy.util.ProxyGenerator: org.codehaus.groovy.runtime.ProxyGeneratorAdapter createAdapter(java.util.Map,java.util.List,java.lang.Class,java.lang.Class)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.task.TaskSchedulingProperties getTaskSchedulingPropertiesInstance()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setCorsConfigurations(java.util.Map)>-><java.util.HashMap: void putAll(java.util.Map)>
<javax.security.auth.Subject: java.lang.Object doAsPrivileged(javax.security.auth.Subject,java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>-><java.lang.System: java.lang.SecurityManager getSecurityManager()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.mail.javamail.JavaMailSenderImpl: void setPort(int)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>-><java.util.AbstractSet: boolean equals(java.lang.Object)>
<java.util.HashMap$KeySet: void forEach(java.util.function.Consumer)>-><java.lang.NullPointerException: void <init>()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.util.locale.UnicodeLocaleExtension: java.lang.String toString()>
<java.util.AbstractList: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<org.hibernate.boot.model.naming.Identifier: java.lang.String render()>-><java.lang.StringBuilder: void <init>()>
<org.hibernate.boot.model.naming.Identifier: java.lang.String render()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.apache.catalina.security.SecurityUtil: java.lang.reflect.Method findMethod(java.lang.reflect.Method[],java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver: void setExcludedViewNames(java.lang.String[])>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.GroovyBugError: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping welcomePageHandlerMapping(org.springframework.context.ApplicationContext)>-><org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: void <init>(org.springframework.context.ApplicationContext)>
<java.io.File$TempDirectory: java.io.File generateFile(java.lang.String,java.lang.String,java.io.File)>-><java.lang.StringBuilder: void <init>()>
<org.springframework.web.context.support.ServletContextResource: java.io.InputStream getInputStream()>-><org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setAddress(java.net.InetAddress)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source whenHasText()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>-><java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: int hashCode()>
<org.springframework.transaction.config.JtaTransactionManagerFactoryBean: void <init>()>-><java.lang.Object: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.Collections$UnmodifiableList: int hashCode()>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: org.springframework.boot.util.LambdaSafe$LambdaSafeCallback withLogger(org.apache.commons.logging.Log)>-><org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: org.springframework.boot.util.LambdaSafe$LambdaSafeCallback self()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors()>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void addInterceptors(org.springframework.web.servlet.config.annotation.InterceptorRegistry)>
<javax.security.auth.Subject$SecureSet: void <init>(javax.security.auth.Subject,int)>-><java.util.AbstractSet: void <init>()>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer$TimeoutRequestFactoryCustomizer: void customize(org.springframework.http.client.ClientHttpRequestFactory)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.IdentityHashMap$Values: java.util.Iterator iterator()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder poolSize(int)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.Package: int hashCode()>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration: org.springframework.boot.jackson.JsonComponentModule jsonComponentModule()>-><org.springframework.boot.jackson.JsonComponentModule: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><javax.crypto.CryptoAllPermission: int hashCode()>
<org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)>-><org.springframework.web.context.support.ServletContextResource: boolean exists()>
<org.springframework.boot.util.LambdaSafe$Callbacks: void invoke(java.util.function.Consumer)>-><java.util.Collections$EmptyList: void forEach(java.util.function.Consumer)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties getArtemisPropertiesInstance()>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties: void <init>()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><org.springframework.web.client.RestTemplate: void <init>()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.hazelcast.HazelcastServerConfiguration$HazelcastServerConfigFileConfiguration: com.hazelcast.core.HazelcastInstance hazelcastInstance(org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration: void <init>(org.springframework.context.ApplicationContext)>
<org.thymeleaf.templateresolver.AbstractTemplateResolver: void <init>()>-><java.lang.Object: java.lang.Class getClass()>
<java.security.AccessControlContext: boolean equalContext(java.security.AccessControlContext)>-><java.lang.Object: boolean equals(java.lang.Object)>
<org.springframework.boot.test.autoconfigure.web.servlet.SpringBootMockMvcBuilderCustomizer: void <init>(org.springframework.web.context.WebApplicationContext)>-><java.lang.Object: void <init>()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<javax.security.auth.Subject: int hashCode()>-><javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>
<org.springframework.boot.web.server.AbstractConfigurableWebServerFactory: void <init>()>-><java.util.LinkedHashSet: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$IndexGreaterThan: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.validation.Validator mvcValidator()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.validation.Validator mvcValidator()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.reflect.Proxy$Key2: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<org.springframework.http.server.reactive.UndertowHeadersAdapter$EntryIterator: void <init>(org.springframework.http.server.reactive.UndertowHeadersAdapter)>-><org.springframework.http.server.reactive.UndertowHeadersAdapter: io.undertow.util.HeaderMap access$100(org.springframework.http.server.reactive.UndertowHeadersAdapter)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void <init>(java.lang.String)>-><org.springframework.format.support.DefaultFormattingConversionService: void <init>(boolean)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><ch.qos.logback.core.subst.Token: java.lang.String toString()>
<org.thymeleaf.TemplateEngine: java.util.Set getDialects()>-><org.thymeleaf.DialectConfiguration: org.thymeleaf.dialect.IDialect getDialect()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration: void <init>(org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform: org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform get()>-><org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform: org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform[] values()>
<java.text.AttributeEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration$JdbcTemplateConfiguration: org.springframework.jdbc.core.JdbcTemplate jdbcTemplate()>-><org.springframework.jdbc.core.JdbcTemplate: void <init>(javax.sql.DataSource)>
<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setLocations(java.util.List)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder threadNamePrefix(java.lang.String)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.security.x509.RDN: java.lang.String toString()>
<javax.security.auth.Subject: int hashCode()>-><java.util.ArrayList$Itr: boolean hasNext()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: org.springframework.boot.web.client.RestTemplateBuilder restTemplateBuilder()>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$1: java.lang.Object getIfUnique()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor openEntityManagerInViewInterceptor()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.security.provider.PolicyParser$PermissionEntry: int hashCode()>
<org.springframework.boot.info.GitProperties: void coercePropertyToEpoch(java.util.Properties,java.lang.String)>-><java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: int compareTo(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate configure(org.springframework.web.client.RestTemplate)>-><java.util.ArrayList: void <init>(java.util.Collection)>
<javax.security.auth.Subject: int hashCode()>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<java.io.File$TempDirectory: java.io.File generateFile(java.lang.String,java.lang.String,java.io.File)>-><java.util.Random: long nextLong()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.format.support.FormattingConversionService mvcConversionService()>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void addFormatters(org.springframework.format.FormatterRegistry)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.expr.TupleExpression: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.net.URI: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl: java.lang.Boolean getEnabled()>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<groovy.lang.EmptyRange: java.lang.Comparable remove(int)>-><java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.PropertyPermission: int hashCode()>
<org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers: org.springframework.cache.CacheManager customize(org.springframework.cache.CacheManager)>-><org.springframework.boot.util.LambdaSafe: org.springframework.boot.util.LambdaSafe$Callbacks callbacks(java.lang.Class,java.util.Collection,java.lang.Object,java.lang.Object[])>
<org.apache.catalina.core.ApplicationFilterChain: void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>-><java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<org.jsoup.helper.StringUtil: java.lang.String join(java.util.Iterator,java.lang.String)>-><javax.security.auth.Subject: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.mail.MessagingException: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void setRootViewName(java.lang.String)>-><org.springframework.web.servlet.mvc.ParameterizableViewController: void setViewName(java.lang.String)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.OffsetDateTime: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.core.convert.support.GenericConversionService$ConverterAdapter: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: void <init>(javax.security.auth.Subject,int)>-><java.util.LinkedList: void <init>()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer: void <init>()>-><java.util.ArrayList: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><javax.security.auth.Subject: int hashCode()>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler)>-><org.springframework.web.reactive.result.view.UrlBasedViewResolver: void setSuffix(java.lang.String)>
<org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor: void <init>()>-><org.springframework.orm.jpa.EntityManagerFactoryAccessor: void <init>()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setGenerateUniqueName(boolean)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><ch.qos.logback.core.joran.spi.ElementSelector: int hashCode()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<groovy.lang.MetaClassImpl: void setProperties(java.lang.Object,java.util.Map)>-><javax.security.auth.Subject: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setRestTemplateBuilder(org.springframework.boot.web.client.RestTemplateBuilder)>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.net.SocketImpl: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.EnumMap$KeySet: java.util.Iterator iterator()>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>-><org.springframework.web.filter.CharacterEncodingFilter: void setForceResponseEncoding(boolean)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration: org.springframework.web.servlet.DispatcherServlet dispatcherServlet(org.springframework.test.web.servlet.MockMvc)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.batch.BatchProperties getBatchPropertiesInstance()>-><org.springframework.boot.autoconfigure.batch.BatchProperties: void setTablePrefix(java.lang.String)>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<org.springframework.mock.web.MockHttpSession: void <init>(javax.servlet.ServletContext,java.lang.String)>-><java.lang.Integer: java.lang.String toString(int)>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter mappingJackson2HttpMessageConverter(com.fasterxml.jackson.databind.ObjectMapper)>-><org.springframework.http.converter.json.MappingJackson2HttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.time.zone.ZoneOffsetTransition: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider findProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>-><java.util.ArrayList$Itr: boolean hasNext()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.core.annotation.AnnotationUtils$AliasDescriptor: java.lang.String toString()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addFormatters(org.springframework.format.FormatterRegistry)>-><java.util.ArrayList$Itr: boolean hasNext()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.format.Parsed: java.lang.String toString()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<sun.reflect.generics.repository.FieldRepository: sun.reflect.generics.tree.Tree parse(java.lang.String)>-><sun.reflect.generics.repository.FieldRepository: sun.reflect.generics.tree.TypeSignature parse(java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.reflect.WeakCache$CacheValue: int hashCode()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: boolean welcomeTemplateExists(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext)>-><org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider getProvider(java.lang.String,org.springframework.context.ApplicationContext)>
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.Object getBean(java.lang.Class)>-><org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.Class)>
<org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: org.springframework.boot.web.client.RestTemplateBuilder restTemplateBuilder()>-><org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateCustomizer[])>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><jdk.net.ExtendedSocketOptions$ExtSocketOption: java.lang.String toString()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void setUseRegisteredSuffixPatternMatch(boolean)>
<org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter: void <init>()>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: com.fasterxml.jackson.databind.ObjectMapper build()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: java.util.List resolveFaviconLocations()>-><java.util.ArrayList: boolean add(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration: void <init>(org.springframework.beans.factory.ObjectProvider,org.springframework.core.env.Environment)>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class)>-><org.springframework.core.ResolvableType: org.springframework.core.ResolvableType forClass(java.lang.Class)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setTaskExecutor(org.springframework.core.task.AsyncTaskExecutor)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.Instant: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void <init>(org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$1: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory,org.springframework.core.ResolvableType)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.task.TaskExecutorBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.lang.Iterable: void forEach(java.util.function.Consumer)>
<javax.security.auth.Subject: int hashCode()>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<nz.net.ultraq.thymeleaf.LayoutDialect: org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray()>-><org.codehaus.groovy.runtime.callsite.CallSiteArray: void <init>(java.lang.Class,java.lang.String[])>
<org.springframework.context.annotation.MBeanExportConfiguration: org.springframework.jmx.export.annotation.AnnotationMBeanExporter mbeanExporter()>-><org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>
<org.springframework.boot.util.LambdaSafe: org.springframework.boot.util.LambdaSafe$Callbacks callbacks(java.lang.Class,java.util.Collection,java.lang.Object,java.lang.Object[])>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect: org.thymeleaf.extras.java8time.dialect.Java8TimeDialect java8TimeDialect()>-><org.thymeleaf.extras.java8time.dialect.Java8TimeDialect: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.nodes.DataNode: java.lang.String toString()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: java.lang.String appendCharset(org.springframework.util.MimeType,java.lang.String)>-><org.springframework.util.MimeType: void <init>(org.springframework.util.MimeType,java.util.Map)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.util.Date: int compareTo(java.lang.Object)>
<org.springframework.http.converter.json.Jackson2ObjectMapperBuilder$CborFactoryInitializer: com.fasterxml.jackson.core.JsonFactory create()>-><com.fasterxml.jackson.dataformat.cbor.CBORFactory: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.core.io.support.EncodedResource: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers: org.springframework.cache.CacheManager customize(org.springframework.cache.CacheManager)>-><org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: org.springframework.boot.util.LambdaSafe$LambdaSafeCallback withLogger(java.lang.Class)>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>-><org.springframework.boot.autoconfigure.http.HttpProperties$Encoding: boolean shouldForce(org.springframework.boot.autoconfigure.http.HttpProperties$Encoding$Type)>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<java.text.AttributeEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<java.util.EnumMap: int entryHashCode(int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<javax.security.auth.Subject$2: void <init>(javax.security.auth.Subject,java.security.AccessControlContext)>-><java.lang.Object: void <init>()>
<org.springframework.boot.info.BuildProperties: void coerceDate(java.util.Properties,java.lang.String)>-><java.time.Instant: long toEpochMilli()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.temporal.WeekFields: java.lang.String toString()>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.util.unit.DataSize: int hashCode()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder cbor()>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: void <init>()>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform: org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform get()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription: int hashCode()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback(java.lang.String)>-><org.springframework.beans.BeanUtils: java.lang.Object instantiateClass(java.lang.Class)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.StructuralEvaluator$PreviousSibling: java.lang.String toString()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void configurePartConverters(org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter,java.util.Collection)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List extractPartConverters(org.springframework.http.converter.FormHttpMessageConverter)>
<org.springframework.http.server.reactive.UndertowHeadersAdapter$EntryIterator: java.util.Map$Entry next()>-><org.springframework.http.server.reactive.UndertowHeadersAdapter$HeaderEntry: void <init>(org.springframework.http.server.reactive.UndertowHeadersAdapter,io.undertow.util.HttpString)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(boolean,java.util.Collection)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>
<org.codehaus.groovy.runtime.typehandling.ShortTypeHandling: java.lang.Character castToChar(java.lang.Object)>-><javax.security.auth.Subject: java.lang.String toString()>
<org.springframework.boot.autoconfigure.validation.ValidatorAdapter: org.springframework.validation.Validator create()>-><org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: void setMessageInterpolator(javax.validation.MessageInterpolator)>
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setRequestBodyAdvice(java.util.List)>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<org.springframework.web.filter.OncePerRequestFilter: void <init>()>-><org.springframework.web.filter.GenericFilterBean: void <init>()>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: org.springframework.boot.util.LambdaSafe$LambdaSafeCallback withLogger(org.apache.commons.logging.Log)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer: void <init>()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJodaTime()>-><org.joda.time.format.DateTimeFormatterBuilder: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.Map getCorsConfigurations()>-><org.springframework.web.servlet.config.annotation.CorsRegistry: java.util.Map getCorsConfigurations()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>-><java.lang.SecurityManager: void checkWrite(java.lang.String)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.InternalResourceViewResolver defaultViewResolver()>-><org.springframework.web.servlet.view.InternalResourceViewResolver: void <init>()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setBeanNameViewResolver(org.springframework.web.servlet.view.BeanNameViewResolver)>
<org.springframework.boot.test.mock.web.SpringBootMockServletContext: java.net.URL getResource(java.lang.String)>-><java.io.File: boolean mkdirs()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Vector$Itr: java.lang.Object next()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.Validator getValidator()>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><sun.security.x509.X509CRLEntryImpl: int compareTo(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.core.AttributeAccessorSupport: int hashCode()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.web.context.support.ServletContextResource: java.lang.String getFilename()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.WeakHashMap$Values: java.util.Iterator iterator()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.time.LocalTime: int compareTo(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.hibernate.cache.spi.access.AccessType: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.security.jca.ProviderConfig: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createConnectionFactory(java.lang.Class)>-><java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder()>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider: java.lang.Object getIfUnique()>
<org.springframework.format.datetime.DateFormatterRegistrar: void setFormatter(org.springframework.format.datetime.DateFormatter)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration: org.springframework.security.oauth2.jwt.ReactiveJwtDecoder jwtDecoder()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt: java.lang.String getJwkSetUri()>
<org.springframework.beans.factory.NoUniqueBeanDefinitionException: void <init>(java.lang.Class,java.lang.String[])>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration$JdbcTemplateConfiguration: org.springframework.jdbc.core.JdbcTemplate jdbcTemplate()>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class)>-><org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(org.springframework.core.ResolvableType)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.mvc.method.annotation.JsonViewRequestBodyAdvice: void <init>()>
<org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration: org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver freeMarkerViewResolver()>-><org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties getProperties()>
<org.springframework.boot.info.GitProperties: java.lang.String coerceToEpoch(java.lang.String)>-><java.text.DateFormat: java.util.Date parse(java.lang.String)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.security.provider.PolicyParser$DomainEntry: java.lang.String toString()>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>-><org.springframework.jmx.export.MBeanExporter: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.web.context.support.WebApplicationContextUtils$ResponseObjectFactory: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration: void <init>()>
<org.springframework.web.servlet.mvc.method.annotation.AbstractMappingJacksonResponseBodyAdvice: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.core.annotation.AnnotationAwareOrderComparator: void sortIfNecessary(java.lang.Object)>-><org.springframework.core.annotation.AnnotationAwareOrderComparator: void sort(java.lang.Object[])>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.expr.PropertyExpression: java.lang.String toString()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.time.Duration: int compareTo(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.security.auth.Subject: java.lang.String toString()>
<java.util.EnumMap: int entryHashCode(int)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.bind.support.ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.bind.support.ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer()>
<org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration: void <init>(org.springframework.web.context.WebApplicationContext,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties)>-><org.springframework.boot.web.servlet.context.XmlServletWebServerApplicationContext: void <init>()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDefaultErrorAttributes(org.springframework.boot.web.servlet.error.DefaultErrorAttributes)>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.tree.DoubleSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<java.text.AttributeEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: java.util.List resolveFaviconLocations()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: org.springframework.core.io.Resource getResourceByPath(java.lang.String)>-><org.springframework.web.context.support.GenericWebApplicationContext: javax.servlet.ServletContext getServletContext()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapReactiveProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><java.io.InputStreamReader: void close()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping welcomePageHandlerMapping(org.springframework.context.ApplicationContext)>-><org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.UnsupportedMimeTypeException: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.codehaus.groovy.runtime.NullObject: int hashCode()>
<java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int,java.util.Comparator)>-><org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Object,java.lang.Object)>
<org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.EnumMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: java.util.List resolveFaviconLocations()>-><java.util.ArrayList: void <init>(int)>
<org.springframework.mock.web.MockServletContext: void <init>(java.lang.String,org.springframework.core.io.ResourceLoader)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder queueCapacity(int)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration: org.springframework.http.converter.StringHttpMessageConverter stringHttpMessageConverter()>-><org.springframework.boot.autoconfigure.http.HttpProperties$Encoding: java.nio.charset.Charset getCharset()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addReturnValueHandlers(java.util.List)>-><java.util.ArrayList$Itr: boolean hasNext()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration: org.springframework.boot.web.servlet.filter.OrderedHiddenHttpMethodFilter hiddenHttpMethodFilter()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: java.lang.String toString()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration: org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer tomcatWebServerFactoryCustomizer(org.springframework.core.env.Environment,org.springframework.boot.autoconfigure.web.ServerProperties)>-><org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer: void <init>(org.springframework.core.env.Environment,org.springframework.boot.autoconfigure.web.ServerProperties)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.Locale$LocaleKey: int hashCode()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.AbstractList: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration: void <init>(org.springframework.web.context.WebApplicationContext,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties)>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: void <init>()>
<org.springframework.transaction.config.JtaTransactionManagerFactoryBean: void <init>()>-><org.springframework.transaction.config.JtaTransactionManagerFactoryBean: java.lang.String resolveJtaTransactionManagerClassName()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><javax.security.auth.Subject: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setPropertySourcesPlaceholderConfigurer(org.springframework.context.support.PropertySourcesPlaceholderConfigurer)>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.format.support.FormattingConversionService mvcConversionService()>-><org.springframework.boot.autoconfigure.web.format.WebConversionService: void <init>(java.lang.String)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: org.springframework.http.client.ClientHttpRequestFactory unwrapRequestFactoryIfNecessary(org.springframework.http.client.ClientHttpRequestFactory)>-><org.springframework.util.ReflectionUtils: void makeAccessible(java.lang.reflect.Field)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object resolveBean(org.springframework.core.ResolvableType,java.lang.Object[],boolean)>-><org.springframework.beans.factory.support.StaticListableBeanFactory$1: java.lang.Object getIfUnique()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.ContentNegotiatingViewResolver viewResolver(org.springframework.beans.factory.BeanFactory)>-><org.springframework.web.servlet.view.ContentNegotiatingViewResolver: void <init>()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.Class)>-><org.springframework.beans.factory.NoSuchBeanDefinitionException: void <init>(java.lang.Class)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: org.springframework.cache.Cache createConcurrentMapCache(java.lang.String)>-><org.springframework.cache.concurrent.ConcurrentMapCache: void <init>(java.lang.String,java.util.concurrent.ConcurrentMap,boolean,org.springframework.core.serializer.support.SerializationDelegate)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.apache.catalina.security.SecurityUtil: void doAsPrivilege(java.lang.String,javax.servlet.Filter,java.lang.Class[],java.lang.Object[],java.security.Principal)>-><org.apache.catalina.security.SecurityUtil: java.lang.reflect.Method findMethod(java.lang.reflect.Method[],java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.util.calendar.CalendarDate: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<org.springframework.boot.test.mock.web.SpringBootMockServletContext: boolean exists(java.lang.String)>-><org.springframework.web.context.support.ServletContextResource: boolean exists()>
<sun.util.locale.LocaleUtils: boolean isEmpty(java.util.Set)>-><java.util.AbstractCollection: boolean isEmpty()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.beans.factory.config.RuntimeBeanReference: java.lang.String toString()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.info.InfoProperties: java.util.Properties copy(java.util.Properties)>-><java.util.Properties: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.io.ObjectStreamClass: java.lang.String toString()>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void accept(org.springframework.http.client.ClientHttpRequestFactory)>-><org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer$TimeoutRequestFactoryCustomizer: void <init>(java.time.Duration,java.lang.String)>
<org.thymeleaf.templatemode.TemplateMode: org.thymeleaf.templatemode.TemplateMode parse(java.lang.String)>-><ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object[])>
<org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper alwaysApplyingWhenNonNull()>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper alwaysApplying(org.springframework.boot.context.properties.PropertyMapper$SourceOperator)>
<org.springframework.boot.info.InfoProperties: void <init>(java.util.Properties)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.core.convert.support.GenericConversionService$ConvertersForPair: java.lang.String toString()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<org.springframework.boot.info.BuildProperties: void coerceDate(java.util.Properties,java.lang.String)>-><java.util.Properties: java.lang.String getProperty(java.lang.String)>
<org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver: void <init>()>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setXa(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: java.lang.String toString()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: java.lang.String getMode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<org.hibernate.QueryException: java.lang.String getOriginalMessage()>-><java.lang.Throwable: java.lang.String getMessage()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.slf4j.helpers.SubstituteLogger: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.MethodValidationPostProcessor methodValidationPostProcessor(org.springframework.core.env.Environment,javax.validation.Validator)>-><org.springframework.validation.beanvalidation.MethodValidationPostProcessor: void setValidator(javax.validation.Validator)>
<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: void <init>()>-><java.lang.Object: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<org.springframework.transaction.config.JtaTransactionManagerFactoryBean: void <init>()>-><org.springframework.util.ClassUtils: java.lang.Class forName(java.lang.String,java.lang.ClassLoader)>
<com.fasterxml.jackson.databind.module.SimpleModule: void <init>(com.fasterxml.jackson.core.Version)>-><com.fasterxml.jackson.databind.Module: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>-><java.lang.reflect.Field: java.lang.Class getType()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor applicationTaskExecutor(org.springframework.boot.task.TaskExecutorBuilder)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.mail.javamail.JavaMailSenderImpl: void setDefaultEncoding(java.lang.String)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration: org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager testEntityManager(javax.persistence.EntityManagerFactory)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.hibernate.boot.model.relational.Namespace: int hashCode()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties getArtemisPropertiesInstance()>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties: void setMode(org.springframework.boot.autoconfigure.jms.artemis.ArtemisMode)>
<javax.servlet.http.HttpSessionBindingEvent: void <init>(javax.servlet.http.HttpSession,java.lang.String,java.lang.Object)>-><javax.servlet.http.HttpSessionEvent: void <init>(javax.servlet.http.HttpSession)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.web.ResourceProperties)>-><java.lang.Object: void <init>()>
<org.springframework.boot.test.mock.web.SpringBootMockServletContext: boolean exists(java.lang.String)>-><org.springframework.test.web.servlet.setup.StubWebApplicationContext: org.springframework.core.io.Resource getResource(java.lang.String)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded: java.util.Map generateTransportParameters()>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded: int getServerId()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.hibernate.boot.model.naming.Identifier: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.InterceptorRegistration: void <init>(org.springframework.web.servlet.HandlerInterceptor)>-><java.lang.Object: void <init>()>
<org.springframework.mock.web.MockServletContext: void <init>(java.lang.String,org.springframework.core.io.ResourceLoader)>-><java.util.HashMap: void <init>()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory$1: java.util.stream.Stream stream()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<org.springframework.boot.info.GitProperties: java.lang.String coerceToEpoch(java.lang.String)>-><java.lang.String: java.lang.String valueOf(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.validation.Validator mvcValidator()>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: org.springframework.validation.Validator getValidator()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.AbstractTemplateViewResolver: void setExposeSessionAttributes(boolean)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration: void <init>(org.springframework.web.context.WebApplicationContext,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: org.thymeleaf.spring5.SpringWebFluxTemplateEngine templateEngine()>-><java.lang.Object: java.lang.Class getClass()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientPropertiesRegistrationAdapter: java.util.Map getClientRegistrations(org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties)>-><java.util.HashMap: void <init>()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Bucket couchbaseClient()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Bucket getBucket()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: java.util.List resolveFaviconLocations()>-><java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>
<org.springframework.boot.web.servlet.FilterRegistrationBean: void <init>(javax.servlet.Filter,org.springframework.boot.web.servlet.ServletRegistrationBean[])>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: void <init>(org.springframework.boot.web.servlet.ServletRegistrationBean[])>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void addTopics(org.apache.activemq.artemis.jms.server.config.JMSConfiguration,java.lang.String[])>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>-><org.springframework.web.servlet.config.annotation.PathMatchConfigurer: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>
<org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper alwaysApplying(org.springframework.boot.context.properties.PropertyMapper$SourceOperator)>-><org.springframework.boot.context.properties.PropertyMapper: void <init>(org.springframework.boot.context.properties.PropertyMapper,org.springframework.boot.context.properties.PropertyMapper$SourceOperator)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void setUseTrailingSlashMatch(boolean)>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>-><java.util.HashMap$Values: void forEach(java.util.function.Consumer)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void addTopics(org.apache.activemq.artemis.jms.server.config.JMSConfiguration,java.lang.String[])>-><java.lang.StringBuilder: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$IsOnlyOfType: java.lang.String toString()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<java.util.EnumMap: int entryHashCode(int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source getSource(java.util.function.Supplier)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.util.function.Supplier)>
<org.springframework.web.servlet.config.annotation.InterceptorRegistration: void <init>(org.springframework.web.servlet.HandlerInterceptor)>-><java.util.ArrayList: void <init>()>
<java.security.AccessControlContext: void <init>(java.security.AccessControlContext,java.security.DomainCombiner,boolean)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastServerConfiguration$HazelcastServerConfigFileConfiguration: com.hazelcast.core.HazelcastInstance hazelcastInstance(org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties)>-><org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties: org.springframework.core.io.Resource resolveConfigLocation()>
<org.springframework.transaction.config.JtaTransactionManagerFactoryBean: void <init>()>-><org.springframework.beans.BeanUtils: java.lang.Object instantiateClass(java.lang.Class)>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder messageConverters(java.util.Collection)>-><java.util.LinkedHashSet: void <init>(java.util.Collection)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.jar.Manifest: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><java.lang.String: boolean endsWith(java.lang.String)>
<javax.security.auth.Subject: java.security.AccessControlContext createContext(javax.security.auth.Subject,java.security.AccessControlContext)>-><javax.security.auth.Subject$2: void <init>(javax.security.auth.Subject,java.security.AccessControlContext)>
<java.util.HashMap: int hash(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void forEach(java.util.function.Consumer)>-><java.util.LinkedHashMap$LinkedEntrySet: void forEach(java.util.function.Consumer)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>
<org.springframework.util.ReflectionUtils: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[])>-><java.lang.Class: java.lang.reflect.Method[] getMethods()>
<java.util.HashMap: int hash(java.lang.Object)>-><javax.security.auth.Subject: int hashCode()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: com.hazelcast.core.HazelcastInstance getHazelcastInstance()>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void <init>()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setServerHeader(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getArgumentResolvers()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.MonthDay: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer: org.springframework.web.accept.ContentNegotiationManager buildContentNegotiationManager()>-><org.springframework.web.accept.ContentNegotiationManagerFactoryBean: void addMediaTypes(java.util.Map)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType: int hashCode()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJodaTime()>-><org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar: void setDateFormatter(org.joda.time.format.DateTimeFormatter)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: java.util.List resolveFaviconLocations()>-><java.util.stream.ReferencePipeline: void forEach(java.util.function.Consumer)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: void <init>(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.springframework.context.ApplicationContext)>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler build()>-><org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSpringWebFluxTemplateEngine(org.thymeleaf.spring5.SpringWebFluxTemplateEngine)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.security.util.ObjectIdentifier: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver()>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: void setContentType(java.lang.String)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.Validator getValidator()>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<org.springframework.core.io.support.EncodedResource: java.io.InputStream getInputStream()>-><org.springframework.core.io.FileSystemResource: java.io.InputStream getInputStream()>
<java.util.HashMap: int hash(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void addFormatters(org.springframework.format.FormatterRegistry)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addFormatters(org.springframework.format.FormatterRegistry)>
<sun.reflect.generics.repository.FieldRepository: sun.reflect.generics.repository.FieldRepository make(java.lang.String,sun.reflect.generics.factory.GenericsFactory)>-><sun.reflect.generics.repository.FieldRepository: void <init>(java.lang.String,sun.reflect.generics.factory.GenericsFactory)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: java.lang.String getPrefix()>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)>-><org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>
<org.codehaus.groovy.runtime.ScriptBytecodeAdapter: groovy.lang.MetaClass initMetaClass(java.lang.Object)>-><org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClass getMetaClass(java.lang.Class)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.IdentityHashMap$KeySet: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.core.convert.TypeDescriptor: java.lang.String toString()>
<org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration: org.springframework.boot.autoconfigure.http.HttpMessageConverters messageConverters()>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(java.util.Collection)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.validation.Validator mvcValidator()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport$NoOpValidator: void <init>(org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport$1)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: org.springframework.web.servlet.handler.SimpleUrlHandlerMapping faviconHandlerMapping()>
<org.thymeleaf.templatemode.TemplateMode: org.thymeleaf.templatemode.TemplateMode parse(java.lang.String)>-><org.thymeleaf.TemplateEngine: java.lang.String threadIndex()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.hibernate.tool.schema.Action: java.lang.String toString()>
<javax.security.auth.Subject: int hashCode()>-><java.util.SubList$1: java.lang.Object next()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration: org.springframework.boot.web.servlet.filter.OrderedFormContentFilter formContentFilter()>
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>-><org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.Object getBean(java.lang.String,java.lang.Object[])>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void <init>()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration: void <init>()>
<org.springframework.web.servlet.view.InternalResourceViewResolver: void <init>()>-><org.springframework.web.servlet.view.InternalResourceViewResolver: java.lang.Class requiredViewClass()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>
<javax.security.auth.Subject: java.lang.Object doAsPrivileged(javax.security.auth.Subject,java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>-><java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.time.zone.ZoneOffsetTransitionRule: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: org.apache.activemq.artemis.jms.server.embedded.EmbeddedJMS artemisServer(org.apache.activemq.artemis.core.config.Configuration,org.apache.activemq.artemis.jms.server.config.JMSConfiguration)>
<org.springframework.context.annotation.MBeanExportConfiguration: org.springframework.jmx.export.annotation.AnnotationMBeanExporter mbeanExporter()>-><org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<java.util.Collections$UnmodifiableMap: java.util.Collection values()>-><java.util.Collections$EmptyMap: java.util.Collection values()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter createRequestMappingHandlerAdapter()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: void <init>(org.springframework.boot.autoconfigure.web.ResourceProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ListableBeanFactory,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: void <init>()>
<org.springframework.boot.info.InfoProperties: void <init>(java.util.Properties)>-><java.lang.Object: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.invoke.MemberName: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.expr.MapExpression: java.lang.String toString()>
<org.springframework.mock.web.HeaderValueHolder: org.springframework.mock.web.HeaderValueHolder getByName(java.util.Map,java.lang.String)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><org.springframework.ui.freemarker.FreeMarkerConfigurationFactory: void setTemplateLoaderPaths(java.lang.String[])>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.Thread: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setReactiveWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: boolean isReplacement(org.springframework.http.converter.HttpMessageConverter,org.springframework.http.converter.HttpMessageConverter)>-><org.springframework.util.ClassUtils: boolean isAssignableValue(java.lang.Class,java.lang.Object)>
<org.springframework.jmx.export.MBeanExporter: void setAutodetectMode(int)>-><org.springframework.core.Constants: java.util.Set getValues(java.lang.String)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean compareEqual(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.context.support.DelegatingMessageSource: java.lang.String toString()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: void <init>(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.springframework.context.ApplicationContext)>-><org.springframework.boot.web.servlet.context.XmlServletWebServerApplicationContext: void <init>()>
<java.util.EnumMap: int entryHashCode(int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>-><java.util.Arrays$ArrayList: void forEach(java.util.function.Consumer)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration: org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer resourceHandlerRegistrationCustomizer()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer: void <init>()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver thymeleafViewResolver(org.thymeleaf.spring5.ISpringWebFluxTemplateEngine)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapReactiveProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.format.support.FormattingConversionService$PrinterConverter: java.lang.String toString()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder()>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder queueCapacity(int)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.invoke.InvokerBytecodeGenerator$CpPatch: java.lang.String toString()>
<org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration: org.springframework.http.converter.StringHttpMessageConverter stringHttpMessageConverter()>-><org.springframework.http.converter.StringHttpMessageConverter: void <init>(java.nio.charset.Charset)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.Parameter: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.RegularEnumSet: java.util.Iterator iterator()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.IdentityHashMap$EntryIterator$Entry: int hashCode()>
<org.springframework.mock.web.MockSessionCookieConfig: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.Class)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object getBean(java.lang.Class)>
<org.hibernate.boot.model.relational.Namespace$ComparableHelper: int compare(java.lang.Comparable,java.lang.Comparable)>-><org.hibernate.boot.model.naming.Identifier: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider findProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.apache.catalina.security.SecurityUtil$1: java.lang.Object run()>-><org.apache.catalina.security.SecurityUtil$1: java.lang.Void run()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Servlet: org.springframework.util.MimeType getContentType()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)>-><org.springframework.web.context.support.ServletContextResource: java.net.URL getURL()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.core.io.support.EncodedResource: java.io.Reader getReader()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJavaDate()>-><org.springframework.format.datetime.DateFormatterRegistrar: void <init>()>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: com.hazelcast.core.HazelcastInstance getHazelcastInstance()>-><com.hazelcast.core.Hazelcast: com.hazelcast.core.HazelcastInstance getOrCreateHazelcastInstance(com.hazelcast.config.Config)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.core.io.UrlResource: int hashCode()>
<java.util.concurrent.ConcurrentLinkedQueue: boolean remove(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<org.springframework.context.annotation.MBeanExportConfiguration: org.springframework.jmx.export.annotation.AnnotationMBeanExporter mbeanExporter()>-><org.springframework.context.annotation.MBeanExportConfiguration: void setupRegistrationPolicy(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.text.AttributeEntry: java.lang.String toString()>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>
<org.apache.catalina.security.SecurityUtil: void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)>-><org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>
<org.springframework.mock.web.MockServletContext: void <init>(java.lang.String,org.springframework.core.io.ResourceLoader)>-><java.util.LinkedHashMap: void <init>()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>-><org.apache.catalina.security.SecurityUtil$1: java.lang.Object run()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList: int size()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList: int size()>
<org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setPathMatcher(org.springframework.util.PathMatcher)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void addQueues(org.apache.activemq.artemis.jms.server.config.JMSConfiguration,java.lang.String[])>-><org.apache.activemq.artemis.jms.server.config.impl.JMSQueueConfigurationImpl: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.expr.ConstantExpression: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<org.thymeleaf.spring5.context.webflux.SpringWebFluxEngineContextFactory: void <init>()>-><java.lang.Object: void <init>()>
<java.io.DeleteOnExitHook: void runHooks()>-><java.util.ArrayList: void <init>(java.util.Collection)>
<javax.security.auth.Subject: java.lang.Object doAsPrivileged(javax.security.auth.Subject,java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>-><java.lang.NullPointerException: void <init>(java.lang.String)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>-><java.lang.String: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<org.springframework.mock.web.MockRequestDispatcher: void <init>(java.lang.String)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration: org.springframework.jdbc.datasource.DataSourceTransactionManager transactionManager(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties)>-><org.springframework.jdbc.datasource.DataSourceTransactionManager: void <init>(javax.sql.DataSource)>
<org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setThreadPoolTaskExecutor(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder customizers(java.util.Collection)>-><org.springframework.boot.web.client.RestTemplateBuilder: void <init>(boolean,java.lang.String,java.util.Set,java.util.function.Supplier,org.springframework.web.util.UriTemplateHandler,org.springframework.web.client.ResponseErrorHandler,org.springframework.http.client.support.BasicAuthenticationInterceptor,java.util.Set,org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer,java.util.Set)>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.LocalValidatorFactoryBean defaultValidator()>-><org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: void setMessageInterpolator(javax.validation.MessageInterpolator)>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>-><org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Env: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts getTimeouts()>
<org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar springApplicationAdminRegistrar()>-><org.springframework.beans.factory.ObjectProvider: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>-><java.util.LinkedHashMap: void <init>()>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: com.hazelcast.config.Config getConfig(org.springframework.core.io.Resource)>-><com.hazelcast.config.XmlConfigBuilder: com.hazelcast.config.Config build()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Servlet getServlet()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.time.ZonedDateTime: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: org.thymeleaf.spring5.SpringWebFluxTemplateEngine templateEngine()>-><org.thymeleaf.spring5.SpringWebFluxTemplateEngine: void <init>()>
<org.codehaus.groovy.runtime.InvokerHelper: java.lang.String format(java.lang.Object,boolean,int,boolean)>-><javax.security.auth.Subject: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.hibernate.dialect.function.SQLFunctionTemplate: java.lang.String toString()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.nio.ByteBuffer: int compareTo(java.lang.Object)>
<org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean compareEqual(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration: org.springframework.boot.autoconfigure.jmx.ParentAwareNamingStrategy objectNamingStrategy()>-><org.springframework.boot.autoconfigure.jmx.ParentAwareNamingStrategy: void <init>(org.springframework.jmx.export.metadata.JmxAttributeSource)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: org.thymeleaf.spring5.SpringWebFluxTemplateEngine templateEngine()>-><org.thymeleaf.spring5.SpringTemplateEngine: void setRenderHiddenMarkersBeforeCheckboxes(boolean)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><java.util.Optional: boolean isPresent()>
<java.util.LinkedHashMap$LinkedKeySet: void forEach(java.util.function.Consumer)>-><java.lang.NullPointerException: void <init>()>
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader: void applyPropertyToBeanDefinition(java.lang.String,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.CorsRegistry: java.util.Map getCorsConfigurations()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Collections$UnmodifiableCollection: java.lang.String toString()>
<javax.security.auth.Subject$2: java.security.AccessControlContext run()>-><javax.security.auth.SubjectDomainCombiner: void <init>(javax.security.auth.Subject)>
<org.thymeleaf.spring5.SpringTemplateEngine: void setRenderHiddenMarkersBeforeCheckboxes(boolean)>-><org.thymeleaf.spring5.dialect.SpringStandardDialect: void setRenderHiddenMarkersBeforeCheckboxes(boolean)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.reflect.annotation.TypeAnnotation: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void configureAsyncSupport(org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureAsyncSupport(org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.description.method.ParameterDescription$AbstractBase: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$Record: int hashCode()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.core.io.UrlResource: java.lang.String getFilename()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.expr.ClosureExpression: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.StringBuilder: void <init>()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors()>
<org.apache.catalina.security.SecurityUtil: void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)>-><org.springframework.mock.web.MockHttpSession: java.lang.Object getAttribute(java.lang.String)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration: org.springframework.jdbc.datasource.DataSourceTransactionManager transactionManager(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties)>
<org.springframework.util.MimeType: void <init>(org.springframework.util.MimeType,java.util.Map)>-><org.springframework.util.MimeType: java.lang.String getSubtype()>
<org.springframework.mock.web.MockHttpServletRequest: java.lang.StringBuffer getRequestURL()>-><java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.Boolean: int hashCode()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.context.XmlServletWebServerApplicationContext: void <init>()>-><org.springframework.beans.factory.support.AbstractBeanDefinitionReader: void setEnvironment(org.springframework.core.env.Environment)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.Hashtable$Entry: int hashCode()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.util.Calendar: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>-><org.springframework.boot.autoconfigure.http.HttpProperties$Encoding: java.nio.charset.Charset getCharset()>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>-><org.springframework.jmx.export.MBeanExporter: void setAutodetectMode(int)>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getObject()>-><javax.validation.Validation: javax.validation.bootstrap.GenericBootstrap byDefaultProvider()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: org.springframework.mail.javamail.JavaMailSenderImpl mailSender()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder allowCoreThreadTimeOut(boolean)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>-><javax.security.auth.Subject: java.lang.String toString()>
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>-><java.io.IOException: void <init>(java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.Collections$SynchronizedSet: int hashCode()>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler)>-><org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: java.lang.String getCharsetName()>
<org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>-><java.util.AbstractSet: boolean equals(java.lang.Object)>
<synthetic.method.ServletResponseImpl: void <init>()>-><java.lang.Object: void <init>()>
<javax.security.auth.Subject: int hashCode()>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<com.favorites.FavoritesApplication: void main(java.lang.String[])>-><com.favorites.FavoritesApplication: void initBean_synthetic()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.format.DateTimeFormatterBuilder$InstantPrinterParser: java.lang.String toString()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties getArtemisPropertiesInstance()>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties: void setPort(int)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.codehaus.groovy.reflection.CachedMethod: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: org.springframework.web.servlet.handler.SimpleUrlHandlerMapping faviconHandlerMapping()>-><org.springframework.web.servlet.handler.AbstractHandlerMapping: void setOrder(int)>
<org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.test.mock.web.SpringBootMockServletContext: java.lang.String getResourceLocation(java.lang.String)>-><java.lang.String: boolean startsWith(java.lang.String)>
<org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientRegistrationRepositoryConfiguration: org.springframework.security.oauth2.client.registration.InMemoryClientRegistrationRepository clientRegistrationRepository()>-><java.util.HashMap: java.util.Collection values()>
<org.springframework.web.servlet.config.annotation.InterceptorRegistration: void <init>(org.springframework.web.servlet.HandlerInterceptor)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.transaction.config.JtaTransactionManagerFactoryBean: void <init>()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration: void <init>(org.springframework.transaction.PlatformTransactionManager)>-><org.springframework.jdbc.datasource.DataSourceTransactionManager: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>-><java.lang.StringBuilder: void <init>()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: boolean isCache()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder allowCoreThreadTimeOut(boolean)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration: org.springframework.transaction.support.TransactionTemplate transactionTemplate()>-><org.springframework.transaction.support.TransactionTemplate: void <init>(org.springframework.transaction.PlatformTransactionManager)>
<org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration: org.springframework.boot.web.servlet.ServletRegistrationBean jerseyServletRegistration(org.springframework.boot.autoconfigure.web.servlet.JerseyApplicationPath)>-><org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration: java.lang.String getServletRegistrationName()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.nio.charset.Charset: int compareTo(java.lang.Object)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setDateFormat(java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.time.temporal.WeekFields: int hashCode()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(boolean,java.util.Collection)>-><java.util.Collections: java.util.List emptyList()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setWebBindingInitializer(org.springframework.web.bind.support.WebBindingInitializer)>
<org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer: org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer mediaTypes(java.util.Map)>-><java.util.HashMap: void putAll(java.util.Map)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.smile.MappingJackson2SmileHttpMessageConverter: void <init>()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void forEach(java.util.function.Consumer)>-><java.util.Collections$EmptySet: void forEach(java.util.function.Consumer)>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.IdentityHashMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.transaction.config.JtaTransactionManagerFactoryBean: void <init>()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: boolean isReplacement(org.springframework.http.converter.HttpMessageConverter,org.springframework.http.converter.HttpMessageConverter)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setReactiveJwtDecoder(org.springframework.security.oauth2.jwt.ReactiveJwtDecoder)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.ProcessEnvironment$StringValues: int hashCode()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.security.Provider$ServiceKey: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: org.springframework.web.servlet.handler.SimpleUrlHandlerMapping faviconHandlerMapping()>-><org.springframework.web.servlet.handler.SimpleUrlHandlerMapping: void <init>()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFreeMarkerConfigurationFactoryBean(org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean)>
<org.apache.catalina.security.SecurityUtil: void doAsPrivilege(java.lang.String,javax.servlet.Filter,java.lang.Class[],java.lang.Object[],java.security.Principal)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<javax.security.auth.Subject: void <init>()>-><javax.security.auth.Subject$SecureSet: void <init>(javax.security.auth.Subject,int)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.Integer: int hashCode()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder()>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool: int getQueueCapacity()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<javax.security.auth.Subject: int hashCode()>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.web.client.RestTemplateBuilder: void <init>(boolean,java.lang.String,java.util.Set,java.util.function.Supplier,org.springframework.web.util.UriTemplateHandler,org.springframework.web.client.ResponseErrorHandler,org.springframework.http.client.support.BasicAuthenticationInterceptor,java.util.Set,org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer,java.util.Set)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider getProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.lang.String: java.lang.String toString()>
<org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessorAdapter: void <init>()>-><java.lang.Object: void <init>()>
<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: void forEach(java.util.function.Consumer)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>-><java.lang.Enum: int hashCode()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void addArgumentResolvers(java.util.List)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addArgumentResolvers(java.util.List)>
<org.springframework.boot.task.TaskSchedulerBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.util.LinkedHashSet: void <init>(java.util.Collection)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.io.ObjectStreamField: int compareTo(java.lang.Object)>
<org.springframework.context.support.DelegatingMessageSource: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<java.util.TreeMap$Entry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMessageSourceProperties(org.springframework.boot.autoconfigure.context.MessageSourceProperties)>
<org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)>-><org.apache.commons.logging.LogAdapter$Log4jLog: void warn(java.lang.Object,java.lang.Throwable)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>-><org.springframework.web.filter.CharacterEncodingFilter: void setEncoding(java.lang.String)>
<org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration: void <init>(org.springframework.boot.autoconfigure.cache.CacheProperties,org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers)>-><org.springframework.boot.autoconfigure.cache.CacheProperties: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.codehaus.groovy.antlr.LineColumn: int hashCode()>
<org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar springApplicationAdminRegistrar()>-><org.springframework.core.env.AbstractEnvironment: java.lang.String getProperty(java.lang.String,java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.mail.internet.NewsAddress: java.lang.String toString()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl: java.lang.String getKeyStorePassword()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.invoke.LambdaFormEditor$Transform: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.InternalResourceViewResolver defaultViewResolver()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><javax.management.ImmutableDescriptor: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Collections$1: boolean hasNext()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.context.MessageSource getMessageSource()>
<java.lang.reflect.Field: java.lang.annotation.Annotation[] getDeclaredAnnotations()>-><sun.reflect.annotation.AnnotationParser: java.lang.annotation.Annotation[] toArray(java.util.Map)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder()>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool: boolean isAllowCoreThreadTimeout()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration: org.springframework.cache.support.NoOpCacheManager cacheManager()>-><org.springframework.cache.support.NoOpCacheManager: void <init>()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver: void setViewNames(java.lang.String[])>
<java.util.AbstractList: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.format.support.FormattingConversionService$AnnotationPrinterConverter: java.lang.String toString()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>-><org.springframework.boot.context.properties.PropertyMapper$Source: void to(java.util.function.Consumer)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar springApplicationAdminRegistrar()>-><java.util.Spliterators$1Adapter: boolean hasNext()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getReturnValueHandlers()>-><java.util.ArrayList: void <init>()>
<org.springframework.mock.web.MockServletContext: void <init>(java.lang.String,org.springframework.core.io.ResourceLoader)>-><java.io.File: void <init>(java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$AttributeWithValue: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.Long: int hashCode()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: org.thymeleaf.spring5.SpringWebFluxTemplateEngine templateEngine()>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider: java.util.stream.Stream orderedStream()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: java.util.Optional getWelcomePage()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>-><org.springframework.test.web.servlet.setup.StubWebApplicationContext: org.springframework.core.io.Resource getResource(java.lang.String)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.feed.AtomFeedHttpMessageConverter: void <init>()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController basicErrorController(org.springframework.boot.web.servlet.error.ErrorAttributes)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setCustomReturnValueHandlers(java.util.List)>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.lang.Long: int compareTo(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTransactionTemplate(org.springframework.transaction.support.TransactionTemplate)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.lang.Character: int compareTo(java.lang.Object)>
<org.apache.catalina.core.ApplicationFilterChain: void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>-><synthetic.method.ServletRequestImpl: void setAttribute(java.lang.String,java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void configureContentNegotiation(org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts: java.time.Duration getQuery()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><javax.security.auth.Subject: int hashCode()>
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: void <init>(org.springframework.jdbc.core.JdbcOperations)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.test.autoconfigure.web.client.WebClientRestTemplateAutoConfiguration: void <init>()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$IndexLessThan: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.format.DateTimeFormatter: java.lang.String toString()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>-><java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object get(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<java.util.AbstractList: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.stream.SpinedBuffer$OfInt: java.lang.String toString()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: java.lang.String toString()>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupDomain(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>
<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>-><java.lang.Iterable: void forEach(java.util.function.Consumer)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><ch.qos.logback.classic.spi.ClassPackagingData: int hashCode()>
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: org.springframework.core.io.Resource getResource(java.lang.String)>-><org.springframework.core.io.support.PathMatchingResourcePatternResolver: org.springframework.core.io.Resource getResource(java.lang.String)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setRequestBodyAdvice(java.util.List)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureMessageConverters(java.util.List)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.thymeleaf.TemplateEngine: java.lang.String threadIndex()>-><java.lang.Thread: java.lang.Thread currentThread()>
<org.thymeleaf.spring5.SpringTemplateEngine: void setEnableSpringELCompiler(boolean)>-><org.thymeleaf.TemplateEngine: java.util.Set getDialects()>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.web.servlet.error.DefaultErrorAttributes errorAttributes()>-><org.springframework.boot.autoconfigure.web.ServerProperties: org.springframework.boot.autoconfigure.web.ErrorProperties getError()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription: java.lang.String toString()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><javax.security.auth.Subject: int hashCode()>
<org.apache.catalina.security.SecurityUtil: void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)>-><org.springframework.mock.web.MockHttpServletRequest: javax.servlet.http.HttpSession getSession(boolean)>
<org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.jersey.JerseyProperties,org.glassfish.jersey.server.ResourceConfig,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$1: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory,org.springframework.core.ResolvableType)>
<org.springframework.web.filter.FormContentFilter: void <init>()>-><org.springframework.web.filter.OncePerRequestFilter: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.hibernate.dialect.function.StandardSQLFunction: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<java.io.File$TempDirectory: java.io.File generateFile(java.lang.String,java.lang.String,java.io.File)>-><java.lang.String: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper get()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>-><org.springframework.util.MimeType: java.util.Map getParameters()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJMSConfiguration(org.apache.activemq.artemis.jms.server.config.JMSConfiguration)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Vector: java.lang.String toString()>
<org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateCustomizer[])>-><java.lang.Object: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.parser.Tag: java.lang.String toString()>
<java.lang.reflect.Field: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: java.lang.Class getType()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.time.ZoneOffset: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: void configurePartConverters(org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter,java.util.Collection)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.util.calendar.LocalGregorianCalendar$Date: java.lang.String toString()>
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader: void applyPropertyToBeanDefinition(java.lang.String,java.lang.Object)>-><javax.security.auth.Subject: java.lang.String toString()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.cluster.ClusterInfo couchbaseClusterInfo()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Bucket getBucket()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration: void <init>()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.tree.LongSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.Duration: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.time.OffsetTime: int compareTo(java.lang.Object)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.lang.Integer: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.BuildProperties buildProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoProperties: org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build getBuild()>
<org.springframework.mock.web.MockHttpSession: void <init>(javax.servlet.ServletContext,java.lang.String)>-><org.springframework.mock.web.MockServletContext: void <init>()>
<org.apache.catalina.security.SecurityUtil: void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)>-><javax.security.auth.Subject: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.format.DateTimeFormatterBuilder$CharLiteralPrinterParser: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.InterceptorRegistry: java.util.List getInterceptors()>-><java.util.Collection: java.util.stream.Stream stream()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.security.AccessControlContext: void <init>(java.security.AccessControlContext,java.security.DomainCombiner,boolean)>-><java.lang.SecurityManager: void checkPermission(java.security.Permission)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.math.BigInteger: int compareTo(java.lang.Object)>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.AbstractTemplateViewResolver: void setExposeRequestAttributes(boolean)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$Class: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: org.apache.activemq.artemis.jms.server.embedded.EmbeddedJMS artemisServer(org.apache.activemq.artemis.core.config.Configuration,org.apache.activemq.artemis.jms.server.config.JMSConfiguration)>-><org.apache.activemq.artemis.jms.server.embedded.EmbeddedJMS: org.apache.activemq.artemis.jms.server.embedded.EmbeddedJMS setConfiguration(org.apache.activemq.artemis.core.config.Configuration)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.mail.internet.AddressException: java.lang.String toString()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver thymeleafViewResolver(org.thymeleaf.spring5.ISpringWebFluxTemplateEngine)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive getReactive()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection: int hashCode()>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer$TimeoutRequestFactoryCustomizer: java.lang.reflect.Method findMethod(org.springframework.http.client.ClientHttpRequestFactory)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver()>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: void setViewNames(java.lang.String[])>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$IsFirstOfType: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.validation.Validator mvcValidator()>-><java.lang.Object: java.lang.Class getClass()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration: void <init>()>
<org.springframework.format.support.DefaultFormattingConversionService: void <init>(boolean)>-><org.springframework.format.support.DefaultFormattingConversionService: void <init>(org.springframework.util.StringValueResolver,boolean)>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver: void setApplicationContext(org.springframework.context.ApplicationContext)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.CombiningEvaluator$And: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: int hashCode()>
<org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: void configure(com.fasterxml.jackson.databind.ObjectMapper)>-><org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.config.AutowireCapableBeanFactory getAutowireCapableBeanFactory()>
<org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers: void <init>(java.util.Collection)>-><java.util.ArrayList: void <init>(java.util.Collection)>
<sun.text.normalizer.UCharacterProperty: sun.text.normalizer.UCharacterProperty getInstance()>-><org.hibernate.QueryException: java.lang.String getMessage()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.nio.ByteBuffer: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void <init>(org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: org.springframework.web.servlet.handler.SimpleUrlHandlerMapping faviconHandlerMapping()>-><java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int hashCode()>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.util.calendar.Era: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setEmbeddedDatabase(org.springframework.jdbc.datasource.embedded.EmbeddedDatabase)>
<java.lang.reflect.Field: int hashCode()>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<javax.servlet.ServletException: void <init>(java.lang.String,java.lang.Throwable)>-><java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.Character: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.time.zone.ZoneOffsetTransition: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: void <init>(org.springframework.boot.autoconfigure.web.ResourceProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ListableBeanFactory,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>
<org.springframework.web.servlet.mvc.ParameterizableViewController: void <init>()>-><org.springframework.web.servlet.support.WebContentGenerator: void setSupportedMethods(java.lang.String[])>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.security.auth.Subject: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object remove(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver()>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.Locale: int hashCode()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerAutoConfiguration: org.springframework.test.web.client.MockRestServiceServer mockRestServiceServer(org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer)>-><java.lang.IllegalStateException: void <init>(java.lang.Throwable)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setIgnoreDefaultModelOnRedirect(boolean)>
<org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean compareEqual(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts: java.time.Duration getSocketConnect()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.lang.Object)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask: int compareTo(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureContentNegotiation(org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer)>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<java.util.Objects: int hashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><javax.management.ObjectName: int compareTo(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Bound: int hashCode()>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer$TimeoutRequestFactoryCustomizer: void customize(org.springframework.http.client.ClientHttpRequestFactory)>-><org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer$TimeoutRequestFactoryCustomizer: java.lang.reflect.Method findMethod(org.springframework.http.client.ClientHttpRequestFactory)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler)>-><org.springframework.boot.autoconfigure.mustache.MustacheProperties: java.lang.String getPrefix()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.EnumMap$1: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer: java.util.List getDeferredResultInterceptors()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<java.util.TimSort: int gallopRight(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator)>-><org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Object,java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.String: boolean endsWith(java.lang.String)>
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setResponseBodyAdvice(java.util.List)>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void <init>()>-><org.thymeleaf.templateresolver.AbstractTemplateResolver: void <init>()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setSchemaPassword(java.lang.String)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void <init>()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>-><java.lang.Object: java.lang.Class getClass()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.security.pkcs.SignerInfo: java.lang.String toString()>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.repository.AbstractRepository: sun.reflect.generics.visitor.Reifier getReifier()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.GitProperties gitProperties()>-><org.springframework.boot.info.GitProperties: void <init>(java.util.Properties)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setInternalResourceViewResolver(org.springframework.web.servlet.view.InternalResourceViewResolver)>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>-><java.lang.Object: java.lang.Class getClass()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration: org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer reactiveWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration: com.fasterxml.jackson.databind.ObjectMapper jacksonObjectMapper(org.springframework.http.converter.json.Jackson2ObjectMapperBuilder)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder createXmlMapper(boolean)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>-><java.lang.String: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.invoke.MemberName: int hashCode()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getHeader(java.lang.String)>-><org.springframework.mock.web.HeaderValueHolder: org.springframework.mock.web.HeaderValueHolder getByName(java.util.Map,java.lang.String)>
<org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean compareEqual(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><org.codehaus.groovy.runtime.MethodRankHelper$RankableField: int compareTo(java.lang.Object)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider: java.lang.Object getIfUnique()>-><org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>
<org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedTomcat: org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory tomcatReactiveWebServerFactory()>-><org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory: void <init>()>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration: org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver freeMarkerViewResolver()>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void <init>(org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.hibernate.metamodel.model.domain.NavigableRole: java.lang.String toString()>
<org.springframework.boot.util.LambdaSafe$GenericTypeFilter: void <init>()>-><java.lang.Object: void <init>()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider$3: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider,org.springframework.beans.factory.config.DependencyDescriptor)>-><org.springframework.beans.factory.config.DependencyDescriptor: void <init>(org.springframework.beans.factory.config.DependencyDescriptor)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder()>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder taskDecorator(org.springframework.core.task.TaskDecorator)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: java.nio.charset.Charset getEncoding()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties getHazelcastPropertiesInstance()>-><org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties: void setConfig(org.springframework.core.io.Resource)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDispatcherServletPath(org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void addTopics(org.apache.activemq.artemis.jms.server.config.JMSConfiguration,java.lang.String[])>-><org.apache.activemq.artemis.jms.server.config.impl.TopicConfigurationImpl: void <init>()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory doCreateConnectionFactory(java.lang.Class)>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createNativeConnectionFactory(java.lang.Class)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<java.util.AbstractList: int hashCode()>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMessageSource(org.springframework.context.MessageSource)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.filter.RequestContextFilter requestContextFilter()>-><org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter: void <init>()>
<synthetic.method.ServletRequestImpl: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.mock.web.MockServletContext: void <init>(java.lang.String,org.springframework.core.io.ResourceLoader)>-><java.lang.Object: void <init>()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.SubList$1: boolean hasNext()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.util.MimeType: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.nio.charset.CoderResult: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<org.springframework.mock.web.HeaderValueHolder: org.springframework.mock.web.HeaderValueHolder getByName(java.util.Map,java.lang.String)>-><java.util.LinkedHashMap$LinkedKeySet: java.util.Iterator iterator()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.core.env.PropertySource: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.LocalDateTime: java.lang.String toString()>
<java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>-><java.util.Collections$SingletonSet: void forEach(java.util.function.Consumer)>
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>-><java.io.File$TempDirectory: java.io.File location()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration$NamedParameterJdbcTemplateConfiguration: void <init>()>
<org.codehaus.groovy.runtime.typehandling.ShortTypeHandling: java.lang.Enum castToEnum(java.lang.Object,java.lang.Class)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties getHazelcastPropertiesInstance()>-><org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.management.MBeanAttributeInfo: java.lang.String toString()>
<org.apache.catalina.core.ApplicationFilterChain: void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>-><org.springframework.mock.web.MockHttpServletRequest: void setAttribute(java.lang.String,java.lang.Object)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.cglib.core.ClassInfo: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>
<org.thymeleaf.extras.java8time.dialect.Java8TimeExpressionFactory: void <init>()>-><java.lang.Object: void <init>()>
<javax.security.auth.SubjectDomainCombiner: void <init>(javax.security.auth.Subject)>-><javax.security.auth.Subject: java.util.Set getPrincipals()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.io.ObjectStreamClass$FieldReflectorKey: int hashCode()>
<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void forEach(java.util.function.Consumer)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><groovyjarjarantlr.RecognitionException: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.CombiningEvaluator$Or: java.lang.String toString()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.cluster.ClusterInfo couchbaseClusterInfo()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Bucket: java.lang.String getName()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setBucket(com.couchbase.client.java.Bucket)>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: java.lang.String getCharsetName()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<javax.security.auth.Subject: int hashCode()>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<org.hibernate.QueryException: java.lang.String getMessage()>-><java.lang.StringBuilder: void <init>()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.ClassLoader getClassLoader()>-><org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.AbstractList$Itr: boolean hasNext()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setDeferredResultInterceptors(java.util.List)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addArgumentResolvers(java.util.List)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration$JdbcTemplateConfiguration: org.springframework.jdbc.core.JdbcTemplate jdbcTemplate()>-><org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template: int getMaxRows()>
<java.util.Collections$UnmodifiableMap: int hashCode()>-><java.util.Collections$UnmodifiableMap: int hashCode()>
<org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)>-><org.springframework.core.io.UrlResource: java.net.URL getURL()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration: org.springframework.boot.web.servlet.filter.OrderedHiddenHttpMethodFilter hiddenHttpMethodFilter()>-><org.springframework.boot.web.servlet.filter.OrderedHiddenHttpMethodFilter: void <init>()>
<org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>-><org.springframework.util.Assert: void isInstanceOf(java.lang.Class,java.lang.Object,java.lang.String)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setInMemoryClientRegistrationRepository(org.springframework.security.oauth2.client.registration.InMemoryClientRegistrationRepository)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.concurrent.locks.ReentrantLock: java.lang.String toString()>
<org.springframework.test.web.servlet.setup.DefaultMockMvcBuilder: void <init>(org.springframework.web.context.WebApplicationContext)>-><org.springframework.test.web.servlet.setup.AbstractMockMvcBuilder: void <init>()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerAutoConfiguration: org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer mockServerRestTemplateCustomizer()>
<org.apache.catalina.security.SecurityUtil: void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)>-><javax.security.auth.Subject: java.util.Set getPrincipals()>
<org.springframework.core.io.support.PropertiesLoaderSupport: void <init>()>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><com.fasterxml.jackson.databind.type.ClassKey: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: void <init>(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,java.util.Collection,org.springframework.beans.factory.ObjectProvider)>-><groovy.lang.EmptyRange: void <init>(java.lang.Comparable)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: org.springframework.http.client.ClientHttpRequestFactory unwrapRequestFactoryIfNecessary(org.springframework.http.client.ClientHttpRequestFactory)>-><org.springframework.util.ReflectionUtils: java.lang.Object getField(java.lang.reflect.Field,java.lang.Object)>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createNativeConnectionFactory(java.lang.Class)>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties: int getPort()>
<org.springframework.boot.test.mock.web.SpringBootMockServletContext: java.net.URL getResource(java.lang.String)>-><java.io.File: void deleteOnExit()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(org.springframework.core.ResolvableType)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.Map getCorsConfigurations()>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void addCorsMappings(org.springframework.web.servlet.config.annotation.CorsRegistry)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.Double: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.hazelcast.HazelcastServerConfiguration$HazelcastServerConfigFileConfiguration: void <init>()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: boolean isAllowSessionOverride()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder()>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder allowCoreThreadTimeOut(boolean)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.hibernate.cfg.MetadataSourceType: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><groovyjarjarasm.asm.Type: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: void <init>()>-><java.lang.Object: void <init>()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><javax.security.auth.Subject: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapReactiveProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.springframework.boot.context.properties.PropertyMapper$Source: void to(java.util.function.Consumer)>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler)>-><org.springframework.web.reactive.result.view.UrlBasedViewResolver: void setViewNames(java.lang.String[])>
<org.springframework.boot.test.mock.web.SpringBootMockServletContext: java.net.URL getResource(java.lang.String)>-><java.io.File: boolean delete()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.String toString()>
<javax.security.auth.SubjectDomainCombiner: void <init>(javax.security.auth.Subject)>-><java.lang.Object: void <init>()>
<org.thymeleaf.TemplateEngine: java.util.Set getDialects()>-><java.util.HashSet: java.util.Iterator iterator()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor preserveErrorControllerTargetClassPostProcessor()>
<org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>-><org.springframework.web.context.support.ServletContextResource: boolean exists()>
<java.util.Collections$UnmodifiableMap: boolean containsKey(java.lang.Object)>-><java.util.Collections$EmptyMap: boolean containsKey(java.lang.Object)>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource)>-><org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>
<java.lang.Object: java.lang.String toString()>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<org.springframework.boot.web.servlet.context.XmlServletWebServerApplicationContext: void <init>()>-><org.springframework.context.support.AbstractApplicationContext: org.springframework.core.env.ConfigurableEnvironment getEnvironment()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Bucket couchbaseClient()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<org.springframework.jdbc.support.SQLErrorCodesFactory: java.lang.String identify(javax.sql.DataSource)>-><java.lang.Object: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.misc.Signal: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setConfiguration(org.apache.activemq.artemis.core.config.Configuration)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.GitProperties gitProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoProperties: org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git getGit()>
<org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$1: boolean hasNext()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration: org.springframework.http.converter.StringHttpMessageConverter stringHttpMessageConverter()>
<javax.security.auth.Subject$2: java.security.AccessControlContext run()>-><java.security.AccessControlContext: void <init>(java.security.AccessControlContext,java.security.DomainCombiner)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.ProcessEnvironment$ExternalData: java.lang.String toString()>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: java.lang.String getRequestContextAttribute()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.feed.RssChannelHttpMessageConverter: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.codehaus.groovy.runtime.MethodKey: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.Validator getValidator()>-><java.util.ArrayList$Itr: java.lang.Object next()>
<java.util.TreeMap$Entry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.util.locale.Extension: java.lang.String toString()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.AbstractTemplateViewResolver: void setExposeSpringMacroHelpers(boolean)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void forEach(java.util.function.Consumer)>-><java.util.ArrayList: void forEach(java.util.function.Consumer)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler)>-><org.springframework.boot.web.reactive.result.view.MustacheViewResolver: void <init>(com.samskivert.mustache.Mustache$Compiler)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.beans.BeanMetadataAttribute: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.reflect.Constructor: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><ch.qos.logback.classic.Logger: java.lang.String toString()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<org.springframework.mock.web.MockHttpServletRequest: void setAttribute(java.lang.String,java.lang.Object)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.mock.web.MockHttpSession: void setAttribute(java.lang.String,java.lang.Object)>-><javax.servlet.http.HttpSessionBindingEvent: void <init>(javax.servlet.http.HttpSession,java.lang.String,java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation[] getAnnotations()>-><java.lang.reflect.Field: java.lang.annotation.Annotation[] getDeclaredAnnotations()>
<org.springframework.core.io.support.PropertiesLoaderSupport: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.jackson.JacksonProperties)>-><java.lang.Object: void <init>()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerAutoConfiguration: org.springframework.test.web.client.MockRestServiceServer mockRestServiceServer(org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setResponseBodyAdvice(java.util.List)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Bucket couchbaseClient()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Bucket: java.lang.String getPassword()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: void <init>(org.springframework.beans.factory.ListableBeanFactory,org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties)>-><java.lang.Object: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.expression.spel.ast.StringLiteral: java.lang.String toString()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: void <init>(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ListableBeanFactory)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider: java.lang.Object getIfAvailable()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.core.io.support.EncodedResource: boolean requiresReader()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><com.sun.beans.WildcardTypeImpl: int hashCode()>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupRegistrationPolicy(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.jmx.support.MBeanRegistrationSupport: void setRegistrationPolicy(org.springframework.jmx.support.RegistrationPolicy)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setConcurrentMapCacheManager(org.springframework.cache.concurrent.ConcurrentMapCacheManager)>
<org.springframework.web.servlet.config.annotation.CorsRegistry: java.util.Map getCorsConfigurations()>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><org.springframework.boot.web.servlet.server.Session: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.context.support.AbstractApplicationContext: java.lang.String toString()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setBasicErrorController(org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController)>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void setRootViewName(java.lang.String)>-><org.springframework.web.servlet.handler.AbstractUrlHandlerMapping: void setRootHandler(java.lang.Object)>
<org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration: org.springframework.boot.autoconfigure.jmx.ParentAwareNamingStrategy objectNamingStrategy()>-><org.springframework.jmx.export.naming.MetadataNamingStrategy: void setDefaultDomain(java.lang.String)>
<org.springframework.http.client.support.InterceptingHttpAccessor: void <init>()>-><org.springframework.http.client.support.HttpAccessor: void <init>()>
<java.util.AbstractCollection: boolean isEmpty()>-><org.springframework.http.server.reactive.UndertowHeadersAdapter$1: int size()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<org.springframework.test.web.servlet.setup.AbstractMockMvcBuilder: void <init>()>-><java.util.ArrayList: void <init>(int)>
<javax.security.auth.Subject: int hashCode()>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroupMember: int compareTo(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<org.thymeleaf.TemplateEngine: java.util.Set getDialects()>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.cluster.ClusterInfo couchbaseClusterInfo()>
<java.util.TreeMap$Entry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setLocations(java.util.List)>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,java.util.List)>-><org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: java.util.List sortErrorViewResolvers(java.util.List)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.management.openmbean.CompositeType: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded: java.util.Map generateTransportParameters()>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<java.lang.Object: java.lang.String toString()>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.ResourceBundle$CacheKey: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.UUID: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.test.autoconfigure.json.JsonTestersAutoConfiguration: org.springframework.boot.test.autoconfigure.json.JsonTestersAutoConfiguration$JsonMarshalTestersBeanPostProcessor jsonMarshalTestersBeanPostProcessor()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><com.fasterxml.classmate.util.ClassKey: int compareTo(java.lang.Object)>
<javax.security.auth.Subject: int hashCode()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setDataPassword(java.lang.String)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<org.springframework.http.client.support.HttpAccessor: void <init>()>-><org.springframework.http.client.SimpleClientHttpRequestFactory: void <init>()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setTimeZone(java.util.TimeZone)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><org.springframework.web.client.RestTemplate: java.util.List getMessageConverters()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.boot.test.mock.web.SpringBootMockServletContext: boolean exists(java.lang.String)>-><org.springframework.core.io.DefaultResourceLoader: org.springframework.core.io.Resource getResource(java.lang.String)>
<com.favorites.FavoritesApplication: void main(java.lang.String[])>-><synthetic.method.ServletRequestImpl: void <init>()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(boolean,java.util.Collection)>-><java.lang.Object: void <init>()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCodecCustomizer(org.springframework.boot.web.codec.CodecCustomizer)>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.lang.Boolean: java.lang.String toString()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: boolean isExposeSpringMacroHelpers()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription: java.lang.String toString()>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void setCacheNames(java.util.Collection)>-><org.springframework.cache.concurrent.ConcurrentMapCacheManager: org.springframework.cache.Cache createConcurrentMapCache(java.lang.String)>
<org.springframework.boot.web.client.RestTemplateBuilder: void configureRequestFactory(org.springframework.web.client.RestTemplate)>-><org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: void <init>()>
<org.apache.catalina.security.SecurityUtil: void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)>-><javax.security.auth.Subject: java.lang.Object doAsPrivileged(javax.security.auth.Subject,java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder()>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties: org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool getPool()>
<org.codehaus.groovy.classgen.asm.OperandStack: void newInstance(groovyjarjarasm.asm.MethodVisitor,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList$Itr: void remove()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$Id: java.lang.String toString()>
<org.thymeleaf.util.PatternSpec: void <init>()>-><java.lang.Object: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.core.convert.TypeDescriptor$AnnotatedElementAdapter: int hashCode()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)>-><org.springframework.core.io.ClassPathResource: java.net.URL getURL()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.misc.Signal: int hashCode()>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void <init>()>-><java.lang.Object: void <init>()>
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>-><java.io.File$TempDirectory: java.io.File generateFile(java.lang.String,java.lang.String,java.io.File)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: org.apache.activemq.artemis.jms.server.embedded.EmbeddedJMS artemisServer(org.apache.activemq.artemis.core.config.Configuration,org.apache.activemq.artemis.jms.server.config.JMSConfiguration)>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void customize(org.apache.activemq.artemis.core.config.Configuration)>
<org.springframework.boot.web.servlet.support.ErrorPageFilter: void <init>()>-><java.util.HashMap: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.format.DateTimeFormatterBuilder$StringLiteralPrinterParser: java.lang.String toString()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.BitSet: int hashCode()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<org.springframework.util.DefaultPropertiesPersister: void load(java.util.Properties,java.io.Reader)>-><java.util.Properties: void load(java.io.Reader)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: void <init>()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.mail.javamail.JavaMailSenderImpl: void setPassword(java.lang.String)>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.LocalValidatorFactoryBean defaultValidator()>-><org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getObject()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: java.util.Properties asProperties(java.util.Map)>-><java.util.Properties: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.security.jca.ProviderConfig: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.EnumMap$EntryIterator$Entry: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setRequestMappingHandlerMapping(org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><ch.qos.logback.core.UnsynchronizedAppenderBase: java.lang.String toString()>
<org.springframework.core.annotation.AnnotationAwareOrderComparator: void sort(java.lang.Object[])>-><java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration: org.thymeleaf.spring5.SpringTemplateEngine templateEngine()>-><java.lang.Object: java.lang.Class getClass()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<org.springframework.mock.web.MockHttpSession: void setAttribute(java.lang.String,java.lang.Object)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection: java.lang.String toString()>
<org.springframework.mock.web.MockServletContext: void registerNamedDispatcher(java.lang.String,javax.servlet.RequestDispatcher)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper alwaysApplying(org.springframework.boot.context.properties.PropertyMapper$SourceOperator)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createNativeConnectionFactory(java.lang.Class)>-><java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.String: boolean startsWith(java.lang.String)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void extendMessageConverters(java.util.List)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Env: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints getEndpoints()>
<org.springframework.cache.support.SimpleCacheManager: void <init>()>-><java.util.Collections: java.util.Set emptySet()>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><javax.security.auth.Subject: int hashCode()>
<org.springframework.beans.factory.ObjectProvider: java.util.Iterator iterator()>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$1: java.util.stream.Stream stream()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.asm.Label: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration: void <init>(org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: void <init>()>
<java.security.AccessControlContext: boolean equalLimitedContext(java.security.AccessControlContext)>-><java.security.AccessControlContext: java.security.AccessControlContext getNextPC(java.security.AccessControlContext)>
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getServerName()>-><org.springframework.mock.web.MockHttpServletRequest: java.lang.String getHeader(java.lang.String)>
<org.springframework.util.ReflectionUtils: java.lang.Object getField(java.lang.reflect.Field,java.lang.Object)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.CorsRegistry: void <init>()>-><java.lang.Object: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.boot.ansi.AnsiBackground: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$AttributeWithValueNot: java.lang.String toString()>
<java.util.AbstractSet: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>-><org.springframework.web.servlet.view.InternalResourceViewResolver: java.lang.Class requiredViewClass()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMockMvc(org.springframework.test.web.servlet.MockMvc)>
<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>-><org.springframework.http.server.reactive.UndertowHeadersAdapter$EntryIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebLayoutConfiguration: nz.net.ultraq.thymeleaf.LayoutDialect layoutDialect()>-><nz.net.ultraq.thymeleaf.LayoutDialect: void <init>()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration: void <init>(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,java.util.Collection,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void <init>()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.util.DefaultPropertiesPersister: void loadFromXml(java.util.Properties,java.io.InputStream)>
<org.codehaus.groovy.runtime.typehandling.ShortTypeHandling: java.lang.Character castToChar(java.lang.Object)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.core.io.support.EncodedResource: java.io.InputStream getInputStream()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.text.FieldPosition: java.lang.String toString()>
<java.lang.reflect.Field: java.util.Map declaredAnnotations()>-><sun.reflect.annotation.AnnotationParser: java.util.Map parseAnnotations(byte[],sun.reflect.ConstantPool,java.lang.Class)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver: void <init>()>-><org.springframework.web.reactive.result.view.ViewResolverSupport: void <init>()>
<org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration: org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer reactiveWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>-><org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.String: java.lang.String substring(int)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>
<org.apache.catalina.security.SecurityUtil: void doAsPrivilege(java.lang.String,javax.servlet.Filter,java.lang.Class[],java.lang.Object[],java.security.Principal)>-><org.apache.catalina.security.SecurityUtil: java.lang.reflect.Method createMethodAndCacheIt(java.lang.reflect.Method[],java.lang.Class,java.lang.String,java.lang.Class[])>
<org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>-><java.lang.String: int hashCode()>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><org.springframework.ui.freemarker.FreeMarkerConfigurationFactory: void setDefaultEncoding(java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<javax.security.auth.Subject: int hashCode()>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: org.springframework.validation.Validator getValidator()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.Validator getValidator()>
<org.codehaus.groovy.ast.expr.ConstantExpression: java.lang.String getText()>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.web.servlet.mvc.ParameterizableViewController: void <init>()>-><org.springframework.web.servlet.mvc.AbstractController: void <init>(boolean)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><javax.security.auth.Subject: int hashCode()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<org.hibernate.boot.model.naming.Identifier: java.lang.String render()>-><org.hibernate.boot.model.naming.Identifier: java.lang.String getText()>
<org.codehaus.groovy.runtime.typehandling.ShortTypeHandling: java.lang.Character castToChar(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver()>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: void setProducePartialOutputWhileProcessing(boolean)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void <init>(java.time.Duration,java.time.Duration)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.StringBuilder: void <init>()>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler)>-><org.springframework.web.reactive.result.view.UrlBasedViewResolver: void setPrefix(java.lang.String)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: boolean isExposeRequestAttributes()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$Tag: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.text.AttributedCharacterIterator$Attribute: int hashCode()>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration: org.springframework.security.oauth2.jwt.ReactiveJwtDecoder jwtDecoder()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties: org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt getJwt()>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void setCacheNames(java.util.Collection)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.core.io.support.EncodedResource: void <init>(org.springframework.core.io.Resource,java.nio.charset.Charset)>-><org.springframework.core.io.support.EncodedResource: void <init>(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.web.context.support.WebApplicationContextUtils$WebRequestObjectFactory: java.lang.String toString()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties getArtemisPropertiesInstance()>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties: void setUser(java.lang.String)>
<nz.net.ultraq.thymeleaf.LayoutDialect: org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray()>-><java.lang.ref.SoftReference: java.lang.Object get()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><com.favorites.domain.Favorites: java.lang.String toString()>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.StaticListableBeanFactory: org.springframework.beans.factory.ObjectProvider getBeanProvider(org.springframework.core.ResolvableType)>-><org.springframework.beans.factory.support.StaticListableBeanFactory$1: void <init>(org.springframework.beans.factory.support.StaticListableBeanFactory,org.springframework.core.ResolvableType)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.TreeMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers platformTransactionManagerCustomizers(org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers: void <init>(java.util.Collection)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><ch.qos.logback.core.subst.Token: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration: org.springframework.cache.concurrent.ConcurrentMapCacheManager cacheManager()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setCacheable(boolean)>
<org.thymeleaf.TemplateEngine: java.util.Set getDialects()>-><java.util.HashSet: int size()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$AbstractBase: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.SubList$1: boolean hasNext()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setContentNegotiationManager(org.springframework.web.accept.ContentNegotiationManager)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setBuildProperties(org.springframework.boot.info.BuildProperties)>
<java.util.AbstractList: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.validation.Validator mvcValidator()>-><org.springframework.util.ClassUtils: java.lang.Class forName(java.lang.String,java.lang.ClassLoader)>
<org.springframework.web.util.DefaultUriBuilderFactory: void <init>()>-><java.util.HashMap: void <init>()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration: org.thymeleaf.spring5.SpringTemplateEngine templateEngine()>-><org.thymeleaf.spring5.SpringTemplateEngine: void setRenderHiddenMarkersBeforeCheckboxes(boolean)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createEmbeddedConnectionFactory(java.lang.Class)>-><org.apache.activemq.artemis.api.core.TransportConfiguration: void <init>(java.lang.String,java.util.Map)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Optional: java.lang.String toString()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><javax.security.auth.Subject: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.bind.support.ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.validation.Validator mvcValidator()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.hibernate.boot.model.relational.Namespace: java.lang.String toString()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: java.lang.String appendCharset(org.springframework.util.MimeType,java.lang.String)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration$JdbcTemplateConfiguration: org.springframework.jdbc.core.JdbcTemplate jdbcTemplate()>-><org.springframework.jdbc.core.JdbcTemplate: void setFetchSize(int)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void addFormatters()>-><org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJavaDate()>
<nz.net.ultraq.thymeleaf.LayoutDialect: groovy.lang.MetaClass $getStaticMetaClass()>-><java.lang.Object: java.lang.Class getClass()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$IsFirstChild: java.lang.String toString()>
<org.springframework.boot.autoconfigure.validation.ValidatorAdapter: org.springframework.validation.Validator get(org.springframework.context.ApplicationContext,org.springframework.validation.Validator)>-><org.springframework.boot.autoconfigure.validation.ValidatorAdapter: org.springframework.validation.Validator wrap(org.springframework.validation.Validator,boolean)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.time.Instant: int compareTo(java.lang.Object)>
<org.springframework.boot.test.mock.web.SpringBootMockServletContext: java.lang.String getResourceLocation(java.lang.String)>-><org.springframework.mock.web.MockServletContext: java.lang.String getResourceLocation(java.lang.String)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setAsyncRequestTimeout(long)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.InternalResourceViewResolver defaultViewResolver()>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setPrefix(java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.codehaus.groovy.reflection.CachedClass: int hashCode()>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createNativeConnectionFactory(java.lang.Class)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.nodes.Element: java.lang.String toString()>
<org.springframework.boot.info.BuildProperties: void <init>(java.util.Properties)>-><org.springframework.boot.info.BuildProperties: java.util.Properties processEntries(java.util.Properties)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.ResourceBundle$CacheKey: int hashCode()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDefaultMockMvcBuilder(org.springframework.test.web.servlet.setup.DefaultMockMvcBuilder)>
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>-><java.io.UnixFileSystem: boolean createFileExclusively(java.lang.String)>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><javax.security.auth.Subject: java.lang.String toString()>
<org.springframework.jmx.export.MBeanExporter: void setAutodetectMode(int)>-><java.util.HashSet: boolean contains(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<org.springframework.boot.test.mock.web.SpringBootMockServletContext: java.lang.String getResourceLocation(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.HttpStatusException: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><groovy.lang.MetaClassImpl: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean compareEqual(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(java.util.Collection)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(boolean,java.util.Collection)>
<org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: void onClose()>-><org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: void stopAndReleaseWebServer()>
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void setContentNegotiationManager(org.springframework.web.accept.ContentNegotiationManager)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<org.thymeleaf.spring5.linkbuilder.webflux.SpringWebFluxLinkBuilder: void <init>()>-><org.thymeleaf.linkbuilder.StandardLinkBuilder: void <init>()>
<org.springframework.http.server.reactive.UndertowHeadersAdapter$EntryIterator: void <init>(org.springframework.http.server.reactive.UndertowHeadersAdapter,org.springframework.http.server.reactive.UndertowHeadersAdapter$1)>-><org.springframework.http.server.reactive.UndertowHeadersAdapter$EntryIterator: void <init>(org.springframework.http.server.reactive.UndertowHeadersAdapter)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: void <init>(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$1: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory,org.springframework.core.ResolvableType)>
<java.util.concurrent.ConcurrentHashMap$KeySetView: void forEach(java.util.function.Consumer)>-><java.util.concurrent.ConcurrentHashMap$Traverser: void <init>(java.util.concurrent.ConcurrentHashMap$Node[],int,int,int)>
<org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration: org.springframework.boot.autoconfigure.context.MessageSourceProperties messageSourceProperties()>-><org.springframework.boot.autoconfigure.context.MessageSourceProperties: void <init>()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: java.lang.String toString()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<org.springframework.mock.web.MockServletContext: void registerNamedDispatcher(java.lang.String,javax.servlet.RequestDispatcher)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object remove(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.Map getDefaultMediaTypes()>-><org.springframework.http.MediaType: org.springframework.http.MediaType valueOf(java.lang.String)>
<org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration: org.springframework.transaction.jta.JtaTransactionManager transactionManager()>-><org.springframework.transaction.config.JtaTransactionManagerFactoryBean: org.springframework.transaction.jta.JtaTransactionManager getObject()>
<java.lang.reflect.Field: sun.reflect.generics.repository.FieldRepository getGenericInfo()>-><sun.reflect.generics.repository.FieldRepository: sun.reflect.generics.repository.FieldRepository make(java.lang.String,sun.reflect.generics.factory.GenericsFactory)>
<groovy.util.ProxyGenerator: org.codehaus.groovy.runtime.ProxyGeneratorAdapter createAdapter(java.util.Map,java.util.List,java.lang.Class,java.lang.Class)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>-><org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource: void <init>()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createNativeConnectionFactory(java.lang.Class)>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties: java.lang.String getUser()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.util.calendar.CalendarDate: java.lang.String toString()>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.view.BeanNameViewResolver: void <init>()>-><org.springframework.web.context.support.WebApplicationObjectSupport: void <init>()>
<org.springframework.boot.test.mock.web.SpringBootMockServletContext: java.net.URL getResource(java.lang.String)>-><java.io.File: java.net.URI toURI()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>-><java.lang.StringBuilder: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.Collections$UnmodifiableSet: int hashCode()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setSuffix(java.lang.String)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void <init>(java.lang.String)>-><org.springframework.format.support.DefaultFormattingConversionService: void addDefaultFormatters(org.springframework.format.FormatterRegistry)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods$Entry: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: void forEach(java.util.function.Consumer)>-><java.lang.NullPointerException: void <init>()>
<org.codehaus.groovy.runtime.typehandling.ShortTypeHandling: java.lang.Class castToClass(java.lang.Object)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.text.AttributeEntry: int hashCode()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setPassword(java.lang.String)>
<org.springframework.mock.web.MockHttpServletRequest: javax.servlet.http.HttpSession getSession(boolean)>-><org.springframework.mock.web.MockHttpServletRequest: void checkActive()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJsr310()>-><org.springframework.format.datetime.standard.DateTimeFormatterRegistrar: void setDateFormatter(java.time.format.DateTimeFormatter)>
<org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration: org.springframework.boot.autoconfigure.jmx.ParentAwareNamingStrategy objectNamingStrategy()>-><org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.time.Duration: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.web.context.support.ServletContextResource: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureMessageConverters(java.util.List)>-><java.util.ArrayList: java.util.Iterator iterator()>
<synthetic.method.HttpSessionImpl: void <init>()>-><java.lang.Object: void <init>()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration: org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer resourceHandlerRegistrationCustomizer()>
<java.security.AccessControlContext: boolean equalLimitedContext(java.security.AccessControlContext)>-><java.security.AccessControlContext: boolean containsAllLimits(java.security.AccessControlContext)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void setPathPrefixes(java.util.Map)>-><java.util.LinkedHashMap: void <init>(java.util.Map)>
<org.springframework.boot.autoconfigure.validation.ValidatorAdapter: org.springframework.validation.Validator getExistingOrCreate(org.springframework.context.ApplicationContext)>-><org.springframework.boot.autoconfigure.validation.ValidatorAdapter: org.springframework.validation.Validator getExisting(org.springframework.context.ApplicationContext)>
<ch.qos.logback.core.util.EnvUtil: boolean isJaninoAvailable()>-><org.codehaus.groovy.reflection.ClassLoaderForClassArtifacts: java.lang.Class loadClass(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupDomain(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<org.codehaus.groovy.reflection.stdclasses.StringCachedClass: java.lang.Object coerceArgument(java.lang.Object)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.util.locale.BaseLocale: int hashCode()>
<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>-><java.lang.reflect.Field: sun.reflect.generics.repository.FieldRepository getGenericInfo()>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration: org.springframework.web.servlet.view.BeanNameViewResolver beanNameViewResolver()>-><org.springframework.web.servlet.view.BeanNameViewResolver: void <init>()>
<org.springframework.mock.web.MockServletContext: void <init>(java.lang.String,org.springframework.core.io.ResourceLoader)>-><java.util.LinkedHashSet: void <init>()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: java.lang.String toString()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><javax.security.auth.Subject: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration: org.thymeleaf.spring5.SpringTemplateEngine templateEngine()>-><java.util.stream.ReferencePipeline: void forEach(java.util.function.Consumer)>
<org.springframework.context.support.AbstractApplicationContext: java.lang.String toString()>-><org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.String getDisplayName()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: void forEach(java.util.function.Consumer)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: void <init>(java.lang.Object,java.lang.Object,java.util.concurrent.ConcurrentHashMap)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.beans.factory.support.AbstractBeanDefinition: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJsonComponentModule(org.springframework.boot.jackson.JsonComponentModule)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><javax.security.auth.Subject: java.lang.String toString()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.cluster.ClusterInfo couchbaseClusterInfo()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Bucket: java.lang.String getPassword()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>-><java.util.AbstractList: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Collections$UnmodifiableMap: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration: void addInitParameters(org.springframework.boot.web.servlet.DynamicRegistrationBean)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder messageConverters(java.util.Collection)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void <init>(org.springframework.boot.autoconfigure.mail.MailProperties)>
<org.springframework.boot.autoconfigure.freemarker.FreeMarkerNonWebConfiguration: org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean freeMarkerConfiguration()>-><org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.ArrayList$SubList: java.util.Iterator iterator()>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.feed.AtomFeedHttpMessageConverter: void <init>()>
<org.apache.catalina.security.SecurityUtil: void doAsPrivilege(java.lang.String,javax.servlet.Servlet,java.lang.Class[],java.lang.Object[],java.security.Principal)>-><org.apache.catalina.security.SecurityUtil: java.lang.reflect.Method createMethodAndCacheIt(java.lang.reflect.Method[],java.lang.Class,java.lang.String,java.lang.Class[])>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.LocalTime: java.lang.String toString()>
<org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver: void <init>()>-><org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver: java.lang.Class requiredViewClass()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Collections$SynchronizedMap: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$MatchesOwn: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<java.util.AbstractSet: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<org.springframework.boot.validation.MessageInterpolatorFactory: void <init>()>-><java.lang.Object: void <init>()>
<javax.security.auth.Subject: int hashCode()>-><sun.security.provider.PolicyParser$PrincipalEntry: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration: org.thymeleaf.spring5.SpringTemplateEngine templateEngine()>-><org.thymeleaf.spring5.SpringTemplateEngine: void <init>()>
<org.springframework.mock.web.MockHttpSession: void setAttribute(java.lang.String,java.lang.Object)>-><org.springframework.mock.web.MockHttpSession: void removeAttribute(java.lang.String)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTestEntityManager(org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJavaDate()>-><org.springframework.format.datetime.DateFormatter: void <init>(java.lang.String)>
<net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList$AnnotatedTypeVariable: net.bytebuddy.description.TypeVariableSource getTypeVariableSource()>
<javax.security.auth.SubjectDomainCombiner$4: java.lang.String run()>-><java.security.Security: java.lang.String getProperty(java.lang.String)>
<org.springframework.core.io.FileSystemResourceLoader: org.springframework.core.io.Resource getResourceByPath(java.lang.String)>-><java.lang.String: boolean startsWith(java.lang.String)>
<org.springframework.mock.web.MockServletContext: java.lang.String getResourceLocation(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.task.TaskExecutorBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.util.Collections: java.util.Set emptySet()>
<org.springframework.web.servlet.config.annotation.CorsRegistry: java.util.Map getCorsConfigurations()>-><java.util.ArrayList$Itr: boolean hasNext()>
<com.favorites.FavoritesApplication: void main(java.lang.String[])>-><synthetic.method.ServletResponseImpl: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)>-><org.springframework.beans.factory.NoSuchBeanDefinitionException: void <init>(java.lang.String,java.lang.String)>
<org.springframework.http.client.SimpleClientHttpRequestFactory: void <init>()>-><java.lang.Object: void <init>()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<org.hibernate.boot.model.naming.Identifier: java.lang.String render()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool: int getSize()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration: void <init>()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setEmbeddedJMS(org.apache.activemq.artemis.jms.server.embedded.EmbeddedJMS)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters$1: java.util.List defaultMessageConverters()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.boot.autoconfigure.mail.MailProperties: java.lang.String getUsername()>
<java.util.AbstractList$Itr: boolean hasNext()>-><groovy.lang.EmptyRange: int size()>
<java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void forEach(java.util.function.Consumer)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$IsOnlyChild: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder jacksonObjectMapperBuilder(java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder applicationContext(org.springframework.context.ApplicationContext)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>-><java.util.ArrayList$Itr: java.lang.Object next()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.expr.GStringExpression: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.codehaus.groovy.ast.ASTNode: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>-><java.lang.StringBuilder: void <init>()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)>-><org.apache.commons.logging.LogAdapter$Slf4jLog: void warn(java.lang.Object,java.lang.Throwable)>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder poolSize(int)>-><org.springframework.boot.task.TaskSchedulerBuilder: void <init>(java.lang.Integer,java.lang.String,java.util.Set)>
<java.util.Collections$EmptySet: void forEach(java.util.function.Consumer)>-><java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
<org.apache.catalina.core.ApplicationFilterChain: void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>-><org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<org.springframework.beans.factory.NoSuchBeanDefinitionException: void <init>(java.lang.Class)>-><org.springframework.core.ResolvableType: org.springframework.core.ResolvableType forClass(java.lang.Class)>
<org.springframework.beans.factory.NoUniqueBeanDefinitionException: void <init>(java.lang.Class,java.lang.String[])>-><org.springframework.beans.factory.NoUniqueBeanDefinitionException: void <init>(java.lang.Class,java.util.Collection)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: void forEach(java.util.function.Consumer)>-><java.util.concurrent.ConcurrentHashMap$Traverser: void <init>(java.util.concurrent.ConcurrentHashMap$Node[],int,int,int)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.aop.framework.JdkDynamicAopProxy: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.expression.spel.standard.Token: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.expr.ClassExpression: java.lang.String toString()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.boot.autoconfigure.mail.MailProperties: java.nio.charset.Charset getDefaultEncoding()>
<org.springframework.cache.support.SimpleCacheManager: void <init>()>-><org.springframework.cache.support.AbstractCacheManager: void <init>()>
<org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer: void <init>(javax.servlet.ServletContext)>-><java.lang.Object: void <init>()>
<org.springframework.util.ReflectionUtils: java.lang.Object getField(java.lang.reflect.Field,java.lang.Object)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void extendMessageConverters(java.util.List)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void extendMessageConverters(java.util.List)>
<org.hibernate.QueryException: java.lang.String getMessage()>-><org.hibernate.QueryException: java.lang.String getOriginalMessage()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>
<org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientPropertiesRegistrationAdapter: java.util.Map getClientRegistrations(org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties)>-><org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties: java.util.Map getRegistration()>
<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,java.util.List)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.Vector: void forEach(java.util.function.Consumer)>-><java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void addTopics(org.apache.activemq.artemis.jms.server.config.JMSConfiguration,java.lang.String[])>-><org.apache.activemq.artemis.jms.server.config.impl.TopicConfigurationImpl: org.apache.activemq.artemis.jms.server.config.impl.TopicConfigurationImpl setName(java.lang.String)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.web.context.support.WebApplicationContextUtils$SessionObjectFactory: java.lang.String toString()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler build()>-><org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler: void <init>()>
<org.springframework.web.filter.HiddenHttpMethodFilter: void <init>()>-><org.springframework.web.filter.OncePerRequestFilter: void <init>()>
<org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager: void <init>(javax.persistence.EntityManagerFactory)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.http.server.reactive.UndertowHeadersAdapter$1: int size()>-><org.springframework.http.server.reactive.UndertowHeadersAdapter: io.undertow.util.HeaderMap access$100(org.springframework.http.server.reactive.UndertowHeadersAdapter)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Hashtable: java.lang.String toString()>
<org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>-><org.springframework.core.io.ClassPathResource: java.io.InputStream getInputStream()>
<org.springframework.mock.web.MockServletContext: void <init>(java.lang.String,org.springframework.core.io.ResourceLoader)>-><org.springframework.mock.web.MockSessionCookieConfig: void <init>()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.hibernate.boot.model.naming.Identifier: int compareTo(java.lang.Object)>-><org.hibernate.boot.model.naming.Identifier: int compareTo(org.hibernate.boot.model.naming.Identifier)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List extractPartConverters(org.springframework.http.converter.FormHttpMessageConverter)>-><org.springframework.util.ReflectionUtils: void makeAccessible(java.lang.reflect.Field)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationDescription$AbstractBase: int hashCode()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><org.springframework.boot.context.properties.PropertyMapper$Source: void to(java.util.function.Consumer)>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.client.support.InterceptingHttpAccessor: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter createRequestMappingHandlerAdapter()>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: org.springframework.web.servlet.resource.ResourceHttpRequestHandler faviconRequestHandler()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: java.util.List resolveFaviconLocations()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: java.lang.String appendCharset(org.springframework.util.MimeType,java.lang.String)>-><org.springframework.util.MimeType: java.lang.String toString()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.awt.AppContext: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.FilterRegistrationBean: void <init>(javax.servlet.Filter,org.springframework.boot.web.servlet.ServletRegistrationBean[])>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.util.TimSort: int gallopLeft(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator)>-><org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Object,java.lang.Object)>
<org.apache.catalina.core.ApplicationFilterChain: void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>-><org.springframework.mock.web.MockHttpServletRequest: boolean isAsyncSupported()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisXAConnectionFactoryConfiguration: org.apache.activemq.artemis.jms.client.ActiveMQXAConnectionFactory nonXaJmsConnectionFactory(org.springframework.beans.factory.ListableBeanFactory,org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties)>
<java.util.HashMap$EntrySet: void forEach(java.util.function.Consumer)>-><java.lang.NullPointerException: void <init>()>
<org.springframework.web.servlet.config.annotation.CorsRegistry: void <init>()>-><java.util.ArrayList: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.reflect.WeakCache$CacheKey: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: java.lang.String appendCharset(org.springframework.util.MimeType,java.lang.String)>
<org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration$JdbcTemplateConfiguration: org.springframework.jdbc.core.JdbcTemplate jdbcTemplate()>-><org.springframework.jdbc.core.JdbcTemplate: void setQueryTimeout(int)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)>-><org.apache.commons.logging.LogAdapter$JavaUtilLog: void warn(java.lang.Object,java.lang.Throwable)>
<java.text.AttributeEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<org.springframework.web.servlet.config.annotation.InterceptorRegistry: org.springframework.web.servlet.config.annotation.InterceptorRegistration addInterceptor(org.springframework.web.servlet.HandlerInterceptor)>-><org.springframework.web.servlet.config.annotation.InterceptorRegistration: void <init>(org.springframework.web.servlet.HandlerInterceptor)>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration: org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean dispatcherServletRegistration(org.springframework.web.servlet.DispatcherServlet)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: void setMultipartConfig(javax.servlet.MultipartConfigElement)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$AttributeWithValueEnding: java.lang.String toString()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: java.lang.String getSuffix()>
<javax.security.auth.Subject: int hashCode()>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.boot.autoconfigure.mail.MailProperties: java.lang.Integer getPort()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setMaxHttpHeaderSize(org.springframework.util.unit.DataSize)>
<org.springframework.util.MimeType: void <init>(java.lang.String,java.lang.String,java.util.Map)>-><java.util.Map: void forEach(java.util.function.BiConsumer)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>-><org.springframework.web.servlet.config.annotation.PathMatchConfigurer: java.util.Map getPathPrefixes()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.math.BigInteger: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.validation.Validator mvcValidator()>-><java.lang.Class: java.lang.ClassLoader getClassLoader()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><javax.management.openmbean.SimpleType: int hashCode()>
<org.springframework.beans.factory.NoUniqueBeanDefinitionException: void <init>(java.lang.Class,java.util.Collection)>-><org.springframework.beans.factory.NoSuchBeanDefinitionException: void <init>(java.lang.Class,java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.jar.Attributes: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration: void <init>(org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers)>
<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>-><java.util.ArrayList: void forEach(java.util.function.Consumer)>
<org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver: void <init>()>-><org.springframework.web.servlet.view.AbstractTemplateViewResolver: void <init>()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><java.lang.Object: java.lang.Class getClass()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>-><org.apache.commons.logging.LogAdapter$JavaUtilLog: boolean isWarnEnabled()>
<org.apache.catalina.core.ApplicationFilterChain: void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>-><org.apache.catalina.security.SecurityUtil: void doAsPrivilege(java.lang.String,javax.servlet.Servlet,java.lang.Class[],java.lang.Object[],java.security.Principal)>
<org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration$NamedParameterJdbcTemplateConfiguration: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate namedParameterJdbcTemplate(org.springframework.jdbc.core.JdbcTemplate)>-><org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: void <init>(org.springframework.jdbc.core.JdbcOperations)>
<org.springframework.mock.web.MockHttpSession: void removeAttribute(java.lang.String)>-><java.util.HashMap: java.lang.Object remove(java.lang.Object)>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.Class)>-><org.springframework.beans.factory.NoUniqueBeanDefinitionException: void <init>(java.lang.Class,java.lang.String[])>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<java.io.File$TempDirectory: java.io.File generateFile(java.lang.String,java.lang.String,java.io.File)>-><java.lang.System: java.lang.SecurityManager getSecurityManager()>
<org.springframework.mock.web.MockHttpServletRequest: java.lang.StringBuffer getRequestURL()>-><org.springframework.mock.web.MockHttpServletRequest: int getServerPort()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedTomcat: void <init>()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray: java.lang.String toString()>
<org.springframework.boot.test.autoconfigure.web.client.WebClientRestTemplateAutoConfiguration: org.springframework.web.client.RestTemplate restTemplate(org.springframework.boot.web.client.RestTemplateBuilder)>-><org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate build()>
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.String[] getBeanNamesForType(org.springframework.core.ResolvableType)>-><org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(org.springframework.core.ResolvableType)>
<org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration: org.springframework.test.web.servlet.setup.DefaultMockMvcBuilder mockMvcBuilder(java.util.List)>-><org.springframework.test.web.servlet.setup.AbstractMockMvcBuilder: org.springframework.test.web.servlet.setup.AbstractMockMvcBuilder addDispatcherServletCustomizer(org.springframework.test.web.servlet.DispatcherServletCustomizer)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: java.util.Optional getWelcomePage()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: java.lang.String[] getResourceLocations(java.lang.String[])>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.mail.Provider: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int hashCode()>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts: java.time.Duration getConnect()>
<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>-><java.util.Vector: void forEach(java.util.function.Consumer)>
<org.springframework.mock.web.MockHttpSession: void <init>(javax.servlet.ServletContext,java.lang.String)>-><java.lang.Object: void <init>()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<javax.security.auth.Subject: int hashCode()>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setPlatform(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<org.apache.catalina.security.SecurityUtil: java.lang.reflect.Method createMethodAndCacheIt(java.lang.reflect.Method[],java.lang.Class,java.lang.String,java.lang.Class[])>-><java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.Class: java.lang.String toString()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory$1: java.util.stream.Stream stream()>-><java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.ViewServiceConfig getViewServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints$CouchbaseService getViewservice()>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(org.springframework.core.ResolvableType)>-><java.util.LinkedHashMap$LinkedEntrySet: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager: void <init>(javax.persistence.EntityManagerFactory)>-><java.lang.Object: void <init>()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<org.apache.catalina.security.SecurityUtil: void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)>-><org.apache.catalina.security.SecurityUtil$1: void <init>(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
<org.thymeleaf.spring5.SpringTemplateEngine: void setEnableSpringELCompiler(boolean)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder()>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties: java.lang.String getThreadNamePrefix()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<java.text.AttributeEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: org.apache.activemq.artemis.jms.server.embedded.EmbeddedJMS artemisServer(org.apache.activemq.artemis.core.config.Configuration,org.apache.activemq.artemis.jms.server.config.JMSConfiguration)>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisNoOpBindingRegistry: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound: int hashCode()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: void <init>()>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: java.lang.String toString()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<java.util.HashMap$EntrySet: void forEach(java.util.function.Consumer)>-><java.util.ConcurrentModificationException: void <init>()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object remove(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.temporal.ChronoField: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void addQueues(org.apache.activemq.artemis.jms.server.config.JMSConfiguration,java.lang.String[])>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded: boolean isPersistent()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.WeakHashMap$Entry: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: int hashCode()>
<org.codehaus.groovy.transform.trait.Traits: org.codehaus.groovy.transform.trait.TraitHelpersTuple findHelpers(org.codehaus.groovy.ast.ClassNode)>-><org.codehaus.groovy.reflection.ClassLoaderForClassArtifacts: java.lang.Class loadClass(java.lang.String)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver()>-><java.nio.charset.Charset: java.lang.String name()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder maxPoolSize(int)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<java.util.TimSort: int countRunAndMakeAscending(java.lang.Object[],int,int,java.util.Comparator)>-><org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Object,java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionWrapper: void setProperty(java.lang.String,java.lang.Object)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: void stopAndReleaseWebServer()>-><java.lang.IllegalStateException: void <init>(java.lang.Throwable)>
<java.io.File$TempDirectory: java.io.File generateFile(java.lang.String,java.lang.String,java.io.File)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><org.springframework.boot.web.server.MimeMappings: void <init>(org.springframework.boot.web.server.MimeMappings)>
<org.springframework.boot.web.servlet.support.SpringBootServletInitializer: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.mock.web.MockServletContext: void <init>(java.lang.String,org.springframework.core.io.ResourceLoader)>-><org.springframework.core.io.DefaultResourceLoader: void <init>()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: org.thymeleaf.spring5.SpringWebFluxTemplateEngine templateEngine()>
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void setPathPrefixes(java.util.Map)>-><java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>
<org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration: void <init>(org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers)>-><org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers: void <init>(java.util.List)>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: org.springframework.cache.Cache createConcurrentMapCache(java.lang.String)>-><org.springframework.cache.concurrent.ConcurrentMapCacheManager: boolean isStoreByValue()>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider getProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.thymeleaf.templatemode.TemplateMode: org.thymeleaf.templatemode.TemplateMode parse(java.lang.String)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object remove(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.boot.autoconfigure.mail.MailProperties: java.lang.String getPassword()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver()>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: void setOrder(int)>
<org.springframework.jmx.export.MBeanExporter: void setAutodetectMode(int)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ClassKey: int hashCode()>
<java.util.Collections$UnmodifiableMap: java.lang.String toString()>-><java.util.Collections$UnmodifiableMap: java.lang.String toString()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setOrder(int)>
<java.util.AbstractSet: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFormattingConversionService(org.springframework.format.support.FormattingConversionService)>
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setAsyncRequestTimeout(long)>-><java.lang.Long: java.lang.Long valueOf(long)>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$1: javax.management.MBeanServer getMBeanServer()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureContentNegotiation(org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.web.servlet.config.annotation.InterceptorRegistry: java.util.List getInterceptors()>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<java.util.AbstractList: int hashCode()>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJsr310()>-><java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withResolverStyle(java.time.format.ResolverStyle)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.reflect.Parameter: java.lang.String toString()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>-><java.util.LinkedHashMap$LinkedEntrySet: void forEach(java.util.function.Consumer)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setSsl(org.springframework.boot.web.server.Ssl)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<org.springframework.test.web.servlet.setup.DefaultMockMvcBuilder: void <init>(org.springframework.web.context.WebApplicationContext)>-><org.springframework.web.context.support.GenericWebApplicationContext: javax.servlet.ServletContext getServletContext()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void <init>(java.lang.String)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.runtime.MethodKey: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: javax.jms.ConnectionFactory getConnectionFactory()>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform: org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform get()>-><java.lang.Class: java.lang.ClassLoader getClassLoader()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: boolean isAllowRequestOverride()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider findProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.lang.reflect.Field: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: java.lang.String getName()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration: org.springframework.boot.autoconfigure.jmx.ParentAwareNamingStrategy objectNamingStrategy()>-><org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.springframework.mock.web.MockHttpSession: void removeAttribute(java.lang.String)>-><javax.servlet.http.HttpSessionBindingEvent: void <init>(javax.servlet.http.HttpSession,java.lang.String,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.management.openmbean.SimpleType: java.lang.String toString()>
<org.thymeleaf.extras.java8time.dialect.Java8TimeDialect: void <init>()>-><org.thymeleaf.dialect.AbstractDialect: void <init>(java.lang.String)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureAsyncSupport(org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addInterceptors(org.springframework.web.servlet.config.annotation.InterceptorRegistry)>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><javax.management.openmbean.ArrayType: int hashCode()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.core.io.support.EncodedResource: java.io.InputStream getInputStream()>-><org.springframework.core.io.ClassPathResource: java.io.InputStream getInputStream()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration$JdbcTemplateConfiguration: void <init>(javax.sql.DataSource,org.springframework.boot.autoconfigure.jdbc.JdbcProperties)>
<java.util.EnumMap: int entryHashCode(int)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>-><org.apache.commons.logging.LogAdapter$Slf4jLog: boolean isWarnEnabled()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.HashMap$Node: int hashCode()>
<org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean compareEqual(java.lang.Object,java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration: org.springframework.cache.concurrent.ConcurrentMapCacheManager cacheManager()>-><org.springframework.cache.concurrent.ConcurrentMapCacheManager: void <init>()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer servletWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: void <init>(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.springframework.context.ApplicationContext)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void <init>()>
<org.springframework.web.filter.CharacterEncodingFilter: void <init>()>-><org.springframework.web.filter.OncePerRequestFilter: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.codehaus.groovy.ast.ClassNode: int hashCode()>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties: java.lang.String[] getTemplateLoaderPath()>
<java.io.DeleteOnExitHook: void runHooks()>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>-><org.apache.commons.logging.LogAdapter$JavaUtilLog: void warn(java.lang.Object,java.lang.Throwable)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.asm.Type: java.lang.String toString()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><java.util.ArrayList: void <init>()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider: java.lang.Object getIfUnique()>-><org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Optional access$600(org.springframework.beans.factory.support.DefaultListableBeanFactory,org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String,java.lang.Object[])>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: int hashCode()>
<org.springframework.beans.factory.NoUniqueBeanDefinitionException: void <init>(java.lang.Class,java.util.Collection)>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.AbstractCachingViewResolver: void setCache(boolean)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$ContainsText: java.lang.String toString()>
<org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration: org.springframework.cache.concurrent.ConcurrentMapCacheManager cacheManager()>-><org.springframework.boot.autoconfigure.cache.CacheProperties: java.util.List getCacheNames()>
<java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>-><java.util.Collections$EmptySet: void forEach(java.util.function.Consumer)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>-><org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.Object getBean(java.lang.String,java.lang.Class)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.GsonHttpMessageConverter: void <init>()>
<org.springframework.context.support.DelegatingMessageSource: java.lang.String toString()>-><org.springframework.context.support.DelegatingMessageSource: java.lang.String toString()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.StaticListableBeanFactory$1: java.lang.Object getObject(java.lang.Object[])>-><org.springframework.beans.factory.NoSuchBeanDefinitionException: void <init>(org.springframework.core.ResolvableType)>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver conventionErrorViewResolver()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper alwaysApplyingWhenNonNull()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration: org.springframework.test.web.servlet.setup.DefaultMockMvcBuilder mockMvcBuilder(java.util.List)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addInterceptors(org.springframework.web.servlet.config.annotation.InterceptorRegistry)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$1: java.lang.Object next()>
<org.codehaus.groovy.runtime.typehandling.ShortTypeHandling: java.lang.Enum castToEnum(java.lang.Object,java.lang.Class)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(org.springframework.core.ResolvableType)>-><java.util.ArrayList: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.aop.support.DefaultPointcutAdvisor: java.lang.String toString()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor openEntityManagerInViewInterceptor()>-><org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor: void <init>()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<java.util.TimSort: void mergeHi(int,int,int,int)>-><org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Object,java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>-><java.nio.charset.Charset: java.lang.String name()>
<org.springframework.boot.web.server.MimeMappings: void <init>(org.springframework.boot.web.server.MimeMappings)>-><org.springframework.boot.web.server.MimeMappings: void <init>(org.springframework.boot.web.server.MimeMappings,boolean)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJdbcTemplate(org.springframework.jdbc.core.JdbcTemplate)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<org.springframework.web.servlet.resource.ResourceUrlEncodingFilter: void <init>()>-><org.springframework.web.filter.GenericFilterBean: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.security.pkcs.PKCS9Attribute: java.lang.String toString()>
<org.springframework.boot.task.TaskSchedulerBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>-><org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$Matches: java.lang.String toString()>
<org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)>-><org.apache.commons.logging.LogAdapter$Slf4jLog: boolean isWarnEnabled()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>-><java.lang.String: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.ContentNegotiatingViewResolver viewResolver(org.springframework.beans.factory.BeanFactory)>
<org.springframework.http.converter.ResourceHttpMessageConverter: void <init>(boolean)>-><org.springframework.http.converter.AbstractHttpMessageConverter: void <init>(org.springframework.http.MediaType)>
<nz.net.ultraq.thymeleaf.LayoutDialect: groovy.lang.MetaClass $getStaticMetaClass()>-><org.codehaus.groovy.runtime.ScriptBytecodeAdapter: groovy.lang.MetaClass initMetaClass(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><javax.security.auth.Subject: int hashCode()>
<java.util.TreeMap$Entry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.util.calendar.ZoneInfo: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.resource.ResourceUrlProvider mvcResourceUrlProvider()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.config.annotation.PathMatchConfigurer getPathMatchConfigurer()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void forEach(java.util.function.Consumer)>-><java.util.HashMap$EntrySet: void forEach(java.util.function.Consumer)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: java.util.List resolveFaviconLocations()>-><org.springframework.boot.autoconfigure.web.ResourceProperties: java.lang.String[] getStaticLocations()>
<org.springframework.beans.factory.InjectionPoint: int hashCode()>-><java.lang.reflect.Field: int hashCode()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<java.security.AccessControlContext: void <init>(java.security.AccessControlContext,java.security.DomainCombiner,boolean)>-><java.lang.System: java.lang.SecurityManager getSecurityManager()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration: void <init>(org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ObjectProvider)>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerReactiveWebConfiguration: void <init>(org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>-><java.util.ArrayList$Itr: void remove()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap: java.util.Set keySet()>-><java.util.Collections$UnmodifiableMap: java.util.Set keySet()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>-><org.springframework.web.servlet.handler.AbstractHandlerMapping: void setCorsConfigurations(java.util.Map)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder customizers(java.util.Collection)>-><java.util.LinkedHashSet: void <init>(java.util.Collection)>
<org.springframework.boot.test.mock.web.SpringBootMockServletContext: boolean exists(java.lang.String)>-><org.springframework.core.io.AbstractFileResolvingResource: boolean exists()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTaskSchedulerBuilder(org.springframework.boot.task.TaskSchedulerBuilder)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration: com.fasterxml.jackson.module.paramnames.ParameterNamesModule parameterNamesModule()>
<org.springframework.boot.autoconfigure.validation.ValidatorAdapter: org.springframework.validation.Validator getExistingOrCreate(org.springframework.context.ApplicationContext)>-><org.springframework.boot.autoconfigure.validation.ValidatorAdapter: org.springframework.validation.Validator wrap(org.springframework.validation.Validator,boolean)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: int hashCode()>
<org.springframework.beans.factory.BeanFactoryUtils: java.lang.String[] beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,org.springframework.core.ResolvableType)>-><org.springframework.test.web.servlet.setup.StubWebApplicationContext: org.springframework.beans.factory.BeanFactory getParentBeanFactory()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.Validator getValidator()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: void <init>(org.springframework.boot.autoconfigure.mustache.MustacheProperties)>-><org.springframework.boot.autoconfigure.mustache.MustacheProperties: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForConstant: int hashCode()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>-><java.util.LinkedHashMap$LinkedValues: void forEach(java.util.function.Consumer)>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>-><java.lang.Iterable: void forEach(java.util.function.Consumer)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<org.apache.catalina.security.SecurityUtil: void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)>-><org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.web.servlet.view.AbstractTemplateViewResolver: void <init>()>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void <init>()>
<java.util.TimSort: void mergeLo(int,int,int,int)>-><org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Object,java.lang.Object)>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.tree.TypeVariableSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer errorPageCustomizer()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.util.LinkedMultiValueMap: int hashCode()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration: void <init>(org.springframework.core.env.Environment)>-><org.springframework.web.context.support.StandardServletEnvironment: void <init>()>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler)>-><org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: java.lang.String[] getViewNames()>
<org.springframework.boot.web.server.MimeMappings: void <init>(org.springframework.boot.web.server.MimeMappings,boolean)>-><java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.security.auth.Subject: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.ContentNegotiatingViewResolver viewResolver(org.springframework.beans.factory.BeanFactory)>-><org.springframework.web.servlet.view.ContentNegotiatingViewResolver: void setContentNegotiationManager(org.springframework.web.accept.ContentNegotiationManager)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.cglib.core.Signature: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addArgumentResolvers(java.util.List)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration: org.springframework.cache.support.SimpleCacheManager cacheManager(java.util.Collection)>-><org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers: org.springframework.cache.CacheManager customize(org.springframework.cache.CacheManager)>
<org.springframework.mock.web.MockHttpSession: void assertIsValid()>-><org.springframework.mock.web.MockHttpSession: boolean isInvalid()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.net.Inet4Address: int hashCode()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>-><java.util.LinkedHashMap$LinkedValues: void forEach(java.util.function.Consumer)>
<org.springframework.boot.autoconfigure.freemarker.FreeMarkerNonWebConfiguration: org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean freeMarkerConfiguration()>-><org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean: void <init>()>
<javax.security.auth.Subject: int hashCode()>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.codehaus.groovy.runtime.InvokerHelper: java.lang.String format(java.lang.Object,boolean,int,boolean)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>-><org.springframework.http.server.reactive.UndertowHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer: org.springframework.core.task.AsyncTaskExecutor getTaskExecutor()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder cbor()>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder$CborFactoryInitializer: void <init>(org.springframework.http.converter.json.Jackson2ObjectMapperBuilder$1)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.bind.support.ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer()>-><org.springframework.web.bind.support.ConfigurableWebBindingInitializer: void <init>()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: void forEach(java.util.function.Consumer)>-><java.util.concurrent.ConcurrentHashMap$Traverser: java.util.concurrent.ConcurrentHashMap$Node advance()>
<org.springframework.beans.factory.NoUniqueBeanDefinitionException: void <init>(java.lang.Class,java.util.Collection)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setPathMatcher(org.springframework.util.PathMatcher)>-><org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setPathMatcher(org.springframework.util.PathMatcher)>
<java.lang.Shutdown: void runHooks()>-><java.io.DeleteOnExitHook$1: void run()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.jmx.support.MBeanRegistrationSupport: void setServer(javax.management.MBeanServer)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>-><java.util.ArrayList: void forEach(java.util.function.Consumer)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<org.springframework.beans.factory.support.StaticListableBeanFactory$1: java.lang.Object getObject(java.lang.Object[])>-><org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Object[])>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.core.Constants: java.util.Set getValues(java.lang.String)>-><java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void <init>()>
<org.springframework.mock.web.MockServletContext: void <init>(java.lang.String,org.springframework.core.io.ResourceLoader)>-><java.lang.System: java.lang.String getProperty(java.lang.String)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider$3: java.lang.Object resolveNotUnique(org.springframework.core.ResolvableType,java.util.Map)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void extendMessageConverters(java.util.List)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void <init>(org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider: java.util.stream.Stream orderedStream()>
<org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)>-><org.springframework.core.io.FileSystemResource: boolean exists()>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider getProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>-><org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider findProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.expression.spel.ast.Literal: java.lang.String toString()>
<org.springframework.boot.autoconfigure.validation.ValidatorAdapter: org.springframework.validation.Validator create()>-><org.springframework.boot.validation.MessageInterpolatorFactory: void <init>()>
<org.apache.catalina.security.SecurityUtil: void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)>-><org.springframework.mock.web.MockHttpSession: void setAttribute(java.lang.String,java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration: org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean dispatcherServletRegistration(org.springframework.web.servlet.DispatcherServlet)>-><org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean: void <init>(org.springframework.web.servlet.DispatcherServlet,java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.invoke.MethodType: int hashCode()>
<org.jsoup.helper.StringUtil: java.lang.String join(java.util.Iterator,java.lang.String)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)>-><org.springframework.beans.factory.BeanFactoryUtils: boolean isFactoryDereference(java.lang.String)>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter: void <init>()>
<org.apache.catalina.security.SecurityUtil$1: java.lang.Void run()>-><java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<org.springframework.boot.web.servlet.filter.OrderedHiddenHttpMethodFilter: void <init>()>-><org.springframework.web.filter.HiddenHttpMethodFilter: void <init>()>
<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>-><java.util.LinkedHashMap$LinkedEntrySet: void forEach(java.util.function.Consumer)>
<org.springframework.mock.web.MockHttpSession: java.lang.Object getAttribute(java.lang.String)>-><java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<org.apache.catalina.security.SecurityUtil: void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)>-><org.apache.juli.logging.DirectJDKLog: boolean isDebugEnabled()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(boolean,java.util.Collection)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List postProcessConverters(java.util.List)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<java.util.AbstractSet: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void addTopics(org.apache.activemq.artemis.jms.server.config.JMSConfiguration,java.lang.String[])>-><java.lang.StringBuilder: void <init>()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.boot.autoconfigure.orm.jpa.EntityManagerFactoryBuilderCustomizer getEntityManagerFactoryBuilderCustomizer()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDispatcherServletRegistrationBean(org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><groovy.lang.MetaMethod: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setRestTemplate(org.springframework.web.client.RestTemplate)>
<org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerAutoConfiguration$DeferredRequestExpectationManager: void <init>(org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer)>-><java.lang.Object: void <init>()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor: void <init>()>-><org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadSource(org.springframework.core.io.Resource,java.nio.charset.Charset)>-><org.springframework.core.io.support.PropertiesLoaderUtils: java.util.Properties loadProperties(org.springframework.core.io.Resource)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.nodes.Comment: java.lang.String toString()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: org.springframework.mail.javamail.JavaMailSenderImpl mailSender()>-><org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.mail.javamail.JavaMailSenderImpl)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: int compareTo(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int hashCode()>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter: void <init>()>-><org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>
<org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void <init>()>-><java.util.HashMap: void <init>(int)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.EnumMap$Values: java.util.Iterator iterator()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration: void <init>()>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.visitor.Reifier: java.lang.reflect.Type getResult()>
<org.springframework.web.method.HandlerMethod$HandlerMethodParameter: java.lang.Class getContainingClass()>-><org.springframework.web.method.HandlerMethod: java.lang.Class getBeanType()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.thymeleaf.spring5.SpringTemplateEngine: void setEnableSpringELCompiler(boolean)>-><org.thymeleaf.spring5.dialect.SpringStandardDialect: void setEnableSpringELCompiler(boolean)>
<java.text.AttributeEntry: int hashCode()>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.security.auth.Subject: java.lang.String toString()>
<org.springframework.boot.web.server.MimeMappings: void <init>(org.springframework.boot.web.server.MimeMappings,boolean)>-><java.lang.Object: void <init>()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.hibernate.boot.model.naming.Identifier: java.lang.String toString()>
<org.springframework.cache.support.NoOpCacheManager: void <init>()>-><java.lang.Object: void <init>()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver()>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: java.lang.String getCharacterEncoding()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.Spliterators$1Adapter: boolean hasNext()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Vector$Itr: java.lang.Object next()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder customizers(java.lang.Iterable)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.web.servlet.handler.HandlerInterceptorAdapter: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.web.servlet.support.ErrorPageFilter: void <init>()>-><org.springframework.boot.web.servlet.support.ErrorPageFilter$1: void <init>(org.springframework.boot.web.servlet.support.ErrorPageFilter)>
<org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration: org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor embeddedDataSourceBeanFactoryPostProcessor()>-><org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor: void <init>(org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$1)>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>-><org.springframework.util.MimeType: java.nio.charset.Charset getCharset()>
<javax.security.auth.Subject: int hashCode()>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>-><java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><groovyjarjarasm.asm.ConstantDynamic: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void configurePartConverters(org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter,java.util.Collection)>-><org.springframework.http.converter.FormHttpMessageConverter: void setPartConverters(java.util.List)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>-><org.springframework.web.servlet.handler.AbstractHandlerMapping: void setInterceptors(java.lang.Object[])>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><javax.security.auth.Policy$4: java.lang.Object run()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate configure(org.springframework.web.client.RestTemplate)>-><org.springframework.boot.web.client.RestTemplateBuilder: void configureRequestFactory(org.springframework.web.client.RestTemplate)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDefaultCouchbaseEnvironment(com.couchbase.client.java.env.DefaultCouchbaseEnvironment)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer(org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.crypto.CryptoPermission: java.lang.String toString()>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration: org.thymeleaf.spring5.SpringTemplateEngine templateEngine()>-><java.util.stream.ReferencePipeline$Head: void forEach(java.util.function.Consumer)>
<org.springframework.mock.web.MockHttpServletRequest: int getServerPort()>-><org.springframework.mock.web.MockHttpServletRequest: java.lang.String getHeader(java.lang.String)>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: void <init>(org.springframework.boot.autoconfigure.web.ResourceProperties)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<javax.security.auth.SubjectDomainCombiner$WeakKeyValueMap: void <init>()>-><java.util.WeakHashMap: void <init>()>
<java.util.Objects: int hashCode(java.lang.Object)>-><javax.security.auth.Subject: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<java.util.EnumMap: int entryHashCode(int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.validation.Validator mvcValidator()>-><org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><javax.management.MBeanNotificationInfo: int hashCode()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.ViewServiceConfig getViewServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints$CouchbaseService: int getMinEndpoints()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><ch.qos.logback.classic.joran.ReconfigureOnChangeTask: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadSource(org.springframework.core.io.Resource,java.nio.charset.Charset)>-><org.springframework.core.io.support.PropertiesLoaderUtils: java.util.Properties loadProperties(org.springframework.core.io.support.EncodedResource)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.lang.Enum: int compareTo(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.Map getDefaultMediaTypes()>-><java.util.HashMap: void <init>(int)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment couchbaseEnvironment()>
<org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean compareEqual(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper get()>
<org.springframework.boot.autoconfigure.validation.ValidatorAdapter: org.springframework.validation.Validator wrap(org.springframework.validation.Validator,boolean)>-><org.springframework.boot.autoconfigure.validation.ValidatorAdapter: void <init>(org.springframework.validation.SmartValidator,boolean)>
<org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setTemplateMode(java.lang.String)>-><org.thymeleaf.templatemode.TemplateMode: org.thymeleaf.templatemode.TemplateMode parse(java.lang.String)>
<java.util.LinkedHashMap$LinkedValues: void forEach(java.util.function.Consumer)>-><java.util.ConcurrentModificationException: void <init>()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Object,java.lang.Object)>-><org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: int hashCode()>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<java.util.Objects: int hashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.validation.Validator mvcValidator()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.context.ApplicationContext getApplicationContext()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.QueryServiceConfig getQueryServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints$CouchbaseService: int getMinEndpoints()>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.MethodValidationPostProcessor methodValidationPostProcessor(org.springframework.core.env.Environment,javax.validation.Validator)>-><org.springframework.validation.beanvalidation.MethodValidationPostProcessor: void <init>()>
<java.util.HashMap: int hash(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.time.LocalTime: int hashCode()>
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.Object getBean(java.lang.String,java.lang.Object[])>-><org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Object[])>
<javax.security.auth.Policy$4: java.lang.String run()>-><java.security.Security: java.lang.String getProperty(java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.net.httpserver.HttpConnection: java.lang.String toString()>
<org.thymeleaf.TemplateEngine: java.util.Set getDialects()>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration: org.thymeleaf.spring5.SpringTemplateEngine templateEngine()>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$1: java.util.stream.Stream orderedStream()>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.catalina.core.ApplicationFilterChain: void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>-><org.apache.catalina.security.SecurityUtil: void doAsPrivilege(java.lang.String,javax.servlet.Filter,java.lang.Class[],java.lang.Object[],java.security.Principal)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.security.x509.UnparseableExtension: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: void <init>(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,java.util.Collection,org.springframework.beans.factory.ObjectProvider)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.cglib.core.MethodInfo: java.lang.String toString()>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties: java.util.Map getSettings()>
<javax.security.auth.Subject: int hashCode()>-><java.util.Collections$1: java.lang.Object next()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.Collections$EmptyMap: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$IsRoot: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.boot.autoconfigure.web.ErrorProperties,java.util.List)>-><org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,java.util.List)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.time.MonthDay: int hashCode()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate configure(org.springframework.web.client.RestTemplate)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setSchema(java.util.List)>
<org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration: org.springframework.cache.concurrent.ConcurrentMapCacheManager cacheManager()>-><org.springframework.cache.concurrent.ConcurrentMapCacheManager: void setCacheNames(java.util.Collection)>
<org.thymeleaf.TemplateEngine: java.util.Set getDialects()>-><java.util.HashMap$HashIterator: boolean hasNext()>
<javax.security.auth.Subject: int hashCode()>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.springframework.format.datetime.DateFormatter: void <init>(java.lang.String)>-><java.lang.Object: void <init>()>
<java.io.File: void deleteOnExit()>-><java.io.File: boolean isInvalid()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.util.Assert: void isInstanceOf(java.lang.Class,java.lang.Object,java.lang.String)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList: net.bytebuddy.description.type.TypeDescription$Generic get(int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList$AnnotatedTypeVariable: void <init>(net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList,net.bytebuddy.description.type.TypeDescription$Generic,int)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.ViewServiceConfig getViewServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><com.couchbase.client.core.env.ViewServiceConfig: com.couchbase.client.core.env.ViewServiceConfig create(int,int)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedTomcat: org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory tomcatReactiveWebServerFactory()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.mail.javamail.JavaMailSenderImpl: void setHost(java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.math.BigDecimal: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration: org.springframework.web.servlet.view.BeanNameViewResolver beanNameViewResolver()>-><org.springframework.web.servlet.view.BeanNameViewResolver: void setOrder(int)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration: org.springframework.context.support.PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientRegistrationRepositoryConfiguration: org.springframework.security.oauth2.client.registration.InMemoryClientRegistrationRepository clientRegistrationRepository()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setBeanClassLoader(java.lang.ClassLoader)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder taskDecorator(org.springframework.core.task.TaskDecorator)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source asInt(java.util.function.Function)>-><org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source as(java.util.function.Function)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.AbstractList: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setWelcomePageHandlerMapping(org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping)>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer tomcatServletWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>-><org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<java.util.Collections$UnmodifiableMap: boolean isEmpty()>-><java.util.Collections$UnmodifiableMap: boolean isEmpty()>
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.Object getBean(java.lang.String,java.lang.Class)>-><org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: java.lang.ClassLoader getClassLoader()>-><org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.ClassLoader getClassLoader()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<groovyjarjarasm.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><javax.security.auth.Subject: java.lang.String toString()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.http.HttpProperties$Encoding: boolean shouldForce(org.springframework.boot.autoconfigure.http.HttpProperties$Encoding$Type)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.hibernate.QueryException: java.lang.String getMessage()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration: java.lang.String getServletRegistrationName()>-><org.springframework.util.ClassUtils: java.lang.Class getUserClass(java.lang.Class)>
<org.thymeleaf.templateresolver.AbstractTemplateResolver: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.test.mock.web.SpringBootMockServletContext: boolean exists(java.lang.String)>-><org.springframework.core.io.FileSystemResource: boolean exists()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$Attribute: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.GitProperties gitProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git: org.springframework.core.io.Resource getLocation()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.data.domain.Sort$Order: java.lang.String toString()>
<org.hibernate.boot.model.relational.Namespace$Name: int hashCode()>-><org.hibernate.boot.model.naming.Identifier: int hashCode()>
<org.springframework.mock.web.HeaderValueHolder: org.springframework.mock.web.HeaderValueHolder getByName(java.util.Map,java.lang.String)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.Validator getValidator()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.temporal.IsoFields$Field$2: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer: void <init>()>-><java.lang.Object: void <init>()>
<org.codehaus.groovy.runtime.typehandling.ShortTypeHandling: java.lang.Enum castToEnum(java.lang.Object,java.lang.Class)>-><javax.security.auth.Subject: java.lang.String toString()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.QueryServiceConfig getQueryServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints$CouchbaseService: int getMaxEndpoints()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.expr.FieldExpression: java.lang.String toString()>
<org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar springApplicationAdminRegistrar()>-><org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar: void <init>(java.lang.String)>
<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>-><java.util.HashMap$KeySet: void forEach(java.util.function.Consumer)>
<org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: org.springframework.boot.web.client.RestTemplateBuilder restTemplateBuilder()>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider: java.lang.Object getIfUnique()>
<org.springframework.mock.web.MockHttpSession: void assertIsValid()>-><org.springframework.util.Assert: void state(boolean,java.lang.String)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration: void <init>(org.springframework.boot.autoconfigure.http.HttpProperties)>
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>-><java.lang.String: int length()>
<org.thymeleaf.templatemode.TemplateMode: org.thymeleaf.templatemode.TemplateMode parse(java.lang.String)>-><java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.util.function.Supplier)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>
<org.thymeleaf.spring5.SpringWebFluxTemplateEngine: void <init>()>-><org.thymeleaf.spring5.linkbuilder.webflux.SpringWebFluxLinkBuilder: void <init>()>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<org.springframework.boot.info.InfoProperties: java.util.Properties copy(java.util.Properties)>-><java.util.Hashtable: void putAll(java.util.Map)>
<javax.security.auth.Subject: boolean equals(java.lang.Object)>-><java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog: void info(java.lang.Object)>
<org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration: org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager testEntityManager(javax.persistence.EntityManagerFactory)>-><org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager: void <init>(javax.persistence.EntityManagerFactory)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addCorsMappings(org.springframework.web.servlet.config.annotation.CorsRegistry)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<java.util.TimSort: void binarySort(java.lang.Object[],int,int,int,java.util.Comparator)>-><org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Object,java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void forEach(java.util.function.Consumer)>-><java.lang.Iterable: void forEach(java.util.function.Consumer)>
<org.springframework.boot.test.mock.web.SpringBootMockServletContext: java.lang.String getResourceLocation(java.lang.String)>-><org.springframework.boot.test.mock.web.SpringBootMockServletContext: boolean exists(java.lang.String)>
<org.apache.catalina.core.ApplicationFilterChain: void access$000(org.apache.catalina.core.ApplicationFilterChain,javax.servlet.ServletRequest,javax.servlet.ServletResponse)>-><org.apache.catalina.core.ApplicationFilterChain: void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl: java.lang.String getKeyStore()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.ResourceHttpMessageConverter: void <init>()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object getBean(java.lang.Class)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object getBean(java.lang.Class,java.lang.Object[])>
<java.util.TreeMap$Entry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder jacksonObjectMapperBuilder(java.util.List)>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration: void customize(org.springframework.http.converter.json.Jackson2ObjectMapperBuilder,java.util.List)>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter: void <init>()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.ViewServiceConfig getViewServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints$CouchbaseService: int getMaxEndpoints()>
<org.springframework.mock.web.MockHttpServletRequest: void setAttribute(java.lang.String,java.lang.Object)>-><java.util.HashMap: java.lang.Object remove(java.lang.Object)>
<org.thymeleaf.templatemode.TemplateMode: org.thymeleaf.templatemode.TemplateMode parse(java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object[])>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void setRootViewName(java.lang.String)>-><org.springframework.web.servlet.mvc.ParameterizableViewController: void <init>()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(org.springframework.core.ResolvableType)>-><org.springframework.core.ResolvableType: java.lang.Class resolve()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.awt.image.ColorModel: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$IsLastOfType: java.lang.String toString()>
<java.util.Collections$UnmodifiableMap: java.util.Collection values()>-><java.util.Collections$UnmodifiableMap: java.util.Collection values()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.web.servlet.View getView()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<java.security.AccessControlContext: boolean equals(java.lang.Object)>-><java.security.AccessControlContext: boolean equalLimitedContext(java.security.AccessControlContext)>
<org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>-><org.apache.commons.logging.LogAdapter$Slf4jLog: void warn(java.lang.Object,java.lang.Throwable)>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.web.ServerProperties: void <init>()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: void <init>(org.springframework.core.io.Resource)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded: java.util.Map generateTransportParameters()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<javax.security.auth.Subject: java.lang.Object doAsPrivileged(javax.security.auth.Subject,java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>-><java.lang.SecurityManager: void checkPermission(java.security.Permission)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setRequestMappingHandlerAdapter(org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter)>
<java.lang.reflect.Field: java.lang.annotation.Annotation[] getDeclaredAnnotations()>-><java.lang.reflect.Field: java.util.Map declaredAnnotations()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.io.ObjectStreamField: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration: com.fasterxml.jackson.databind.ObjectMapper jacksonObjectMapper(org.springframework.http.converter.json.Jackson2ObjectMapperBuilder)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: com.fasterxml.jackson.databind.ObjectMapper build()>
<org.springframework.beans.factory.NoUniqueBeanDefinitionException: void <init>(java.lang.Class,java.util.Collection)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJavaMailSenderImpl(org.springframework.mail.javamail.JavaMailSenderImpl)>
<org.codehaus.groovy.runtime.InvokerHelper: java.lang.String format(java.lang.Object,boolean,int,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder customizers(java.util.Collection)>-><java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer$TimeoutRequestFactoryCustomizer: void customize(org.springframework.http.client.ClientHttpRequestFactory)>-><org.springframework.util.ReflectionUtils: java.lang.Object invokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
<org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: org.springframework.boot.web.client.RestTemplateBuilder restTemplateBuilder()>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setLocaleResolver(org.springframework.web.servlet.LocaleResolver)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.core.io.ClassPathResource: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.apache.logging.log4j.Level: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration: org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer standardJacksonObjectMapperBuilderCustomizer(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.jackson.JacksonProperties)>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.jackson.JacksonProperties)>
<javax.security.auth.Subject: int hashCode()>-><java.util.Vector$Itr: boolean hasNext()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.codehaus.groovy.ast.GenericsType$GenericsTypeName: int hashCode()>
<java.io.File$TempDirectory: java.io.File generateFile(java.lang.String,java.lang.String,java.io.File)>-><java.io.File: boolean isInvalid()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor applicationTaskExecutor(org.springframework.boot.task.TaskExecutorBuilder)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor build()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.security.AllPermission: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>-><org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler: void <init>(org.springframework.jmx.export.metadata.JmxAttributeSource)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.LocalDate: java.lang.String toString()>
<org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientRegistrationRepositoryConfiguration: org.springframework.security.oauth2.client.registration.InMemoryClientRegistrationRepository clientRegistrationRepository()>-><org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientPropertiesRegistrationAdapter: java.util.Map getClientRegistrations(org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties)>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><org.springframework.ui.freemarker.FreeMarkerConfigurationFactory: void setFreemarkerSettings(java.util.Properties)>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Object[])>-><java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.beans.PropertyDescriptor: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.stmt.ExpressionStatement: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: int hashCode()>
<org.springframework.boot.autoconfigure.batch.BatchConfigurerConfiguration$JpaBatchConfiguration: org.springframework.boot.autoconfigure.batch.JpaBatchConfigurer batchConfigurer(org.springframework.boot.autoconfigure.batch.BatchProperties,javax.sql.DataSource,org.springframework.beans.factory.ObjectProvider,javax.persistence.EntityManagerFactory)>-><org.springframework.boot.autoconfigure.batch.JpaBatchConfigurer: void <init>(org.springframework.boot.autoconfigure.batch.BatchProperties,javax.sql.DataSource,org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers,javax.persistence.EntityManagerFactory)>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)>-><org.springframework.beans.factory.BeanIsNotAFactoryException: void <init>(java.lang.String,java.lang.Class)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.thymeleaf.templateresolver.AbstractTemplateResolver: void setOrder(java.lang.Integer)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>-><java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>
<org.springframework.util.DefaultPropertiesPersister: void loadFromXml(java.util.Properties,java.io.InputStream)>-><java.util.Properties: void loadFromXML(java.io.InputStream)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback(java.lang.String)>-><org.springframework.util.ClassUtils: java.lang.Class resolveClassName(java.lang.String,java.lang.ClassLoader)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.net.InetAddress: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJerseyApplicationPath(org.springframework.boot.autoconfigure.web.servlet.JerseyApplicationPath)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.expr.MethodCallExpression: java.lang.String toString()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.beans.PropertyValue: int hashCode()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration: void <init>()>
<org.springframework.web.servlet.view.InternalResourceViewResolver: void <init>()>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void <init>()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.util.DefaultPropertiesPersister: void load(java.util.Properties,java.io.InputStream)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.hibernate.QueryException: java.lang.String getMessage()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: java.util.List resolveFaviconLocations()>-><java.util.Collections: java.util.List unmodifiableList(java.util.List)>
<org.springframework.http.server.reactive.UndertowHeadersAdapter$HeaderEntry: void <init>(org.springframework.http.server.reactive.UndertowHeadersAdapter,io.undertow.util.HttpString)>-><java.lang.Object: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.StructuralEvaluator$Not: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object getBean(java.lang.Class,java.lang.Object[])>-><org.springframework.core.ResolvableType: org.springframework.core.ResolvableType forRawClass(java.lang.Class)>
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: void <init>(org.springframework.jdbc.core.JdbcOperations)>-><org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate$1: void <init>(org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate,int,float,boolean)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$AttributeWithValueStarting: java.lang.String toString()>
<javax.security.auth.Subject: int hashCode()>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: java.util.List sortErrorViewResolvers(java.util.List)>-><java.util.ArrayList: void <init>()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><javax.security.auth.Subject: int hashCode()>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)>-><java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJsonTestersAutoConfiguration$JsonMarshalTestersBeanPostProcessor(org.springframework.boot.test.autoconfigure.json.JsonTestersAutoConfiguration$JsonMarshalTestersBeanPostProcessor)>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>-><org.springframework.web.filter.CharacterEncodingFilter: void setForceRequestEncoding(boolean)>
<nz.net.ultraq.thymeleaf.LayoutDialect: groovy.lang.MetaClass $getStaticMetaClass()>-><org.codehaus.groovy.reflection.ClassInfo: org.codehaus.groovy.reflection.ClassInfo getClassInfo(java.lang.Class)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.QueryServiceConfig getQueryServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientRegistrationRepositoryConfiguration: org.springframework.security.oauth2.client.registration.InMemoryClientRegistrationRepository clientRegistrationRepository()>-><org.springframework.security.oauth2.client.registration.InMemoryClientRegistrationRepository: void <init>(java.util.List)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.regex.Pattern: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisNoOpBindingRegistry: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration$JdbcTemplateConfiguration: void <init>(javax.sql.DataSource,org.springframework.boot.autoconfigure.jdbc.JdbcProperties)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: void <init>(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory,javax.sql.DataSource)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors()>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback()>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration: void <init>(org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties)>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><java.util.Collections: java.util.Map emptyMap()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.springframework.mock.web.MockHttpServletRequest: java.lang.StringBuffer getRequestURL()>-><java.lang.StringBuffer: java.lang.StringBuffer append(int)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: org.thymeleaf.spring5.SpringWebFluxTemplateEngine templateEngine()>-><java.util.stream.ReferencePipeline$Head: void forEach(java.util.function.Consumer)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.stmt.ReturnStatement: java.lang.String toString()>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.format.support.FormattingConversionService$ParserConverter: java.lang.String toString()>
<org.springframework.boot.task.TaskExecutorBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.context.support.PropertySourcesPlaceholderConfigurer: void <init>()>-><org.springframework.beans.factory.config.PlaceholderConfigurerSupport: void <init>()>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setCorsConfigurations(java.util.Map)>-><org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setCorsConfigurations(java.util.Map)>
<org.springframework.boot.web.server.MimeMappings: void <init>(org.springframework.boot.web.server.MimeMappings,boolean)>-><java.util.LinkedHashMap: void <init>(java.util.Map)>
<org.codehaus.groovy.ast.expr.ConstantExpression: java.lang.String getText()>-><javax.security.auth.Subject: java.lang.String toString()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList: void <init>(java.util.Collection)>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.tree.ShortSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: void startEmbeddedJms()>-><java.lang.Class: java.lang.Class forName(java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter createRequestMappingHandlerAdapter()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter createRequestMappingHandlerAdapter()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.web.context.request.ServletWebRequest: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver()>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: void setExcludedViewNames(java.lang.String[])>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.beans.factory.config.BeanDefinitionHolder: java.lang.String toString()>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback()>-><org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback(java.lang.String)>
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setCallableInterceptors(java.util.List)>-><java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>
<org.springframework.beans.factory.NoUniqueBeanDefinitionException: void <init>(java.lang.Class,java.util.Collection)>-><java.util.Arrays$ArrayList: int size()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList: net.bytebuddy.description.type.TypeDescription$Generic get(int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList: java.lang.Object get(int)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<org.springframework.boot.test.mock.web.SpringBootMockServletContext: java.lang.String getResourceBasePathLocation(java.lang.String)>-><org.springframework.mock.web.MockServletContext: java.lang.String getResourceLocation(java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.security.CodeSource: int hashCode()>
<org.springframework.test.web.servlet.setup.MockMvcBuilders: org.springframework.test.web.servlet.setup.DefaultMockMvcBuilder webAppContextSetup(org.springframework.web.context.WebApplicationContext)>-><org.springframework.test.web.servlet.setup.DefaultMockMvcBuilder: void <init>(org.springframework.web.context.WebApplicationContext)>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><org.springframework.beans.factory.ObjectProvider: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: boolean isReplacement(org.springframework.http.converter.HttpMessageConverter,org.springframework.http.converter.HttpMessageConverter)>-><java.lang.Object: java.lang.Class getClass()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.Object: java.lang.String toString()>
<java.util.HashMap$Values: void forEach(java.util.function.Consumer)>-><java.util.ConcurrentModificationException: void <init>()>
<org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>-><java.lang.Object: void <init>()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.validation.ValidatorAdapter: org.springframework.validation.Validator create()>-><org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getObject()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<java.util.AbstractSet: int hashCode()>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<org.thymeleaf.templatemode.TemplateMode: org.thymeleaf.templatemode.TemplateMode parse(java.lang.String)>-><java.lang.String: int length()>
<org.springframework.web.servlet.config.annotation.InterceptorRegistry: void <init>()>-><java.util.ArrayList: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><javax.management.MBeanOperationInfo: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><groovyjarjarasm.asm.Handle: java.lang.String toString()>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping createRequestMappingHandlerMapping()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping createRequestMappingHandlerMapping()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: void forEach(java.util.function.Consumer)>-><java.lang.NullPointerException: void <init>()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createNativeConnectionFactory(java.lang.Class)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.IdentityHashMap: int hashCode()>
<org.springframework.boot.info.GitProperties: java.lang.String coerceToEpoch(java.lang.String)>-><org.springframework.boot.info.GitProperties: java.lang.Long parseEpochSecond(java.lang.String)>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.nodes.Node: java.lang.String toString()>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.MethodValidationPostProcessor methodValidationPostProcessor(org.springframework.core.env.Environment,javax.validation.Validator)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.EventObject: java.lang.String toString()>
<groovy.lang.MetaClassImpl: void setProperties(java.lang.Object,java.util.Map)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration: com.fasterxml.jackson.module.paramnames.ParameterNamesModule parameterNamesModule()>-><com.fasterxml.jackson.module.paramnames.ParameterNamesModule: void <init>(com.fasterxml.jackson.annotation.JsonCreator$Mode)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.net.URI: int hashCode()>
<nz.net.ultraq.thymeleaf.LayoutDialect: org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray()>-><java.lang.ref.SoftReference: void <init>(java.lang.Object)>
<javax.security.auth.SubjectDomainCombiner: void <init>(javax.security.auth.Subject)>-><javax.security.auth.SubjectDomainCombiner$WeakKeyValueMap: void <init>(javax.security.auth.SubjectDomainCombiner$1)>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: com.hazelcast.config.Config getConfig(org.springframework.core.io.Resource)>-><org.springframework.util.ResourceUtils: boolean isFileURL(java.net.URL)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer: void <init>()>-><org.springframework.boot.autoconfigure.web.ResourceProperties: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.boot.info.GitProperties: java.lang.String coerceToEpoch(java.lang.String)>-><java.util.Date: long getTime()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.jar.Attributes$Name: int hashCode()>
<org.springframework.mock.web.MockServletContext: void <init>()>-><org.springframework.mock.web.MockServletContext: void <init>(java.lang.String,org.springframework.core.io.ResourceLoader)>
<org.springframework.http.client.support.HttpAccessor: void <init>()>-><java.lang.Object: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.util.locale.provider.RuleBasedBreakIterator: int hashCode()>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer$TimeoutRequestFactoryCustomizer: void <init>(java.time.Duration,java.lang.String)>-><java.lang.Object: void <init>()>
<java.security.AccessControlContext: boolean containsAllPDs(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.web.servlet.error.DefaultErrorAttributes errorAttributes()>-><org.springframework.boot.web.servlet.error.DefaultErrorAttributes: void <init>(boolean)>
<org.springframework.boot.util.LambdaSafe$Callbacks: void <init>(java.lang.Class,java.util.Collection,java.lang.Object,java.lang.Object[])>-><org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: void <init>(java.lang.Class,java.lang.Object,java.lang.Object[])>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar springApplicationAdminRegistrar()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.net.Inet6Address: int hashCode()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration: org.springframework.boot.web.servlet.ServletRegistrationBean jerseyServletRegistration(org.springframework.boot.autoconfigure.web.servlet.JerseyApplicationPath)>-><org.springframework.boot.autoconfigure.jersey.JerseyProperties$Servlet: int getLoadOnStartup()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.security.ProtectionDomain: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap$LinkedEntrySet: void forEach(java.util.function.Consumer)>-><java.util.ConcurrentModificationException: void <init>()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.lang.ProcessEnvironment$Value: int compareTo(java.lang.Object)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setPort(java.lang.Integer)>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.json.MappingJackson2HttpMessageConverter: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.ClassNode: java.lang.String toString()>
<org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration: org.springframework.transaction.jta.JtaTransactionManager transactionManager()>-><org.springframework.transaction.config.JtaTransactionManagerFactoryBean: void <init>()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping welcomePageHandlerMapping(org.springframework.context.ApplicationContext)>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: java.util.Optional getWelcomePage()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.awt.geom.Point2D: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.format.DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: org.springframework.web.servlet.handler.SimpleUrlHandlerMapping faviconHandlerMapping()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: org.springframework.web.servlet.resource.ResourceHttpRequestHandler faviconRequestHandler()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.zone.ZoneRules: java.lang.String toString()>
<org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter: void <init>()>-><org.springframework.web.filter.RequestContextFilter: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void setRootViewName(java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.io.File: java.lang.String toString()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.lang.ProcessEnvironment$Variable: int compareTo(java.lang.Object)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void addQueues(org.apache.activemq.artemis.jms.server.config.JMSConfiguration,java.lang.String[])>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor build(java.lang.Class)>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void main(java.lang.String[])>-><synthetic.method.HttpSessionImpl: void <init>()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.hibernate.boot.model.naming.Identifier: java.lang.String render()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.security.CodeSource: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.tree.ByteSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void addFormatters()>-><org.springframework.format.number.money.Jsr354NumberFormatAnnotationFormatterFactory: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><javax.crypto.CryptoPermission: int hashCode()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.web.servlet.LocaleResolver getLocaleResolver()>
<org.springframework.util.MimeType: void <init>(java.lang.String,java.lang.String,java.util.Map)>-><org.springframework.util.LinkedCaseInsensitiveMap: int size()>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider getProvider(java.lang.String,org.springframework.context.ApplicationContext)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.cglib.core.ClassInfo: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.core.io.FileSystemResource: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.text.DecimalFormat: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setUrl(java.lang.String)>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer: void <init>(org.springframework.boot.autoconfigure.http.HttpProperties$Encoding)>-><java.lang.Object: void <init>()>
<org.springframework.boot.info.GitProperties: java.lang.String coerceToEpoch(java.lang.String)>-><java.lang.String: java.lang.String valueOf(long)>
<java.io.File$TempDirectory: java.io.File generateFile(java.lang.String,java.lang.String,java.io.File)>-><java.io.File: java.lang.String getName()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMethodValidationPostProcessor(org.springframework.validation.beanvalidation.MethodValidationPostProcessor)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<java.lang.reflect.Field: int hashCode()>-><java.lang.String: int hashCode()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration: void <init>(javax.sql.DataSource,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider: java.lang.Object getIfAvailable()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getArgumentResolvers()>-><java.util.ArrayList: void <init>()>
<org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.lang.Object)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.util.function.Supplier)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)>-><org.springframework.beans.factory.BeanFactoryUtils: java.lang.String transformedBeanName(java.lang.String)>
<javax.security.auth.Subject: boolean equals(java.lang.Object)>-><java.util.HashSet: void <init>(java.util.Collection)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)>-><org.apache.commons.logging.LogAdapter$Log4jLog: boolean isWarnEnabled()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setAnnotationMBeanExporter(org.springframework.jmx.export.annotation.AnnotationMBeanExporter)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><javax.security.auth.Subject: int hashCode()>
<org.springframework.boot.web.client.RootUriTemplateHandler: org.springframework.boot.web.client.RootUriTemplateHandler addTo(org.springframework.web.client.RestTemplate,java.lang.String)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setRequestContextFilter(org.springframework.web.filter.RequestContextFilter)>
<org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setMessageConverters(java.util.List)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.util.locale.BaseLocale$Key: int hashCode()>
<org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder jacksonObjectMapperBuilder(java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: void <init>()>
<org.thymeleaf.spring5.SpringTemplateEngine: void setRenderHiddenMarkersBeforeCheckboxes(boolean)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.resource.ResourceUrlProvider mvcResourceUrlProvider()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Formatter$FixedString: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(boolean,java.util.Collection)>-><java.util.Collections: java.util.List unmodifiableList(java.util.List)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$ContainsOwnText: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientRegistrationRepositoryConfiguration: org.springframework.security.oauth2.client.registration.InMemoryClientRegistrationRepository clientRegistrationRepository()>-><java.util.ArrayList: void <init>(java.util.Collection)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setCallableInterceptors(java.util.List)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapReactiveProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source when(java.util.function.Predicate)>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler)>-><org.springframework.web.reactive.result.view.UrlBasedViewResolver: void setRequestContextAttribute(java.lang.String)>
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>-><java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object resolveBean(org.springframework.core.ResolvableType,java.lang.Object[],boolean)>-><org.springframework.beans.factory.support.StaticListableBeanFactory$1: java.lang.Object getObject(java.lang.Object[])>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.expr.ListExpression: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.web.context.support.WebApplicationContextUtils$RequestObjectFactory: java.lang.String toString()>
<org.springframework.validation.beanvalidation.SpringValidatorAdapter: void <init>(javax.validation.Validator)>-><java.lang.Object: void <init>()>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform: org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform get()>-><org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: org.thymeleaf.spring5.SpringWebFluxTemplateEngine templateEngine()>-><java.util.stream.ReferencePipeline: void forEach(java.util.function.Consumer)>
<org.springframework.beans.factory.support.StaticListableBeanFactory$1: java.lang.Object getIfAvailable()>-><org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(org.springframework.core.ResolvableType)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.nio.ch.ExtendedSocketOption$1: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>-><org.hibernate.QueryException: java.lang.String getMessage()>
<java.io.File$TempDirectory: java.io.File generateFile(java.lang.String,java.lang.String,java.io.File)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>-><java.util.Collections$EmptyList: void forEach(java.util.function.Consumer)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping createRequestMappingHandlerMapping()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.hibernate.engine.profile.Fetch$Style: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: javax.sql.DataSource getDataSource()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: javax.servlet.MultipartConfigElement getMultipartConfigElement()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration: void <init>(org.springframework.boot.autoconfigure.orm.jpa.JpaProperties)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int hashCode()>-><java.util.LinkedList$ListItr: boolean hasNext()>
<org.springframework.core.io.FileSystemResourceLoader$FileSystemContextResource: void <init>(java.lang.String)>-><org.springframework.core.io.FileSystemResource: void <init>(java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String toString()>
<org.springframework.boot.test.mock.web.SpringBootMockServletContext: boolean exists(java.lang.String)>-><org.springframework.core.io.ClassPathResource: boolean exists()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.time.chrono.ChronoZonedDateTime: int compareTo(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void handleErrorInObjectToString(java.lang.Object,java.lang.StringBuilder,java.lang.Throwable)>-><org.hibernate.QueryException: java.lang.String getMessage()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setActiveMQXAConnectionFactory(org.apache.activemq.artemis.jms.client.ActiveMQXAConnectionFactory)>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate configure(org.springframework.web.client.RestTemplate)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.String toString()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object resolveBean(org.springframework.core.ResolvableType,java.lang.Object[],boolean)>-><org.springframework.beans.factory.support.StaticListableBeanFactory$1: java.lang.Object getIfAvailable()>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>-><org.springframework.beans.BeanUtils: java.lang.Object instantiateClass(java.lang.Class)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.LocalValidatorFactoryBean defaultValidator()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors()>-><org.springframework.web.servlet.config.annotation.InterceptorRegistry: org.springframework.web.servlet.config.annotation.InterceptorRegistration addInterceptor(org.springframework.web.servlet.HandlerInterceptor)>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.Package: java.lang.String toString()>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void accept(org.springframework.http.client.ClientHttpRequestFactory)>-><org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer$TimeoutRequestFactoryCustomizer: void customize(org.springframework.http.client.ClientHttpRequestFactory)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.nodes.Attribute: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createConnectionFactory(java.lang.Class)>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory doCreateConnectionFactory(java.lang.Class)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void setContentNegotiationManager(org.springframework.web.accept.ContentNegotiationManager)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList: void <init>()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.boot.web.codec.CodecCustomizer getCodecCustomizer()>
<org.springframework.boot.web.servlet.error.DefaultErrorAttributes: void <init>(boolean)>-><java.lang.Object: void <init>()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: int hashCode()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setJodaDateTimeFormat(java.lang.String)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCharacterEncodingFilter(org.springframework.web.filter.CharacterEncodingFilter)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setContentType(java.lang.String)>
<org.springframework.boot.test.autoconfigure.json.JsonTestersAutoConfiguration: org.springframework.boot.test.autoconfigure.json.JsonTestersAutoConfiguration$JsonMarshalTestersBeanPostProcessor jsonMarshalTestersBeanPostProcessor()>-><org.springframework.boot.test.autoconfigure.json.JsonTestersAutoConfiguration$JsonMarshalTestersBeanPostProcessor: void <init>(org.springframework.boot.test.autoconfigure.json.JsonTestersAutoConfiguration$1)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.Map getDefaultMediaTypes()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.util.DefaultPropertiesPersister: void load(java.util.Properties,java.io.InputStream)>-><java.util.Properties: void load(java.io.InputStream)>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><org.apache.commons.logging.LogAdapter$Slf4jLog: void info(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.web.ResourceProperties)>-><org.springframework.boot.autoconfigure.web.ResourceProperties: void <init>()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: org.thymeleaf.spring5.SpringWebFluxTemplateEngine templateEngine()>-><org.thymeleaf.spring5.SpringTemplateEngine: void setEnableSpringELCompiler(boolean)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.AbstractList$Itr: boolean hasNext()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setThreadPoolTaskScheduler(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$CssNthEvaluator: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.cache.support.NoOpCacheManager: void <init>()>-><java.util.concurrent.ConcurrentHashMap: void <init>(int)>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><javax.security.auth.Subject$2: java.lang.Object run()>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration$MockMvcDispatcherServletCustomizer: void <init>(org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties)>-><java.lang.Object: void <init>()>
<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>-><java.util.Collections$SingletonSet: void forEach(java.util.function.Consumer)>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor openEntityManagerInViewInterceptor()>-><org.apache.commons.logging.LogAdapter$JavaUtilLog: void warn(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<org.thymeleaf.spring5.SpringTemplateEngine: void setRenderHiddenMarkersBeforeCheckboxes(boolean)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.tree.ClassTypeSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: java.lang.String[] getViewNames()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder()>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder threadNamePrefix(java.lang.String)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>-><java.lang.String: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<java.util.AbstractList$Itr: java.lang.Object next()>-><groovy.lang.EmptyRange: java.lang.Object get(int)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addInterceptors(org.springframework.web.servlet.config.annotation.InterceptorRegistry)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.asm.ConstantDynamic: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping welcomePageHandlerMapping(org.springframework.context.ApplicationContext)>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: java.lang.String getStaticPathPattern()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder cbor()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setSchemaUsername(java.lang.String)>
<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>-><java.util.HashMap$EntrySet: void forEach(java.util.function.Consumer)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.expr.TernaryExpression: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.GregorianCalendar: int hashCode()>
<org.springframework.boot.autoconfigure.validation.ValidatorAdapter: org.springframework.validation.Validator get(org.springframework.context.ApplicationContext,org.springframework.validation.Validator)>-><org.springframework.boot.autoconfigure.validation.ValidatorAdapter: org.springframework.validation.Validator getExistingOrCreate(org.springframework.context.ApplicationContext)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties getArtemisPropertiesInstance()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: boolean isExposeSessionAttributes()>
<java.util.AbstractSet: int hashCode()>-><javax.security.auth.Subject: int hashCode()>
<java.util.AbstractSet: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void <init>()>-><org.springframework.web.filter.CharacterEncodingFilter: void <init>()>
<javax.security.auth.Subject: int hashCode()>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.security.x509.GeneralName: int hashCode()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.mock.web.MockHttpServletRequest: void setAttribute(java.lang.String,java.lang.Object)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setDriverClassName(java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.beans.factory.config.BeanExpressionContext: int hashCode()>
<org.springframework.boot.task.TaskExecutorBuilder: void <init>()>-><java.lang.Object: void <init>()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.text.AttributedCharacterIterator$Attribute: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.ServiceLoader: java.lang.String toString()>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)>-><java.util.LinkedHashMap: java.util.Set keySet()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>-><java.util.AbstractList: int hashCode()>
<org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration: org.springframework.boot.web.servlet.ServletRegistrationBean jerseyServletRegistration(org.springframework.boot.autoconfigure.web.servlet.JerseyApplicationPath)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: void setLoadOnStartup(int)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.codehaus.groovy.runtime.ConversionHandler: int hashCode()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.Character$Subset: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><javax.imageio.ImageTypeSpecifier: int hashCode()>
<org.springframework.boot.info.InfoProperties: void <init>(java.util.Properties)>-><org.springframework.boot.info.InfoProperties: java.util.Properties copy(java.util.Properties)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.mvc.method.annotation.JsonViewResponseBodyAdvice: void <init>()>
<org.springframework.cache.support.NoOpCacheManager: void <init>()>-><java.util.LinkedHashSet: void <init>(int)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$AttributeWithValueContaining: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.InternalResourceViewResolver defaultViewResolver()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View: java.lang.String getSuffix()>
<java.util.Vector: void forEach(java.util.function.Consumer)>-><java.util.ConcurrentModificationException: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><net.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray: java.lang.String toString()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.zone.ZoneOffsetTransitionRule: java.lang.String toString()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setPrefix(java.lang.String)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configurePathMatch(org.springframework.web.servlet.config.annotation.PathMatchConfigurer)>-><java.util.ArrayList: java.util.Iterator iterator()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.expr.ArrayExpression: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.ZonedDateTime: java.lang.String toString()>
<org.springframework.boot.web.servlet.filter.OrderedFormContentFilter: void <init>()>-><org.springframework.web.filter.FormContentFilter: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.reflection.CachedMethod: java.lang.String toString()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList: boolean addAll(int,java.util.Collection)>
<org.thymeleaf.spring5.SpringWebFluxTemplateEngine: void <init>()>-><org.thymeleaf.TemplateEngine: void setEngineContextFactory(org.thymeleaf.context.IEngineContextFactory)>
<java.io.File: void deleteOnExit()>-><java.io.DeleteOnExitHook: void add(java.lang.String)>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler configure(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)>-><org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.temporal.IsoFields$Unit: java.lang.String toString()>
<org.springframework.core.ResolvableType: void resolveMethodParameter(org.springframework.core.MethodParameter)>-><org.springframework.web.method.HandlerMethod$HandlerMethodParameter: java.lang.Class getContainingClass()>
<org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean compareEqual(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.StaticListableBeanFactory$1: java.lang.Object getObject(java.lang.Object[])>-><org.springframework.beans.factory.NoUniqueBeanDefinitionException: void <init>(org.springframework.core.ResolvableType,java.lang.String[])>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder()>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$1: java.lang.Object getIfUnique()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.security.Provider$Service: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.management.MBeanNotificationInfo: java.lang.String toString()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<java.util.LinkedHashSet: void <init>(java.util.Collection)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList: int size()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.security.ProtectionDomain$WeakProtectionDomainKey: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.BuildProperties buildProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.security.provider.PolicyParser$PrincipalEntry: int hashCode()>
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setDeferredResultInterceptors(java.util.List)>-><java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.StringBuilder: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>-><org.springframework.core.io.AbstractFileResolvingResource: boolean exists()>
<org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver: void <init>()>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void <init>()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.info.ProjectInfoProperties)>-><org.springframework.boot.autoconfigure.info.ProjectInfoProperties: void <init>()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.Spliterators$1Adapter: java.lang.Object next()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.format.support.FormattingConversionService mvcConversionService()>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(org.springframework.core.ResolvableType)>-><org.springframework.core.ResolvableType$1: boolean isAssignableFrom(java.lang.Class)>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration: void <init>(org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties)>-><org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties: void <init>()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setView(org.springframework.web.servlet.View)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder()>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder keepAlive(java.time.Duration)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><groovy.lang.DelegatingMetaClass: int hashCode()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.CorsRegistry: java.util.Map getCorsConfigurations()>-><java.util.ArrayList$Itr: java.lang.Object next()>
<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>-><java.util.Collections$EmptySet: void forEach(java.util.function.Consumer)>
<org.springframework.http.converter.feed.AbstractWireFeedHttpMessageConverter: void <init>(org.springframework.http.MediaType)>-><org.springframework.http.converter.AbstractHttpMessageConverter: void <init>(org.springframework.http.MediaType)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>-><java.util.ArrayList$Itr: boolean hasNext()>
<groovy.lang.EmptyRange: java.lang.Object get(int)>-><groovy.lang.EmptyRange: java.lang.Comparable get(int)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<org.springframework.cache.concurrent.ConcurrentMapCache: void <init>(java.lang.String,java.util.concurrent.ConcurrentMap,boolean,org.springframework.core.serializer.support.SerializationDelegate)>-><org.springframework.cache.support.AbstractValueAdaptingCache: void <init>(boolean)>
<org.apache.catalina.core.ApplicationFilterChain: void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>-><org.apache.tomcat.util.ExceptionUtils: void handleThrowable(java.lang.Throwable)>
<java.io.DeleteOnExitHook: void runHooks()>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer localeCharsetMappingsCustomizer()>-><org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer: void <init>(org.springframework.boot.autoconfigure.http.HttpProperties$Encoding)>
<org.springframework.boot.web.reactive.server.AbstractReactiveWebServerFactory: void <init>()>-><org.springframework.boot.web.server.AbstractConfigurableWebServerFactory: void <init>()>
<org.apache.catalina.core.ApplicationFilterChain: void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>-><synthetic.method.ServletRequestImpl: boolean isAsyncSupported()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver conventionErrorViewResolver()>-><org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.web.ResourceProperties)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap: int size()>-><java.util.Collections$UnmodifiableMap: int size()>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(org.springframework.core.ResolvableType)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createNativeConnectionFactory(java.lang.Class)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setParameterNamesModule(com.fasterxml.jackson.module.paramnames.ParameterNamesModule)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration: org.springframework.boot.web.servlet.filter.OrderedFormContentFilter formContentFilter()>-><org.springframework.boot.web.servlet.filter.OrderedFormContentFilter: void <init>()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object resolveBean(org.springframework.core.ResolvableType,java.lang.Object[],boolean)>-><org.springframework.test.web.servlet.setup.StubWebApplicationContext: org.springframework.beans.factory.ObjectProvider getBeanProvider(org.springframework.core.ResolvableType)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor openEntityManagerInViewInterceptor()>-><org.springframework.boot.autoconfigure.orm.jpa.JpaProperties: java.lang.Boolean getOpenInView()>
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>
<java.util.LinkedHashMap$LinkedValues: void forEach(java.util.function.Consumer)>-><java.lang.NullPointerException: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: void <init>(org.springframework.boot.autoconfigure.web.ResourceProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ListableBeanFactory,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.web.ResourceProperties: void <init>()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: org.springframework.mail.javamail.JavaMailSenderImpl mailSender()>-><org.springframework.mail.javamail.JavaMailSenderImpl: void <init>()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: void <init>(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties: void <init>()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder()>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder maxPoolSize(int)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<org.springframework.mock.web.MockHttpSession: void setAttribute(java.lang.String,java.lang.Object)>-><org.springframework.mock.web.MockHttpSession: void assertIsValid()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration: org.springframework.boot.test.autoconfigure.web.servlet.SpringBootMockMvcBuilderCustomizer springBootMockMvcBuilderCustomizer()>-><org.springframework.boot.test.autoconfigure.web.servlet.SpringBootMockMvcBuilderCustomizer: void <init>(org.springframework.web.context.WebApplicationContext)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTomcatServletWebServerFactory(org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider: java.util.stream.Stream orderedStream()>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider: java.util.stream.Stream resolveStream(boolean)>
<ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object[])>-><ch.qos.logback.classic.Logger: void filterAndLog_0_Or3Plus(java.lang.String,org.slf4j.Marker,ch.qos.logback.classic.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: org.springframework.cache.Cache createConcurrentMapCache(java.lang.String)>-><org.springframework.cache.concurrent.ConcurrentMapCacheManager: boolean isAllowNullValues()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.ZoneId: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.lang.ProcessEnvironment$StringEntrySet: java.util.Iterator iterator()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.boot.autoconfigure.web.servlet.JerseyApplicationPath getJerseyApplicationPath()>
<java.util.LinkedHashMap$LinkedKeySet: void forEach(java.util.function.Consumer)>-><java.util.ConcurrentModificationException: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(org.springframework.core.ResolvableType)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: java.lang.String toString()>
<org.springframework.orm.jpa.EntityManagerFactoryAccessor: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Env getEnv()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.Short: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><ch.qos.logback.core.joran.spi.ConsoleTarget: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void extendMessageConverters(java.util.List)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object remove(java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: java.lang.String[] getResourceLocations(java.lang.String[])>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration: java.lang.String[] access$000()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setCharacterEncoding(java.lang.String)>
<org.codehaus.groovy.runtime.ScriptBytecodeAdapter: groovy.lang.MetaClass initMetaClass(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<sun.reflect.generics.repository.FieldRepository: sun.reflect.generics.tree.TypeSignature parse(java.lang.String)>-><sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.parser.SignatureParser make()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.text.DateFormatSymbols: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.jdbc.datasource.embedded.EmbeddedDatabase getEmbeddedDatabase()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.MappingJackson2HttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void addCorsMappings(org.springframework.web.servlet.config.annotation.CorsRegistry)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addCorsMappings(org.springframework.web.servlet.config.annotation.CorsRegistry)>
<nz.net.ultraq.thymeleaf.LayoutDialect: void <init>(nz.net.ultraq.thymeleaf.decorators.SortingStrategy)>-><org.thymeleaf.dialect.AbstractProcessorDialect: void <init>(java.lang.String,java.lang.String,int)>
<org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor persistenceExceptionTranslationPostProcessor(org.springframework.core.env.Environment)>-><org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor: void <init>()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><org.hibernate.boot.model.relational.Namespace$Name: int compareTo(java.lang.Object)>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.lang.Integer: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.expr.MapEntryExpression: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>-><java.util.HashMap$KeySet: void forEach(java.util.function.Consumer)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder threadNamePrefix(java.lang.String)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addFormatters(org.springframework.format.FormatterRegistry)>-><java.util.ArrayList: java.util.Iterator iterator()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: java.lang.String toString()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration: org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean dispatcherServletRegistration(org.springframework.web.servlet.DispatcherServlet)>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet getServlet()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>
<java.util.TreeMap$Entry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.apache.logging.log4j.spi.Provider: int hashCode()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.security.Provider$UString: java.lang.String toString()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate build(java.lang.Class)>-><org.springframework.beans.BeanUtils: java.lang.Object instantiateClass(java.lang.Class)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.management.ImmutableDescriptor: java.lang.String toString()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<javax.security.auth.Subject: int hashCode()>-><java.util.AbstractList$Itr: boolean hasNext()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: java.lang.String getRequestContextAttribute()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration: org.thymeleaf.spring5.SpringTemplateEngine templateEngine()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: org.springframework.boot.web.client.RestTemplateBuilder restTemplateBuilder()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType: java.lang.String toString()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapReactiveProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper get()>
<org.springframework.core.annotation.AnnotationAwareOrderComparator: void sortIfNecessary(java.lang.Object)>-><org.springframework.core.annotation.AnnotationAwareOrderComparator: void sort(java.util.List)>
<java.util.AbstractCollection: java.lang.Object[] toArray()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList: int size()>
<org.apache.catalina.security.SecurityUtil: void doAsPrivilege(java.lang.String,javax.servlet.Servlet,java.lang.Class[],java.lang.Object[],java.security.Principal)>-><org.apache.catalina.security.SecurityUtil: java.lang.reflect.Method findMethod(java.lang.reflect.Method[],java.lang.String)>
<org.springframework.boot.autoconfigure.validation.ValidatorAdapter: org.springframework.validation.Validator wrap(org.springframework.validation.Validator,boolean)>-><org.springframework.validation.beanvalidation.SpringValidatorAdapter: void <init>(javax.validation.Validator)>
<org.hibernate.QueryException: java.lang.String getMessage()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver thymeleafViewResolver(org.thymeleaf.spring5.ISpringWebFluxTemplateEngine)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setCorsConfigurations(java.util.Map)>-><org.springframework.web.cors.UrlBasedCorsConfigurationSource: void <init>()>
<org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory: void <init>()>-><java.util.ArrayList: void <init>()>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>-><java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>
<org.springframework.http.server.reactive.UndertowHeadersAdapter$EntryIterator: java.lang.Object next()>-><org.springframework.http.server.reactive.UndertowHeadersAdapter$EntryIterator: java.util.Map$Entry next()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<java.util.TreeMap$Entry: int hashCode()>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<java.util.AbstractList$Itr: boolean hasNext()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList: int size()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.management.openmbean.ArrayType: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.BuildProperties buildProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build: java.nio.charset.Charset getEncoding()>
<org.springframework.boot.web.client.RootUriTemplateHandler: org.springframework.boot.web.client.RootUriTemplateHandler addTo(org.springframework.web.client.RestTemplate,java.lang.String)>-><org.springframework.boot.web.client.RootUriTemplateHandler: void <init>(java.lang.String,org.springframework.web.util.UriTemplateHandler)>
<javax.security.auth.SubjectDomainCombiner: void <init>(javax.security.auth.Subject)>-><java.util.Collections$SynchronizedCollection: int size()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.resource.ResourceUrlProvider mvcResourceUrlProvider()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>-><org.apache.commons.logging.LogAdapter$Log4jLog: boolean isWarnEnabled()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.format.DateTimeFormatterBuilder$CompositePrinterParser: java.lang.String toString()>
<java.io.File$TempDirectory: java.io.File generateFile(java.lang.String,java.lang.String,java.io.File)>-><java.io.File: void <init>(java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.management.MBeanOperationInfo: java.lang.String toString()>
<org.springframework.boot.web.servlet.server.DocumentRoot: void <init>(org.apache.commons.logging.Log)>-><java.lang.Object: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.xml.SourceHttpMessageConverter: void <init>()>
<java.util.EnumMap: int entryHashCode(int)>-><javax.security.auth.Subject: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: boolean isReplacement(org.springframework.http.converter.HttpMessageConverter,org.springframework.http.converter.HttpMessageConverter)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<java.util.AbstractList: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Bucket couchbaseClient()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Bucket: java.lang.String getName()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.StaticListableBeanFactory$1: java.lang.Object getIfAvailable()>-><org.springframework.beans.factory.NoUniqueBeanDefinitionException: void <init>(org.springframework.core.ResolvableType,java.lang.String[])>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.io.DeleteOnExitHook: void runHooks()>-><java.io.File: void <init>(java.lang.String)>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer servletWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>-><org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void addFormatters()>-><org.springframework.format.number.money.MonetaryAmountFormatter: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><org.apache.commons.logging.LogAdapter$JavaUtilLog: void info(java.lang.Object)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory$1: java.util.stream.Stream stream()>-><org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] access$100(org.springframework.beans.factory.support.DefaultListableBeanFactory,org.springframework.core.ResolvableType)>
<org.springframework.beans.factory.NoSuchBeanDefinitionException: void <init>(java.lang.Class)>-><org.springframework.beans.factory.NoSuchBeanDefinitionException: void <init>(org.springframework.core.ResolvableType)>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.config.AutowireCapableBeanFactory getAutowireCapableBeanFactory()>-><org.springframework.context.support.AbstractApplicationContext: void assertBeanFactoryActive()>
<org.thymeleaf.templatemode.TemplateMode: org.thymeleaf.templatemode.TemplateMode parse(java.lang.String)>-><java.lang.String: java.lang.String trim()>
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.Object getBean(java.lang.String)>-><org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.core.annotation.AnnotationAttributes: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.slf4j.event.Level: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.io.FilePermission: int hashCode()>
<org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)>-><org.springframework.core.io.AbstractFileResolvingResource: boolean exists()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$1: javax.management.MBeanServer getMBeanServer()>-><org.springframework.jndi.JndiLocatorDelegate: java.lang.Object lookup(java.lang.String,java.lang.Class)>
<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: void forEach(java.util.function.Consumer)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: java.util.Optional getWelcomePage()>-><java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.Character$Subset: int hashCode()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration: org.springframework.cache.support.SimpleCacheManager cacheManager(java.util.Collection)>-><org.springframework.cache.support.SimpleCacheManager: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.nio.ByteBuffer: java.lang.String toString()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><groovyjarjarasm.asm.Handle: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.web.context.support.WebApplicationContextUtils$FacesDependencyRegistrar$1: java.lang.String toString()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHazelcastInstance(com.hazelcast.core.HazelcastInstance)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.Byte: java.lang.String toString()>
<org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory: void <init>()>-><org.apache.catalina.core.AprLifecycleListener: void <init>()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<javax.security.auth.Subject: int hashCode()>-><java.util.Collections$1: boolean hasNext()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder corePoolSize(int)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<javax.security.auth.Subject: java.lang.Object doAsPrivileged(javax.security.auth.Subject,java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>-><sun.security.util.ResourcesMgr: java.lang.String getString(java.lang.String)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.apache.activemq.artemis.core.config.Configuration getConfiguration()>
<org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory: void <init>()>-><org.apache.catalina.core.AprLifecycleListener: void <init>()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><org.codehaus.groovy.runtime.MethodRankHelper$RankableMethod: int compareTo(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setServletWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.text.StringCharacterIterator: int hashCode()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.time.LocalDate: int compareTo(java.lang.Object)>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$2: javax.management.MBeanServer getMBeanServer()>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setCorsConfigurations(java.util.Map)>-><org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void addQueues(org.apache.activemq.artemis.jms.server.config.JMSConfiguration,java.lang.String[])>-><org.apache.activemq.artemis.jms.server.config.impl.JMSQueueConfigurationImpl: org.apache.activemq.artemis.jms.server.config.impl.JMSQueueConfigurationImpl setBindings(java.lang.String[])>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform: org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform[] values()>-><java.lang.Object: java.lang.Object clone()>
<org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: void configure(com.fasterxml.jackson.databind.ObjectMapper)>-><org.springframework.test.web.servlet.setup.StubWebApplicationContext: org.springframework.beans.factory.config.AutowireCapableBeanFactory getAutowireCapableBeanFactory()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer tomcatServletWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.ServerProperties)>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: org.apache.activemq.artemis.jms.server.config.JMSConfiguration artemisJmsConfiguration()>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties: org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded getEmbedded()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.String: java.lang.String toString()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Bucket couchbaseClient()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder threadNamePrefix(java.lang.String)>-><org.springframework.boot.task.TaskSchedulerBuilder: void <init>(java.lang.Integer,java.lang.String,java.util.Set)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.jdbc.support.SQLErrorCodesFactory: java.lang.String identify(javax.sql.DataSource)>-><java.lang.Object: java.lang.Class getClass()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMultipartConfigElement(javax.servlet.MultipartConfigElement)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setInitializationMode(org.springframework.boot.jdbc.DataSourceInitializationMode)>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.Class)>-><org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createNativeConnectionFactory(java.lang.Class)>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties: java.lang.String getHost()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setSeparator(java.lang.String)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.String: int length()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object remove(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<org.apache.catalina.core.ApplicationFilterChain: void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>-><java.lang.ThreadLocal: void set(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.concurrent.locks.AbstractQueuedSynchronizer: java.lang.String toString()>
<org.springframework.context.annotation.MBeanExportConfiguration: org.springframework.jmx.export.annotation.AnnotationMBeanExporter mbeanExporter()>-><org.springframework.context.annotation.MBeanExportConfiguration: void setupDomain(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>
<org.springframework.test.web.servlet.setup.AbstractMockMvcBuilder: void <init>()>-><org.springframework.test.web.servlet.MockMvcBuilderSupport: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.MethodNode: java.lang.String toString()>
<org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: void setDispatcherTypes(javax.servlet.DispatcherType,javax.servlet.DispatcherType[])>-><java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum[])>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration: void <init>()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler taskScheduler(org.springframework.boot.task.TaskSchedulerBuilder)>-><org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler build()>
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: void <init>(org.springframework.jdbc.core.JdbcOperations)>-><java.lang.Object: void <init>()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: void <init>(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ListableBeanFactory)>-><org.springframework.boot.web.servlet.context.XmlServletWebServerApplicationContext: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.JsonbHttpMessageConverter: void <init>()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.web.servlet.support.ErrorPageFilterConfiguration: void <init>()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.boot.autoconfigure.mail.MailProperties: java.lang.String getProtocol()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><javax.security.auth.Subject: java.lang.String toString()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewNames(java.lang.String[])>
<java.util.HashMap: int hash(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<org.springframework.boot.info.BuildProperties: void coerceDate(java.util.Properties,java.lang.String)>-><java.lang.String: java.lang.String valueOf(long)>
<javax.security.auth.Subject: int hashCode()>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setCorsConfigurations(java.util.Map)>-><java.util.LinkedHashMap: void clear()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: org.thymeleaf.spring5.SpringWebFluxTemplateEngine templateEngine()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: boolean isEnableSpringElCompiler()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.format.DateTimeFormatterBuilder$WeekBasedFieldPrinterParser: java.lang.String toString()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>-><java.lang.Enum: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>-><java.util.Collections$EmptyMap: java.util.Set entrySet()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void configurePartConverters(org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter,java.util.Collection)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List postProcessPartConverters(java.util.List)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.antlr.LineColumn: java.lang.String toString()>
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>-><java.io.UnixFileSystem: int getBooleanAttributes(java.io.File)>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList: java.lang.Object get(int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList: net.bytebuddy.description.type.TypeDescription$Generic get(int)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.context.support.ApplicationListenerDetector: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.config.annotation.PathMatchConfigurer getPathMatchConfigurer()>-><org.springframework.web.servlet.config.annotation.PathMatchConfigurer: void <init>()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createEmbeddedConnectionFactory(java.lang.Class)>-><org.apache.activemq.artemis.api.core.client.ActiveMQClient: org.apache.activemq.artemis.api.core.client.ServerLocator createServerLocatorWithoutHA(org.apache.activemq.artemis.api.core.TransportConfiguration[])>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.beans.factory.support.NullBean: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration: void <init>()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.web.multipart.MultipartResolver getMultipartResolver()>
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><com.sun.beans.WildcardTypeImpl: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>-><java.util.ArrayList$Itr: boolean hasNext()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.hibernate.metamodel.model.domain.NavigableRole: int hashCode()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList$AnnotatedTypeVariable: void <init>(net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList,net.bytebuddy.description.type.TypeDescription$Generic,int)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.AbstractList: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><javax.management.ObjectName: int hashCode()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createEmbeddedConnectionFactory(java.lang.Class)>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties: org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded getEmbedded()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void addQueues(org.apache.activemq.artemis.jms.server.config.JMSConfiguration,java.lang.String[])>-><org.apache.activemq.artemis.jms.server.config.impl.JMSQueueConfigurationImpl: org.apache.activemq.artemis.jms.server.config.impl.JMSQueueConfigurationImpl setName(java.lang.String)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><javax.security.auth.Subject: int hashCode()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory doCreateConnectionFactory(java.lang.Class)>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.springframework.boot.autoconfigure.jms.artemis.ArtemisMode deduceMode()>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback()>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.apache.logging.log4j.spi.Provider: java.lang.String toString()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setSqlScriptEncoding(java.nio.charset.Charset)>
<org.springframework.http.server.reactive.UndertowHeadersAdapter$EntryIterator: void <init>(org.springframework.http.server.reactive.UndertowHeadersAdapter)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: boolean isCache()>
<org.springframework.mock.web.MockServletContext: void <init>(java.lang.String,org.springframework.core.io.ResourceLoader)>-><org.springframework.mock.web.MockRequestDispatcher: void <init>(java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.util.MimeType: java.lang.String toString()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void forEach(java.util.function.Consumer)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.function.Consumer entryConsumer(java.util.function.Consumer)>
<org.springframework.boot.web.servlet.support.ErrorPageFilter$1: void <init>(org.springframework.boot.web.servlet.support.ErrorPageFilter)>-><org.springframework.web.filter.OncePerRequestFilter: void <init>()>
<java.util.TreeMap$Entry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.nio.charset.Charset: int hashCode()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(org.springframework.core.ResolvableType)>-><org.springframework.core.ResolvableType: boolean isAssignableFrom(java.lang.Class)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.config.annotation.PathMatchConfigurer getPathMatchConfigurer()>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void configurePathMatch(org.springframework.web.servlet.config.annotation.PathMatchConfigurer)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.stmt.CaseStatement: java.lang.String toString()>
<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>-><org.springframework.http.server.reactive.UndertowHeadersAdapter$1: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.freemarker.FreeMarkerReactiveWebConfiguration: org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer freeMarkerConfigurer()>-><org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><javax.management.MBeanConstructorInfo: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: void <init>(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ListableBeanFactory)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Vector$Itr: boolean hasNext()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.security.x509.X509CRLEntryImpl: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void addFormatters()>-><org.springframework.format.support.FormattingConversionService: void addFormatter(org.springframework.format.Formatter)>
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void addReturnValueHandlers(java.util.List)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addReturnValueHandlers(java.util.List)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.expression.spel.standard.TokenKind: java.lang.String toString()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: org.thymeleaf.spring5.SpringWebFluxTemplateEngine templateEngine()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: boolean isRenderHiddenMarkersBeforeCheckboxes()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList$AnnotatedTypeVariable: net.bytebuddy.description.type.TypeList$Generic getUpperBounds()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList$AnnotatedTypeVariable: net.bytebuddy.description.type.TypeList$Generic getUpperBounds()>
<java.util.AbstractSet: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.Hashtable: int hashCode()>
<org.springframework.web.client.RestTemplate: org.springframework.web.util.DefaultUriBuilderFactory initUriTemplateHandler()>-><org.springframework.web.util.DefaultUriBuilderFactory: void setEncodingMode(org.springframework.web.util.DefaultUriBuilderFactory$EncodingMode)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setValidator(org.springframework.validation.Validator)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><jdk.internal.org.xml.sax.SAXException: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object get(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: java.nio.charset.Charset getEncoding()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: boolean isCache()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: org.springframework.web.servlet.resource.ResourceHttpRequestHandler faviconRequestHandler()>
<org.codehaus.groovy.reflection.stdclasses.StringCachedClass: java.lang.Object coerceArgument(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.BuildProperties buildProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build: org.springframework.core.io.Resource getLocation()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.time.LocalDateTime: int compareTo(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.Period: java.lang.String toString()>
<org.springframework.web.context.support.ServletContextResource: java.net.URL getURL()>-><org.springframework.boot.test.mock.web.SpringBootMockServletContext: java.net.URL getResource(java.lang.String)>
<org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean compareEqual(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int hashCode()>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>-><org.springframework.web.servlet.config.annotation.PathMatchConfigurer: java.lang.Boolean isUseRegisteredSuffixPatternMatch()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: java.util.Optional getWelcomePage()>-><java.util.stream.ReferencePipeline: java.util.Optional findFirst()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.StringJoiner: java.lang.String toString()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration: org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer tomcatWebServerFactoryCustomizer(org.springframework.core.env.Environment,org.springframework.boot.autoconfigure.web.ServerProperties)>
<ch.qos.logback.core.helpers.ThrowableToStringArray: java.lang.String formatFirstLine(java.lang.Throwable,java.lang.StackTraceElement[])>-><org.hibernate.QueryException: java.lang.String getMessage()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.util.calendar.Era: java.lang.String toString()>
<org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean compareEqual(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void <init>()>-><org.springframework.boot.web.servlet.support.SpringBootServletInitializer: void <init>()>
<org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>-><org.springframework.web.context.support.ServletContextResource: java.io.InputStream getInputStream()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: org.apache.activemq.artemis.jms.server.config.JMSConfiguration artemisJmsConfiguration()>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded: java.lang.String[] getQueues()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder customizers(java.lang.Iterable)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.springframework.boot.context.properties.PropertyMapper$Source: void to(java.util.function.Consumer)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setDefaultPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>-><java.util.LinkedHashMap: void <init>()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory: void <init>()>-><java.util.Collections: java.util.Set singleton(java.lang.Object)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: void startEmbeddedJms()>-><org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>
<org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.web.ResourceProperties)>-><org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: void <init>(org.springframework.context.ApplicationContext)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.StringBuffer: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><net.bytebuddy.description.annotation.AnnotationDescription$AbstractBase: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.parser.ParseError: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.text.DigitList: java.lang.String toString()>
<java.util.AbstractList: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<javax.security.auth.Subject: int hashCode()>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.text.DecimalFormatSymbols: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter: void <init>()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: java.lang.String appendCharset(org.springframework.util.MimeType,java.lang.String)>-><org.springframework.util.MimeType: java.util.Map getParameters()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors()>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<java.util.Collections$UnmodifiableMap: java.util.Set keySet()>-><java.util.Collections$EmptyMap: java.util.Set keySet()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: int hashCode()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntrySet: int hashCode()>
<org.springframework.core.io.support.EncodedResource: java.io.InputStream getInputStream()>-><org.springframework.web.context.support.ServletContextResource: java.io.InputStream getInputStream()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>-><java.lang.Enum: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper alwaysApplyingWhenNonNull()>
<org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<org.springframework.mock.web.MockHttpSession: void removeAttribute(java.lang.String)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.time.LocalDateTime: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDefaultErrorViewResolver(org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: org.springframework.boot.web.client.RestTemplateBuilder restTemplateBuilder()>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider: java.util.stream.Stream orderedStream()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.format.DateTimeFormatterBuilder$TextPrinterParser: java.lang.String toString()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Servlet: boolean isProducePartialOutputWhileProcessing()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.security.provider.PolicyFile$SelfPermission: java.lang.String toString()>
<javax.security.auth.Subject: int hashCode()>-><java.util.SubList$1: boolean hasNext()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.String toString()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: boolean isReplacement(org.springframework.http.converter.HttpMessageConverter,org.springframework.http.converter.HttpMessageConverter)>-><java.lang.Class: boolean isInstance(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: java.lang.String appendCharset(org.springframework.util.MimeType,java.lang.String)>-><org.springframework.util.MimeType: java.nio.charset.Charset getCharset()>
<nz.net.ultraq.thymeleaf.LayoutDialect: groovy.lang.MetaClass $getStaticMetaClass()>-><org.codehaus.groovy.reflection.ClassInfo: groovy.lang.MetaClass getMetaClass()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.Collections$EmptyList: int hashCode()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object remove(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder customizers(java.lang.Iterable)>-><org.springframework.boot.task.TaskExecutorBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>
<org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory: void <init>()>-><java.util.ArrayList: void <init>(java.util.Collection)>
<org.springframework.boot.jackson.JsonComponentModule: void <init>()>-><com.fasterxml.jackson.databind.module.SimpleModule: void <init>()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><java.lang.StringBuilder: void <init>()>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.tree.FloatSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object get(java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><javax.security.auth.Subject: int hashCode()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.test.web.servlet.setup.AbstractMockMvcBuilder: org.springframework.test.web.servlet.setup.AbstractMockMvcBuilder addDispatcherServletCustomizer(org.springframework.test.web.servlet.DispatcherServletCustomizer)>-><org.springframework.test.web.servlet.setup.AbstractMockMvcBuilder: org.springframework.test.web.servlet.setup.AbstractMockMvcBuilder self()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration: org.springframework.web.servlet.view.BeanNameViewResolver beanNameViewResolver()>
<synthetic.method.HttpSessionImpl: void <init>()>-><java.util.HashMap: void <init>()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider: java.lang.Object getIfAvailable()>-><org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.security.provider.PolicyParser$KeyStoreEntry: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.beans.factory.support.GenericBeanDefinition: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void addInterceptors(org.springframework.web.servlet.config.annotation.InterceptorRegistry)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addInterceptors(org.springframework.web.servlet.config.annotation.InterceptorRegistry)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver()>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: void setTemplateEngine(org.thymeleaf.spring5.ISpringTemplateEngine)>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.SubList$1: java.lang.Object next()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate configure(org.springframework.web.client.RestTemplate)>-><org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.springframework.core.Constants: java.util.Set getValues(java.lang.String)>-><java.util.HashSet: void <init>()>
<java.util.AbstractSet: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.jar.Attributes$Name: java.lang.String toString()>
<org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory: void <init>()>-><java.util.Collections: java.util.Set singleton(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<java.util.EnumMap: int entryHashCode(int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><javax.security.auth.Subject: java.lang.String toString()>
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: void <init>(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory,javax.sql.DataSource)>-><java.lang.Object: void <init>()>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setCorsConfigurations(java.util.Map)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration$JdbcTemplateConfiguration: org.springframework.jdbc.core.JdbcTemplate jdbcTemplate()>-><org.springframework.boot.autoconfigure.jdbc.JdbcProperties: org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template getTemplate()>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.context.XmlServletWebServerApplicationContext: void <init>()>-><org.springframework.beans.factory.xml.XmlBeanDefinitionReader: void <init>(org.springframework.beans.factory.support.BeanDefinitionRegistry)>
<java.text.AttributeEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>-><java.util.Collections$EmptyList: void forEach(java.util.function.Consumer)>
<javax.security.auth.Subject: int hashCode()>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration: org.springframework.boot.web.servlet.FilterRegistrationBean resourceUrlEncodingFilter()>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: void setDispatcherTypes(javax.servlet.DispatcherType,javax.servlet.DispatcherType[])>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.Character: int hashCode()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.batch.BatchConfigurerConfiguration$JpaBatchConfiguration: void <init>()>
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)>-><org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.Object getBean(java.lang.String)>
<org.springframework.core.ResolvableType: java.lang.String toString()>-><org.springframework.core.ResolvableType$1: org.springframework.core.ResolvableType[] getGenerics()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.awt.image.DirectColorModel: java.lang.String toString()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><org.springframework.util.MimeType: int compareTo(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><net.bytebuddy.description.method.ParameterDescription$AbstractBase: java.lang.String toString()>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setCluster(com.couchbase.client.java.Cluster)>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>-><java.lang.Class: java.lang.String getName()>
<org.springframework.boot.info.GitProperties: void <init>(java.util.Properties)>-><org.springframework.boot.info.GitProperties: java.util.Properties processEntries(java.util.Properties)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.expr.StaticMethodCallExpression: java.lang.String toString()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskSchedulerBuilder: void <init>()>
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.Class)>-><org.springframework.context.support.AbstractApplicationContext: void assertBeanFactoryActive()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><javax.security.auth.Subject: int hashCode()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.AbstractList: java.util.Iterator iterator()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.invoke.LambdaForm$Name: java.lang.String toString()>
<org.slf4j.event.EventRecodingLogger: void warn(java.lang.String,java.lang.Object[])>-><org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.concurrent.atomic.AtomicReference: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration: org.springframework.boot.autoconfigure.jmx.ParentAwareNamingStrategy objectNamingStrategy()>
<org.thymeleaf.TemplateEngine: java.util.Set getDialects()>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration: void <init>(org.springframework.boot.autoconfigure.cache.CacheProperties,org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: java.lang.String appendCharset(org.springframework.util.MimeType,java.lang.String)>-><java.util.HashMap: void putAll(java.util.Map)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void addFormatters()>-><org.springframework.format.support.FormattingConversionService: void addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.beans.FeatureDescriptor: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.support.ErrorPageFilter: void <init>()>-><java.lang.Object: void <init>()>
<org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean compareEqual(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.http.converter.json.Jackson2ObjectMapperBuilder$CborFactoryInitializer: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.springframework.mock.web.MockHttpServletRequest: javax.servlet.http.HttpSession getSession(boolean)>-><org.springframework.mock.web.MockHttpSession: boolean isInvalid()>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$2: javax.management.MBeanServer getMBeanServer()>-><org.springframework.jmx.support.WebSphereMBeanServerFactoryBean: void afterPropertiesSet()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><java.util.ArrayList: java.util.ListIterator listIterator()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.cglib.core.Signature: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getReturnValueHandlers()>
<org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: org.springframework.boot.web.client.RestTemplateBuilder restTemplateBuilder()>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<java.util.TreeMap$Entry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.web.ResourceProperties)>-><org.springframework.boot.web.servlet.context.XmlServletWebServerApplicationContext: void <init>()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.concurrent.ConcurrentHashMap: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.lang.Boolean: int compareTo(java.lang.Object)>
<org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)>-><org.apache.commons.logging.LogAdapter$JavaUtilLog: boolean isWarnEnabled()>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.management.openmbean.TabularType: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><javax.security.auth.Subject: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.expr.BinaryExpression: java.lang.String toString()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.web.ResourceProperties)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.tree.CharSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.InternalResourceViewResolver defaultViewResolver()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties: org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View getView()>
<org.thymeleaf.spring5.SpringTemplateEngine: void setRenderHiddenMarkersBeforeCheckboxes(boolean)>-><org.thymeleaf.TemplateEngine: java.util.Set getDialects()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int hashCode()>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.zone.ZoneOffsetTransition: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setOrderedHiddenHttpMethodFilter(org.springframework.boot.web.servlet.filter.OrderedHiddenHttpMethodFilter)>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)>-><org.springframework.beans.factory.BeanCreationException: void <init>(java.lang.String,java.lang.String)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.lang.Double: int compareTo(java.lang.Object)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void addFormatters()>-><org.springframework.format.number.money.CurrencyUnitFormatter: void <init>()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object remove(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<org.springframework.mock.web.HeaderValueHolder: org.springframework.mock.web.HeaderValueHolder getByName(java.util.Map,java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap: java.lang.Object get(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.aop.support.DefaultIntroductionAdvisor: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: java.util.Properties asProperties(java.util.Map)>-><java.util.Hashtable: void putAll(java.util.Map)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.validation.Validator mvcValidator()>-><org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: java.lang.String getCharsetName()>-><java.nio.charset.Charset: java.lang.String name()>
<org.thymeleaf.spring5.SpringTemplateEngine: void setEnableSpringELCompiler(boolean)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor build(java.lang.Class)>-><org.springframework.beans.BeanUtils: java.lang.Object instantiateClass(java.lang.Class)>
<org.springframework.boot.info.GitProperties: java.lang.Long parseEpochSecond(java.lang.String)>-><java.lang.Long: long parseLong(java.lang.String)>
<org.springframework.boot.web.servlet.server.StaticResourceJars: void <init>()>-><java.lang.Object: void <init>()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><java.security.AccessControlContext: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: void <init>(org.springframework.core.io.Resource)>-><org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: com.hazelcast.config.Config getConfig(org.springframework.core.io.Resource)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties getArtemisPropertiesInstance()>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties: void setHost(java.lang.String)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMultipartResolver(org.springframework.web.multipart.MultipartResolver)>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void setCacheNames(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpProperties$Encoding: boolean shouldForce(org.springframework.boot.autoconfigure.http.HttpProperties$Encoding$Type)>-><java.lang.Boolean: boolean booleanValue()>
<java.util.TreeMap$Entry: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.boot.info.GitProperties: java.lang.Long parseEpochSecond(java.lang.String)>-><java.lang.Long: java.lang.Long valueOf(long)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><org.springframework.web.accept.ContentNegotiationManager: java.util.List getStrategies()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<org.springframework.boot.task.TaskSchedulerBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$1: javax.management.MBeanServer getMBeanServer()>-><org.springframework.jndi.JndiLocatorDelegate: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><javax.management.openmbean.TabularType: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void addQueues(org.apache.activemq.artemis.jms.server.config.JMSConfiguration,java.lang.String[])>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: org.springframework.core.io.Resource getResource(java.lang.String)>-><org.springframework.test.web.servlet.setup.StubWebApplicationContext: org.springframework.core.io.Resource getResource(java.lang.String)>
<org.apache.catalina.security.SecurityUtil: void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)>-><java.util.Collections$SynchronizedCollection: boolean add(java.lang.Object)>
<org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration: org.springframework.cache.concurrent.ConcurrentMapCacheManager cacheManager()>-><org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers: org.springframework.cache.CacheManager customize(org.springframework.cache.CacheManager)>
<org.springframework.boot.info.GitProperties: void <init>(java.util.Properties)>-><org.springframework.boot.info.InfoProperties: void <init>(java.util.Properties)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setLocale(java.util.Locale)>
<org.codehaus.groovy.runtime.typehandling.ShortTypeHandling: java.lang.Class castToClass(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object remove(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><org.apache.commons.logging.LogAdapter$Log4jLog: void info(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.security.Provider$UString: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFilterRegistrationBean(org.springframework.boot.web.servlet.FilterRegistrationBean)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Currency: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: org.apache.activemq.artemis.jms.server.embedded.EmbeddedJMS artemisServer(org.apache.activemq.artemis.core.config.Configuration,org.apache.activemq.artemis.jms.server.config.JMSConfiguration)>-><org.apache.activemq.artemis.jms.server.embedded.EmbeddedJMS: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: java.lang.String toString()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.TreeMap$KeySet: java.util.Iterator iterator()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.UUID: java.lang.String toString()>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.boot.util.LambdaSafe: org.springframework.boot.util.LambdaSafe$Callbacks callbacks(java.lang.Class,java.util.Collection,java.lang.Object,java.lang.Object[])>-><org.springframework.boot.util.LambdaSafe$Callbacks: void <init>(java.lang.Class,java.util.Collection,java.lang.Object,java.lang.Object[],org.springframework.boot.util.LambdaSafe$1)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<org.springframework.web.servlet.mvc.method.annotation.JsonViewRequestBodyAdvice: void <init>()>-><org.springframework.web.servlet.mvc.method.annotation.RequestBodyAdviceAdapter: void <init>()>
<org.springframework.mock.web.MockHttpServletRequest: java.lang.StringBuffer getRequestURL()>-><org.springframework.mock.web.MockHttpServletRequest: java.lang.String getScheme()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.ThreadGroup: java.lang.String toString()>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupServer(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object remove(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void setCacheNames(java.util.Collection)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>
<java.util.HashMap: int hash(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.net.URL: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: void <init>()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List extractPartConverters(org.springframework.http.converter.FormHttpMessageConverter)>-><org.springframework.util.ReflectionUtils: java.lang.reflect.Field findField(java.lang.Class,java.lang.String)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int hashCode()>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.tree.IntSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl: java.lang.Boolean getEnabled()>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.web.client.RestTemplate$HeadersExtractor: void <init>(org.springframework.web.client.RestTemplate$1)>
<org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void addFormatters()>-><org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJodaTime()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.jsoup.nodes.Attribute: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJpaBatchConfigurer(org.springframework.boot.autoconfigure.batch.JpaBatchConfigurer)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntry: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><javax.mail.internet.NewsAddress: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.ZoneOffset: java.lang.String toString()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource)>-><org.springframework.util.DefaultPropertiesPersister: void <init>()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.context.i18n.LocaleContextHolder: java.util.Locale getLocale(org.springframework.context.i18n.LocaleContext)>-><org.springframework.context.i18n.SimpleLocaleContext: java.util.Locale getLocale()>
<org.springframework.boot.web.client.RestTemplateBuilder: void configureRequestFactory(org.springframework.web.client.RestTemplate)>-><org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void accept(org.springframework.http.client.ClientHttpRequestFactory)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.util.DefaultPropertiesPersister: void load(java.util.Properties,java.io.Reader)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Locale: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor(org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.GitProperties gitProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git: java.nio.charset.Charset getEncoding()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.beans.IndexedPropertyDescriptor: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><ch.qos.logback.core.status.StatusBase: java.lang.String toString()>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties: org.springframework.core.io.Resource resolveConfigLocation()>-><org.springframework.util.Assert: void isTrue(boolean,java.util.function.Supplier)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<ch.qos.logback.classic.spi.ThrowableProxy: void <init>(java.lang.Throwable)>-><org.hibernate.QueryException: java.lang.String getMessage()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler taskScheduler(org.springframework.boot.task.TaskSchedulerBuilder)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.hibernate.engine.profile.Fetch: java.lang.String toString()>
<org.springframework.boot.util.LambdaSafe$GenericTypeFilter: void <init>(org.springframework.boot.util.LambdaSafe$1)>-><org.springframework.boot.util.LambdaSafe$GenericTypeFilter: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.core.env.PropertySource: int hashCode()>
<java.util.Objects: int hashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<java.util.HashMap: int hash(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>-><org.springframework.web.servlet.handler.AbstractHandlerMapping: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.springframework.web.client.RestTemplate: org.springframework.web.util.DefaultUriBuilderFactory initUriTemplateHandler()>-><org.springframework.web.util.DefaultUriBuilderFactory: void <init>()>
<java.lang.reflect.Field: java.util.Map declaredAnnotations()>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createEmbeddedConnectionFactory(java.lang.Class)>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded: java.util.Map generateTransportParameters()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>-><org.springframework.util.MimeType: void <init>(org.springframework.util.MimeType,java.util.Map)>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.web.servlet.error.DefaultErrorAttributes errorAttributes()>-><org.springframework.boot.autoconfigure.web.ErrorProperties: boolean isIncludeException()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<org.springframework.util.ReflectionUtils: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[])>-><java.lang.Class: java.lang.Class getSuperclass()>
<org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration: org.springframework.cache.support.SimpleCacheManager cacheManager(java.util.Collection)>-><org.springframework.cache.support.SimpleCacheManager: void setCaches(java.util.Collection)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration: org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean dispatcherServletRegistration(org.springframework.web.servlet.DispatcherServlet)>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet: int getLoadOnStartup()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration: void <init>(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,java.util.Collection,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$1: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory,org.springframework.core.ResolvableType)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.reflect.Proxy$Key1: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.security.x509.GeneralName: java.lang.String toString()>
<org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers platformTransactionManagerCustomizers(org.springframework.beans.factory.ObjectProvider)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.invoke.BoundMethodHandle$SpeciesData: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><groovy.lang.Tuple: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.core.env.AbstractEnvironment: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: boolean welcomeTemplateExists(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>-><org.springframework.web.servlet.config.annotation.PathMatchConfigurer: org.springframework.util.PathMatcher getPathMatcher()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int hashCode()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration: org.springframework.http.converter.StringHttpMessageConverter stringHttpMessageConverter()>-><org.springframework.http.converter.StringHttpMessageConverter: void setWriteAcceptCharset(boolean)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><javax.security.auth.Subject: int hashCode()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setPropertyNamingStrategy(java.lang.String)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.http.HttpProperties)>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.repository.AbstractRepository: sun.reflect.generics.tree.Tree getTree()>
<javax.security.auth.Subject: int hashCode()>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<org.springframework.core.io.DefaultResourceLoader: org.springframework.core.io.Resource getResource(java.lang.String)>-><org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: org.springframework.core.io.Resource getResourceByPath(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<nz.net.ultraq.thymeleaf.LayoutDialect: void <init>()>-><org.codehaus.groovy.runtime.callsite.AbstractCallSite: java.lang.Object callConstructor(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider findProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>-><org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders$NoTemplateAvailabilityProvider: boolean isTemplateAvailable(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void forEach(java.util.function.Consumer)>-><java.util.Collections$EmptyList: void forEach(java.util.function.Consumer)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder()>
<sun.reflect.generics.repository.FieldRepository: void <init>(java.lang.String,sun.reflect.generics.factory.GenericsFactory)>-><sun.reflect.generics.repository.AbstractRepository: void <init>(java.lang.String,sun.reflect.generics.factory.GenericsFactory)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.WeakHashMap$KeySet: java.util.Iterator iterator()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.ResourceBundle$1: java.lang.String toString()>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>-><org.springframework.util.ClassUtils: java.lang.Class resolveClassName(java.lang.String,java.lang.ClassLoader)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void addQueues(org.apache.activemq.artemis.jms.server.config.JMSConfiguration,java.lang.String[])>-><org.apache.activemq.artemis.jms.server.config.impl.JMSQueueConfigurationImpl: org.apache.activemq.artemis.jms.server.config.impl.JMSQueueConfigurationImpl setDurable(boolean)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.resource.ResourceUrlProvider mvcResourceUrlProvider()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<java.io.DeleteOnExitHook: void runHooks()>-><java.util.Collections: void reverse(java.util.List)>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder customizers(java.lang.Iterable)>-><org.springframework.boot.task.TaskSchedulerBuilder: void <init>(java.lang.Integer,java.lang.String,java.util.Set)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration: org.thymeleaf.spring5.SpringTemplateEngine templateEngine()>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider: java.util.stream.Stream orderedStream()>
<org.springframework.beans.factory.InjectionPoint: java.lang.String toString()>-><java.lang.reflect.Field: java.lang.String getName()>
<org.springframework.web.servlet.config.annotation.InterceptorRegistry: java.util.List getInterceptors()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream sorted(java.util.Comparator)>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Object[])>-><org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.thymeleaf.spring5.SpringWebFluxTemplateEngine: void <init>()>-><org.thymeleaf.TemplateEngine: void setLinkBuilder(org.thymeleaf.linkbuilder.ILinkBuilder)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: java.lang.String getThreadNamePrefix()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setData(java.util.List)>
<org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>-><java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.math.BigDecimal: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJsr310()>-><java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ofPattern(java.lang.String)>
<org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>-><java.lang.Object: java.lang.Class getClass()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><javax.security.auth.Subject: java.lang.String toString()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.mail.javamail.JavaMailSenderImpl: void setProtocol(java.lang.String)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>-><org.springframework.util.AntPathMatcher: void <init>()>
<java.lang.reflect.Field: sun.reflect.generics.factory.GenericsFactory getFactory()>-><sun.reflect.generics.scope.ClassScope: sun.reflect.generics.scope.ClassScope make(java.lang.Class)>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setInterceptors(java.lang.Object[])>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler: void <init>()>-><org.springframework.scheduling.concurrent.ExecutorConfigurationSupport: void <init>()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><java.util.ArrayList: java.util.Iterator iterator()>
<javax.security.auth.Subject: int hashCode()>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>-><org.springframework.web.servlet.handler.AbstractHandlerMapping: void setOrder(int)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties: void <init>()>
<java.lang.reflect.Field: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.batch.BatchProperties getBatchPropertiesInstance()>-><org.springframework.boot.autoconfigure.batch.BatchProperties: void setInitializeSchema(org.springframework.boot.jdbc.DataSourceInitializationMode)>
<javax.security.auth.Subject: int hashCode()>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration: void <init>(org.springframework.beans.factory.ObjectProvider)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider: java.util.stream.Stream orderedStream()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getArgumentResolvers()>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void addArgumentResolvers(java.util.List)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setSuffix(java.lang.String)>
<org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration: org.springframework.boot.web.servlet.ServletRegistrationBean jerseyServletRegistration(org.springframework.boot.autoconfigure.web.servlet.JerseyApplicationPath)>-><org.springframework.boot.autoconfigure.jersey.JerseyProperties: org.springframework.boot.autoconfigure.jersey.JerseyProperties$Servlet getServlet()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.smile.MappingJackson2SmileHttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTomcatWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer)>
<org.springframework.format.datetime.standard.DateTimeFormatterRegistrar: void setDateFormatter(java.time.format.DateTimeFormatter)>-><java.util.EnumMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.time.OffsetDateTime: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.Year: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createNativeConnectionFactory(java.lang.Class)>-><org.apache.activemq.artemis.api.core.TransportConfiguration: void <init>(java.lang.String,java.util.Map)>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat: org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory tomcatServletWebServerFactory()>-><org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory: void <init>()>
<org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: org.springframework.boot.web.reactive.result.view.MustacheViewResolver mustacheViewResolver(com.samskivert.mustache.Mustache$Compiler)>-><org.springframework.boot.web.reactive.result.view.MustacheViewResolver: void setCharset(java.lang.String)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration: org.springframework.test.web.servlet.MockMvc mockMvc(org.springframework.test.web.servlet.MockMvcBuilder)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void setDefaultDomain(java.lang.String)>-><org.springframework.jmx.export.naming.MetadataNamingStrategy: void setDefaultDomain(java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.zone.TzdbZoneRulesProvider: java.lang.String toString()>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.util.Map declaredAnnotations()>-><java.lang.System$2: sun.reflect.ConstantPool getConstantPool(java.lang.Class)>
<org.springframework.boot.autoconfigure.validation.ValidatorAdapter: org.springframework.validation.Validator getExistingOrCreate(org.springframework.context.ApplicationContext)>-><org.springframework.boot.autoconfigure.validation.ValidatorAdapter: org.springframework.validation.Validator create()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.naming.NamingException: java.lang.String toString()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: void <init>()>-><java.lang.Object: void <init>()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<nz.net.ultraq.thymeleaf.LayoutDialect: void <init>(nz.net.ultraq.thymeleaf.decorators.SortingStrategy)>-><nz.net.ultraq.thymeleaf.LayoutDialect: org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray()>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.TypeSignature parseTypeSig(java.lang.String)>-><java.lang.String: char[] toCharArray()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadSource(org.springframework.core.io.Resource,java.nio.charset.Charset)>-><org.springframework.core.io.support.EncodedResource: void <init>(org.springframework.core.io.Resource,java.nio.charset.Charset)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: java.util.List resolveFaviconLocations()>-><org.springframework.core.io.ClassPathResource: void <init>(java.lang.String)>
<org.springframework.web.servlet.mvc.method.annotation.RequestBodyAdviceAdapter: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setLocations(java.util.List)>-><java.util.ArrayList: void clear()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString()>-><javax.security.auth.Subject: java.lang.String toString(boolean)>
<java.lang.Object: java.lang.String toString()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Hashtable$Entry: java.lang.String toString()>
<org.springframework.mock.web.MockHttpSession: void <init>(javax.servlet.ServletContext,java.lang.String)>-><java.lang.System: long currentTimeMillis()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.runtime.ConversionHandler: java.lang.String toString()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void forEach(java.util.function.Consumer)>-><java.util.HashMap$KeySet: void forEach(java.util.function.Consumer)>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: void <init>(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.SpringTemplateEngine)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.ContentNegotiatingViewResolver viewResolver(org.springframework.beans.factory.BeanFactory)>-><org.springframework.web.servlet.view.ContentNegotiatingViewResolver: void setOrder(int)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFreeMarkerViewResolver(org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver)>
<org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.web.servlet.MultipartProperties)>-><org.springframework.boot.autoconfigure.web.servlet.MultipartProperties: void <init>()>
<org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>-><org.springframework.core.io.FileSystemResource: boolean exists()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void forEach(java.util.function.Consumer)>-><java.util.LinkedHashMap$LinkedValues: void forEach(java.util.function.Consumer)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.awt.Point: java.lang.String toString()>
<org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>-><org.springframework.web.util.UrlPathHelper: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><org.springframework.util.unit.DataSize: int compareTo(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer: java.lang.Long getTimeout()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration: void <init>(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.web.ResourceProperties)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.MethodValidationPostProcessor methodValidationPostProcessor(org.springframework.core.env.Environment,javax.validation.Validator)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<org.springframework.boot.autoconfigure.batch.BasicBatchConfigurer: void <init>(org.springframework.boot.autoconfigure.batch.BatchProperties,javax.sql.DataSource,org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers)>-><java.lang.Object: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<org.apache.catalina.core.AprLifecycleListener: void <init>()>-><java.lang.Object: void <init>()>
<org.codehaus.groovy.GroovyBugError: java.lang.String getBugText()>-><org.hibernate.QueryException: java.lang.String getMessage()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.ProcessEnvironment$ExternalData: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setServletRegistrationBean(org.springframework.boot.web.servlet.ServletRegistrationBean)>
<org.springframework.beans.factory.BeanFactoryUtils: java.lang.String[] beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory,org.springframework.core.ResolvableType)>-><org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.String[] getBeanNamesForType(org.springframework.core.ResolvableType)>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration: void <init>(org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider: java.lang.Object getIfAvailable()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: int hashCode()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.orm.jpa.EntityManagerFactoryAccessor: void <init>()>-><java.lang.Object: java.lang.Class getClass()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void customize(org.apache.activemq.artemis.core.config.Configuration)>-><java.util.stream.ReferencePipeline: void forEach(java.util.function.Consumer)>
<java.util.Collections$UnmodifiableMap: int size()>-><java.util.Collections$EmptyMap: int size()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder()>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool: java.time.Duration getKeepAlive()>
<groovy.lang.EmptyRange: java.lang.Comparable get(int)>-><java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<org.springframework.beans.factory.NoUniqueBeanDefinitionException: void <init>(org.springframework.core.ResolvableType,java.util.Collection)>-><java.util.Arrays$ArrayList: int size()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.core.io.support.PropertiesLoaderUtils: java.util.Properties loadProperties(org.springframework.core.io.support.EncodedResource)>-><java.util.Properties: void <init>()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.beans.factory.config.DependencyDescriptor: int hashCode()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver()>-><org.springframework.web.servlet.view.AbstractCachingViewResolver: void setCache(boolean)>
<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object[])>-><org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()>
<java.lang.Object: java.lang.String toString()>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.text.FieldPosition: int hashCode()>
<org.apache.catalina.security.SecurityUtil: void doAsPrivilege(java.lang.String,javax.servlet.Filter,java.lang.Class[],java.lang.Object[],java.security.Principal)>-><org.apache.catalina.security.SecurityUtil: void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.lang.Byte: int compareTo(java.lang.Object)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$AttributeStarting: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider getProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment couchbaseEnvironment()>
<com.favorites.utils.HtmlUtil: java.lang.String getPageImg(java.lang.String)>-><org.hibernate.QueryException: java.lang.String getMessage()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><com.couchbase.client.java.env.DefaultCouchbaseEnvironment: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder builder()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void configureAsyncSupport(org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: java.lang.String getPrefix()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><org.codehaus.groovy.reflection.CachedMethod: int compareTo(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFactoryBean(org.springframework.beans.factory.FactoryBean)>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>-><java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>
<org.springframework.mock.web.MockServletContext: void <init>(java.lang.String,org.springframework.core.io.ResourceLoader)>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.EnumMap: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<java.util.HashMap$Values: void forEach(java.util.function.Consumer)>-><java.lang.NullPointerException: void <init>()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.springframework.boot.web.reactive.result.view.MustacheViewResolver: void <init>(com.samskivert.mustache.Mustache$Compiler)>-><org.springframework.web.reactive.result.view.UrlBasedViewResolver: void <init>()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebLayoutConfiguration: void <init>()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<java.io.File: void deleteOnExit()>-><java.lang.System: java.lang.SecurityManager getSecurityManager()>
<java.io.File$TempDirectory: java.io.File generateFile(java.lang.String,java.lang.String,java.io.File)>-><java.io.File: void <init>(java.io.File,java.lang.String)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><javax.management.MBeanInfo: int hashCode()>
<org.apache.catalina.core.ApplicationFilterChain$1: java.lang.Void run()>-><org.apache.catalina.core.ApplicationFilterChain: void access$000(org.apache.catalina.core.ApplicationFilterChain,javax.servlet.ServletRequest,javax.servlet.ServletResponse)>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><org.springframework.ui.freemarker.FreeMarkerConfigurationFactory: void setPreferFileSystemAccess(boolean)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: org.apache.activemq.artemis.jms.server.config.JMSConfiguration artemisJmsConfiguration()>-><org.apache.activemq.artemis.jms.server.config.impl.JMSConfigurationImpl: void <init>()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<org.springframework.http.client.support.HttpAccessor: void <init>()>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: org.apache.activemq.artemis.jms.server.embedded.EmbeddedJMS artemisServer(org.apache.activemq.artemis.core.config.Configuration,org.apache.activemq.artemis.jms.server.config.JMSConfiguration)>-><org.apache.activemq.artemis.jms.server.embedded.EmbeddedJMS: org.apache.activemq.artemis.jms.server.embedded.EmbeddedJMS setJmsConfiguration(org.apache.activemq.artemis.jms.server.config.JMSConfiguration)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.security.x509.Extension: java.lang.String toString()>
<java.util.AbstractSet: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.bind.support.ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer()>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.temporal.IsoFields$Field$3: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.EnumMap$1: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addCorsMappings(org.springframework.web.servlet.config.annotation.CorsRegistry)>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><groovyjarjarasm.asm.Type: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.core.Constants: java.util.Set getValues(java.lang.String)>-><java.util.HashMap: void forEach(java.util.function.BiConsumer)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMockRestServiceServer(org.springframework.test.web.client.MockRestServiceServer)>
<org.apache.catalina.security.SecurityUtil: void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)>-><javax.servlet.ServletException: void <init>(java.lang.String,java.lang.Throwable)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><net.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription: java.lang.String toString()>
<javax.security.auth.Subject: int hashCode()>-><java.util.AbstractList$Itr: java.lang.Object next()>
<org.springframework.core.io.support.EncodedResource: java.io.InputStream getInputStream()>-><org.springframework.core.io.UrlResource: java.io.InputStream getInputStream()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<javax.security.auth.Subject: int hashCode()>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder()>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder corePoolSize(int)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.asm.MemberSubstitution$Replacement$Factory$Compound: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder json()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void configureMessageConverters(java.util.List)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters$1: java.util.List defaultMessageConverters()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.beans.factory.BeanCreationException: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void configurePartConverters(org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter,java.util.Collection)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.cluster.ClusterInfo couchbaseClusterInfo()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$OptionalPathExtensionContentNegotiationStrategy: void <init>(org.springframework.web.accept.ContentNegotiationStrategy)>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.StringHttpMessageConverter: void <init>()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<org.springframework.mock.web.MockHttpSession: java.lang.Object getAttribute(java.lang.String)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.management.ObjectName: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<javax.security.auth.SubjectDomainCombiner$WeakKeyValueMap: void <init>(javax.security.auth.SubjectDomainCombiner$1)>-><javax.security.auth.SubjectDomainCombiner$WeakKeyValueMap: void <init>()>
<java.text.AttributeEntry: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.Hashtable$KeySet: java.util.Iterator iterator()>
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.Class)>-><org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object[])>-><org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object[])>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder queueCapacity(int)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.security.x509.X509CertImpl: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.util.calendar.ZoneInfo: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.format.DateTimeFormatterBuilder$LocalizedPrinterParser: java.lang.String toString()>
<org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean compareEqual(java.lang.Object,java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.bind.support.ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setWebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer(org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.math.BigInteger: java.lang.String toString()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: java.lang.String[] getExcludedViewNames()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer: void <init>()>-><java.lang.Object: void <init>()>
<javax.security.auth.SubjectDomainCombiner: void <init>(javax.security.auth.Subject)>-><javax.security.auth.Subject: boolean isReadOnly()>
<org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>-><org.springframework.core.io.UrlResource: java.io.InputStream getInputStream()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setEntityManagerFactoryBuilderCustomizer(org.springframework.boot.autoconfigure.orm.jpa.EntityManagerFactoryBuilderCustomizer)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.stream.Nodes$IntFixedNodeBuilder: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<java.util.EnumMap: int entryHashCode(int)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.asm.Type: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.boot.autoconfigure.web.ErrorProperties,java.util.List)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.hibernate.boot.model.relational.Namespace$Name: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.Long: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setContentNegotiatingViewResolver(org.springframework.web.servlet.view.ContentNegotiatingViewResolver)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.AbstractSequentialList: java.util.Iterator iterator()>
<org.hibernate.boot.model.naming.Identifier: boolean equals(java.lang.Object)>-><org.hibernate.boot.model.naming.Identifier: java.lang.String getCanonicalName()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.bind.support.ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer()>-><org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.Class)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.Vector: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.feed.RssChannelHttpMessageConverter: void <init>()>
<org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration: void <init>(org.springframework.beans.factory.ObjectProvider)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider: java.lang.Object getIfAvailable()>
<java.util.AbstractSet: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateCustomizer[])>-><java.util.Collections: java.util.Set emptySet()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.expr.ConstructorCallExpression: java.lang.String toString()>
<org.springframework.web.client.RestTemplate$HeadersExtractor: void <init>()>-><java.lang.Object: void <init>()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setErrorMvcAutoConfiguration$ErrorPageCustomizer(org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer$TimeoutRequestFactoryCustomizer: java.lang.reflect.Method findMethod(org.springframework.http.client.ClientHttpRequestFactory)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>-><java.lang.Class: boolean isAssignableFrom(java.lang.Class)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.util.locale.BaseLocale: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration: org.springframework.cache.support.SimpleCacheManager cacheManager(java.util.Collection)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat: void <init>()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapReactiveProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source asInt(java.util.function.Function)>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController basicErrorController(org.springframework.boot.web.servlet.error.ErrorAttributes)>-><org.springframework.boot.autoconfigure.web.ServerProperties: org.springframework.boot.autoconfigure.web.ErrorProperties getError()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.reflect.Parameter: int hashCode()>
<java.util.AbstractList: int hashCode()>-><javax.security.auth.Subject: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.io.DeleteOnExitHook: void add(java.lang.String)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.boot.ansi.AnsiStyle: java.lang.String toString()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void <init>(org.springframework.boot.autoconfigure.mail.MailProperties)>-><org.springframework.boot.autoconfigure.mail.MailProperties: void <init>()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints: int getKeyValue()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>-><java.util.HashMap$Values: void forEach(java.util.function.Consumer)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><com.sun.activation.registries.MimeTypeEntry: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.management.MBeanParameterInfo: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientRegistrationRepositoryConfiguration: void <init>(org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties)>
<org.springframework.http.server.reactive.UndertowHeadersAdapter$1: java.util.Iterator iterator()>-><org.springframework.http.server.reactive.UndertowHeadersAdapter$EntryIterator: void <init>(org.springframework.http.server.reactive.UndertowHeadersAdapter,org.springframework.http.server.reactive.UndertowHeadersAdapter$1)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.core.NamedThreadLocal: java.lang.String toString()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void forEach(java.util.function.Consumer)>-><java.util.Arrays$ArrayList: void forEach(java.util.function.Consumer)>
<org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.time.MonthDay: int compareTo(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.validation.Validator mvcValidator()>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: org.springframework.validation.Validator getValidator()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.validation.Validator mvcValidator()>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: java.lang.String appendCharset(org.springframework.util.MimeType,java.lang.String)>-><java.util.LinkedHashMap: void <init>()>
<org.springframework.mock.web.MockHttpServletRequest: java.lang.StringBuffer getRequestURL()>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<org.springframework.boot.web.client.RestTemplateBuilder: void configureRequestFactory(org.springframework.web.client.RestTemplate)>-><org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>
<nz.net.ultraq.thymeleaf.LayoutDialect: org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray()>-><nz.net.ultraq.thymeleaf.LayoutDialect: org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.web.filter.CharacterEncodingFilter characterEncodingFilter()>
<javax.security.auth.Subject: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>-><org.springframework.http.client.SimpleClientHttpRequestFactory: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.time.YearMonth: int hashCode()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.springframework.boot.autoconfigure.jms.artemis.ArtemisMode deduceMode()>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties: org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded getEmbedded()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<java.util.AbstractList$Itr: java.lang.Object next()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList: java.lang.Object get(int)>
<org.springframework.boot.test.autoconfigure.web.servlet.SpringBootMockMvcBuilderCustomizer: void <init>(org.springframework.web.context.WebApplicationContext)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.validation.Validator mvcValidator()>-><org.springframework.beans.BeanUtils: java.lang.Object instantiateClass(java.lang.Class)>
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>-><java.lang.System: java.lang.SecurityManager getSecurityManager()>
<org.springframework.beans.factory.NoUniqueBeanDefinitionException: void <init>(java.lang.Class,java.util.Collection)>-><java.lang.StringBuilder: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: java.util.List resolveFaviconLocations()>-><java.lang.Object: java.lang.Class getClass()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<java.util.HashMap$KeySet: void forEach(java.util.function.Consumer)>-><java.util.ConcurrentModificationException: void <init>()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer localeCharsetMappingsCustomizer()>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: com.hazelcast.config.Config getConfig(org.springframework.core.io.Resource)>-><com.hazelcast.config.XmlConfigBuilder: void <init>(java.net.URL)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapReactiveProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source whenNonNull()>
<org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter: void <init>()>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder cbor()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.BitSet: java.lang.String toString()>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.MethodValidationPostProcessor methodValidationPostProcessor(org.springframework.core.env.Environment,javax.validation.Validator)>-><org.springframework.aop.framework.ProxyConfig: void setProxyTargetClass(boolean)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.security.util.DerInputBuffer: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setCustomArgumentResolvers(java.util.List)>
<java.util.Objects: int hashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder customizers(java.lang.Iterable)>-><org.springframework.boot.task.TaskSchedulerBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider: java.lang.Object getIfAvailable()>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider$2: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider,org.springframework.beans.factory.config.DependencyDescriptor)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadSource(org.springframework.core.io.Resource,java.nio.charset.Charset)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.invoke.LambdaFormEditor$Transform: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.springframework.core.Constants: java.util.Set getValues(java.lang.String)>-><java.lang.String: java.lang.String trim()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createEmbeddedConnectionFactory(java.lang.Class)>-><java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration: org.thymeleaf.spring5.SpringTemplateEngine templateEngine()>-><java.lang.Iterable: void forEach(java.util.function.Consumer)>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object get(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.Map getCorsConfigurations()>
<org.codehaus.groovy.ast.expr.ConstantExpression: java.lang.String getText()>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<java.util.EnumMap: int entryHashCode(int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<java.text.AttributeEntry: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.core.io.AbstractResource: java.lang.String toString()>
<org.springframework.boot.autoconfigure.batch.JpaBatchConfigurer: void <init>(org.springframework.boot.autoconfigure.batch.BatchProperties,javax.sql.DataSource,org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers,javax.persistence.EntityManagerFactory)>-><org.springframework.boot.autoconfigure.batch.BasicBatchConfigurer: void <init>(org.springframework.boot.autoconfigure.batch.BatchProperties,javax.sql.DataSource,org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers)>
<org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.format.DateTimeFormatterBuilder$SettingsParser: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJtaTransactionManager(org.springframework.transaction.jta.JtaTransactionManager)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.tree.ArrayTypeSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.security.x509.Extension: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.resource.ResourceUrlProvider mvcResourceUrlProvider()>-><org.springframework.web.servlet.config.annotation.PathMatchConfigurer: org.springframework.web.util.UrlPathHelper getUrlPathHelper()>
<nz.net.ultraq.thymeleaf.LayoutDialect: void <init>()>-><nz.net.ultraq.thymeleaf.LayoutDialect: void <init>(nz.net.ultraq.thymeleaf.decorators.SortingStrategy)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setLayoutDialect(nz.net.ultraq.thymeleaf.LayoutDialect)>
<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: java.util.List sortErrorViewResolvers(java.util.List)>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getObject()>-><javax.validation.Validation$GenericBootstrapImpl: javax.validation.Configuration configure()>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.nio.charset.Charset: java.lang.String toString()>
<org.springframework.mock.web.MockHttpServletRequest: void checkActive()>-><org.springframework.util.Assert: void state(boolean,java.lang.String)>
<org.springframework.mock.web.MockHttpServletRequest: javax.servlet.http.HttpSession getSession(boolean)>-><org.springframework.mock.web.MockHttpSession: void <init>(javax.servlet.ServletContext)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><org.apache.logging.log4j.Level: int compareTo(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: java.lang.String toString()>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: void <init>(java.lang.Class,java.lang.Object,java.lang.Object[])>-><org.springframework.boot.util.LambdaSafe$GenericTypeFilter: void <init>(org.springframework.boot.util.LambdaSafe$1)>
<org.springframework.web.servlet.config.annotation.CorsRegistry: java.util.Map getCorsConfigurations()>-><java.util.LinkedHashMap: void <init>(int)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.http.client.support.InterceptingHttpAccessor: void <init>()>-><java.util.ArrayList: void <init>()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.ByteArrayHttpMessageConverter: void <init>()>
<net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList$AnnotatedTypeVariable: net.bytebuddy.description.TypeVariableSource getTypeVariableSource()>
<java.security.AccessControlContext: boolean equals(java.lang.Object)>-><java.security.AccessControlContext: boolean equalContext(java.security.AccessControlContext)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters$1: void <init>(org.springframework.boot.autoconfigure.http.HttpMessageConverters)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.text.DigitList: int hashCode()>
<java.util.AbstractSet: int hashCode()>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><java.time.Duration: long toMillis()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>-><org.apache.catalina.core.ApplicationFilterChain$1: java.lang.Object run()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>-><java.util.ArrayList: void <init>()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void forEach(java.util.function.Consumer)>-><java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>
<java.lang.Object: java.lang.String toString()>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.format.DateTimeFormatterBuilder$FractionPrinterParser: java.lang.String toString()>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void setCacheNames(java.util.Collection)>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration$JdbcTemplateConfiguration: org.springframework.jdbc.core.JdbcTemplate jdbcTemplate()>-><org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template: int getFetchSize()>
<org.springframework.web.servlet.handler.AbstractUrlHandlerMapping: void <init>()>-><org.springframework.web.servlet.handler.AbstractHandlerMapping: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.boot.ansi.AnsiColor: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configurePathMatch(org.springframework.web.servlet.config.annotation.PathMatchConfigurer)>-><java.util.ArrayList$Itr: boolean hasNext()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.security.Permission: java.lang.String toString()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Properties: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<org.springframework.web.servlet.config.annotation.InterceptorRegistry: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object getBean(java.lang.Class,java.lang.Object[])>-><org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object resolveBean(org.springframework.core.ResolvableType,java.lang.Object[],boolean)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer(org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer)>
<org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration: org.springframework.validation.beanvalidation.LocalValidatorFactoryBean defaultValidator()>-><org.springframework.boot.validation.MessageInterpolatorFactory: void <init>()>
<org.springframework.boot.web.client.RootUriTemplateHandler: void <init>(java.lang.String,org.springframework.web.util.UriTemplateHandler)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>-><org.springframework.core.io.ClassPathResource: boolean exists()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.time.ZoneId: int hashCode()>
<org.apache.catalina.core.ApplicationFilterChain: void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>-><org.apache.tomcat.util.ExceptionUtils: java.lang.Throwable unwrapInvocationTargetException(java.lang.Throwable)>
<org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>-><org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper,org.springframework.http.MediaType)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver thymeleafViewResolver(org.thymeleaf.spring5.ISpringWebFluxTemplateEngine)>-><org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver: void setTemplateEngine(org.thymeleaf.spring5.ISpringWebFluxTemplateEngine)>
<java.util.EnumMap: int entryHashCode(int)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration: org.springframework.boot.jackson.JsonComponentModule jsonComponentModule()>
<java.lang.reflect.Field: sun.reflect.generics.repository.FieldRepository getGenericInfo()>-><java.lang.reflect.Field: java.lang.String getGenericSignature()>
<org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration: java.lang.String getServletRegistrationName()>-><java.lang.Class: java.lang.String getName()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.batch.BatchProperties getBatchPropertiesInstance()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>-><org.springframework.web.servlet.config.annotation.PathMatchConfigurer: java.lang.Boolean isUseTrailingSlashMatch()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper get()>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor: void <init>()>-><java.lang.Object: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.beans.factory.InjectionPoint: java.lang.String toString()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><javax.security.auth.SubjectDomainCombiner$4: java.lang.Object run()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<org.springframework.boot.test.mock.web.SpringBootMockServletContext: java.lang.String getResourceLocation(java.lang.String)>-><org.springframework.boot.test.mock.web.SpringBootMockServletContext: java.lang.String getResourceBasePathLocation(java.lang.String)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.util.MimeType: java.lang.String toString()>
<org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateCustomizer[])>-><org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void setUseSuffixPatternMatch(boolean)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTaskExecutorBuilder(org.springframework.boot.task.TaskExecutorBuilder)>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,java.util.List)>-><java.lang.Object: void <init>()>
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void configureContentNegotiation(org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureContentNegotiation(org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer)>
<org.springframework.beans.factory.NoUniqueBeanDefinitionException: void <init>(org.springframework.core.ResolvableType,java.lang.String[])>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.ArrayList$Itr: boolean hasNext()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.expr.PrefixExpression: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate configure(org.springframework.web.client.RestTemplate)>-><org.springframework.boot.web.client.RootUriTemplateHandler: org.springframework.boot.web.client.RootUriTemplateHandler addTo(org.springframework.web.client.RestTemplate,java.lang.String)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: java.util.Properties asProperties(java.util.Map)>
<org.apache.catalina.security.SecurityUtil$1: void <init>(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>-><java.lang.Object: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><javax.mail.internet.InternetAddress: int hashCode()>
<javax.security.auth.Subject: int hashCode()>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><groovyjarjarasm.asm.Label: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>-><org.springframework.web.servlet.config.annotation.PathMatchConfigurer: java.lang.Boolean isUseSuffixPatternMatch()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration: org.springframework.boot.web.servlet.FilterRegistrationBean resourceUrlEncodingFilter()>-><org.springframework.web.servlet.resource.ResourceUrlEncodingFilter: void <init>()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void addQueues(org.apache.activemq.artemis.jms.server.config.JMSConfiguration,java.lang.String[])>-><java.lang.StringBuilder: void <init>()>
<org.springframework.transaction.config.JtaTransactionManagerFactoryBean: void <init>()>-><java.lang.StringBuilder: void <init>()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFreeMarkerConfigurer(org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>-><java.util.Collections$EmptyMap: java.lang.Object get(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.net.SocketPermission: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: org.springframework.web.servlet.resource.ResourceHttpRequestHandler faviconRequestHandler()>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setLocations(java.util.List)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.web.context.support.WebApplicationContextUtils$FacesDependencyRegistrar$2: java.lang.String toString()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.TreeSet: java.util.Iterator iterator()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.task.TaskSchedulerBuilder: org.springframework.boot.task.TaskSchedulerBuilder poolSize(int)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>-><java.lang.Enum: int hashCode()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>-><java.util.HashMap: void putAll(java.util.Map)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController basicErrorController(org.springframework.boot.web.servlet.error.ErrorAttributes)>-><org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.boot.autoconfigure.web.ErrorProperties,java.util.List)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.hibernate.boot.model.naming.Identifier: int hashCode()>
<org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>-><org.springframework.core.io.DefaultResourceLoader: org.springframework.core.io.Resource getResource(java.lang.String)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.SubList: java.util.Iterator iterator()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMockServerRestTemplateCustomizer(org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>-><java.util.Collections$SingletonList: void forEach(java.util.function.Consumer)>
<org.springframework.boot.test.mock.web.SpringBootMockServletContext: java.net.URL getResource(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void <init>(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void <init>()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.GitProperties gitProperties()>-><org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>
<org.springframework.boot.autoconfigure.validation.ValidatorAdapter: org.springframework.validation.Validator getExisting(org.springframework.context.ApplicationContext)>-><org.springframework.validation.beanvalidation.SpringValidatorAdapter: void <init>(javax.validation.Validator)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.validation.beanvalidation.SpringValidatorAdapter: void <init>(javax.validation.Validator)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.springframework.core.SerializableTypeWrapper$FieldTypeProvider: java.lang.reflect.Type getType()>-><java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>
<org.springframework.boot.info.GitProperties: void coercePropertyToEpoch(java.util.Properties,java.lang.String)>-><org.springframework.boot.info.GitProperties: java.lang.String coerceToEpoch(java.lang.String)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><javax.security.auth.Subject: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void configureMessageConverters(java.util.List)>
<org.springframework.boot.test.autoconfigure.json.JsonTestersAutoConfiguration$JsonMarshalTestersBeanPostProcessor: void <init>(org.springframework.boot.test.autoconfigure.json.JsonTestersAutoConfiguration$1)>-><org.springframework.boot.test.autoconfigure.json.JsonTestersAutoConfiguration$JsonMarshalTestersBeanPostProcessor: void <init>()>
<org.springframework.core.io.FileSystemResourceLoader: org.springframework.core.io.Resource getResourceByPath(java.lang.String)>-><org.springframework.core.io.FileSystemResourceLoader$FileSystemContextResource: void <init>(java.lang.String)>
<org.thymeleaf.spring5.SpringWebFluxTemplateEngine: void <init>()>-><org.thymeleaf.spring5.context.webflux.SpringWebFluxEngineContextFactory: void <init>()>
<java.io.DeleteOnExitHook$1: void run()>-><java.io.DeleteOnExitHook: void runHooks()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>-><org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.management.MBeanInfo: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath,org.springframework.beans.factory.ObjectProvider)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createConnectionFactory(java.lang.Class)>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: void startEmbeddedJms()>
<synthetic.method.FilterChainImpl: void <init>()>-><java.lang.Object: void <init>()>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.core.io.support.EncodedResource: org.springframework.core.io.Resource getResource()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.core.io.ClassPathResource: java.lang.String getFilename()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration: org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean dispatcherServletRegistration(org.springframework.web.servlet.DispatcherServlet)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: void setLoadOnStartup(int)>
<org.springframework.test.web.servlet.setup.DefaultMockMvcBuilder: void <init>(org.springframework.web.context.WebApplicationContext)>-><org.springframework.test.web.servlet.setup.StubWebApplicationContext: javax.servlet.ServletContext getServletContext()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<javax.security.auth.Subject: java.lang.Object doAsPrivileged(javax.security.auth.Subject,java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>-><javax.security.auth.Subject: java.security.AccessControlContext createContext(javax.security.auth.Subject,java.security.AccessControlContext)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setPageableHandlerMethodArgumentResolverCustomizer(org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.bind.support.ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer()>-><org.springframework.web.bind.support.ConfigurableWebBindingInitializer: void setConversionService(org.springframework.core.convert.ConversionService)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList$AnnotatedTypeVariable: java.lang.String getSymbol()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList$AnnotatedTypeVariable: java.lang.String getSymbol()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.web.servlet.error.DefaultErrorAttributes errorAttributes()>
<java.util.TreeMap$Entry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<org.springframework.mock.web.MockHttpSession: void removeAttribute(java.lang.String)>-><org.springframework.mock.web.MockHttpSession: void assertIsValid()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: org.thymeleaf.spring5.SpringWebFluxTemplateEngine templateEngine()>-><java.lang.Iterable: void forEach(java.util.function.Consumer)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap: boolean isEmpty()>-><java.util.Collections$EmptyMap: boolean isEmpty()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void customize(org.apache.activemq.artemis.core.config.Configuration)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider: java.util.stream.Stream orderedStream()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTransactionManagerCustomizers(org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: void forEach(java.util.function.Consumer)>-><java.util.concurrent.ConcurrentHashMap$Traverser: java.util.concurrent.ConcurrentHashMap$Node advance()>
<org.springframework.core.io.support.PropertiesLoaderUtils: void fillProperties(java.util.Properties,org.springframework.core.io.support.EncodedResource,org.springframework.util.PropertiesPersister)>-><org.springframework.core.io.FileSystemResource: java.lang.String getFilename()>
<org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar springApplicationAdminRegistrar()>-><java.util.Spliterators$1Adapter: java.lang.Object next()>
<java.util.EnumMap: int entryHashCode(int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>-><java.util.Vector: void forEach(java.util.function.Consumer)>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(org.springframework.core.ResolvableType)>-><java.util.HashMap$Node: java.lang.Object getValue()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.lang.String: int compareTo(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.net.StandardSocketOptions$StdSocketOption: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.beans.factory.config.BeanDefinitionHolder: int hashCode()>
<org.springframework.http.server.reactive.UndertowHeadersAdapter$1: int size()>-><io.undertow.util.HeaderMap: int size()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.web.servlet.MultipartProperties)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.util.LinkedHashSet: void <init>(java.util.Collection)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.Thread$WeakClassKey: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.core.env.CompositePropertySource: java.lang.String toString()>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void <init>()>-><java.util.HashMap: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: java.util.List resolveFaviconLocations()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: java.lang.String[] getResourceLocations(java.lang.String[])>
<org.springframework.orm.jpa.EntityManagerFactoryAccessor: void <init>()>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.springframework.mock.web.HeaderValueHolder: org.springframework.mock.web.HeaderValueHolder getByName(java.util.Map,java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap: java.util.Set keySet()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.reflect.Method: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration: org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver freeMarkerViewResolver()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addReturnValueHandlers(java.util.List)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJavaDate()>-><org.springframework.format.datetime.DateFormatterRegistrar: void setFormatter(org.springframework.format.datetime.DateFormatter)>
<org.springframework.beans.factory.NoUniqueBeanDefinitionException: void <init>(java.lang.Class,java.util.Collection)>-><org.springframework.util.StringUtils: java.lang.String collectionToCommaDelimitedString(java.util.Collection)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors()>-><org.springframework.web.servlet.config.annotation.InterceptorRegistry: void <init>()>
<javax.security.auth.Subject: void <init>()>-><java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setParentAwareNamingStrategy(org.springframework.boot.autoconfigure.jmx.ParentAwareNamingStrategy)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><javax.security.auth.Subject: int hashCode()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><org.springframework.boot.context.properties.PropertyMapper: org.springframework.boot.context.properties.PropertyMapper$Source from(java.lang.Object)>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><javax.imageio.ImageTypeSpecifier$Interleaved: int hashCode()>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: void accept(org.springframework.http.client.ClientHttpRequestFactory)>-><org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer: org.springframework.http.client.ClientHttpRequestFactory unwrapRequestFactoryIfNecessary(org.springframework.http.client.ClientHttpRequestFactory)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver thymeleafViewResolver(org.thymeleaf.spring5.ISpringWebFluxTemplateEngine)>-><org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver: void setOrder(int)>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: org.springframework.boot.util.LambdaSafe$LambdaSafeCallback withLogger(java.lang.Class)>-><org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: org.springframework.boot.util.LambdaSafe$LambdaSafeCallback withLogger(org.apache.commons.logging.Log)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer: org.springframework.web.accept.ContentNegotiationManager buildContentNegotiationManager()>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastServerConfiguration$HazelcastServerConfigFileConfiguration: com.hazelcast.core.HazelcastInstance hazelcastInstance(org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties)>-><org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: void <init>(org.springframework.core.io.Resource)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Collections$1: java.lang.Object next()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addArgumentResolvers(java.util.List)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.context.annotation.MBeanExportConfiguration: org.springframework.jmx.export.annotation.AnnotationMBeanExporter mbeanExporter()>-><org.springframework.util.Assert: void state(boolean,java.lang.String)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void addFormatters()>-><org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJsr310()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDataSourcePoolMetadataProvider(org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration: void <init>()>
<org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>-><java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>
<org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration: org.springframework.boot.task.TaskSchedulerBuilder taskSchedulerBuilder(org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool getPool()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configurePathMatch(org.springframework.web.servlet.config.annotation.PathMatchConfigurer)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJodaTime()>-><org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar: void <init>()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.info.ProjectInfoProperties)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer$TimeoutRequestFactoryCustomizer: java.lang.reflect.Method findMethod(org.springframework.http.client.ClientHttpRequestFactory)>-><org.springframework.util.ReflectionUtils: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[])>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createNativeConnectionFactory(java.lang.Class)>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties: java.lang.String getPassword()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration: org.springframework.boot.autoconfigure.jmx.ParentAwareNamingStrategy objectNamingStrategy()>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.core.io.support.EncodedResource: int hashCode()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<org.springframework.web.client.DefaultResponseErrorHandler: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration: org.springframework.test.web.servlet.setup.DefaultMockMvcBuilder mockMvcBuilder(java.util.List)>-><org.springframework.test.web.servlet.setup.MockMvcBuilders: org.springframework.test.web.servlet.setup.DefaultMockMvcBuilder webAppContextSetup(org.springframework.web.context.WebApplicationContext)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration: com.fasterxml.jackson.databind.ObjectMapper jacksonObjectMapper(org.springframework.http.converter.json.Jackson2ObjectMapperBuilder)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.SubList$1: boolean hasNext()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void extendMessageConverters(java.util.List)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.jmx.support.MBeanRegistrationSupport: void setRegistrationPolicy(org.springframework.jmx.support.RegistrationPolicy)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><javax.security.auth.Subject: java.lang.String toString()>
<org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean compareEqual(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><ch.qos.logback.classic.jmx.JMXConfigurator: java.lang.String toString()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.data.domain.Sort$Order: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.io.File: int hashCode()>
<java.text.AttributeEntry: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.StructuralEvaluator$Parent: java.lang.String toString()>
<org.hibernate.boot.model.naming.Identifier: java.lang.String toString()>-><org.hibernate.boot.model.naming.Identifier: java.lang.String render()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>-><org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog: void warn(java.lang.Object,java.lang.Throwable)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFreeMarkerViewResolver(org.springframework.web.reactive.result.view.freemarker.FreeMarkerViewResolver)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: void <init>(org.springframework.boot.autoconfigure.web.ResourceProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ListableBeanFactory,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.web.servlet.context.XmlServletWebServerApplicationContext: void <init>()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>-><java.lang.Enum: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.invoke.LambdaForm$Name: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.nio.ch.SocketOptionRegistry$RegistryKey: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.description.method.MethodDescription$AbstractBase: int hashCode()>
<org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)>-><org.springframework.core.io.FileSystemResource: java.net.URL getURL()>
<org.springframework.core.io.support.PropertiesLoaderSupport: void <init>()>-><java.lang.Object: java.lang.Class getClass()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><javax.security.auth.Subject: int hashCode()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.task.TaskSchedulingProperties getTaskSchedulingPropertiesInstance()>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: void setThreadNamePrefix(java.lang.String)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.security.provider.PolicyFile$PolicyEntry: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration: org.springframework.boot.web.servlet.ServletRegistrationBean jerseyServletRegistration(org.springframework.boot.autoconfigure.web.servlet.JerseyApplicationPath)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: void <init>(javax.servlet.Servlet,java.lang.String[])>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: void <init>(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,java.util.Collection,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$1: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory,org.springframework.core.ResolvableType)>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration: org.springframework.security.oauth2.jwt.ReactiveJwtDecoder jwtDecoder()>
<org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)>-><org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog: void warn(java.lang.Object,java.lang.Throwable)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.Enum: java.lang.String toString()>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.web.client.RestTemplate: org.springframework.web.util.DefaultUriBuilderFactory initUriTemplateHandler()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.invoke.MethodHandle: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: java.util.Optional getWelcomePage()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<java.util.AbstractList$Itr: void remove()>-><groovy.lang.EmptyRange: java.lang.Object remove(int)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJsr310()>-><org.springframework.format.datetime.standard.DateTimeFormatterRegistrar: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.aop.support.DefaultIntroductionAdvisor: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void forEach(java.util.function.Consumer)>-><java.util.Collections$SingletonList: void forEach(java.util.function.Consumer)>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDataSourceTransactionManager(org.springframework.jdbc.datasource.DataSourceTransactionManager)>
<org.apache.catalina.core.ApplicationFilterChain: void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>-><javax.servlet.ServletException: void <init>(java.lang.String,java.lang.Throwable)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<org.springframework.orm.jpa.EntityManagerFactoryAccessor: void <init>()>-><java.util.HashMap: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void extendMessageConverters(java.util.List)>
<org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration: org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver freeMarkerViewResolver()>-><org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver: void <init>()>
<org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>-><org.springframework.web.servlet.handler.HandlerInterceptorAdapter: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.OffsetTime: java.lang.String toString()>
<java.util.AbstractList: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><com.fasterxml.jackson.databind.type.ClassKey: int compareTo(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.security.cert.X509CRLEntry: int hashCode()>
<org.springframework.web.servlet.view.UrlBasedViewResolver: void <init>()>-><org.springframework.web.servlet.view.AbstractCachingViewResolver: void <init>()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerNonWebConfiguration: void <init>(org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration: void <init>(org.springframework.boot.autoconfigure.mustache.MustacheProperties)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.beans.PropertyValue: java.lang.String toString()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<java.util.EnumMap: int entryHashCode(int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding: net.bytebuddy.description.type.TypeDescription$Generic onTypeVariable(net.bytebuddy.description.type.TypeDescription$Generic)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList$AnnotatedTypeVariable: net.bytebuddy.description.TypeVariableSource getTypeVariableSource()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void main(java.lang.String[])>-><synthetic.method.FilterChainImpl: void <init>()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: void <init>(org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>
<groovy.lang.EmptyRange: void <init>(java.lang.Comparable)>-><java.util.AbstractList: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.security.x509.AVA: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()>-><java.util.ArrayList: boolean isEmpty()>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Object[])>-><org.springframework.util.ObjectUtils: boolean isEmpty(java.lang.Object[])>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer$TimeoutRequestFactoryCustomizer: java.lang.reflect.Method findMethod(org.springframework.http.client.ClientHttpRequestFactory)>-><java.lang.StringBuilder: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><ch.qos.logback.classic.LoggerContext: java.lang.String toString()>
<javax.security.auth.Policy$4: java.lang.Object run()>-><javax.security.auth.Policy$4: java.lang.String run()>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: void <init>(java.lang.Class,java.lang.Object,java.lang.Object[])>-><java.lang.Object: void <init>()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void forEach(java.util.function.Consumer)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void forEach(java.util.function.Consumer)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer errorPageCustomizer()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<org.apache.catalina.security.SecurityUtil: java.lang.reflect.Method createMethodAndCacheIt(java.lang.reflect.Method[],java.lang.Class,java.lang.String,java.lang.Class[])>-><java.lang.String: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration: org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean dispatcherServletRegistration(org.springframework.web.servlet.DispatcherServlet)>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)>-><java.lang.Object: java.lang.Class getClass()>
<java.io.File$TempDirectory: java.io.File generateFile(java.lang.String,java.lang.String,java.io.File)>-><java.lang.Math: long abs(long)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.lang.ProcessEnvironment$StringKeySet: java.util.Iterator iterator()>
<com.favorites.comm.exception.GlobalExceptionHandler: org.springframework.web.servlet.ModelAndView defaultErrorHandler(java.lang.Exception,javax.servlet.http.HttpServletRequest)>-><org.springframework.mock.web.MockHttpServletRequest: java.lang.StringBuffer getRequestURL()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setDataUsername(java.lang.String)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded: java.util.Map generateTransportParameters()>-><java.util.HashMap: void <init>()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createNativeConnectionFactory(java.lang.Class)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.AbstractMap: int hashCode()>
<org.springframework.test.web.servlet.setup.AbstractMockMvcBuilder: org.springframework.test.web.servlet.setup.AbstractMockMvcBuilder addDispatcherServletCustomizer(org.springframework.test.web.servlet.DispatcherServletCustomizer)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.StructuralEvaluator$Has: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisXAConnectionFactoryConfiguration: org.apache.activemq.artemis.jms.client.ActiveMQXAConnectionFactory nonXaJmsConnectionFactory(org.springframework.beans.factory.ListableBeanFactory,org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties)>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createConnectionFactory(java.lang.Class)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: org.apache.activemq.artemis.jms.server.config.JMSConfiguration artemisJmsConfiguration()>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void addTopics(org.apache.activemq.artemis.jms.server.config.JMSConfiguration,java.lang.String[])>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.Validator getValidator()>-><java.lang.StringBuilder: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.stream.StreamSpliterators$DelegatingSpliterator: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration: org.springframework.transaction.support.TransactionTemplate transactionTemplate()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: org.springframework.boot.web.client.RestTemplateBuilder restTemplateBuilder()>-><org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder customizers(java.util.Collection)>
<org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration: org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor preserveErrorControllerTargetClassPostProcessor()>-><org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor: void <init>()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void customize(org.apache.activemq.artemis.core.config.Configuration)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$1: java.util.stream.Stream orderedStream()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setNamedParameterJdbcTemplate(org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate)>
<org.codehaus.groovy.reflection.stdclasses.StringCachedClass: java.lang.Object coerceArgument(java.lang.Object)>-><javax.security.auth.Subject: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.time.Period: int hashCode()>
<org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void mapProperties(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: java.lang.String[] getViewNames()>
<java.util.Hashtable: java.lang.String toString()>-><javax.security.auth.Subject: java.lang.String toString()>
<java.util.Arrays$ArrayList: void forEach(java.util.function.Consumer)>-><java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><javax.security.auth.Subject: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<org.springframework.web.client.RestTemplate$HeadersExtractor: void <init>(org.springframework.web.client.RestTemplate$1)>-><org.springframework.web.client.RestTemplate$HeadersExtractor: void <init>()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration: org.springframework.boot.autoconfigure.jmx.ParentAwareNamingStrategy objectNamingStrategy()>-><org.springframework.boot.autoconfigure.jmx.ParentAwareNamingStrategy: void setEnsureUniqueRuntimeObjectNames(boolean)>
<java.util.HashMap: int hash(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setJava8TimeDialect(org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><javax.security.auth.Subject: int hashCode()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDataSource(javax.sql.DataSource)>
<javax.security.auth.Subject: int hashCode()>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory: void <init>()>-><org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Env: org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl getSsl()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<org.springframework.web.context.support.ServletContextResource: boolean exists()>-><org.springframework.boot.test.mock.web.SpringBootMockServletContext: java.net.URL getResource(java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.WeakHashMap$Entry: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.util.BuddhistCalendar: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.runtime.m12n.ExtensionModule: java.lang.String toString()>
<java.security.AccessControlContext: boolean equalContext(java.security.AccessControlContext)>-><java.security.AccessControlContext: boolean equalPDs(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.management.MBeanConstructorInfo: java.lang.String toString()>
<org.springframework.util.ReflectionUtils: java.lang.Object getField(java.lang.reflect.Field,java.lang.Object)>-><java.lang.StringBuilder: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addReturnValueHandlers(java.util.List)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment couchbaseEnvironment()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.task.TaskSchedulingProperties getTaskSchedulingPropertiesInstance()>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureMessageConverters(java.util.List)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer: void <init>(org.springframework.boot.autoconfigure.web.ServerProperties)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafReactiveConfiguration: void <init>(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,java.util.Collection,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void <init>()>
<java.io.DeleteOnExitHook: void add(java.lang.String)>-><java.util.HashSet: boolean add(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>-><java.util.HashMap$EntrySet: void forEach(java.util.function.Consumer)>
<javax.servlet.http.HttpSessionEvent: void <init>(javax.servlet.http.HttpSession)>-><java.util.EventObject: void <init>(java.lang.Object)>
<org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: java.lang.String getName()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.util.BuddhistCalendar: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.servlet.view.InternalResourceViewResolver defaultViewResolver()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View: java.lang.String getPrefix()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.security.x509.AVA: java.lang.String toString()>
<java.text.AttributeEntry: int hashCode()>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<javax.security.auth.Subject: int hashCode()>-><java.util.ArrayList$Itr: java.lang.Object next()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.AbstractList$Itr: boolean hasNext()>
<java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>-><java.util.LinkedHashMap$LinkedKeySet: void forEach(java.util.function.Consumer)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat: org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory tomcatServletWebServerFactory()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration: org.springframework.boot.web.servlet.ServletRegistrationBean jerseyServletRegistration(org.springframework.boot.autoconfigure.web.servlet.JerseyApplicationPath)>
<org.springframework.boot.autoconfigure.freemarker.FreeMarkerReactiveWebConfiguration: org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer freeMarkerConfigurer()>-><org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.cglib.core.MethodInfo: int hashCode()>
<org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: org.springframework.boot.web.client.RestTemplateBuilder restTemplateBuilder()>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$1: java.util.stream.Stream orderedStream()>
<org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration: org.springframework.cache.concurrent.ConcurrentMapCacheManager cacheManager()>-><java.util.ArrayList: boolean isEmpty()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: org.springframework.cache.Cache createConcurrentMapCache(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap: void <init>(int)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.resource.ResourceUrlProvider mvcResourceUrlProvider()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor persistenceExceptionTranslationPostProcessor(org.springframework.core.env.Environment)>-><org.springframework.aop.framework.ProxyConfig: void setProxyTargetClass(boolean)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getCombinedConverters(java.util.Collection,java.util.List)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: boolean isReplacement(org.springframework.http.converter.HttpMessageConverter,org.springframework.http.converter.HttpMessageConverter)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<org.codehaus.groovy.classgen.asm.OperandStack: void newInstance(groovyjarjarasm.asm.MethodVisitor,java.lang.Object)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureContentNegotiation(org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void configureMessageConverters(java.util.List)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureMessageConverters(java.util.List)>
<org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration$JdbcTemplateConfiguration: void <init>(javax.sql.DataSource,org.springframework.boot.autoconfigure.jdbc.JdbcProperties)>-><org.springframework.boot.autoconfigure.jdbc.JdbcProperties: void <init>()>
<org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration: void <init>(org.springframework.beans.factory.ObjectProvider,org.springframework.core.env.Environment)>-><org.springframework.web.context.support.StandardServletEnvironment: void <init>()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createEmbeddedConnectionFactory(java.lang.Class)>-><java.lang.Class: java.lang.String getName()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.Short: int hashCode()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><org.springframework.boot.web.servlet.server.StaticResourceJars: void <init>()>
<org.springframework.test.web.servlet.setup.DefaultMockMvcBuilder: void <init>(org.springframework.web.context.WebApplicationContext)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.util.UUID: int compareTo(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: boolean isCheckTemplate()>
<java.util.TreeMap$Entry: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><java.util.HashMap: void <init>()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder()>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool: int getCoreSize()>
<org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.String: int hashCode()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: java.util.List determineBootstrapHosts()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties: java.util.List getBootstrapHosts()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.invoke.MethodType: java.lang.String toString()>
<org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder cbor()>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder factory(com.fasterxml.jackson.core.JsonFactory)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider$2: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider,org.springframework.beans.factory.config.DependencyDescriptor)>-><org.springframework.beans.factory.config.DependencyDescriptor: void <init>(org.springframework.beans.factory.config.DependencyDescriptor)>
<org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer$TimeoutRequestFactoryCustomizer: java.lang.reflect.Method findMethod(org.springframework.http.client.ClientHttpRequestFactory)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.core.io.support.PropertiesLoaderSupport: void <init>()>-><org.springframework.util.DefaultPropertiesPersister: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.mail.MailSendException: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: void <init>(org.springframework.boot.autoconfigure.web.ResourceProperties)>-><org.springframework.boot.autoconfigure.web.ResourceProperties: void <init>()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.format.support.FormattingConversionService mvcConversionService()>
<java.text.AttributeEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider getProvider(java.lang.String,org.springframework.context.ApplicationContext)>-><org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider getProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSortHandlerMethodArgumentResolverCustomizer(org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.web.client.DefaultResponseErrorHandler: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping requestMappingHandlerMapping()>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.config.annotation.PathMatchConfigurer getPathMatchConfigurer()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration$JdbcTemplateConfiguration: org.springframework.jdbc.core.JdbcTemplate jdbcTemplate()>-><org.springframework.jdbc.core.JdbcTemplate: void setMaxRows(int)>
<java.util.Objects: int hashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: int hashCode()>
<org.springframework.web.servlet.mvc.ParameterizableViewController: void <init>()>-><java.lang.Enum: java.lang.String name()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration: org.springframework.boot.web.servlet.FilterRegistrationBean resourceUrlEncodingFilter()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.beans.BeanMetadataAttribute: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: java.util.Optional getWelcomePage()>-><org.springframework.boot.autoconfigure.web.ResourceProperties: java.lang.String[] getStaticLocations()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.codehaus.groovy.classgen.asm.MopWriter$MopKey: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Date: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><ch.qos.logback.core.subst.Node: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.springframework.boot.autoconfigure.jms.artemis.ArtemisMode deduceMode()>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded: boolean isEnabled()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSpringResourceTemplateResolver(org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver)>
<org.springframework.boot.test.mock.web.SpringBootMockServletContext: java.lang.String getResourceLocation(java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.Throwable: java.lang.String toString()>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.json.JsonbHttpMessageConverter: void <init>()>
<org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration: org.springframework.context.support.PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer()>-><org.springframework.context.support.PropertySourcesPlaceholderConfigurer: void <init>()>
<javax.security.auth.Subject: int hashCode()>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<org.springframework.mock.web.MockServletContext: java.lang.String getResourceLocation(java.lang.String)>-><java.lang.String: boolean startsWith(java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.security.cert.Certificate: int hashCode()>
<org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration: org.springframework.boot.web.servlet.ServletRegistrationBean jerseyServletRegistration(org.springframework.boot.autoconfigure.web.servlet.JerseyApplicationPath)>-><org.glassfish.jersey.servlet.ServletContainer: void <init>(org.glassfish.jersey.server.ResourceConfig)>
<java.util.TreeMap$Entry: int hashCode()>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerAutoConfiguration: org.springframework.test.web.client.MockRestServiceServer createDeferredMockRestServiceServer(org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer)>-><org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerAutoConfiguration$DeferredRequestExpectationManager: void <init>(org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer)>
<org.springframework.util.MimeType: void <init>(org.springframework.util.MimeType,java.util.Map)>-><org.springframework.util.MimeType: void <init>(java.lang.String,java.lang.String,java.util.Map)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.asm.Handle: int hashCode()>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: com.hazelcast.core.HazelcastInstance getHazelcastInstance()>-><com.hazelcast.core.Hazelcast: com.hazelcast.core.HazelcastInstance newHazelcastInstance(com.hazelcast.config.Config)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.Date: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.security.BasicPermission: int hashCode()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>-><java.util.LinkedHashMap$LinkedKeySet: void forEach(java.util.function.Consumer)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.format.support.FormattingConversionService$AnnotationConverterKey: int hashCode()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: java.lang.String getSuffix()>
<org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: org.springframework.boot.web.client.RestTemplateBuilder restTemplateBuilder()>-><org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<org.thymeleaf.TemplateEngine: java.lang.String threadIndex()>-><java.lang.Thread: java.lang.String getName()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider: java.lang.Object getIfUnique()>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider$3: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider,org.springframework.beans.factory.config.DependencyDescriptor)>
<groovy.lang.EmptyRange: java.lang.Object remove(int)>-><groovy.lang.EmptyRange: java.lang.Comparable remove(int)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.time.YearMonth: int compareTo(java.lang.Object)>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<javax.security.auth.SubjectDomainCombiner$4: java.lang.Object run()>-><javax.security.auth.SubjectDomainCombiner$4: java.lang.String run()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder()>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Properties: java.util.Set stringPropertyNames()>
<javax.security.auth.Subject: int hashCode()>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration: void <init>()>
<org.thymeleaf.spring5.SpringWebFluxTemplateEngine: void <init>()>-><org.thymeleaf.spring5.SpringTemplateEngine: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<org.springframework.web.servlet.config.annotation.PathMatchConfigurer: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: org.springframework.web.servlet.handler.SimpleUrlHandlerMapping faviconHandlerMapping()>-><org.springframework.web.servlet.handler.SimpleUrlHandlerMapping: void setUrlMap(java.util.Map)>
<org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration: void <init>(javax.sql.DataSource,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: void <init>(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory,javax.sql.DataSource)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void forEach(java.util.function.Consumer)>-><java.util.HashMap$Values: void forEach(java.util.function.Consumer)>
<org.springframework.mock.web.MockRequestDispatcher: void <init>(java.lang.String)>-><java.lang.Object: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.stmt.BlockStatement: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<javax.security.auth.Subject: int hashCode()>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><jdk.internal.org.xml.sax.SAXParseException: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.apache.logging.log4j.Level: int hashCode()>
<com.fasterxml.jackson.databind.module.SimpleModule: void <init>(com.fasterxml.jackson.core.Version)>-><com.fasterxml.jackson.core.Version: java.lang.String getArtifactId()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.jersey.JerseyProperties,org.glassfish.jersey.server.ResourceConfig,org.springframework.beans.factory.ObjectProvider)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.concurrent.ThreadPoolExecutor: java.lang.String toString()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void forEach(java.util.function.Consumer)>-><java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.String toString()>
<org.springframework.beans.factory.BeanInitializationException: void <init>(java.lang.String,java.lang.Throwable)>-><org.springframework.beans.FatalBeanException: void <init>(java.lang.String,java.lang.Throwable)>
<java.util.TreeMap$Entry: int hashCode()>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.security.UnresolvedPermission: int hashCode()>
<org.springframework.mock.web.MockServletContext: void <init>(java.lang.String,org.springframework.core.io.ResourceLoader)>-><org.springframework.mock.web.MockServletContext: void registerNamedDispatcher(java.lang.String,javax.servlet.RequestDispatcher)>
<java.lang.reflect.Field: java.util.Map declaredAnnotations()>-><sun.misc.SharedSecrets: sun.misc.JavaLangAccess getJavaLangAccess()>
<org.springframework.cache.concurrent.ConcurrentMapCache: void <init>(java.lang.String,java.util.concurrent.ConcurrentMap,boolean,org.springframework.core.serializer.support.SerializationDelegate)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<groovyjarjarasm.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJodaTime()>-><org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar: void registerFormatters(org.springframework.format.FormatterRegistry)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration: org.springframework.boot.web.servlet.ServletRegistrationBean jerseyServletRegistration(org.springframework.boot.autoconfigure.web.servlet.JerseyApplicationPath)>-><org.springframework.boot.web.servlet.DynamicRegistrationBean: void setName(java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect: void <init>()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setPathMatcher(org.springframework.util.PathMatcher)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<org.springframework.web.servlet.handler.SimpleUrlHandlerMapping: void <init>()>-><org.springframework.web.servlet.handler.AbstractUrlHandlerMapping: void <init>()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setLocalValidatorFactoryBean(org.springframework.validation.beanvalidation.LocalValidatorFactoryBean)>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<java.io.File$TempDirectory: java.io.File generateFile(java.lang.String,java.lang.String,java.io.File)>-><java.lang.Long: java.lang.String toString(long)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder applicationContext(org.springframework.context.ApplicationContext)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.runtime.NullObject: java.lang.String toString()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.springframework.util.ReflectionUtils: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[])>-><java.lang.Class: boolean isInterface()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration: void <init>(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties)>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><java.util.ArrayList: void <init>()>
<org.springframework.test.web.servlet.MockMvcBuilderSupport: void <init>()>-><java.lang.Object: void <init>()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><groovy.util.ProxyGenerator$CacheKey: int hashCode()>
<org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>-><org.springframework.core.io.FileSystemResource: java.io.InputStream getInputStream()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.stream.SpinedBuffer: java.lang.String toString()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.Integer: java.lang.String toString()>
<org.springframework.web.servlet.handler.SimpleUrlHandlerMapping: void <init>()>-><java.util.LinkedHashMap: void <init>()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.Cluster couchbaseCluster()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: java.util.List determineBootstrapHosts()>
<org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateCustomizer[])>-><java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setUsername(java.lang.String)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void addQueues(org.apache.activemq.artemis.jms.server.config.JMSConfiguration,java.lang.String[])>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties: org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded getEmbedded()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters$1: void <init>(org.springframework.boot.autoconfigure.http.HttpMessageConverters)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void <init>()>
<org.springframework.boot.task.TaskExecutorBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
<org.apache.catalina.security.SecurityUtil: java.lang.reflect.Method createMethodAndCacheIt(java.lang.reflect.Method[],java.lang.Class,java.lang.String,java.lang.Class[])>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.Collections$UnmodifiableMap: void forEach(java.util.function.BiConsumer)>-><java.util.Collections$EmptyMap: void forEach(java.util.function.BiConsumer)>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.mail.javamail.JavaMailSenderImpl)>-><java.nio.charset.Charset: java.lang.String name()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(org.springframework.core.ResolvableType)>-><java.util.LinkedHashMap: java.util.Set entrySet()>
<org.springframework.boot.web.server.AbstractConfigurableWebServerFactory: void <init>()>-><java.lang.Object: void <init>()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void forEach(java.util.function.Consumer)>-><java.util.Collections$SingletonSet: void forEach(java.util.function.Consumer)>
<org.springframework.mock.web.MockServletContext: java.lang.String getResourceLocation(java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.Hashtable$ValueCollection: java.util.Iterator iterator()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration: org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean dispatcherServletRegistration(org.springframework.web.servlet.DispatcherServlet)>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet: java.lang.String getPath()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.SubList$1: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate build()>-><org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.web.client.RestTemplate build(java.lang.Class)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.text.AttributedString$AttributedStringIterator: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.format.DateTimeFormatterBuilder$PadPrinterParserDecorator: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.awt.image.ColorModel: java.lang.String toString()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration: org.thymeleaf.spring5.SpringTemplateEngine templateEngine()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: boolean isEnableSpringElCompiler()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<org.springframework.mock.web.MockHttpServletRequest: void setAttribute(java.lang.String,java.lang.Object)>-><org.springframework.mock.web.MockHttpServletRequest: void checkActive()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.util.unit.DataSize: java.lang.String toString()>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<groovy.lang.MetaClassImpl: void setProperties(java.lang.Object,java.util.Map)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration: org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean dispatcherServletRegistration(org.springframework.web.servlet.DispatcherServlet)>-><org.springframework.boot.web.servlet.DynamicRegistrationBean: void setName(java.lang.String)>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.util.FastArray: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory doCreateConnectionFactory(java.lang.Class)>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties: org.springframework.boot.autoconfigure.jms.artemis.ArtemisMode getMode()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.accept.ContentNegotiationManager mvcContentNegotiationManager()>-><java.util.ArrayList$ListItr: void set(java.lang.Object)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.SubList$1: java.lang.Object next()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties getArtemisPropertiesInstance()>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties: void setPassword(java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.security.util.DerValue: int hashCode()>
<javax.security.auth.Subject: int hashCode()>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)>-><org.springframework.boot.test.mock.web.SpringBootMockServletContext: java.lang.String getResourceLocation(java.lang.String)>
<org.springframework.beans.factory.support.StaticListableBeanFactory$1: java.lang.Object getObject(java.lang.Object[])>-><org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(org.springframework.core.ResolvableType)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: void forEach(java.util.function.Consumer)>-><java.util.Vector: void forEach(java.util.function.Consumer)>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts: java.time.Duration getKeyValue()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.math.BigDecimal: int hashCode()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.batch.BatchProperties getBatchPropertiesInstance()>-><org.springframework.boot.autoconfigure.batch.BatchProperties: void <init>()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)>-><org.springframework.boot.test.mock.web.SpringBootMockServletContext: java.lang.String getResourceLocation(java.lang.String)>
<org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration: org.springframework.security.oauth2.jwt.ReactiveJwtDecoder jwtDecoder()>-><org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder: void <init>(java.lang.String)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.awt.image.IndexColorModel: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.IdentityHashMap$KeySet: java.util.Iterator iterator()>
<org.thymeleaf.templatemode.TemplateMode: org.thymeleaf.templatemode.TemplateMode parse(java.lang.String)>-><org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object[])>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><groovyjarjarasm.asm.ConstantDynamic: java.lang.String toString()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>-><java.util.Collections$SynchronizedCollection: void forEach(java.util.function.Consumer)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Calendar: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void addFormatters()>-><org.springframework.format.number.NumberFormatAnnotationFormatterFactory: void <init>()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.Hashtable$EntrySet: java.util.Iterator iterator()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.time.zone.ZoneRules: int hashCode()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setConfiguration(freemarker.template.Configuration)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration: org.thymeleaf.spring5.SpringTemplateEngine templateEngine()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: boolean isRenderHiddenMarkersBeforeCheckboxes()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.StructuralEvaluator$ImmediateParent: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping welcomePageHandlerMapping(org.springframework.context.ApplicationContext)>
<org.springframework.mock.web.MockHttpServletRequest: java.lang.StringBuffer getRequestURL()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebLayoutConfiguration: nz.net.ultraq.thymeleaf.LayoutDialect layoutDialect()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.stream.Nodes$FixedNodeBuilder: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSession(javax.mail.Session)>
<org.springframework.mock.web.MockRequestDispatcher: void <init>(java.lang.String)>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer: void <init>(javax.servlet.ServletContext)>-><org.springframework.web.accept.ContentNegotiationManagerFactoryBean: void <init>()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$AttributeWithValueMatching: java.lang.String toString()>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setContinueOnError(boolean)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.bind.support.ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.format.support.FormattingConversionService mvcConversionService()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.expr.VariableExpression: java.lang.String toString()>
<org.springframework.boot.web.client.RootUriTemplateHandler: void <init>(java.lang.String,org.springframework.web.util.UriTemplateHandler)>-><java.lang.Object: void <init>()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void addTopics(org.apache.activemq.artemis.jms.server.config.JMSConfiguration,java.lang.String[])>-><org.apache.activemq.artemis.jms.server.config.impl.TopicConfigurationImpl: org.apache.activemq.artemis.jms.server.config.impl.TopicConfigurationImpl setBindings(java.lang.String[])>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<java.io.DeleteOnExitHook: void runHooks()>-><java.util.ArrayList$Itr: boolean hasNext()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<java.io.File: void deleteOnExit()>-><java.lang.SecurityManager: void checkDelete(java.lang.String)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>-><org.springframework.jmx.export.MBeanExporter: void setAssembler(org.springframework.jmx.export.assembler.MBeanInfoAssembler)>
<org.springframework.boot.task.TaskSchedulerBuilder: java.util.Set append(java.util.Set,java.lang.Iterable)>-><java.util.Collections: java.util.Set emptySet()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect: org.thymeleaf.extras.java8time.dialect.Java8TimeDialect java8TimeDialect()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.Enum: int hashCode()>
<org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerAutoConfiguration: org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer mockServerRestTemplateCustomizer()>-><org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer: void <init>()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.TreeMap$Values: java.util.Iterator iterator()>
<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>-><java.lang.reflect.Field: java.lang.String getGenericSignature()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)>-><org.springframework.core.io.DefaultResourceLoader: org.springframework.core.io.Resource getResource(java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.asm.MemberSubstitution: int hashCode()>
<org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer: void <init>()>-><java.util.concurrent.ConcurrentHashMap: void <init>()>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><java.nio.charset.Charset: java.lang.String name()>
<org.springframework.mock.web.MockHttpSession: void <init>(javax.servlet.ServletContext,java.lang.String)>-><java.util.LinkedHashMap: void <init>()>
<org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer: void <init>(org.springframework.core.env.Environment,org.springframework.boot.autoconfigure.web.ServerProperties)>-><java.lang.Object: void <init>()>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setInterceptors(java.lang.Object[])>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<org.springframework.http.client.support.HttpAccessor: void <init>()>-><org.springframework.http.HttpLogging: org.apache.commons.logging.Log forLogName(java.lang.Class)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.expr.AnnotationConstantExpression: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><ch.qos.logback.core.joran.spi.ElementPath: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.springframework.boot.autoconfigure.jms.artemis.ArtemisMode deduceMode()>-><org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.invoke.LambdaForm: java.lang.String toString()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.mock.web.MockHttpServletRequest: java.lang.StringBuffer getRequestURL()>-><org.springframework.mock.web.MockHttpServletRequest: java.lang.String getServerName()>
<org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory: void <init>()>-><java.util.ArrayList: void <init>(java.util.Collection)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.resource.ResourceUrlProvider mvcResourceUrlProvider()>-><org.springframework.web.servlet.config.annotation.PathMatchConfigurer: org.springframework.util.PathMatcher getPathMatcher()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.core.env.ViewServiceConfig getViewServiceConfig(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Endpoints)>
<org.thymeleaf.extras.java8time.dialect.Java8TimeDialect: void <init>()>-><org.thymeleaf.extras.java8time.dialect.Java8TimeExpressionFactory: void <init>()>
<org.springframework.mock.web.MockHttpSession: void setAttribute(java.lang.String,java.lang.Object)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setClusterInfo(com.couchbase.client.java.cluster.ClusterInfo)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><javax.security.auth.Subject: int hashCode()>
<org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration: void addInitParameters(org.springframework.boot.web.servlet.DynamicRegistrationBean)>-><java.util.HashMap: void forEach(java.util.function.BiConsumer)>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<org.springframework.boot.test.web.client.MockServerRestTemplateCustomizer: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping createRequestMappingHandlerMapping()>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void <init>()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts: java.time.Duration getView()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object remove(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object[])>-><ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object[])>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$IsLastChild: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: org.apache.activemq.artemis.jms.server.config.JMSConfiguration artemisJmsConfiguration()>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded: java.lang.String[] getTopics()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.mail.internet.InternetAddress: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.time.Instant: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration: void <init>(org.springframework.core.env.Environment)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setPersistenceExceptionTranslationPostProcessor(org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setFreeMarkerConfigurer(org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer)>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastServerConfiguration$HazelcastServerConfigFileConfiguration: com.hazelcast.core.HazelcastInstance hazelcastInstance(org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties)>-><com.hazelcast.core.Hazelcast: com.hazelcast.core.HazelcastInstance newHazelcastInstance()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor configure(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)>-><org.springframework.boot.context.properties.PropertyMapper$Source: org.springframework.boot.context.properties.PropertyMapper$Source asInt(java.util.function.Function)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: java.lang.String toString()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.HashMap$Node: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.String toString()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><net.bytebuddy.description.method.MethodDescription$AbstractBase: java.lang.String toString()>
<org.apache.catalina.security.SecurityUtil: void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)>-><org.apache.juli.logging.DirectJDKLog: void debug(java.lang.Object,java.lang.Throwable)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.codehaus.groovy.runtime.typehandling.ShortTypeHandling: java.lang.Class castToClass(java.lang.Object)>-><javax.security.auth.Subject: java.lang.String toString()>
<java.util.TreeMap$Entry: int hashCode()>-><javax.security.auth.Subject: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.beans.factory.support.NullBean: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.nio.charset.Charset: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.bind.support.ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer()>-><org.springframework.web.bind.support.ConfigurableWebBindingInitializer: void setMessageCodesResolver(org.springframework.validation.MessageCodesResolver)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.lang.Float: int compareTo(java.lang.Object)>
<org.springframework.boot.info.BuildProperties: void <init>(java.util.Properties)>-><org.springframework.boot.info.InfoProperties: void <init>(java.util.Properties)>
<java.util.EnumMap: int entryHashCode(int)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar: void setDateFormatter(org.joda.time.format.DateTimeFormatter)>-><java.util.EnumMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: java.lang.String[] getViewNames()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><javax.management.openmbean.CompositeType: int hashCode()>
<org.springframework.jdbc.datasource.DataSourceUtils: java.sql.Connection fetchConnection(javax.sql.DataSource)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: java.sql.Connection getConnection()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setDispatcherServlet(org.springframework.web.servlet.DispatcherServlet)>
<org.springframework.web.servlet.mvc.method.annotation.JsonViewResponseBodyAdvice: void <init>()>-><org.springframework.web.servlet.mvc.method.annotation.AbstractMappingJacksonResponseBodyAdvice: void <init>()>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<org.springframework.boot.web.server.MimeMappings: void <init>(org.springframework.boot.web.server.MimeMappings,boolean)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.core.io.DefaultResourceLoader: org.springframework.core.io.Resource getResource(java.lang.String)>-><org.springframework.core.io.FileSystemResourceLoader: org.springframework.core.io.Resource getResourceByPath(java.lang.String)>
<org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer: void <init>(javax.servlet.ServletContext)>-><org.springframework.web.accept.ContentNegotiationManagerFactoryBean: void setServletContext(javax.servlet.ServletContext)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTomcatReactiveWebServerFactory(org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory)>
<javax.security.auth.Subject: int hashCode()>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors()>-><java.util.ArrayList: java.lang.Object[] toArray()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.boot.web.servlet.support.ErrorPageFilterConfiguration: org.springframework.boot.web.servlet.support.ErrorPageFilter errorPageFilter()>-><org.springframework.boot.web.servlet.support.ErrorPageFilter: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><groovy.lang.DelegatingMetaClass: java.lang.String toString()>
<org.thymeleaf.spring5.SpringTemplateEngine: void setEnableSpringELCompiler(boolean)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><org.springframework.boot.web.server.AbstractConfigurableWebServerFactory: void <init>()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder()>-><org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder customizers(java.lang.Iterable)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.time.ZoneOffset: int compareTo(java.lang.Object)>
<org.apache.catalina.security.SecurityUtil: void doAsPrivilege(java.lang.String,javax.servlet.Servlet,java.lang.Class[],java.lang.Object[],java.security.Principal)>-><org.apache.catalina.security.SecurityUtil: void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void registerJsr310()>-><org.springframework.format.datetime.standard.DateTimeFormatterRegistrar: void registerFormatters(org.springframework.format.FormatterRegistry)>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object getBean(java.lang.Class,java.lang.Object[])>-><org.springframework.beans.factory.NoSuchBeanDefinitionException: void <init>(java.lang.Class)>
<java.util.HashMap: int hash(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.util.ReferenceManager$CallBackedManager: java.lang.String toString()>
<java.util.AbstractSet: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<org.codehaus.groovy.control.messages.ExceptionMessage: void write(java.io.PrintWriter,org.codehaus.groovy.control.Janitor)>-><org.hibernate.QueryException: java.lang.String getMessage()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.security.Provider: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<org.springframework.web.servlet.view.InternalResourceViewResolver: void <init>()>-><org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)>
<javax.security.auth.Subject: int hashCode()>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object get(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.jsoup.helper.StringUtil: java.lang.String join(java.util.Iterator,java.lang.String)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: int hashCode()>
<org.springframework.boot.info.GitProperties: java.util.Properties processEntries(java.util.Properties)>-><java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setTomcatServletWebServerFactoryCustomizer(org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer)>
<java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor openEntityManagerInViewInterceptor()>-><org.apache.commons.logging.LogAdapter$Slf4jLog: void warn(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.Float: int hashCode()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.thymeleaf.spring5.view.reactive.ThymeleafReactiveViewResolver: void <init>()>-><java.util.LinkedHashMap: void <init>(int)>
<org.springframework.web.servlet.config.annotation.InterceptorRegistry: java.util.List getInterceptors()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setTemplateMode(java.lang.String)>
<org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>-><com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory getFactory()>
<java.util.Collections$UnmodifiableMap: int hashCode()>-><java.util.Collections$EmptyMap: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.freemarker.FreeMarkerNonWebConfiguration: org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean freeMarkerConfiguration()>
<groovy.lang.Closure: java.lang.Object throwRuntimeException(java.lang.Throwable)>-><org.hibernate.QueryException: java.lang.String getMessage()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.expr.CastExpression: java.lang.String toString()>
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader: void applyPropertyToBeanDefinition(java.lang.String,java.lang.Object)>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.lang.String toString()>
<sun.reflect.generics.repository.FieldRepository: sun.reflect.generics.tree.TypeSignature parse(java.lang.String)>-><sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.TypeSignature parseTypeSig(java.lang.String)>
<org.springframework.web.servlet.config.annotation.CorsRegistry: java.util.Map getCorsConfigurations()>-><java.util.ArrayList: int size()>
<org.springframework.boot.validation.MessageInterpolatorFactory: javax.validation.MessageInterpolator getFallback()>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><net.bytebuddy.description.type.TypeDescription$AbstractBase: java.lang.String toString()>
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void <init>()>-><org.springframework.jmx.export.MBeanExporter: void setNamingStrategy(org.springframework.jmx.export.naming.ObjectNamingStrategy)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder keepAlive(java.time.Duration)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
<org.apache.catalina.core.ApplicationFilterChain$1: java.lang.Object run()>-><org.apache.catalina.core.ApplicationFilterChain$1: java.lang.Void run()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.AbstractCollection: java.lang.String toString()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.springframework.validation.Validator getValidator()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><ch.qos.logback.core.AppenderBase: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.jsoup.parser.Tag: int hashCode()>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><java.util.Properties: void <init>()>
<java.io.File$TempDirectory: java.io.File generateFile(java.lang.String,java.lang.String,java.io.File)>-><java.io.IOException: void <init>(java.lang.String)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration: void <init>()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>-><java.lang.Enum: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.Double: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.Boolean: java.lang.String toString()>
<org.springframework.boot.util.LambdaSafe$Callbacks: void invoke(java.util.function.Consumer)>-><java.util.ArrayList: void forEach(java.util.function.Consumer)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: int hashCode()>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.time.Duration: java.lang.String toString()>
<org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration$JdbcTemplateConfiguration: org.springframework.jdbc.core.JdbcTemplate jdbcTemplate()>-><org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template: java.time.Duration getQueryTimeout()>
<org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration: org.springframework.boot.task.TaskExecutorBuilder taskExecutorBuilder()>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool: int getMaxSize()>
<org.springframework.boot.autoconfigure.freemarker.AbstractFreeMarkerConfiguration: void applyProperties(org.springframework.ui.freemarker.FreeMarkerConfigurationFactory)>-><java.util.Hashtable: void putAll(java.util.Map)>
<org.codehaus.groovy.runtime.typehandling.GroovyCastException: void <init>(java.lang.Object,java.lang.Class,java.lang.Exception)>-><org.hibernate.QueryException: java.lang.String getMessage()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.stream.StreamSpliterators$AbstractWrappingSpliterator: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><java.util.Optional: java.lang.Object get()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList$AnnotatedTypeVariable: net.bytebuddy.description.TypeVariableSource getTypeVariableSource()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList$AnnotatedTypeVariable: net.bytebuddy.description.TypeVariableSource getTypeVariableSource()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter mappingJackson2HttpMessageConverter(com.fasterxml.jackson.databind.ObjectMapper)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration: org.springframework.boot.web.client.RestTemplateBuilder restTemplateBuilder()>-><org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder messageConverters(java.util.Collection)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setTemplateMode(java.lang.String)>-><org.thymeleaf.util.Validate: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.beans.factory.NoUniqueBeanDefinitionException: void <init>(org.springframework.core.ResolvableType,java.lang.String[])>-><org.springframework.beans.factory.NoUniqueBeanDefinitionException: void <init>(org.springframework.core.ResolvableType,java.util.Collection)>
<java.util.EnumMap: int entryHashCode(int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.time.OffsetTime: int hashCode()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.security.auth.Subject: java.lang.String toString()>
<org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory: void <init>()>-><java.util.ArrayList: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.time.temporal.IsoFields$Field$4: java.lang.String toString()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.web.servlet.view.AbstractTemplateViewResolver: void setAllowSessionOverride(boolean)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.AbstractSet: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getReturnValueHandlers()>-><org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void addReturnValueHandlers(java.util.List)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: org.springframework.web.filter.RequestContextFilter requestContextFilter()>
<org.springframework.mock.web.HeaderValueHolder: org.springframework.mock.web.HeaderValueHolder getByName(java.util.Map,java.lang.String)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.util.Collections$UnmodifiableMap: boolean containsKey(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: boolean containsKey(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration: org.springframework.transaction.jta.JtaTransactionManager transactionManager()>
<net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: java.lang.String toString()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList$AnnotatedTypeVariable: java.lang.String getSymbol()>
<org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setErrorPageFilter(org.springframework.boot.web.servlet.support.ErrorPageFilter)>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter: void <init>()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setOpenEntityManagerInViewInterceptor(org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.test.autoconfigure.json.JsonTestersAutoConfiguration: void <init>()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.lang.Float: java.lang.String toString()>
<org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>-><java.lang.Object: void <init>()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.BuildProperties buildProperties()>-><org.springframework.boot.info.BuildProperties: void <init>(java.util.Properties)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setGitProperties(org.springframework.boot.info.GitProperties)>
<org.springframework.boot.info.BuildProperties: void coerceDate(java.util.Properties,java.lang.String)>-><java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMBeanServer(javax.management.MBeanServer)>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.mail.javamail.JavaMailSenderImpl: void setUsername(java.lang.String)>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>-><java.lang.SecurityException: void <init>(java.lang.String)>
<org.springframework.mock.web.MockHttpServletRequest: java.lang.StringBuffer getRequestURL()>-><java.lang.StringBuffer: void <init>(java.lang.String)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder xml()>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.tree.BooleanSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.core.NamedInheritableThreadLocal: java.lang.String toString()>
<org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration: void <init>(org.springframework.boot.autoconfigure.cache.CacheProperties,org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers)>-><org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers: void <init>(java.util.List)>
<org.springframework.boot.info.GitProperties: java.util.Properties processEntries(java.util.Properties)>-><org.springframework.boot.info.GitProperties: void coercePropertyToEpoch(java.util.Properties,java.lang.String)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setHttpMessageConverters(org.springframework.boot.autoconfigure.http.HttpMessageConverters)>
<org.springframework.test.web.servlet.setup.AbstractMockMvcBuilder: void <init>()>-><java.util.ArrayList: void <init>()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: int hashCode()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.StaticListableBeanFactory$1: java.lang.Object getIfAvailable()>-><org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setJndiName(java.lang.String)>
<sun.reflect.generics.repository.AbstractRepository: void <init>(java.lang.String,sun.reflect.generics.factory.GenericsFactory)>-><sun.reflect.generics.repository.FieldRepository: sun.reflect.generics.tree.Tree parse(java.lang.String)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<java.security.AccessControlContext: boolean containsAllPDs(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>-><java.lang.Object: boolean equals(java.lang.Object)>
<java.time.format.DateTimeFormatter: java.time.format.DateTimeParseException createError(java.lang.CharSequence,java.lang.RuntimeException)>-><org.hibernate.QueryException: java.lang.String getMessage()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration: org.springframework.web.servlet.resource.ResourceHttpRequestHandler faviconRequestHandler()>-><org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void <init>()>
<javax.security.auth.Subject: int hashCode()>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: int hashCode()>
<groovy.util.ProxyGenerator: org.codehaus.groovy.runtime.ProxyGeneratorAdapter createAdapter(java.util.Map,java.util.List,java.lang.Class,java.lang.Class)>-><javax.security.auth.Subject: java.lang.String toString()>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider getProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.util.LinkedMultiValueMap: java.lang.String toString()>
<nz.net.ultraq.thymeleaf.LayoutDialect: org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray()>-><nz.net.ultraq.thymeleaf.LayoutDialect: void $createCallSiteArray_1(java.lang.String[])>
<org.springframework.boot.web.client.RestTemplateBuilder: org.springframework.boot.web.client.RestTemplateBuilder messageConverters(java.util.Collection)>-><java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.Collections$SynchronizedMap: int hashCode()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<org.springframework.util.ReflectionUtils: void handleReflectionException(java.lang.Exception)>-><org.hibernate.QueryException: java.lang.String getMessage()>
<org.springframework.context.annotation.MBeanExportConfiguration$SpecificPlatform$2: javax.management.MBeanServer getMBeanServer()>-><org.springframework.jmx.support.WebSphereMBeanServerFactoryBean: javax.management.MBeanServer getObject()>
<net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList$AnnotatedTypeVariable: java.lang.String getSymbol()>
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList$AnnotatedTypeVariable: java.lang.String getSymbol()>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void setRootViewName(java.lang.String)>-><org.springframework.web.servlet.handler.AbstractHandlerMapping: void setOrder(int)>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration$NamedParameterJdbcTemplateConfiguration: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate namedParameterJdbcTemplate(org.springframework.jdbc.core.JdbcTemplate)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration: void customize(org.apache.activemq.artemis.core.config.Configuration)>-><java.util.stream.ReferencePipeline$Head: void forEach(java.util.function.Consumer)>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.boot.autoconfigure.mail.MailProperties: java.util.Map getProperties()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addDefaultHttpMessageConverters(java.util.List)>-><org.springframework.http.converter.StringHttpMessageConverter: void setWriteAcceptCharset(boolean)>
<org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void <init>()>-><org.thymeleaf.util.PatternSpec: void <init>()>
<org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory: void <init>()>-><java.util.LinkedHashSet: void <init>(java.util.Collection)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.io.File: int compareTo(java.lang.Object)>
<org.springframework.web.accept.ContentNegotiationManagerFactoryBean: void addMediaTypes(java.util.Map)>-><java.util.HashMap: void putAll(java.util.Map)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: int compareTo(java.lang.Object)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.time.OffsetDateTime: int compareTo(java.lang.Object)>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List extractPartConverters(org.springframework.http.converter.FormHttpMessageConverter)>-><org.springframework.util.ReflectionUtils: java.lang.Object getField(java.lang.reflect.Field,java.lang.Object)>
<org.springframework.web.servlet.config.annotation.InterceptorRegistry: org.springframework.web.servlet.config.annotation.InterceptorRegistration addInterceptor(org.springframework.web.servlet.HandlerInterceptor)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<java.security.AccessControlContext: boolean equalPDs(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>-><java.security.AccessControlContext: boolean containsAllPDs(java.security.ProtectionDomain[],java.security.ProtectionDomain[])>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><groovyjarjarantlr.TokenStreamRecognitionException: java.lang.String toString()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration: void <init>(org.springframework.boot.autoconfigure.orm.jpa.JpaProperties)>-><org.springframework.boot.autoconfigure.orm.jpa.JpaProperties: void <init>()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: void <init>(org.springframework.boot.autoconfigure.web.ResourceProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ListableBeanFactory,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider: java.lang.Object getIfAvailable()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<org.hibernate.internal.util.compare.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>-><java.time.Year: int compareTo(java.lang.Object)>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)>-><org.springframework.test.web.servlet.setup.StubWebApplicationContext: org.springframework.core.io.Resource getResource(java.lang.String)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard: boolean equals(java.lang.Object)>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: int hashCode()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.lang.Byte: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><javax.management.MBeanParameterInfo: int hashCode()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void <init>(boolean,java.util.Collection)>-><org.springframework.boot.autoconfigure.http.HttpMessageConverters: java.util.List getDefaultConverters()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMustacheViewResolver(org.springframework.boot.web.reactive.result.view.MustacheViewResolver)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.GenericsType: java.lang.String toString()>
<org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory: void <init>()>-><org.springframework.boot.web.servlet.server.DocumentRoot: void <init>(org.apache.commons.logging.Log)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory createEmbeddedConnectionFactory(java.lang.Class)>-><java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>
<java.lang.reflect.Field: sun.reflect.generics.factory.GenericsFactory getFactory()>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: java.lang.String getName()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addFormatters(org.springframework.format.FormatterRegistry)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.TreeMap$Entry: java.lang.String toString()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder corePoolSize(int)>-><org.springframework.boot.task.TaskExecutorBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,org.springframework.core.task.TaskDecorator,java.util.Set)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.time.LocalDate: int hashCode()>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>-><org.springframework.beans.factory.BeanNotOfRequiredTypeException: void <init>(java.lang.String,java.lang.Class,java.lang.Class)>
<org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: org.springframework.core.io.Resource getResourceByPath(java.lang.String)>-><org.springframework.web.context.support.ServletContextResource: void <init>(javax.servlet.ServletContext,java.lang.String)>
<org.springframework.web.client.RestTemplate: void <init>()>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.springframework.web.client.RestTemplate: void <init>()>-><org.springframework.http.converter.json.GsonHttpMessageConverter: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Collections$SynchronizedCollection: java.lang.String toString()>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.http.converter.feed.RssChannelHttpMessageConverter: void <init>()>-><org.springframework.http.converter.feed.AbstractWireFeedHttpMessageConverter: void <init>(org.springframework.http.MediaType)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: org.springframework.boot.info.GitProperties gitProperties()>
<java.util.AbstractSet: int hashCode()>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><sun.security.x509.RDN: int hashCode()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter: void <init>(org.springframework.boot.autoconfigure.web.ResourceProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.beans.factory.ListableBeanFactory,org.springframework.beans.factory.ObjectProvider,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$1: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory,org.springframework.core.ResolvableType)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void main(java.lang.String[])>-><com.favorites.FavoritesApplication: void <init>()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider: java.lang.Object getIfAvailable()>-><org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Optional access$600(org.springframework.beans.factory.support.DefaultListableBeanFactory,org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String,java.lang.Object[])>
<org.thymeleaf.TemplateEngine: java.util.Set getDialects()>-><java.util.LinkedHashSet: void <init>(int)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: void <init>(org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties,org.thymeleaf.spring5.SpringTemplateEngine)>
<java.lang.reflect.Field: sun.reflect.generics.factory.GenericsFactory getFactory()>-><sun.reflect.generics.factory.CoreReflectionFactory: sun.reflect.generics.factory.CoreReflectionFactory make(java.lang.reflect.GenericDeclaration,sun.reflect.generics.scope.Scope)>
<org.springframework.mock.web.MockHttpSession: void <init>(javax.servlet.ServletContext)>-><org.springframework.mock.web.MockHttpSession: void <init>(javax.servlet.ServletContext,java.lang.String)>
<org.springframework.web.servlet.handler.AbstractUrlHandlerMapping: void <init>()>-><java.util.LinkedHashMap: void <init>()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.net.URL: int hashCode()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><org.springframework.beans.factory.config.RuntimeBeanReference: int hashCode()>
<org.springframework.boot.autoconfigure.web.format.WebConversionService: void <init>(java.lang.String)>-><org.springframework.boot.autoconfigure.web.format.WebConversionService: void addFormatters()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.mail.javamail.JavaMailSenderImpl)>-><java.util.HashMap: boolean isEmpty()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration: org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver defaultTemplateResolver()>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setPrefix(java.lang.String)>
<javax.security.auth.Subject: int hashCode()>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: org.springframework.core.io.Resource getResourceByPath(java.lang.String)>-><org.springframework.context.support.GenericApplicationContext: java.lang.ClassLoader getClassLoader()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setSimpleUrlHandlerMapping(org.springframework.web.servlet.handler.SimpleUrlHandlerMapping)>
<org.springframework.http.converter.feed.AtomFeedHttpMessageConverter: void <init>()>-><org.springframework.http.converter.feed.AbstractWireFeedHttpMessageConverter: void <init>(org.springframework.http.MediaType)>
<java.lang.Iterable: void forEach(java.util.function.Consumer)>-><java.util.JumboEnumSet: java.util.Iterator iterator()>
<org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>-><java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.security.auth.Subject: java.lang.String toString()>
<org.springframework.boot.web.servlet.context.XmlServletWebServerApplicationContext: void <init>()>-><org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: void <init>()>
<javax.security.auth.Subject: java.security.AccessControlContext createContext(javax.security.auth.Subject,java.security.AccessControlContext)>-><java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.web.servlet.support.ErrorPageFilterConfiguration: org.springframework.boot.web.servlet.support.ErrorPageFilter errorPageFilter()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<org.springframework.mock.web.MockServletContext: java.lang.String getResourceLocation(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientRegistrationRepositoryConfiguration: void <init>(org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties)>-><org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setContentNegotiationManager(org.springframework.web.accept.ContentNegotiationManager)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: void setMappingJackson2HttpMessageConverter(org.springframework.http.converter.json.MappingJackson2HttpMessageConverter)>
<net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested: boolean equals(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.core.convert.TypeDescriptor$AnnotatedElementAdapter: java.lang.String toString()>
<org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration: org.springframework.web.bind.support.ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer()>-><org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.Object getBean(java.lang.Class)>
<org.springframework.boot.util.LambdaSafe$LambdaSafeCallback: void <init>(java.lang.Class,java.lang.Object,java.lang.Object[])>-><org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>-><org.hibernate.QueryException: java.lang.String getMessage()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.hibernate.boot.model.relational.Namespace$Name: java.lang.String toString()>
<java.util.AbstractList: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: void <init>(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: javax.mail.Session getSession()>
<org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers: org.springframework.cache.CacheManager customize(org.springframework.cache.CacheManager)>-><org.springframework.boot.util.LambdaSafe$Callbacks: void invoke(java.util.function.Consumer)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.jsoup.select.Evaluator$AllElements: java.lang.String toString()>
<java.util.Objects: int hashCode(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable: int hashCode()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: int hashCode()>
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>-><java.io.File: java.lang.String getPath()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration: java.util.Properties loadFrom(org.springframework.core.io.Resource,java.lang.String,java.nio.charset.Charset)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl: java.lang.Boolean getEnabled()>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><groovyjarjarantlr.ANTLRHashString: int hashCode()>
<org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers: void <init>(java.util.Collection)>-><java.util.Collections: java.util.List emptyList()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><synthetic.method.SingletonFactory: org.thymeleaf.spring5.SpringWebFluxTemplateEngine getISpringWebFluxTemplateEngine()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForLowerBoundWildcard: int hashCode()>
<org.springframework.boot.task.TaskExecutorBuilder: org.springframework.boot.task.TaskExecutorBuilder maxPoolSize(int)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springframework.boot.autoconfigure.jms.artemis.ArtemisXAConnectionFactoryConfiguration: org.apache.activemq.artemis.jms.client.ActiveMQXAConnectionFactory nonXaJmsConnectionFactory(org.springframework.beans.factory.ListableBeanFactory,org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties)>-><org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryFactory: void <init>(org.springframework.beans.factory.ListableBeanFactory,org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties)>
<com.favorites.FavoritesApplication: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setConnectionTimeout(java.time.Duration)>
<java.lang.reflect.Field: int hashCode()>-><java.lang.Class: java.lang.String getName()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder jacksonObjectMapperBuilder(java.util.List)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.reflection.CachedClass: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)>-><org.springframework.util.StringUtils: java.lang.String collectionToCommaDelimitedString(java.util.Collection)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration: void <init>(org.springframework.beans.factory.ObjectProvider)>
<org.codehaus.groovy.util.ListHashMap: java.lang.Object remove(java.lang.Object)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.http.HttpStatus: java.lang.String toString()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: int hashCode()>
<org.springframework.boot.web.client.ClientHttpRequestFactorySupplier: org.springframework.http.client.ClientHttpRequestFactory get()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<org.springframework.boot.info.GitProperties: void coercePropertyToEpoch(java.util.Properties,java.lang.String)>-><java.util.Properties: java.lang.String getProperty(java.lang.String)>
<org.springframework.context.support.AbstractApplicationContext: void doClose()>-><org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext: void onClose()>
<org.springframework.boot.autoconfigure.hazelcast.HazelcastInstanceFactory: void <init>(org.springframework.core.io.Resource)>-><java.lang.Object: void <init>()>
<javax.security.auth.Subject: int hashCode()>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<nz.net.ultraq.thymeleaf.LayoutDialect: void <init>(nz.net.ultraq.thymeleaf.decorators.SortingStrategy)>-><org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>
<java.security.AccessControlContext: boolean equalLimitedContext(java.security.AccessControlContext)>-><java.security.AccessControlContext: boolean equalLimitedContext(java.security.AccessControlContext)>
<org.springframework.context.annotation.MBeanExportConfiguration: void setupDomain(org.springframework.jmx.export.annotation.AnnotationMBeanExporter,org.springframework.core.annotation.AnnotationAttributes)>-><org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void setDefaultDomain(java.lang.String)>
<nz.net.ultraq.thymeleaf.LayoutDialect: void <init>(nz.net.ultraq.thymeleaf.decorators.SortingStrategy)>-><nz.net.ultraq.thymeleaf.LayoutDialect: groovy.lang.MetaClass $getStaticMetaClass()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.Formatter$FormatSpecifier: java.lang.String toString()>
<org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders: org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider getProvider(java.lang.String,org.springframework.core.env.Environment,java.lang.ClassLoader,org.springframework.core.io.ResourceLoader)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration: void <init>(org.springframework.transaction.PlatformTransactionManager)>
<groovyjarjarasm.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration: void applyProperties(org.springframework.mail.javamail.JavaMailSenderImpl)>-><org.springframework.boot.autoconfigure.mail.MailProperties: java.lang.String getHost()>
<java.text.AttributeEntry: int hashCode()>-><javax.security.auth.Subject: int hashCode()>
<org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor openEntityManagerInViewInterceptor()>-><org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog: void warn(java.lang.Object)>
<org.springframework.http.converter.FormHttpMessageConverter: void setPartConverters(java.util.List)>-><org.springframework.util.Assert: void notEmpty(java.util.Collection,java.lang.String)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><javax.security.auth.Subject: java.lang.String toString()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.codehaus.groovy.ast.GenericsType$GenericsTypeName: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer: org.springframework.web.accept.ContentNegotiationManager buildContentNegotiationManager()>-><org.springframework.web.accept.ContentNegotiationManagerFactoryBean: org.springframework.web.accept.ContentNegotiationManager build()>
<org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration: void <init>(org.springframework.boot.autoconfigure.jersey.JerseyProperties,org.glassfish.jersey.server.ResourceConfig,org.springframework.beans.factory.ObjectProvider)>-><org.springframework.boot.autoconfigure.jersey.JerseyProperties: void <init>()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport$NoOpValidator: void <init>(org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport$1)>-><org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport$NoOpValidator: void <init>()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.apache.commons.lang3.JavaVersion: java.lang.String toString()>
<org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration: org.thymeleaf.spring5.view.ThymeleafViewResolver thymeleafViewResolver()>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: void setCharacterEncoding(java.lang.String)>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.web.client.RestTemplateBuilder: void <init>(org.springframework.boot.web.client.RestTemplateCustomizer[])>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<java.util.AbstractList: int hashCode()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForGenericArray: int hashCode()>
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionWrapper: void setProperty(java.lang.String,java.lang.Object)>-><javax.security.auth.Subject: java.lang.String toString()>
<org.thymeleaf.spring5.SpringTemplateEngine: void setRenderHiddenMarkersBeforeCheckboxes(boolean)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.springframework.boot.autoconfigure.couchbase.CouchbaseConfiguration: com.couchbase.client.java.env.DefaultCouchbaseEnvironment$Builder initializeEnvironmentBuilder(org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties)>-><com.couchbase.client.core.env.KeyValueServiceConfig: com.couchbase.client.core.env.KeyValueServiceConfig create(int)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><javax.security.auth.Subject: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType: boolean equals(java.lang.Object)>
<org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping: void <init>(org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders,org.springframework.context.ApplicationContext,java.util.Optional,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration: void <init>(org.springframework.beans.factory.ObjectProvider)>
<java.util.AbstractSet: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.boot.autoconfigure.template.AbstractTemplateViewResolverProperties: void applyToMvcViewResolver(java.lang.Object)>-><org.springframework.boot.autoconfigure.template.AbstractViewResolverProperties: org.springframework.util.MimeType getContentType()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><java.util.AbstractMap: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.autoconfigure.http.HttpMessageConverters: void reorderXmlConvertersToEnd(java.util.List)>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: net.bytebuddy.description.type.TypeDescription asErasure()>-><net.bytebuddy.pool.TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterizedReceiverType$TypeArgumentList$AnnotatedTypeVariable: net.bytebuddy.description.type.TypeList$Generic getUpperBounds()>
<javax.security.auth.Subject: java.lang.String toString(boolean)>-><org.springframework.core.convert.support.GenericConversionService: java.lang.String toString()>
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter requestMappingHandlerAdapter()>-><org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer: java.util.List getCallableInterceptors()>
<com.favorites.FavoritesApplication: void initBean_synthetic()>-><org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration: org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer standardJacksonObjectMapperBuilderCustomizer(org.springframework.context.ApplicationContext,org.springframework.boot.autoconfigure.jackson.JacksonProperties)>
