<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setJobLevel(org.javaboy.vhr.model.JobLevel)>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setpensionbase(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getaddress()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getName()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getworkid()>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsWithOutChildren()>-><synthetic.method.datatable.DEPARTMENT: java.lang.Boolean getenabled()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.util.Date getendcontract()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getengageform()>
<synthetic.method.HrMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Hr)>-><org.javaboy.vhr.model.Hr: java.lang.String getRemark()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: org.javaboy.vhr.model.Politicsstatus getpoliticsstatus()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.util.Date getnotworkdate()>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsWithOutChildren()>-><org.javaboy.vhr.model.Department: void setDepPath(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.util.Date getconversiontime()>
<synthetic.method.HrMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Hr)>-><org.javaboy.vhr.model.Hr: java.lang.String getAddress()>
<synthetic.method.HrRoleMapperImpl: java.lang.Integer addRole(java.lang.Integer,java.lang.Integer[])>-><synthetic.method.datatable.HRROLE: void setrid(java.lang.Integer)>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><org.javaboy.vhr.model.Salary: void <init>()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setaddress(java.lang.String)>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><org.javaboy.vhr.model.Salary: void setBonus(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setemail(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getspecialty()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setEmail(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getjoblevelid()>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><org.javaboy.vhr.model.Salary: void setLunchSalary(java.lang.Integer)>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><org.javaboy.vhr.model.Menu: void setId(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setNationId(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: org.javaboy.vhr.model.JobLevel getjoblevel()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getgender()>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><org.javaboy.vhr.model.Menu: void setRoles(java.util.List)>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsWithOutChildren()>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getid()>
<synthetic.method.datatable.EMPLOYEE: void <init>()>-><org.javaboy.vhr.model.Politicsstatus: void <init>()>
<synthetic.method.HrMapperImpl: org.javaboy.vhr.model.Hr selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.HR: java.lang.Integer getid()>
<synthetic.method.HrMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Hr)>-><synthetic.method.datatable.HR: void setaddress(java.lang.String)>
<synthetic.method.JobLevelMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.JobLevel)>-><org.javaboy.vhr.model.JobLevel: java.lang.String getName()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setjoblevelid(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setWorkID(java.lang.String)>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getAddress()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setName(java.lang.String)>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsWithOutChildren()>-><org.javaboy.vhr.model.Department: void setEnabled(java.lang.Boolean)>
<synthetic.method.datatable.POSITION: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><org.javaboy.vhr.model.Salary: void setPensionPer(java.lang.Float)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: org.javaboy.vhr.model.Politicsstatus getpoliticsstatus()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrs(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.HR: java.lang.String getuserface()>
<synthetic.method.datatable.SALARY: void <clinit>()>-><synthetic.method.datatable.SALARY: void <init>()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.Double getContractTerm()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setBirthday(java.util.Date)>
<synthetic.method.PoliticsstatusMapperImpl: java.util.List getAllPoliticsstatus()>-><synthetic.method.datatable.POLITICSSTATUS: java.lang.String getname()>
<synthetic.method.PositionMapperImpl: java.util.List getAllPositions()>-><org.javaboy.vhr.model.Position: void setEnabled(java.lang.Boolean)>
<synthetic.method.EmployeeMapperImpl: java.lang.Integer updateEmployeeSalaryById(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPSALARY: void seteid(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getNativePlace()>
<synthetic.method.NationMapperImpl: java.util.List getAllNations()>-><org.javaboy.vhr.model.Nation: void setId(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getname()>
<synthetic.method.JobLevelMapperImpl: int insertSelective(org.javaboy.vhr.model.JobLevel)>-><synthetic.method.datatable.JOBLEVEL: void setcreatedate(java.util.Date)>
<synthetic.method.RoleMapperImpl: java.util.List getAllRoles()>-><org.javaboy.vhr.model.Role: void <init>()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.lang.String gettiptopdegree()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setGender(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setNationId(java.lang.Integer)>
<synthetic.method.datatable.EMPSALARY: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><org.javaboy.vhr.model.Hr: void setUserface(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setDepartment(org.javaboy.vhr.model.Department)>
<synthetic.method.PositionMapperImpl: java.util.List getAllPositions()>-><org.javaboy.vhr.model.Position: void <init>()>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><synthetic.method.datatable.MENU: java.lang.Integer getid()>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void settrafficsalary(java.lang.Integer)>
<synthetic.method.PositionMapperImpl: java.util.List getAllPositions()>-><synthetic.method.datatable.POSITION: java.lang.Integer getid()>
<synthetic.method.datatable.EMPLOYEE: void <init>()>-><org.javaboy.vhr.model.Department: void <init>()>
<synthetic.method.MenuMapperImpl: java.util.List getMidsByRid(java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getWorkState()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setNation(org.javaboy.vhr.model.Nation)>
<synthetic.method.HrMapperImpl: java.util.List getAllHrs(java.lang.Integer,java.lang.String)>-><org.javaboy.vhr.model.Hr: void setUserface(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setPosId(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setNationId(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setNativePlace(java.lang.String)>
<synthetic.method.datatable.EMPLOYEE: void <init>()>-><java.util.Date: void <init>()>
<synthetic.method.NationMapperImpl: java.util.List getAllNations()>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setwedlock(java.lang.String)>
<synthetic.method.PositionMapperImpl: int deleteByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.POSITION: synthetic.method.datatable.POSITION getInstance()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setidcard(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getEmail()>
<synthetic.method.NationMapperImpl: java.util.List getAllNations()>-><org.javaboy.vhr.model.Nation: void <init>()>
<synthetic.method.HrMapperImpl: java.lang.Integer updateUserface(java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.HR: void setuserface(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setworkage(java.lang.Integer)>
<synthetic.method.HrMapperImpl: org.javaboy.vhr.model.Hr selectByPrimaryKey(java.lang.Integer)>-><org.javaboy.vhr.model.Hr: void setRemark(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setdepartmentid(java.lang.Integer)>
<synthetic.method.MenuMapperImpl: java.util.List getMidsByRid(java.lang.Integer)>-><synthetic.method.datatable.MENUROLE: java.lang.Integer[] getmid()>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><synthetic.method.datatable.MENU: java.lang.String geticoncls()>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsByParentId(java.lang.Integer)>-><synthetic.method.datatable.DEPARTMENT: java.lang.String getdeppath()>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setbasicsalary(java.lang.Integer)>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: synthetic.method.datatable.SALARY getInstance()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setnationid(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setbirthday(java.util.Date)>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsWithOutChildren()>-><synthetic.method.datatable.DEPARTMENT: java.lang.Integer getparentid()>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsWithOutChildren()>-><synthetic.method.datatable.DEPARTMENT: java.lang.Boolean getisparent()>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><synthetic.method.datatable.SALARY: java.lang.Integer getlunchsalary()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setbirthday(java.util.Date)>
<synthetic.method.datatable.JOBLEVEL: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.Integer getPoliticId()>
<synthetic.method.datatable.NATION: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setContractTerm(java.lang.Double)>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsWithOutChildren()>-><org.javaboy.vhr.model.Department: void <init>()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setengageform(java.lang.String)>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.Integer getId()>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.Integer getPensionBase()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getEngageForm()>
<synthetic.method.RoleMapperImpl: int deleteByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.ROLE: java.lang.Integer getid()>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><org.javaboy.vhr.model.Menu: void <init>()>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.Integer getMedicalBase()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setidcard(java.lang.String)>
<synthetic.method.datatable.ROLE: void <clinit>()>-><synthetic.method.datatable.ROLE: void <init>()>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><synthetic.method.datatable.MENU: synthetic.method.datatable.MENU getInstance()>
<synthetic.method.datatable.EMPLOYEE: void <clinit>()>-><synthetic.method.datatable.EMPLOYEE: void <init>()>
<synthetic.method.HrMapperImpl: org.javaboy.vhr.model.Hr selectByPrimaryKey(java.lang.Integer)>-><org.javaboy.vhr.model.Hr: void <init>()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setconversiontime(java.util.Date)>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><synthetic.method.datatable.MENU: java.lang.String getcomponent()>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><org.javaboy.vhr.model.Menu: void setComponent(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.util.Date getNotWorkDate()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.util.Date getNotWorkDate()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getphone()>
<synthetic.method.JobLevelMapperImpl: int insertSelective(org.javaboy.vhr.model.JobLevel)>-><org.javaboy.vhr.model.JobLevel: java.lang.Boolean getEnabled()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setWedlock(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getidcard()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setDepartmentId(java.lang.Integer)>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><synthetic.method.datatable.SALARY: java.lang.Integer getbonus()>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.Integer getBasicSalary()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setphone(java.lang.String)>
<synthetic.method.RoleMapperImpl: int deleteByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.ROLE: synthetic.method.datatable.ROLE getInstance()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrs(java.lang.Integer,java.lang.String)>-><org.javaboy.vhr.model.Hr: void <init>()>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsByParentId(java.lang.Integer)>-><org.javaboy.vhr.model.Department: void setDepPath(java.lang.String)>
<synthetic.method.HrMapperImpl: org.javaboy.vhr.model.Hr selectByPrimaryKey(java.lang.Integer)>-><org.javaboy.vhr.model.Hr: void setPhone(java.lang.String)>
<synthetic.method.JobLevelMapperImpl: java.util.List getAllJobLevels()>-><synthetic.method.datatable.JOBLEVEL: java.lang.String gettitlelevel()>
<synthetic.method.MailSendLogMapperImpl: java.lang.Integer insert(org.javaboy.vhr.model.MailSendLog)>-><org.javaboy.vhr.model.MailSendLog: java.util.Date getCreateTime()>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><org.javaboy.vhr.model.Salary: void setPensionBase(java.lang.Integer)>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><synthetic.method.datatable.HR: java.lang.String gettelephone()>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><synthetic.method.datatable.SALARY: java.lang.Integer getallsalary()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrs(java.lang.Integer,java.lang.String)>-><org.javaboy.vhr.model.Hr: void setAddress(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.util.Date getconversiontime()>
<synthetic.method.HrMapperImpl: int deleteByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.HR: synthetic.method.datatable.HR getInstance()>
<synthetic.method.MailSendLogMapperImpl: java.lang.Integer insert(org.javaboy.vhr.model.MailSendLog)>-><synthetic.method.datatable.MAILSENDLOG: synthetic.method.datatable.MAILSENDLOG getInstance()>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><org.javaboy.vhr.model.Menu: void setRoles(java.util.List)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setSchool(java.lang.String)>
<synthetic.method.datatable.ROLE: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.Float getMedicalPer()>
<org.javaboy.vhr.service.MenuService: java.util.List getAllMenusWithRole()>-><synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.util.Date getBeginContract()>
<synthetic.method.MailSendLogMapperImpl: java.lang.Integer updateMailSendLogStatus(java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.MAILSENDLOG: void setstatus(java.lang.Integer)>
<synthetic.method.SalaryMapperImpl: int deleteByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.SALARY: synthetic.method.datatable.SALARY getInstance()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><synthetic.method.datatable.HR: java.lang.String getuserface()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setgender(java.lang.String)>
<synthetic.method.PositionMapperImpl: java.util.List getAllPositions()>-><org.javaboy.vhr.model.Position: void setId(java.lang.Integer)>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setlunchsalary(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setbegindate(java.util.Date)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getName()>
<synthetic.method.MailSendLogMapperImpl: java.lang.Integer insert(org.javaboy.vhr.model.MailSendLog)>-><synthetic.method.datatable.MAILSENDLOG: void setroutekey(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setWedlock(java.lang.String)>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><synthetic.method.datatable.SALARY: java.lang.Float getmedicalper()>
<synthetic.method.PositionMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Position)>-><synthetic.method.datatable.POSITION: void setcreatedate(java.util.Date)>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><synthetic.method.datatable.MENU: java.lang.String getpath()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setid(java.lang.Integer)>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><synthetic.method.datatable.SALARY: java.lang.Integer getmedicalbase()>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><synthetic.method.datatable.SALARY: java.lang.Float getpensionper()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.util.Date getendcontract()>
<synthetic.method.datatable.MENU: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.EmployeeMapperImpl: int deleteByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getid()>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><org.javaboy.vhr.model.Menu: void setParentId(java.lang.Integer)>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><org.javaboy.vhr.model.Menu: void setMeta(org.javaboy.vhr.model.Meta)>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setmedicalper(java.lang.Float)>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><synthetic.method.datatable.SALARY: java.lang.Float getaccumulationfundper()>
<synthetic.method.PositionMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Position)>-><org.javaboy.vhr.model.Position: java.lang.Boolean getEnabled()>
<synthetic.method.PoliticsstatusMapperImpl: java.util.List getAllPoliticsstatus()>-><org.javaboy.vhr.model.Politicsstatus: void setName(java.lang.String)>
<synthetic.method.JobLevelMapperImpl: java.lang.Integer deleteJobLevelsByIds(java.lang.Integer[])>-><synthetic.method.datatable.JOBLEVEL: java.lang.Integer[] getid()>
<synthetic.method.JobLevelMapperImpl: int deleteByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.JOBLEVEL: java.lang.Integer[] getid()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getSchool()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: synthetic.method.datatable.EMPLOYEE getInstance()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getWedlock()>
<synthetic.method.PoliticsstatusMapperImpl: java.util.List getAllPoliticsstatus()>-><synthetic.method.datatable.POLITICSSTATUS: synthetic.method.datatable.POLITICSSTATUS getInstance()>
<synthetic.method.JobLevelMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.JobLevel)>-><org.javaboy.vhr.model.JobLevel: java.util.Date getCreateDate()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getidcard()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: org.javaboy.vhr.model.Position getposition()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getpoliticid()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setId(java.lang.Integer)>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><synthetic.method.datatable.HR: java.lang.String getname()>
<synthetic.method.MailSendLogMapperImpl: java.lang.Integer insert(org.javaboy.vhr.model.MailSendLog)>-><org.javaboy.vhr.model.MailSendLog: java.lang.String getRouteKey()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: org.javaboy.vhr.model.Salary getsalary()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getname()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setnationid(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setId(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getphone()>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><synthetic.method.datatable.SALARY: java.lang.Integer getid()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.util.Date getBirthday()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getdepartmentid()>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setcreatedate(java.util.Date)>
<synthetic.method.datatable.MAILSENDLOG: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><org.javaboy.vhr.model.Salary: void setBasicSalary(java.lang.Integer)>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><synthetic.method.datatable.MENU: java.lang.String geturl()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setAddress(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getwedlock()>
<synthetic.method.datatable.MENUROLE: void <clinit>()>-><synthetic.method.datatable.MENUROLE: void <init>()>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><org.javaboy.vhr.model.Menu: void setEnabled(java.lang.Boolean)>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setnativeplace(java.lang.String)>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setname(java.lang.String)>
<synthetic.method.HrMapperImpl: java.util.List getAllHrs(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.HR: java.lang.String getaddress()>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><org.javaboy.vhr.model.Salary: void setId(java.lang.Integer)>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><org.javaboy.vhr.model.Hr: void setPassword(java.lang.String)>
<synthetic.method.datatable.HRROLE: void <clinit>()>-><synthetic.method.datatable.HRROLE: void <init>()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getWorkID()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setPhone(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setPosition(org.javaboy.vhr.model.Position)>
<synthetic.method.MailSendLogMapperImpl: java.lang.Integer updateMailSendLogStatus(java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.MAILSENDLOG: synthetic.method.datatable.MAILSENDLOG getInstance()>
<synthetic.method.HrMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Hr)>-><synthetic.method.datatable.HR: void setenabled(java.lang.Boolean)>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getSpecialty()>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setaccumulationfundbase(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setpoliticid(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setDepartment(org.javaboy.vhr.model.Department)>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><org.javaboy.vhr.model.Hr: void setName(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setbegincontract(java.util.Date)>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.Integer getAccumulationFundBase()>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><synthetic.method.datatable.SALARY: java.util.Date getcreatedate()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrs(java.lang.Integer,java.lang.String)>-><org.javaboy.vhr.model.Hr: void setEnabled(java.lang.Boolean)>
<synthetic.method.EmployeeMapperImpl: java.lang.Integer maxWorkID()>-><synthetic.method.datatable.EMPLOYEE: synthetic.method.datatable.EMPLOYEE getInstance()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setConversionTime(java.util.Date)>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><synthetic.method.datatable.HR: java.lang.Integer get!()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getemail()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><synthetic.method.datatable.HR: java.lang.String getremark()>
<synthetic.method.PositionMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Position)>-><org.javaboy.vhr.model.Position: java.util.Date getCreateDate()>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.Float getAccumulationFundPer()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.util.Date getconversiontime()>
<synthetic.method.JobLevelMapperImpl: java.util.List getAllJobLevels()>-><synthetic.method.datatable.JOBLEVEL: java.util.Date getcreatedate()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getIdCard()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.util.Date getbirthday()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrs(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.HR: java.lang.Integer getid()>
<synthetic.method.JobLevelMapperImpl: int insertSelective(org.javaboy.vhr.model.JobLevel)>-><org.javaboy.vhr.model.JobLevel: java.util.Date getCreateDate()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getaddress()>
<synthetic.method.JobLevelMapperImpl: int insertSelective(org.javaboy.vhr.model.JobLevel)>-><org.javaboy.vhr.model.JobLevel: java.lang.String getName()>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsByParentId(java.lang.Integer)>-><org.javaboy.vhr.model.Department: void setResult(java.lang.Integer)>
<synthetic.method.HrMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Hr)>-><synthetic.method.datatable.HR: void setremark(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setPosId(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setId(java.lang.Integer)>
<synthetic.method.JobLevelMapperImpl: java.util.List getAllJobLevels()>-><org.javaboy.vhr.model.JobLevel: void setName(java.lang.String)>
<synthetic.method.MenuMapperImpl: java.util.List getMidsByRid(java.lang.Integer)>-><synthetic.method.datatable.MENUROLE: java.lang.Integer getrid()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrs(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.HR: java.lang.String getusername()>
<synthetic.method.datatable.POSITION: void <clinit>()>-><synthetic.method.datatable.POSITION: void <init>()>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setname(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setpoliticid(java.lang.Integer)>
<synthetic.method.datatable.POSITION: void <init>()>-><java.util.Date: void <init>()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.util.Date getnotworkdate()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String gettiptopdegree()>
<synthetic.method.PositionMapperImpl: java.util.List getAllPositions()>-><synthetic.method.datatable.POSITION: java.lang.Boolean getenabled()>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setcreatedate(java.util.Date)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setSpecialty(java.lang.String)>
<synthetic.method.SalaryMapperImpl: int deleteByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.SALARY: java.lang.Integer getid()>
<org.javaboy.vhr.model.Nation: void setName(java.lang.String)>-><java.lang.String: java.lang.String trim()>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.Float getPensionPer()>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><synthetic.method.datatable.MENU: java.lang.Boolean getenabled()>
<synthetic.method.HrMapperImpl: org.javaboy.vhr.model.Hr selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.HR: java.lang.String getuserface()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setPoliticsstatus(org.javaboy.vhr.model.Politicsstatus)>
<synthetic.method.HrMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Hr)>-><synthetic.method.datatable.HR: java.lang.Integer getid()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getpoliticid()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setEndContract(java.util.Date)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getposid()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setBeginContract(java.util.Date)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setPosition(org.javaboy.vhr.model.Position)>
<synthetic.method.JobLevelMapperImpl: java.util.List getAllJobLevels()>-><org.javaboy.vhr.model.JobLevel: void <init>()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.Integer getPoliticId()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getidcard()>
<synthetic.method.HrMapperImpl: java.lang.Integer updatePasswd(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.HR: void setpassword(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getschool()>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsWithOutChildren()>-><org.javaboy.vhr.model.Department: void setParentId(java.lang.Integer)>
<synthetic.method.PositionMapperImpl: int insertSelective(org.javaboy.vhr.model.Position)>-><synthetic.method.datatable.POSITION: void setid(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getgender()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setNation(org.javaboy.vhr.model.Nation)>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><synthetic.method.datatable.MENU: java.lang.String geturl()>
<synthetic.method.RoleMapperImpl: java.util.List getAllRoles()>-><synthetic.method.datatable.ROLE: java.lang.String getname()>
<synthetic.method.HrMapperImpl: java.lang.Integer updatePasswd(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.HR: java.lang.Integer getid()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setendcontract(java.util.Date)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getnationid()>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><org.javaboy.vhr.model.Menu: void setPath(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getAddress()>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><synthetic.method.datatable.MENU: java.lang.Integer getparentid()>
<synthetic.method.MailSendLogMapperImpl: java.lang.Integer insert(org.javaboy.vhr.model.MailSendLog)>-><synthetic.method.datatable.MAILSENDLOG: void setempid(java.lang.Integer)>
<synthetic.method.datatable.MENU: void <init>()>-><org.javaboy.vhr.model.Meta: void <init>()>
<synthetic.method.NationMapperImpl: java.util.List getAllNations()>-><synthetic.method.datatable.NATION: java.lang.String getname()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getEngageForm()>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.Integer getTrafficSalary()>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.Float getAccumulationFundPer()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void <init>()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setschool(java.lang.String)>
<synthetic.method.JobLevelMapperImpl: java.lang.Integer deleteJobLevelsByIds(java.lang.Integer[])>-><synthetic.method.datatable.JOBLEVEL: synthetic.method.datatable.JOBLEVEL getInstance()>
<synthetic.method.JobLevelMapperImpl: int deleteByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.JOBLEVEL: synthetic.method.datatable.JOBLEVEL getInstance()>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenus()>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.JobLevelMapperImpl: int insertSelective(org.javaboy.vhr.model.JobLevel)>-><synthetic.method.datatable.JOBLEVEL: synthetic.method.datatable.JOBLEVEL getInstance()>
<synthetic.method.HrMapperImpl: org.javaboy.vhr.model.Hr selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.HR: java.lang.String getname()>
<synthetic.method.JobLevelMapperImpl: int insertSelective(org.javaboy.vhr.model.JobLevel)>-><synthetic.method.datatable.JOBLEVEL: void settitlelevel(java.lang.String)>
<synthetic.method.HrMapperImpl: org.javaboy.vhr.model.Hr selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.HR: java.lang.String getremark()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void <init>()>
<synthetic.method.HrMapperImpl: org.javaboy.vhr.model.Hr selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.HR: java.lang.Boolean getenabled()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setIdCard(java.lang.String)>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsByParentId(java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getWorkState()>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setaccumulationfundper(java.lang.Float)>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.util.Date getConversionTime()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setEngageForm(java.lang.String)>
<synthetic.method.HrMapperImpl: org.javaboy.vhr.model.Hr selectByPrimaryKey(java.lang.Integer)>-><org.javaboy.vhr.model.Hr: void setUserface(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.util.Date getbirthday()>
<synthetic.method.HrRoleMapperImpl: void deleteByHrid(java.lang.Integer)>-><synthetic.method.datatable.HRROLE: java.lang.Integer gethrid()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setspecialty(java.lang.String)>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><org.javaboy.vhr.model.Menu: void setIconCls(java.lang.String)>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setlunchsalary(java.lang.Integer)>
<synthetic.method.datatable.MENUROLE: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.HrRoleMapperImpl: java.lang.Integer addRole(java.lang.Integer,java.lang.Integer[])>-><synthetic.method.datatable.HRROLE: void sethrid(java.lang.Integer)>
<synthetic.method.HrMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Hr)>-><org.javaboy.vhr.model.Hr: java.lang.String getUsername()>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsWithOutChildren()>-><synthetic.method.datatable.DEPARTMENT: java.lang.Integer getid()>
<synthetic.method.JobLevelMapperImpl: java.util.List getAllJobLevels()>-><org.javaboy.vhr.model.JobLevel: void setId(java.lang.Integer)>
<synthetic.method.PositionMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Position)>-><synthetic.method.datatable.POSITION: void setname(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setDepartment(org.javaboy.vhr.model.Department)>
<synthetic.method.datatable.EMPSALARY: void <clinit>()>-><synthetic.method.datatable.EMPSALARY: void <init>()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setSalary(org.javaboy.vhr.model.Salary)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setBeginDate(java.util.Date)>
<synthetic.method.HrMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Hr)>-><synthetic.method.datatable.HR: void setuserface(java.lang.String)>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.Integer getLunchSalary()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setConversionTime(java.util.Date)>
<synthetic.method.HrMapperImpl: java.util.List getAllHrs(java.lang.Integer,java.lang.String)>-><org.javaboy.vhr.model.Hr: void setUsername(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getNativePlace()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setPhone(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getnationid()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getwedlock()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getnationid()>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsWithOutChildren()>-><org.javaboy.vhr.model.Department: void setName(java.lang.String)>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsByParentId(java.lang.Integer)>-><synthetic.method.datatable.DEPARTMENT: java.lang.Boolean getenabled()>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><org.javaboy.vhr.model.Menu: void setName(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setBirthday(java.util.Date)>
<synthetic.method.JobLevelMapperImpl: int insertSelective(org.javaboy.vhr.model.JobLevel)>-><synthetic.method.datatable.JOBLEVEL: void setname(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setendcontract(java.util.Date)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setNotWorkDate(java.util.Date)>
<synthetic.method.RoleMapperImpl: java.util.List getAllRoles()>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getworkage()>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsByParentId(java.lang.Integer)>-><synthetic.method.datatable.DEPARTMENT: synthetic.method.datatable.DEPARTMENT getInstance()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setworkid(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getdepartmentid()>
<synthetic.method.HrMapperImpl: org.javaboy.vhr.model.Hr selectByPrimaryKey(java.lang.Integer)>-><org.javaboy.vhr.model.Hr: void setName(java.lang.String)>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><synthetic.method.datatable.HR: java.lang.Integer getid()>
<synthetic.method.HrMapperImpl: org.javaboy.vhr.model.Hr selectByPrimaryKey(java.lang.Integer)>-><org.javaboy.vhr.model.Hr: void setUsername(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setEngageForm(java.lang.String)>
<synthetic.method.HrMapperImpl: org.javaboy.vhr.model.Hr selectByPrimaryKey(java.lang.Integer)>-><org.javaboy.vhr.model.Hr: void setId(java.lang.Integer)>
<synthetic.method.HrMapperImpl: org.javaboy.vhr.model.Hr selectByPrimaryKey(java.lang.Integer)>-><org.javaboy.vhr.model.Hr: void setEnabled(java.lang.Boolean)>
<synthetic.method.HrMapperImpl: java.util.List getAllHrs(java.lang.Integer,java.lang.String)>-><org.javaboy.vhr.model.Hr: void setId(java.lang.Integer)>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.Integer getMedicalBase()>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><org.javaboy.vhr.model.Menu: void setChildren(java.util.List)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.util.Date getnotworkdate()>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><synthetic.method.datatable.MENU: java.lang.Boolean getenabled()>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setaccumulationfundper(java.lang.Float)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setWorkID(java.lang.String)>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><synthetic.method.datatable.MENU: java.lang.String getcomponent()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setName(java.lang.String)>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><synthetic.method.datatable.SALARY: java.lang.Integer getpensionbase()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setspecialty(java.lang.String)>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setbasicsalary(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setemail(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setIdCard(java.lang.String)>
<synthetic.method.PositionMapperImpl: int insertSelective(org.javaboy.vhr.model.Position)>-><synthetic.method.datatable.POSITION: void setname(java.lang.String)>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.Integer getAllSalary()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: org.javaboy.vhr.model.Nation getnation()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><synthetic.method.datatable.HR: synthetic.method.datatable.HR getInstance()>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><synthetic.method.datatable.SALARY: synthetic.method.datatable.SALARY getInstance()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: synthetic.method.datatable.EMPLOYEE getInstance()>
<synthetic.method.PoliticsstatusMapperImpl: java.util.List getAllPoliticsstatus()>-><synthetic.method.datatable.POLITICSSTATUS: java.lang.Integer getid()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.util.Date getbegindate()>
<synthetic.method.PoliticsstatusMapperImpl: java.util.List getAllPoliticsstatus()>-><org.javaboy.vhr.model.Politicsstatus: void setId(java.lang.Integer)>
<synthetic.method.RoleMapperImpl: int insert(org.javaboy.vhr.model.Role)>-><synthetic.method.datatable.ROLE: void setnamezh(java.lang.String)>
<synthetic.method.RoleMapperImpl: java.util.List getAllRoles()>-><org.javaboy.vhr.model.Role: void setName(java.lang.String)>
<synthetic.method.PositionMapperImpl: int deleteByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.POSITION: java.lang.Integer getid()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.util.Date getBeginDate()>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.util.Date getCreateDate()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.Integer getJobLevelId()>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><synthetic.method.datatable.MENU: java.util.List getchildren()>
<synthetic.method.datatable.EMPLOYEE: void <init>()>-><org.javaboy.vhr.model.JobLevel: void <init>()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: org.javaboy.vhr.model.Nation getnation()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><org.javaboy.vhr.model.Hr: void <init>()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getPhone()>
<synthetic.method.HrMapperImpl: org.javaboy.vhr.model.Hr selectByPrimaryKey(java.lang.Integer)>-><org.javaboy.vhr.model.Hr: void setTelephone(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setWorkAge(java.lang.Integer)>
<synthetic.method.RoleMapperImpl: int insert(org.javaboy.vhr.model.Role)>-><synthetic.method.datatable.ROLE: void setid(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setNativePlace(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.lang.Integer maxWorkID()>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getmax workid()>
<synthetic.method.PoliticsstatusMapperImpl: java.util.List getAllPoliticsstatus()>-><org.javaboy.vhr.model.Politicsstatus: void <init>()>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><synthetic.method.datatable.MENU: java.lang.String getname()>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><synthetic.method.datatable.MENU: java.lang.String getname()>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><synthetic.method.datatable.SALARY: java.lang.Integer getbasicsalary()>
<synthetic.method.EmployeeMapperImpl: java.lang.Long getTotal(org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.lang.Long getcount()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.Integer getNationId()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getTiptopDegree()>
<synthetic.method.JobLevelMapperImpl: java.util.List getAllJobLevels()>-><org.javaboy.vhr.model.JobLevel: void setEnabled(java.lang.Boolean)>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.Integer getBonus()>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsByParentId(java.lang.Integer)>-><org.javaboy.vhr.model.Department: void setName(java.lang.String)>
<synthetic.method.MailSendLogMapperImpl: java.lang.Integer insert(org.javaboy.vhr.model.MailSendLog)>-><org.javaboy.vhr.model.MailSendLog: java.lang.Integer getEmpId()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setbegindate(java.util.Date)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.util.Date getbegindate()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setSalary(org.javaboy.vhr.model.Salary)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getworkstate()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setTiptopDegree(java.lang.String)>
<synthetic.method.datatable.POLITICSSTATUS: void <clinit>()>-><synthetic.method.datatable.POLITICSSTATUS: void <init>()>
<synthetic.method.MailSendLogMapperImpl: java.lang.Integer insert(org.javaboy.vhr.model.MailSendLog)>-><synthetic.method.datatable.MAILSENDLOG: void setcreatetime(java.util.Date)>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><org.javaboy.vhr.model.Hr: void setRoles(java.util.List)>
<synthetic.method.JobLevelMapperImpl: java.util.List getAllJobLevels()>-><synthetic.method.datatable.JOBLEVEL: java.lang.Boolean getenabled()>
<synthetic.method.PositionMapperImpl: int insertSelective(org.javaboy.vhr.model.Position)>-><synthetic.method.datatable.POSITION: synthetic.method.datatable.POSITION getInstance()>
<synthetic.method.JobLevelMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.JobLevel)>-><synthetic.method.datatable.JOBLEVEL: void setname(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: org.javaboy.vhr.model.Department getdepartment()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: org.javaboy.vhr.model.Department getdepartment()>
<synthetic.method.HrMapperImpl: java.lang.Integer updateUserface(java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.HR: java.lang.Integer getid()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getGender()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getIdCard()>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><synthetic.method.datatable.MENU: java.lang.String geticoncls()>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><synthetic.method.datatable.MENU: org.javaboy.vhr.model.Meta getmeta()>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenus()>-><synthetic.method.datatable.MENU: synthetic.method.datatable.MENU getInstance()>
<synthetic.method.datatable.SALARY: void <init>()>-><java.util.Date: void <init>()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.Double getContractTerm()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void <init>()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.util.Date getEndContract()>
<synthetic.method.HrMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Hr)>-><synthetic.method.datatable.HR: void setname(java.lang.String)>
<synthetic.method.HrMapperImpl: java.util.List getAllHrs(java.lang.Integer,java.lang.String)>-><org.javaboy.vhr.model.Hr: void setPhone(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getwedlock()>
<synthetic.method.HrMapperImpl: org.javaboy.vhr.model.Hr selectByPrimaryKey(java.lang.Integer)>-><org.javaboy.vhr.model.Hr: void setAddress(java.lang.String)>
<synthetic.method.datatable.MENU: void <clinit>()>-><synthetic.method.datatable.MENU: void <init>()>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenus()>-><org.javaboy.vhr.model.Menu: void <init>()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrs(java.lang.Integer,java.lang.String)>-><org.javaboy.vhr.model.Hr: void setName(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getPhone()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setposid(java.lang.Integer)>
<synthetic.method.HrMapperImpl: java.lang.Integer updateUserface(java.lang.String,java.lang.Integer)>-><synthetic.method.datatable.HR: synthetic.method.datatable.HR getInstance()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getWedlock()>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsByParentId(java.lang.Integer)>-><synthetic.method.datatable.DEPARTMENT: java.lang.Integer getid()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrs(java.lang.Integer,java.lang.String)>-><org.javaboy.vhr.model.Hr: void setRemark(java.lang.String)>
<synthetic.method.datatable.JOBLEVEL: void <init>()>-><java.util.Date: void <init>()>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setaccumulationfundbase(java.lang.Integer)>
<synthetic.method.HrMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Hr)>-><org.javaboy.vhr.model.Hr: java.lang.String getUserface()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setSchool(java.lang.String)>
<synthetic.method.PositionMapperImpl: java.lang.Integer deletePositionsByIds(java.lang.Integer[])>-><synthetic.method.datatable.POSITION: synthetic.method.datatable.POSITION getInstance()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setworkage(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.Integer getDepartmentId()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrs(java.lang.Integer,java.lang.String)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setposid(java.lang.Integer)>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><org.javaboy.vhr.model.Menu: void setName(java.lang.String)>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsByParentId(java.lang.Integer)>-><org.javaboy.vhr.model.Department: void <init>()>
<synthetic.method.EmployeeMapperImpl: int deleteByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: synthetic.method.datatable.EMPLOYEE getInstance()>
<synthetic.method.JobLevelMapperImpl: java.util.List getAllJobLevels()>-><org.javaboy.vhr.model.JobLevel: void setCreateDate(java.util.Date)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: org.javaboy.vhr.model.Politicsstatus getpoliticsstatus()>
<synthetic.method.RoleMapperImpl: java.util.List getAllRoles()>-><synthetic.method.datatable.ROLE: java.lang.String getnamezh()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setPosition(org.javaboy.vhr.model.Position)>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.util.Date getCreateDate()>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setmedicalbase(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.util.Date getBeginContract()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setbegincontract(java.util.Date)>
<synthetic.method.PositionMapperImpl: java.util.List getAllPositions()>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.Integer getBasicSalary()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getTiptopDegree()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: org.javaboy.vhr.model.Position getposition()>
<synthetic.method.datatable.EMPLOYEE: void <init>()>-><org.javaboy.vhr.model.Position: void <init>()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: org.javaboy.vhr.model.Salary getsalary()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setWedlock(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.lang.Double getcontractterm()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getposid()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: org.javaboy.vhr.model.Department getdepartment()>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsByParentId(java.lang.Integer)>-><org.javaboy.vhr.model.Department: void setEnabled(java.lang.Boolean)>
<synthetic.method.datatable.EMPLOYEE: void <init>()>-><org.javaboy.vhr.model.Salary: void <init>()>
<synthetic.method.JobLevelMapperImpl: int insertSelective(org.javaboy.vhr.model.JobLevel)>-><synthetic.method.datatable.JOBLEVEL: void setenabled(java.lang.Boolean)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setnativeplace(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setNotWorkDate(java.util.Date)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.util.Date getBirthday()>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.Float getMedicalPer()>
<synthetic.method.MenuRoleMapperImpl: java.lang.Integer insertRecord(java.lang.Integer,java.lang.Integer[])>-><synthetic.method.datatable.MENUROLE: void setrid(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getpoliticid()>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsWithOutChildren()>-><synthetic.method.datatable.DEPARTMENT: java.lang.String getdeppath()>
<synthetic.method.datatable.EMPLOYEE: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setJobLevelId(java.lang.Integer)>
<synthetic.method.datatable.HRROLE: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.Integer getPensionBase()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.util.Date getEndContract()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.Integer getDepartmentId()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setwedlock(java.lang.String)>
<synthetic.method.datatable.SALARY: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setWorkAge(java.lang.Integer)>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><org.javaboy.vhr.model.Salary: void setMedicalPer(java.lang.Float)>
<synthetic.method.HrMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Hr)>-><org.javaboy.vhr.model.Hr: java.lang.String getTelephone()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getdepartmentid()>
<synthetic.method.HrMapperImpl: org.javaboy.vhr.model.Hr selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.HR: synthetic.method.datatable.HR getInstance()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><synthetic.method.datatable.HR: java.lang.Boolean getenabled()>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsWithOutChildren()>-><synthetic.method.datatable.DEPARTMENT: synthetic.method.datatable.DEPARTMENT getInstance()>
<synthetic.method.datatable.DEPARTMENT: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.util.Date getbegindate()>
<synthetic.method.EmployeeMapperImpl: java.lang.Integer updateEmployeeSalaryById(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPSALARY: synthetic.method.datatable.EMPSALARY getInstance()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setGender(java.lang.String)>
<synthetic.method.JobLevelMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.JobLevel)>-><synthetic.method.datatable.JOBLEVEL: java.lang.Integer[] getid()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setworkstate(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setBeginDate(java.util.Date)>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsWithOutChildren()>-><org.javaboy.vhr.model.Department: void setId(java.lang.Integer)>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><org.javaboy.vhr.model.Menu: void setIconCls(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: org.javaboy.vhr.model.Nation getnation()>
<synthetic.method.HrMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Hr)>-><synthetic.method.datatable.HR: void setusername(java.lang.String)>
<synthetic.method.RoleMapperImpl: int insert(org.javaboy.vhr.model.Role)>-><org.javaboy.vhr.model.Role: java.lang.String getName()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.Integer getPosId()>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsWithOutChildren()>-><synthetic.method.datatable.DEPARTMENT: java.lang.String getname()>
<synthetic.method.NationMapperImpl: java.util.List getAllNations()>-><synthetic.method.datatable.NATION: java.lang.Integer getid()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><synthetic.method.datatable.HR: java.util.List getroles()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.Integer getWorkAge()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: synthetic.method.datatable.EMPLOYEE getInstance()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getid()>
<synthetic.method.HrRoleMapperImpl: void deleteByHrid(java.lang.Integer)>-><synthetic.method.datatable.HRROLE: synthetic.method.datatable.HRROLE getInstance()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setcontractterm(java.lang.Double)>
<synthetic.method.JobLevelMapperImpl: java.util.List getAllJobLevels()>-><org.javaboy.vhr.model.JobLevel: void setTitleLevel(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.Integer getJobLevelId()>
<synthetic.method.RoleMapperImpl: int insert(org.javaboy.vhr.model.Role)>-><synthetic.method.datatable.ROLE: void setname(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setEmail(java.lang.String)>
<synthetic.method.HrMapperImpl: java.util.List getAllHrs(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.HR: java.lang.String getname()>
<synthetic.method.HrRoleMapperImpl: java.lang.Integer addRole(java.lang.Integer,java.lang.Integer[])>-><synthetic.method.datatable.HRROLE: synthetic.method.datatable.HRROLE getInstance()>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><synthetic.method.datatable.SALARY: java.lang.Integer getaccumulationfundbase()>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><org.javaboy.vhr.model.Menu: void setEnabled(java.lang.Boolean)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: org.javaboy.vhr.model.JobLevel getjoblevel()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getjoblevelid()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setConversionTime(java.util.Date)>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><synthetic.method.datatable.MENU: java.lang.String getpath()>
<synthetic.method.datatable.HR: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.datatable.MAILSENDLOG: void <init>()>-><java.util.Date: void <init>()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setTiptopDegree(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setPoliticId(java.lang.Integer)>
<synthetic.method.MailSendLogMapperImpl: java.lang.Integer insert(org.javaboy.vhr.model.MailSendLog)>-><org.javaboy.vhr.model.MailSendLog: java.util.Date getTryTime()>
<synthetic.method.MenuMapperImpl: java.util.List getMidsByRid(java.lang.Integer)>-><synthetic.method.datatable.MENUROLE: synthetic.method.datatable.MENUROLE getInstance()>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><org.javaboy.vhr.model.Menu: void setComponent(java.lang.String)>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><org.javaboy.vhr.model.Menu: void setPath(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setEngageForm(java.lang.String)>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><synthetic.method.datatable.MENU: org.javaboy.vhr.model.Meta getmeta()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getSchool()>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><synthetic.method.datatable.MENU: java.lang.Integer getparentid()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setWorkState(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setaddress(java.lang.String)>
<synthetic.method.HrMapperImpl: org.javaboy.vhr.model.Hr selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.HR: java.lang.String getphone()>
<synthetic.method.PositionMapperImpl: java.util.List getAllPositions()>-><synthetic.method.datatable.POSITION: java.lang.String getname()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void settiptopdegree(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setSchool(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getname()>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><org.javaboy.vhr.model.Salary: void setMedicalBase(java.lang.Integer)>
<synthetic.method.HrMapperImpl: java.util.List getAllHrs(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.HR: synthetic.method.datatable.HR getInstance()>
<synthetic.method.EmployeeMapperImpl: java.lang.Integer updateEmployeeSalaryById(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPSALARY: void setsid(java.lang.Integer)>
<synthetic.method.MenuRoleMapperImpl: void deleteByRid(java.lang.Integer)>-><synthetic.method.datatable.MENUROLE: synthetic.method.datatable.MENUROLE getInstance()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getschool()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><org.javaboy.vhr.model.Hr: void setId(java.lang.Integer)>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><org.javaboy.vhr.model.Menu: void <init>()>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><org.javaboy.vhr.model.Salary: void setTrafficSalary(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: synthetic.method.datatable.EMPLOYEE getInstance()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setPoliticsstatus(org.javaboy.vhr.model.Politicsstatus)>
<synthetic.method.PositionMapperImpl: int insertSelective(org.javaboy.vhr.model.Position)>-><synthetic.method.datatable.POSITION: void setenabled(java.lang.Boolean)>
<synthetic.method.HrMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Hr)>-><org.javaboy.vhr.model.Hr: java.lang.String getPassword()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getnativeplace()>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><org.javaboy.vhr.model.Menu: void setChildren(java.util.List)>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><org.javaboy.vhr.model.Menu: void setParentId(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setAddress(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setname(java.lang.String)>
<synthetic.method.HrMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Hr)>-><synthetic.method.datatable.HR: synthetic.method.datatable.HR getInstance()>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><org.javaboy.vhr.model.Salary: void setName(java.lang.String)>
<synthetic.method.HrMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Hr)>-><org.javaboy.vhr.model.Hr: java.lang.String getName()>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><synthetic.method.datatable.MENU: java.util.List getchildren()>
<synthetic.method.PositionMapperImpl: int insertSelective(org.javaboy.vhr.model.Position)>-><org.javaboy.vhr.model.Position: java.util.Date getCreateDate()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><synthetic.method.datatable.HR: java.lang.String getusername()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setdepartmentid(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setWorkState(java.lang.String)>
<synthetic.method.JobLevelMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.JobLevel)>-><synthetic.method.datatable.JOBLEVEL: synthetic.method.datatable.JOBLEVEL getInstance()>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsByParentId(java.lang.Integer)>-><org.javaboy.vhr.model.Department: void setChildren(java.util.List)>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><org.javaboy.vhr.model.Salary: void setAccumulationFundPer(java.lang.Float)>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsByParentId(java.lang.Integer)>-><synthetic.method.datatable.DEPARTMENT: java.lang.Integer getresult()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getworkstate()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: org.javaboy.vhr.model.Salary getsalary()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setWorkAge(java.lang.Integer)>
<synthetic.method.PositionMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Position)>-><org.javaboy.vhr.model.Position: java.lang.String getName()>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setallsalary(java.lang.Integer)>
<synthetic.method.HrMapperImpl: org.javaboy.vhr.model.Hr selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.HR: java.lang.String getaddress()>
<synthetic.method.MailSendLogMapperImpl: java.lang.Integer insert(org.javaboy.vhr.model.MailSendLog)>-><synthetic.method.datatable.MAILSENDLOG: void settrytime(java.util.Date)>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: synthetic.method.datatable.EMPLOYEE getInstance()>
<synthetic.method.PositionMapperImpl: java.util.List getAllPositions()>-><synthetic.method.datatable.POSITION: java.util.Date getcreatedate()>
<synthetic.method.JobLevelMapperImpl: int insertSelective(org.javaboy.vhr.model.JobLevel)>-><synthetic.method.datatable.JOBLEVEL: void setid(java.lang.Integer[])>
<synthetic.method.MailSendLogMapperImpl: java.lang.Integer insert(org.javaboy.vhr.model.MailSendLog)>-><org.javaboy.vhr.model.MailSendLog: java.lang.String getMsgId()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrs(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.HR: java.lang.String getremark()>
<synthetic.method.RoleMapperImpl: java.util.List getAllRoles()>-><synthetic.method.datatable.ROLE: synthetic.method.datatable.ROLE getInstance()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setAddress(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.util.Date getbegincontract()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getworkid()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getGender()>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setmedicalper(java.lang.Float)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getposid()>
<synthetic.method.PositionMapperImpl: int insertSelective(org.javaboy.vhr.model.Position)>-><org.javaboy.vhr.model.Position: java.lang.String getName()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getWorkID()>
<synthetic.method.JobLevelMapperImpl: java.util.List getAllJobLevels()>-><synthetic.method.datatable.JOBLEVEL: java.lang.Integer[] getid()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getEmail()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.util.Date getConversionTime()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setNation(org.javaboy.vhr.model.Nation)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.Double getcontractterm()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setGender(java.lang.String)>
<synthetic.method.PoliticsstatusMapperImpl: java.util.List getAllPoliticsstatus()>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><org.javaboy.vhr.model.Hr: void setAddress(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getengageform()>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.Integer getLunchSalary()>
<synthetic.method.JobLevelMapperImpl: java.util.List getAllJobLevels()>-><synthetic.method.datatable.JOBLEVEL: synthetic.method.datatable.JOBLEVEL getInstance()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><org.javaboy.vhr.model.Hr: void setTelephone(java.lang.String)>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setbonus(java.lang.Integer)>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsByParentId(java.lang.Integer)>-><org.javaboy.vhr.model.Department: void setId(java.lang.Integer)>
<synthetic.method.JobLevelMapperImpl: int insertSelective(org.javaboy.vhr.model.JobLevel)>-><org.javaboy.vhr.model.JobLevel: java.lang.Integer getId()>
<synthetic.method.MailSendLogMapperImpl: java.lang.Integer insert(org.javaboy.vhr.model.MailSendLog)>-><synthetic.method.datatable.MAILSENDLOG: void setexchange(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getphone()>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: synthetic.method.datatable.SALARY getInstance()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><org.javaboy.vhr.model.Hr: void setEnabled(java.lang.Boolean)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.util.Date getendcontract()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setBirthday(java.util.Date)>
<synthetic.method.PositionMapperImpl: java.lang.Integer deletePositionsByIds(java.lang.Integer[])>-><synthetic.method.datatable.POSITION: java.lang.Integer getid()>
<synthetic.method.PositionMapperImpl: int insertSelective(org.javaboy.vhr.model.Position)>-><org.javaboy.vhr.model.Position: java.lang.Boolean getEnabled()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setJobLevel(org.javaboy.vhr.model.JobLevel)>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><org.javaboy.vhr.model.Salary: void setAccumulationFundBase(java.lang.Integer)>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsByParentId(java.lang.Integer)>-><synthetic.method.datatable.DEPARTMENT: java.lang.Integer getparentid()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><org.javaboy.vhr.model.Hr: void setPhone(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setContractTerm(java.lang.Double)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getjoblevelid()>
<synthetic.method.JobLevelMapperImpl: java.util.List getAllJobLevels()>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><org.javaboy.vhr.model.Menu: void setMeta(org.javaboy.vhr.model.Meta)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setschool(java.lang.String)>
<synthetic.method.datatable.HR: void <clinit>()>-><synthetic.method.datatable.HR: void <init>()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getemail()>
<synthetic.method.JobLevelMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.JobLevel)>-><synthetic.method.datatable.JOBLEVEL: void settitlelevel(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setEmail(java.lang.String)>
<synthetic.method.HrMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Hr)>-><synthetic.method.datatable.HR: void setphone(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getworkid()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getid()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getschool()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><synthetic.method.datatable.HR: java.lang.String getaddress()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setPosId(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setPoliticsstatus(org.javaboy.vhr.model.Politicsstatus)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getid()>
<synthetic.method.datatable.MAILSENDLOG: void <clinit>()>-><synthetic.method.datatable.MAILSENDLOG: void <init>()>
<synthetic.method.datatable.NATION: void <clinit>()>-><synthetic.method.datatable.NATION: void <init>()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.util.Date getbegincontract()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: org.javaboy.vhr.model.JobLevel getjoblevel()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.Integer getId()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.String getSpecialty()>
<synthetic.method.MenuMapperImpl: java.util.List getMidsByRid(java.lang.Integer)>-><java.lang.Integer: void <init>(int)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setDepartmentId(java.lang.Integer)>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsByParentId(java.lang.Integer)>-><synthetic.method.datatable.DEPARTMENT: java.util.List getchildren()>
<synthetic.method.JobLevelMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.JobLevel)>-><synthetic.method.datatable.JOBLEVEL: void setcreatedate(java.util.Date)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setjoblevelid(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setEndContract(java.util.Date)>
<synthetic.method.HrMapperImpl: org.javaboy.vhr.model.Hr selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.HR: java.lang.String gettelephone()>
<synthetic.method.HrMapperImpl: org.javaboy.vhr.model.Hr selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.HR: java.lang.String getpassword()>
<synthetic.method.NationMapperImpl: java.util.List getAllNations()>-><synthetic.method.datatable.NATION: synthetic.method.datatable.NATION getInstance()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.Integer getNationId()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrs(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.HR: java.lang.String gettelephone()>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><synthetic.method.datatable.MENU: synthetic.method.datatable.MENU getInstance()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setJobLevel(org.javaboy.vhr.model.JobLevel)>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsByParentId(java.lang.Integer)>-><org.javaboy.vhr.model.Department: void setParentId(java.lang.Integer)>
<synthetic.method.PositionMapperImpl: int insertSelective(org.javaboy.vhr.model.Position)>-><org.javaboy.vhr.model.Position: java.lang.Integer getId()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getnativeplace()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.Double getcontractterm()>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><synthetic.method.datatable.MENU: java.util.List getroles()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getworkstate()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setgender(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setworkid(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getnativeplace()>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><synthetic.method.datatable.SALARY: java.lang.String getname()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setworkstate(java.lang.String)>
<synthetic.method.datatable.JOBLEVEL: void <clinit>()>-><synthetic.method.datatable.JOBLEVEL: void <init>()>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><org.javaboy.vhr.model.Menu: void setId(java.lang.Integer)>
<synthetic.method.MailSendLogMapperImpl: java.lang.Integer insert(org.javaboy.vhr.model.MailSendLog)>-><synthetic.method.datatable.MAILSENDLOG: void setmsgid(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.Integer getWorkAge()>
<synthetic.method.RoleMapperImpl: int insert(org.javaboy.vhr.model.Role)>-><org.javaboy.vhr.model.Role: java.lang.Integer getId()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.util.Date getBeginDate()>
<synthetic.method.RoleMapperImpl: java.util.List getAllRoles()>-><synthetic.method.datatable.ROLE: java.lang.Integer getid()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><synthetic.method.datatable.HR: java.lang.String getpassword()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setNativePlace(java.lang.String)>
<synthetic.method.HrMapperImpl: java.util.List getAllHrs(java.lang.Integer,java.lang.String)>-><org.javaboy.vhr.model.Hr: void setTelephone(java.lang.String)>
<synthetic.method.datatable.POLITICSSTATUS: void <init>()>-><java.lang.Object: void <init>()>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.Integer getTrafficSalary()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getaddress()>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><synthetic.method.datatable.MENU: java.lang.Integer getid()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.RoleMapperImpl: int insert(org.javaboy.vhr.model.Role)>-><synthetic.method.datatable.ROLE: synthetic.method.datatable.ROLE getInstance()>
<org.javaboy.vhr.model.Politicsstatus: void setName(java.lang.String)>-><java.lang.String: java.lang.String trim()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getspecialty()>
<synthetic.method.MenuRoleMapperImpl: void deleteByRid(java.lang.Integer)>-><synthetic.method.datatable.MENUROLE: java.lang.Integer getrid()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><org.javaboy.vhr.model.Hr: void setRemark(java.lang.String)>
<synthetic.method.PositionMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Position)>-><synthetic.method.datatable.POSITION: synthetic.method.datatable.POSITION getInstance()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setNotWorkDate(java.util.Date)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setSpecialty(java.lang.String)>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><synthetic.method.datatable.MENU: java.util.List getroles()>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.Float getPensionPer()>
<synthetic.method.HrMapperImpl: java.lang.Integer updatePasswd(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.HR: synthetic.method.datatable.HR getInstance()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setName(java.lang.String)>
<synthetic.method.JobLevelMapperImpl: java.util.List getAllJobLevels()>-><synthetic.method.datatable.JOBLEVEL: java.lang.String getname()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setEndContract(java.util.Date)>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setid(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setWorkState(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getengageform()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setTiptopDegree(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.lang.Integer addEmps(java.util.List)>-><java.util.ArrayList: java.lang.Object get(int)>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setname(java.lang.String)>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setallsalary(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: java.lang.Integer addEmps(java.util.List)>-><synthetic.method.datatable.EMPLOYEE: synthetic.method.datatable.EMPLOYEE getInstance()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setWorkID(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getworkage()>
<synthetic.method.datatable.DEPARTMENT: void <clinit>()>-><synthetic.method.datatable.DEPARTMENT: void <init>()>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setmedicalbase(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setphone(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setJobLevelId(java.lang.Integer)>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsByParentId(java.lang.Integer)>-><synthetic.method.datatable.DEPARTMENT: java.lang.Boolean getisparent()>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setconversiontime(java.util.Date)>
<synthetic.method.MenuRoleMapperImpl: java.lang.Integer insertRecord(java.lang.Integer,java.lang.Integer[])>-><synthetic.method.datatable.MENUROLE: void setmid(java.lang.Integer[])>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><org.javaboy.vhr.model.Hr: void setUsername(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setBeginDate(java.util.Date)>
<synthetic.method.RoleMapperImpl: java.util.List getAllRoles()>-><org.javaboy.vhr.model.Role: void setId(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getspecialty()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.util.Date getbegincontract()>
<synthetic.method.EmployeeMapperImpl: java.lang.Long getTotal(org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: synthetic.method.datatable.EMPLOYEE getInstance()>
<synthetic.method.JobLevelMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.JobLevel)>-><synthetic.method.datatable.JOBLEVEL: void setenabled(java.lang.Boolean)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setcontractterm(java.lang.Double)>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><org.javaboy.vhr.model.Salary: void setAllSalary(java.lang.Integer)>
<synthetic.method.HrMapperImpl: java.util.List getAllHrsExceptCurrentHr(java.lang.Integer)>-><synthetic.method.datatable.HR: java.lang.String getphone()>
<synthetic.method.JobLevelMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.JobLevel)>-><org.javaboy.vhr.model.JobLevel: java.lang.Boolean getEnabled()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><org.javaboy.vhr.model.Employee: java.lang.Integer getPosId()>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.Integer getAccumulationFundBase()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setPhone(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: int insertSelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setnotworkdate(java.util.Date)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setSalary(org.javaboy.vhr.model.Salary)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setPoliticId(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getemail()>
<synthetic.method.datatable.EMPLOYEE: void <init>()>-><org.javaboy.vhr.model.Nation: void <init>()>
<synthetic.method.HrMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Hr)>-><synthetic.method.datatable.HR: void settelephone(java.lang.String)>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><java.util.Collections: java.util.List singletonList(java.lang.Object)>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><org.javaboy.vhr.model.Salary: void setCreateDate(java.util.Date)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setSpecialty(java.lang.String)>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void settrafficsalary(java.lang.Integer)>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.Integer getBonus()>
<synthetic.method.PositionMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Position)>-><synthetic.method.datatable.POSITION: void setenabled(java.lang.Boolean)>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setengageform(java.lang.String)>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setpensionbase(java.lang.Integer)>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.Integer getAllSalary()>
<synthetic.method.HrMapperImpl: java.util.List getAllHrs(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.HR: java.lang.Boolean getenabled()>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: org.javaboy.vhr.model.Position getposition()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.util.Date getbirthday()>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.String getName()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setBeginContract(java.util.Date)>
<synthetic.method.MailSendLogMapperImpl: java.lang.Integer insert(org.javaboy.vhr.model.MailSendLog)>-><org.javaboy.vhr.model.MailSendLog: java.lang.String getExchange()>
<synthetic.method.SalaryMapperImpl: java.util.List getAllSalaries()>-><synthetic.method.datatable.SALARY: java.lang.Integer gettrafficsalary()>
<synthetic.method.RoleMapperImpl: int insert(org.javaboy.vhr.model.Role)>-><org.javaboy.vhr.model.Role: java.lang.String getNameZh()>
<synthetic.method.HrMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Hr)>-><org.javaboy.vhr.model.Hr: java.lang.String getPhone()>
<synthetic.method.HrMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Hr)>-><synthetic.method.datatable.HR: void setpassword(java.lang.String)>
<synthetic.method.HrMapperImpl: int deleteByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.HR: java.lang.Integer getid()>
<synthetic.method.SalaryMapperImpl: int insertSelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setpensionper(java.lang.Float)>
<synthetic.method.DepartmentMapperImpl: java.util.List getAllDepartmentsByParentId(java.lang.Integer)>-><synthetic.method.datatable.DEPARTMENT: java.lang.String getname()>
<synthetic.method.HrMapperImpl: org.javaboy.vhr.model.Hr selectByPrimaryKey(java.lang.Integer)>-><org.javaboy.vhr.model.Hr: void setPassword(java.lang.String)>
<synthetic.method.JobLevelMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.JobLevel)>-><org.javaboy.vhr.model.JobLevel: java.lang.String getTitleLevel()>
<synthetic.method.PositionMapperImpl: java.util.List getAllPositions()>-><org.javaboy.vhr.model.Position: void setCreateDate(java.util.Date)>
<synthetic.method.RoleMapperImpl: java.util.List getAllRoles()>-><org.javaboy.vhr.model.Role: void setNameZh(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.String gettiptopdegree()>
<synthetic.method.JobLevelMapperImpl: int insertSelective(org.javaboy.vhr.model.JobLevel)>-><org.javaboy.vhr.model.JobLevel: java.lang.String getTitleLevel()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setJobLevelId(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><synthetic.method.datatable.EMPLOYEE: java.lang.Integer getworkage()>
<synthetic.method.PositionMapperImpl: java.util.List getAllPositions()>-><synthetic.method.datatable.POSITION: synthetic.method.datatable.POSITION getInstance()>
<synthetic.method.MenuMapperImpl: java.util.List getMenusByHrId(java.lang.Integer)>-><org.javaboy.vhr.model.Menu: void setUrl(java.lang.String)>
<synthetic.method.HrMapperImpl: org.javaboy.vhr.model.Hr selectByPrimaryKey(java.lang.Integer)>-><synthetic.method.datatable.HR: java.lang.String getusername()>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><org.javaboy.vhr.model.Employee: void setPoliticId(java.lang.Integer)>
<synthetic.method.MenuRoleMapperImpl: java.lang.Integer insertRecord(java.lang.Integer,java.lang.Integer[])>-><synthetic.method.datatable.MENUROLE: synthetic.method.datatable.MENUROLE getInstance()>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void setnotworkdate(java.util.Date)>
<synthetic.method.EmployeeMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Employee)>-><synthetic.method.datatable.EMPLOYEE: void settiptopdegree(java.lang.String)>
<synthetic.method.PositionMapperImpl: int insertSelective(org.javaboy.vhr.model.Position)>-><synthetic.method.datatable.POSITION: void setcreatedate(java.util.Date)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setContractTerm(java.lang.Double)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setBeginContract(java.util.Date)>
<synthetic.method.NationMapperImpl: java.util.List getAllNations()>-><org.javaboy.vhr.model.Nation: void setName(java.lang.String)>
<synthetic.method.HrMapperImpl: java.util.List getAllHrs(java.lang.Integer,java.lang.String)>-><synthetic.method.datatable.HR: java.lang.String getphone()>
<synthetic.method.MenuMapperImpl: java.util.List getAllMenusWithRole()>-><org.javaboy.vhr.model.Menu: void setUrl(java.lang.String)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPage(java.lang.Integer,java.lang.Integer,org.javaboy.vhr.model.Employee,java.util.Date[])>-><synthetic.method.datatable.EMPLOYEE: java.lang.String getgender()>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setbonus(java.lang.Integer)>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><org.javaboy.vhr.model.Salary: java.lang.String getName()>
<synthetic.method.SalaryMapperImpl: int updateByPrimaryKeySelective(org.javaboy.vhr.model.Salary)>-><synthetic.method.datatable.SALARY: void setpensionper(java.lang.Float)>
<synthetic.method.EmployeeMapperImpl: org.javaboy.vhr.model.Employee getEmployeeById(java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setDepartmentId(java.lang.Integer)>
<synthetic.method.EmployeeMapperImpl: java.util.List getEmployeeByPageWithSalary(java.lang.Integer,java.lang.Integer)>-><org.javaboy.vhr.model.Employee: void setIdCard(java.lang.String)>
<synthetic.method.PositionMapperImpl: java.util.List getAllPositions()>-><org.javaboy.vhr.model.Position: void setName(java.lang.String)>
