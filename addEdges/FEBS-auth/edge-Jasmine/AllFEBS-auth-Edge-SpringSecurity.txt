<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.asm.Handle: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.security.pkcs.PKCS9Attribute: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.bouncycastle.asn1.DERNumericString: java.lang.String toString()>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onAfterSetAutoCommit(com.p6spy.engine.common.ConnectionInformation,boolean,boolean,java.sql.SQLException)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.util.StringUtils: java.lang.String collectionToDelimitedString(java.util.Collection,java.lang.String,java.lang.String,java.lang.String)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><java.lang.reflect.Field: java.lang.String toString()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<org.springframework.web.util.pattern.WildcardTheRestPathElement: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.Provider$UString: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.google.common.base.Predicates$ObjectPredicate$2: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<java.util.AbstractSet: boolean equals(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet: int size()>
<io.micrometer.core.instrument.Counter$Builder: io.micrometer.core.instrument.Counter$Builder tags(java.lang.Iterable)>-><io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags and(java.lang.Iterable)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.Collections$UnmodifiableCollection: boolean isEmpty()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.sun.beans.WildcardTypeImpl: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.WeakCache$CacheKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<org.apache.catalina.connector.OutputBuffer: void toReadMode(java.nio.Buffer)>-><java.nio.Buffer: java.nio.Buffer limit(int)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.HikariConfig: void logConfiguration()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.LinkedHashMap$LinkedKeySet: java.util.Iterator iterator()>
<cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.Long getParentId()>
<sun.reflect.UnsafeQualifiedShortFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<io.micrometer.core.instrument.Timer$Builder: io.micrometer.core.instrument.Timer$Builder maximumExpectedValue(java.time.Duration)>-><java.time.Duration: long toNanos()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void beforePrototypeCreation(java.lang.String)>-><io.netty.channel.nio.SelectedSelectionKeySet: boolean add(java.lang.Object)>
<org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<org.aspectj.bridge.MessageUtil: java.lang.String addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)>-><java.io.StringWriter: void <init>()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.context.support.ApplicationListenerDetector: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.management.MBeanOperationInfo: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$StringEntry: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<reactor.core.scheduler.ReactorThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>-><java.lang.Thread: void setDaemon(boolean)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.security.oauth2.provider.approval.Approval: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.apache.http.pool.RouteSpecificPool: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.ImmutableDescriptor: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.apache.logging.log4j.Level: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.Long: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><cc.mrbird.febs.auth.entity.OauthClientDetails: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.nio.CharBuffer: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.util.MimeType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.UtilityElf: int getTransactionIsolation(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.OffsetTime: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<java.util.Collections$UnmodifiableList$1: java.lang.Object previous()>-><java.util.ArrayList$ListItr: java.lang.Object previous()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanConstructorInfo: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.Vector: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.SubList: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.introspect.SimpleMixInResolver: java.lang.Class findMixInClassFor(java.lang.Class)>-><com.fasterxml.jackson.databind.introspect.SimpleMixInResolver: java.lang.Class findMixInClassFor(java.lang.Class)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.cglib.core.Signature: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.POJONode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.LambdaForm$Name: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<java.net.InetAddress: java.lang.String getHostFromNameService(java.net.InetAddress,boolean)>-><java.net.InetAddress: java.lang.String getHostAddress()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<org.springframework.cglib.core.EmitUtils$4: void processCase(int,org.springframework.asm.Label)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl: char getChar(java.lang.Object)>
<java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy: void <init>()>-><java.lang.Object: void <init>()>
<sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.data.util.ClassTypeInformation: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: boolean contains(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet: boolean contains(java.lang.Object)>
<org.springframework.web.util.pattern.RegexPathElement: java.lang.String toString()>-><java.lang.String: java.lang.String valueOf(char[])>
<java.util.AbstractList$ListItr: java.lang.Object previous()>-><com.google.common.base.Joiner$3: java.lang.Object get(int)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.NullNode: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool(java.util.concurrent.ThreadFactory)>-><java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<org.aspectj.bridge.AbortException: void printStackTrace(java.io.PrintStream)>-><java.io.PrintStream: void println(java.lang.String)>
<com.zaxxer.hikari.pool.HikariProxyConnection: int getNetworkTimeout()>-><com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.QueryRequest: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariDataSource: java.sql.Connection getConnection()>-><org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.expression.spel.standard.TokenKind: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.aop.support.DefaultIntroductionAdvisor: boolean equals(java.lang.Object)>
<org.aspectj.weaver.MemberImpl: int compareTo(org.aspectj.weaver.Member)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String getName()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap: java.util.Iterator iteratorOrListIterator(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.awt.RenderingHints$Key: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Vector$Itr: java.lang.Object next()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<java.lang.reflect.Field: sun.reflect.FieldAccessor getFieldAccessor(java.lang.Object)>-><java.lang.reflect.Field: sun.reflect.FieldAccessor acquireFieldAccessor(boolean)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.GenericBeanDefinition: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.WildAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.MethodOverrides: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariDataSource: java.sql.Connection getConnection()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: boolean hasNext()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.HttpCookie: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Indexer$MapIndexingValueRef: void setValue(java.lang.Object)>-><org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: int compareComparables(java.lang.Class,java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore$TokenExpiry: int compareTo(java.lang.Object)>
<io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags of(java.lang.String[])>-><io.micrometer.core.instrument.Tags: void <init>(io.micrometer.core.instrument.Tag[])>
<org.springframework.security.core.context.SecurityContextImpl: int hashCode()>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: boolean hasNext()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><org.springframework.core.NestedCheckedException: java.lang.String getMessage()>
<com.fasterxml.classmate.TypeBindings: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.TypeBindings: int size()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: boolean hasNext()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnnotationTypePattern: boolean isForParameterAnnotationMatch()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.CflowPointcut: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<sun.reflect.UnsafeDoubleFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Double: void <init>(double)>
<com.zaxxer.hikari.util.ClockSource: long elapsedNanos(long,long)>-><com.zaxxer.hikari.util.ClockSource$MillisecondClockSource: long elapsedNanos0(long,long)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeByteFieldAccessorImpl: byte getByte(java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.cglib.core.MethodInfo: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><reactor.util.function.Tuple4: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: int hashCode()>
<java.util.AbstractCollection: java.lang.Object[] toArray()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<org.aspectj.weaver.patterns.NotAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: java.util.Spliterator trySplit()>-><java.util.concurrent.LinkedBlockingQueue: void fullyUnlock()>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl: boolean getBoolean(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String getMenuName()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.listener.PatternTopic: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.time.Period: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: boolean hasNext()>
<com.zaxxer.hikari.pool.PoolBase: void checkDefaultIsolation(java.sql.Connection)>-><ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getValue()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.font.AttributeValues: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.awt.image.DirectColorModel: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.web.util.pattern.RegexPathElement: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.WildAnnotationTypePattern: java.lang.String toString()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.SubList$1: boolean hasNext()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.HikariConfig: void validateNumerics()>-><ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object)>
<java.util.Collections: void reverse(java.util.List)>-><java.util.LinkedList: int size()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.crypto.CryptoPermission: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.List resolveManagedList(java.lang.Object,java.util.List)>-><com.google.common.base.Joiner$3: int size()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.MethodOverrides: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.Collections$EmptyList: int size()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.time.format.DecimalStyle: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.type.CollectionType: java.lang.String toString()>
<cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String getType()>
<org.aspectj.weaver.patterns.TypePatternList: int hashCode()>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.text.AttributeEntry: java.lang.Object getValue()>
<com.zaxxer.hikari.pool.HikariProxyStatement: void setQueryTimeout(int)>-><com.zaxxer.hikari.pool.ProxyStatement: java.sql.SQLException checkException(java.sql.SQLException)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.security.Provider$ServiceKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.ParsePosition: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap$ValuesIterator: java.lang.Object next()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<java.util.Collections: void reverse(java.util.List)>-><java.util.Vector: java.util.ListIterator listIterator(int)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object remove(int)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] getArray()>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Hashtable$KeySet: boolean contains(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.Collections$UnmodifiableList$1: void set(java.lang.Object)>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<java.util.stream.ReferencePipeline$11$1: void <init>(java.util.stream.ReferencePipeline$11,java.util.stream.Sink)>-><java.util.stream.Sink$ChainedReference: void <init>(java.util.stream.Sink)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.security.Permission: java.lang.String toString()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><com.zaxxer.hikari.HikariConfig: java.lang.String getConnectionTestQuery()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.Rectangle: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>-><java.lang.Object: java.lang.Object clone()>
<org.aspectj.bridge.AbortException: void printStackTrace(java.io.PrintStream)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: int hashCode()>
<org.apache.catalina.connector.OutputBuffer: int transfer(byte[],int,int,java.nio.ByteBuffer)>-><java.nio.HeapByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.concurrent.LinkedBlockingQueue: void fullyLock()>
<org.aspectj.weaver.patterns.WithincodePointcut: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><java.util.AbstractList: java.util.ListIterator listIterator()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<java.sql.DriverManager: java.util.Enumeration getDrivers()>-><java.sql.DriverManager: void println(java.lang.String)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.management.openmbean.ArrayType: java.lang.String toString()>
<org.hibernate.validator.internal.util.annotation.AnnotationProxy: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>-><java.util.WeakHashMap$EntrySet: java.lang.Object[] toArray()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.listener.PatternTopic: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.nio.charset.Charset: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$StringEntry: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.net.HttpCookie: java.lang.String toString()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.CollectionCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: int compareComparables(java.lang.Class,java.lang.Object,java.lang.Object)>-><java.nio.CharBuffer: int compareTo(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.google.common.collect.ImmutableEntry: java.lang.Object getKey()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><reactor.core.publisher.FluxOnAssembly$OnAssemblyException: java.lang.String getMessage()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.node.ObjectNode: java.lang.String toString()>
<org.hibernate.validator.internal.util.annotation.AnnotationDescriptor: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: int hashCode()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<java.beans.Introspector: void processPropertyDescriptors()>-><com.google.common.base.Joiner$3: java.lang.Object get(int)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.ArrayType: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.NotAnnotationTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.baomidou.dynamic.datasource.DynamicGroupDataSource: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.font.AttributeValues: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.aspectj.bridge.AbortException: void printStackTrace(java.io.PrintWriter)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[] retrieveDisplayNamesImpl(java.lang.String,java.util.Locale)>-><org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.tree.ShortSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.SimpleDateFormat: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putFloatVolatile(java.lang.Object,long,float)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: java.lang.String toString()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: boolean remove(java.lang.Object)>-><java.util.AbstractList: int indexOf(java.lang.Object)>
<javax.xml.datatype.DatatypeConfigurationException: void printStackTrace0(java.io.PrintWriter)>-><org.aspectj.bridge.AbortException: void printStackTrace(java.io.PrintWriter)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.net.Inet4Address: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean remove(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.WithinAnnotationPointcut: java.lang.String toString()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.PropertyPermission: boolean equals(java.lang.Object)>
<org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<org.springframework.security.web.session.SessionManagementFilter: void doFilter_dc1d849cdd9d94f2032374b3c26eb802(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><synthetic.method.SingletonFactory: cc.mrbird.febs.common.security.starter.handler.FebsAuthExceptionEntryPoint getAuthenticationEntryPoint()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.ListIterator listIterator()>
<java.sql.SQLException: void <init>(java.lang.String,java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerSecurityConfiguration: void <init>()>-><synthetic.method.SingletonFactory: cc.mrbird.febs.auth.service.impl.RedisClientDetailsService getRedisClientDetailsService()>
<com.zaxxer.hikari.pool.ProxyStatement: void <init>(com.zaxxer.hikari.pool.ProxyConnection,java.sql.Statement)>-><java.lang.Object: void <init>()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.BaseLocale: boolean equals(java.lang.Object)>
<org.aspectj.weaver.UnresolvedType: java.lang.String signatureToName(java.lang.String)>-><org.aspectj.weaver.BCException: void <init>(java.lang.String)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><java.lang.Math: int max(int,int)>
<java.util.concurrent.LinkedBlockingQueue$Itr: java.lang.Object next()>-><java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue$Node nextNode(java.util.concurrent.LinkedBlockingQueue$Node)>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.apache.catalina.connector.Response$PrivilegedDoIsEncodable: java.lang.Boolean run()>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.beans.BeanMetadataAttribute: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.text.ParsePosition: java.lang.String toString()>
<io.micrometer.core.instrument.Gauge$Builder: io.micrometer.core.instrument.Gauge$Builder tags(java.lang.String[])>-><io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags of(java.lang.String[])>
<sun.reflect.UnsafeByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.BuddhistCalendar: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.security.ProtectionDomain$WeakProtectionDomainKey: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.MethodType: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><cn.hutool.core.date.format.FastDatePrinter$TimeZoneDisplayKey: boolean equals(java.lang.Object)>
<java.sql.SQLException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>-><java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.web.method.ControllerAdviceBean: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.time.OffsetDateTime: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.core.Scannable$Attr$2: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSON: java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig)>-><javax.print.MimeType$ParameterMapEntrySet: int size()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Vector: boolean add(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><com.zaxxer.hikari.util.ClockSource: long currentTime()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker: void close()>-><com.codahale.metrics.MetricRegistry: java.lang.String name(java.lang.String,java.lang.String[])>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.management.openmbean.CompositeDataSupport: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.core.publisher.ConnectableFluxOnAssembly: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.codehaus.jackson.node.LongNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.ClassTypeInformation: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.lang.reflect.Field: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.IfPointcut: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.concurrent.locks.AbstractQueuedSynchronizer: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void closeConnection(com.zaxxer.hikari.pool.PoolEntry,java.lang.String)>-><com.zaxxer.hikari.util.ConcurrentBag: boolean remove(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.HashSet: int size()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.core.context.SecurityContextImpl: java.lang.String toString()>
<sun.reflect.UnsafeFloatFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><sun.reflect.UnsafeFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$OptimalPropertyAccessor: java.lang.Class getPropertyType()>-><java.lang.reflect.Field: java.lang.Class getType()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList: java.lang.Object remove(int)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object remove(int)>
<com.zaxxer.hikari.pool.HikariPool: void setMetricsTrackerFactory(com.zaxxer.hikari.metrics.MetricsTrackerFactory)>-><com.zaxxer.hikari.metrics.dropwizard.CodahaleMetricsTrackerFactory: com.zaxxer.hikari.metrics.IMetricsTracker create(java.lang.String,com.zaxxer.hikari.metrics.PoolStats)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><jdk.internal.org.xml.sax.SAXParseException: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.IdentityHashMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$FractionPrinterParser: java.lang.String toString()>
<sun.reflect.UnsafeStaticIntegerFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Integer: void <init>(int)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.config.BeanExpressionContext: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.Vector: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.HashMap$EntrySet: boolean contains(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Object getCredentials()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.math.BigDecimal: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.pool.PoolEntry createPoolEntry()>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object,java.lang.Object)>
<org.apache.tomcat.util.http.parser.HttpParser: java.lang.String readQuotedString(java.io.Reader,boolean)>-><java.io.StringReader: int read()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: java.util.List values(int)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.nio.ch.SocketOptionRegistry$RegistryKey: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.EnumMap: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isDependent(java.lang.String,java.lang.String,java.util.Set)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.HttpParser: java.lang.String readToken(java.io.Reader)>-><java.io.StringReader: int read()>
<cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.util.Date getCreateTime()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.beans.factory.support.NullBean: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Object getPrincipal()>
<org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>-><org.springframework.web.util.pattern.PatternParseException$PatternMessage: java.lang.String formatMessage(java.lang.Object[])>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ReflectionUtils: void handleReflectionException(java.lang.Exception)>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.util.DerInputBuffer: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><java.lang.reflect.Field: java.lang.String toString()>
<io.micrometer.core.instrument.distribution.DistributionStatisticConfig: void <init>()>-><java.lang.Object: void <init>()>
<org.aspectj.weaver.patterns.NotAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint$ConfigurationPropertiesAnnotationIntrospector: java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.Annotated)>-><com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.Annotated)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.provider.PolicyFile$SelfPermission: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: int getTotalConnections()>-><com.zaxxer.hikari.util.ConcurrentBag: int size()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<com.p6spy.engine.spy.P6DataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)>-><com.p6spy.engine.spy.JdbcEventListenerFactoryLoader: com.p6spy.engine.spy.JdbcEventListenerFactory load()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: int hashCode()>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><com.zaxxer.hikari.pool.ProxyConnection: java.lang.String getSchemaState()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.net.HttpCookie: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.Enum: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AutowireUtils: java.lang.Class resolveReturnTypeForFactoryMethod(java.lang.reflect.Method,java.lang.Object[],java.lang.ClassLoader)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.management.ObjectInstance: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.text.DigitList: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><java.lang.reflect.Field: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.BigIntegerNode: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<java.lang.Object: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Vector: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><java.io.WriteAbortedException: java.lang.Throwable getCause()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<org.apache.tomcat.util.buf.CharChunk: int subtract(char[],int,int)>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.web.context.support.WebApplicationContextUtils$SessionObjectFactory: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.GmtTimeZone: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void setMetricRegistry(java.lang.Object)>-><com.zaxxer.hikari.pool.HikariPool: void setMetricsTrackerFactory(com.zaxxer.hikari.metrics.MetricsTrackerFactory)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.jar.Attributes: int size()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>-><org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint$ConfigurationPropertiesAnnotationIntrospector: java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.Annotated)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><com.p6spy.engine.common.CustomHashedHashSet$CustomHashedHashSetIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.math.BigDecimal: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: int hashCode()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<io.micrometer.core.instrument.Timer$Builder: void <init>(java.lang.String)>-><io.micrometer.core.instrument.distribution.DistributionStatisticConfig$Builder: void <init>()>
<com.zaxxer.hikari.util.PropertyElf: java.lang.Object getProperty(java.lang.String,java.lang.Object)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<com.zaxxer.hikari.HikariConfig: void validateNumerics()>-><java.util.concurrent.TimeUnit$4: long toMillis(long)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String getPath()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.web.method.ControllerAdviceBean: java.lang.String toString()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: int hashCode()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyFactory: java.sql.Statement getProxyStatement(com.zaxxer.hikari.pool.ProxyConnection,java.sql.Statement)>-><com.zaxxer.hikari.pool.HikariProxyStatement: void <init>(com.zaxxer.hikari.pool.ProxyConnection,java.sql.Statement)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.awt.Rectangle: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.pool.PoolEntry createPoolEntry()>-><java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.nio.ch.SocketOptionRegistry$RegistryKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.atomic.AtomicInteger: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.WeakHashMap$KeySet: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: boolean hasNext()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.approval.Approval: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.OutputBuffer: int transfer(byte[],int,int,java.nio.ByteBuffer)>-><org.apache.catalina.connector.OutputBuffer: void toReadMode(java.nio.Buffer)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><ch.qos.logback.core.status.StatusBase: boolean equals(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.invoke.LambdaForm: boolean equals(java.lang.Object)>
<io.netty.util.concurrent.PromiseTask: java.lang.Object runTask()>-><com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: java.lang.Object call()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.WeakHashMap$EntrySet: int size()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: java.lang.Object previous()>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object previous()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.JumboEnumSet: java.util.Iterator iterator()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.cglib.core.MethodInfo: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.net.StandardSocketOptions$StdSocketOption: java.lang.String toString()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void handleMBeans(com.zaxxer.hikari.pool.HikariPool,boolean)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<io.micrometer.core.instrument.Timer$Builder: io.micrometer.core.instrument.Timer$Builder tags(java.lang.String[])>-><io.micrometer.core.instrument.Timer$Builder: io.micrometer.core.instrument.Timer$Builder tags(java.lang.Iterable)>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AndAnnotationTypePattern: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.ObjectNode: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.ArrayList$SubList: java.lang.Object set(int,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.TextNode: boolean equals(java.lang.Object)>
<org.springframework.web.context.request.AbstractRequestAttributes: void registerRequestDestructionCallback(java.lang.String,java.lang.Runnable)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildRequestUrl(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getQueryString()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.commons.pool2.impl.BaseGenericObjectPool$IdentityWrapper: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void createNetworkTimeoutExecutor(javax.sql.DataSource,java.lang.String,java.lang.String)>-><java.util.concurrent.ThreadPoolExecutor: void allowCoreThreadTimeOut(boolean)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Vector$Itr: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.data.redis.connection.RedisPassword: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.OptionalInt: boolean equals(java.lang.Object)>
<java.util.concurrent.TimeUnit$7: long convert(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.TimeUnit$1: long toDays(long)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.beans.IndexedPropertyDescriptor: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.String,java.lang.String)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Vector: java.lang.Object get(int)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.bouncycastle.asn1.DERT61String: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.alibaba.fastjson.util.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><io.micrometer.core.instrument.Tag: int compareTo(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String stateToString()>
<com.zaxxer.hikari.pool.HikariProxyStatement: boolean execute(java.lang.String)>-><com.zaxxer.hikari.pool.ProxyStatement: boolean execute(java.lang.String)>
<java.util.HashMap: int hash(java.lang.Object)>-><java.nio.CharBuffer: int hashCode()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: void set(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<org.aspectj.weaver.patterns.TypePatternList: int hashCode()>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.AttributedString$AttributedStringIterator: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ClockSource: java.lang.String elapsedDisplayString0(long,long)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.validation.AbstractPropertyBindingResult: void initConversion(org.springframework.core.convert.ConversionService)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String getRoleId()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>-><org.springframework.util.CollectionUtils$MultiValueMapAdapter: boolean isEmpty()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.data.util.ClassTypeInformation: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.sun.beans.WildcardTypeImpl: java.lang.String toString()>
<java.util.Collections: void reverse(java.util.List)>-><com.alibaba.fastjson.JSONArray: java.util.ListIterator listIterator()>
<sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Field: java.lang.Class getType()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.awt.Font: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<io.micrometer.core.instrument.Counter: io.micrometer.core.instrument.Counter$Builder builder(java.lang.String)>-><io.micrometer.core.instrument.Counter$Builder: void <init>(java.lang.String,io.micrometer.core.instrument.Counter$1)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.GeneralName: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Short: short shortValue()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.Provider$UString: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.Long getMenuId()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: void logConfiguration()>-><java.util.TreeSet: java.util.Iterator iterator()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Hashtable$Entry: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.provider.approval.Approval: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><com.zaxxer.hikari.util.ClockSource: long currentTime()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.AbstractMap: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFieldsUsing(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.springframework.util.ReflectionUtils: void makeAccessible(java.lang.reflect.Field)>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: int hashCode()>
<com.p6spy.engine.wrapper.ConnectionWrapper: void rollback()>-><java.lang.System: long nanoTime()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.codehaus.jackson.node.ArrayNode: boolean equals(java.lang.Object)>
<org.aspectj.bridge.context.CompilationAndWeavingContext$DefaultFormatter: java.lang.String formatEntry(int,java.lang.Object)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.aspectj.weaver.UnresolvedType: java.lang.String signatureToName(java.lang.String)>-><java.lang.String: int length()>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><reactor.util.context.Context1: java.lang.Object getKey()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<java.util.LinkedHashSet: void <init>(java.util.Collection)>-><javax.print.MimeType$ParameterMapEntrySet: int size()>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<sun.misc.JarIndex: void merge(sun.misc.JarIndex,java.lang.String)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.p6spy.engine.logging.Category: boolean equals(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.ZoneOffset: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><java.io.WriteAbortedException: java.lang.String getMessage()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.KeyFactory$Generator: void generateClass(org.springframework.asm.ClassVisitor)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean remove(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<org.aspectj.weaver.JoinPointSignature: java.lang.String getName()>-><org.aspectj.weaver.MemberImpl: java.lang.String getName()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.TypePatternList: java.lang.String toString()>
<java.util.AbstractCollection: boolean isEmpty()>-><io.netty.channel.nio.SelectedSelectionKeySet: int size()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.security.jca.ProviderConfig: java.lang.String toString()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object previous()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.data.util.Pair: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl$ClassIndexWrapper: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: void validate()>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void setTransactionIsolation(int)>
<com.zaxxer.hikari.pool.HikariPool: void logPoolState(java.lang.String[])>-><org.slf4j.helpers.SubstituteLogger: boolean isDebugEnabled()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><java.lang.reflect.Field: int hashCode()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.context.request.SessionScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.Object getSessionMutex()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.LongNode: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.google.common.base.Predicates$AndPredicate: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: int hashCode()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.lang.ProcessEnvironment$StringEntrySet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.pool.PoolEntry access$100(com.zaxxer.hikari.pool.HikariPool)>-><com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.pool.PoolEntry createPoolEntry()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Hashtable$Entry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.apache.catalina.connector.OutputBuffer: void realWriteChars(java.nio.CharBuffer)>-><java.nio.Buffer: int limit()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.security.util.ObjectIdentifier: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.connection.util.ByteArrayWrapper: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.Float: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.BaseLocale$Key: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.management.ObjectInstance: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: java.lang.Boolean call()>-><com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.util.ConcurrentBag access$200(com.zaxxer.hikari.pool.HikariPool)>
<cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.AbstractMap: java.lang.String toString()>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$OptimalPropertyAccessor: void generateCode(java.lang.String,org.springframework.asm.MethodVisitor,org.springframework.expression.spel.CodeFlow)>-><java.lang.reflect.Field: java.lang.String getName()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<org.springframework.context.support.ApplicationContextAwareProcessor: void invokeAwareInterfaces(java.lang.Object)>-><org.springframework.web.servlet.FrameworkServlet: void setApplicationContext(org.springframework.context.ApplicationContext)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.util.pattern.SingleCharWildcardedPathElement: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.asm.Handle: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeDoubleFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<org.springframework.cglib.core.EmitUtils$6: void processCase(int,org.springframework.asm.Label)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.TreeMap$KeySet: java.util.Iterator iterator()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.ZoneOffset: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<java.sql.DriverManager: boolean isDriverAllowed(java.sql.Driver,java.lang.ClassLoader)>-><java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.provider.client.BaseClientDetails: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.ProcessEnvironment$StringKeySet: boolean contains(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: boolean remove(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object remove(int)>
<org.apache.tomcat.util.http.parser.MediaType: java.lang.String toStringNoCharset()>-><java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><com.zaxxer.hikari.pool.HikariProxyStatement: void setQueryTimeout(int)>
<com.zaxxer.hikari.pool.ProxyConnection: void close()>-><com.zaxxer.hikari.pool.ProxyLeakTask: void cancel()>
<com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.springframework.util.LinkedMultiValueMap: int size()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeQualifiedByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JavaBeanSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.zaxxer.hikari.pool.PoolBase: void setupConnection(java.sql.Connection)>-><com.zaxxer.hikari.pool.HikariProxyConnection: boolean getAutoCommit()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.EnumMap$EntrySet: boolean remove(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ClockSource: java.lang.String elapsedDisplayString0(long,long)>-><java.util.concurrent.TimeUnit$2: long convert(long,java.util.concurrent.TimeUnit)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: int size()>
<org.aspectj.bridge.AbortException: void printStackTrace()>-><org.aspectj.bridge.AbortException: void printStackTrace(java.io.PrintStream)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.net.URI: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.HikariConfig: int getMaximumPoolSize()>
<com.alibaba.fastjson.serializer.CollectionCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet: java.util.Iterator iterator()>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><com.zaxxer.hikari.util.UtilityElf: void quietlySleep(long)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.util.ClockSource: long currentTime()>
<org.springframework.security.web.session.SessionManagementFilter: void doFilter_d0427c3f30a7ce8dd1e9fdf5f943241f(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><synthetic.method.SingletonFactory: cc.mrbird.febs.common.security.starter.handler.FebsAuthExceptionEntryPoint getAuthenticationEntryPoint()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.util.locale.BaseLocale: java.lang.String toString()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><java.lang.reflect.Field: java.lang.Class getType()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.provider.BaseRequest: boolean equals(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: boolean equals(java.lang.Object)>
<java.nio.CharBuffer: int hashCode()>-><java.nio.Buffer: int position()>
<org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyDatabaseMetaData: java.lang.String toString()>-><com.zaxxer.hikari.pool.ProxyDatabaseMetaData: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.NullBean: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: com.zaxxer.hikari.pool.PoolEntry newPoolEntry()>-><com.zaxxer.hikari.pool.PoolEntry: void <init>(java.sql.Connection,com.zaxxer.hikari.pool.PoolBase,boolean,boolean)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.ParentTypeAwareTypeInformation: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Locale: boolean equals(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<org.aspectj.util.LangUtil: void elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)>-><java.util.LinkedList: void <init>()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Period: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.text.ChoiceFormat: boolean equals(java.lang.Object)>
<java.util.concurrent.ThreadPoolExecutor: void setMaximumPoolSize(int)>-><java.util.concurrent.ThreadPoolExecutor: void interruptIdleWorkers()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void logPoolState(java.lang.String[])>-><org.slf4j.helpers.NOPLogger: boolean isDebugEnabled()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.FindOps$FindSink: void accept(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onAfterRollback(com.p6spy.engine.common.ConnectionInformation,long,java.sql.SQLException)>-><java.util.ArrayList$Itr: boolean hasNext()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Hashtable$Entry: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.google.common.base.Predicates$AndPredicate: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<sun.reflect.UnsafeDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Character: char charValue()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.beans.FeatureDescriptor: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><com.zaxxer.hikari.util.ClockSource: long elapsedMillis(long)>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.jar.Attributes: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<java.util.Collections: void reverse(java.util.List)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><io.lettuce.core.protocol.CommandArgs$CharArrayArgument: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<org.springframework.security.web.FilterChainProxy$VirtualFilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>-><java.lang.StringBuilder: void <init>()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.security.authentication.RememberMeAuthenticationToken: java.lang.Object getPrincipal()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.io.File: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getKey()>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.Reflection: java.lang.Class getCallerClass()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.aspectj.bridge.context.CompilationAndWeavingContext: java.util.Stack getContextStack()>-><java.lang.ThreadLocal: void set(java.lang.Object)>
<java.util.concurrent.ThreadPoolExecutor$Worker: void <init>(java.util.concurrent.ThreadPoolExecutor,java.lang.Runnable)>-><com.zaxxer.hikari.util.UtilityElf$DefaultThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.logging.log4j.spi.Provider: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$OptimalPropertyAccessor: boolean isCompilable()>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Hashtable: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticObjectFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><sun.reflect.UnsafeStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.core.annotation.AnnotationAttributes: java.lang.String toString()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.nio.CharBuffer: boolean equals(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(char,char)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.management.openmbean.SimpleType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<org.aspectj.bridge.context.CompilationAndWeavingContext$DefaultFormatter: java.lang.String formatEntry(int,java.lang.Object)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.sql.Timestamp: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.Collections$SetFromMap: boolean isEmpty()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.Response: boolean doIsEncodeable(org.apache.catalina.Context,org.apache.catalina.connector.Request,org.apache.catalina.Session,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.web.method.ControllerAdviceBean: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.tree.ByteSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.Integer getOrderNum()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedList: java.lang.Object set(int,java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: java.lang.Object getPrincipal()>
<java.util.concurrent.LinkedBlockingQueue: java.lang.String toString()>-><java.util.concurrent.LinkedBlockingQueue: void fullyUnlock()>
<org.springframework.util.StringUtils: java.lang.String collectionToDelimitedString(java.util.Collection,java.lang.String,java.lang.String,java.lang.String)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.sun.beans.WildcardTypeImpl: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.IdentityHashMap: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Collections$EmptyList: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.TextNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.BigIntegerNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticBooleanFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><sun.reflect.UnsafeStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.LambdaForm: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.IfPointcut$IfTruePointcut: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><io.netty.channel.nio.SelectedSelectionKeySet: boolean add(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean equals(java.lang.Object)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: boolean hasNext()>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.SimpleDateFormat: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.OutputBuffer: void toWriteMode(java.nio.Buffer)>-><java.nio.Buffer: int limit()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<javax.xml.parsers.FactoryConfigurationError: java.lang.String getMessage()>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><javax.management.ObjectInstance: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.management.openmbean.CompositeType: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.expression.spel.ast.StringLiteral: java.lang.String toString()>
<org.aspectj.weaver.JoinPointSignature: int hashCode()>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<java.time.format.DateTimeFormatterBuilder$2: int compare(java.lang.String,java.lang.String)>-><java.lang.String: int length()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><org.apache.tomcat.util.buf.ByteChunk: byte[] getBuffer()>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.LatencyUtils.TimeCappedMovingAverageIntervalEstimator: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.nio.ByteBuffer: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.web.context.support.WebApplicationContextUtils$RequestObjectFactory: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.security.x509.AVA: java.lang.String toString()>
<java.lang.ThreadLocal$SuppliedThreadLocal: java.lang.Object initialValue()>-><reactor.core.scheduler.ParallelScheduler: java.lang.Object get()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.WeakHashMap$Entry: java.lang.Object getValue()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object[])>
<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.web.method.ControllerAdviceBean: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<org.springframework.util.CollectionUtils$MultiValueMapAdapter: boolean containsKey(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: boolean containsKey(java.lang.Object)>
<java.sql.DriverManager: java.sql.Driver getDriver(java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><com.zaxxer.hikari.pool.HikariProxyConnection: boolean isValid(int)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<java.util.AbstractCollection: boolean remove(java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.security.util.DerValue: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.MethodParameter: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap$KeySet: boolean contains(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.util.locale.BaseLocale$Key: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.asm.Type: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.aspectj.util.LangUtil: java.lang.String renderExceptionShort(java.lang.Throwable)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.util.Date getCreateTime()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: void close()>-><com.zaxxer.hikari.pool.ProxyLeakTask$1: void cancel()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFieldsUsing(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.springframework.web.context.request.ServletWebRequest: java.lang.String getDescription(boolean)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getRemoteUser()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Method: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Vector$Itr: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean add(java.util.Map$Entry)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.JapaneseImperialCalendar: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.bridge.SourceLocation: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFilteredFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeLongFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.core.AttributeAccessorSupport: boolean equals(java.lang.Object)>
<org.springframework.util.StringUtils: java.lang.String collectionToDelimitedString(java.util.Collection,java.lang.String,java.lang.String,java.lang.String)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Collections$EmptyMap: java.lang.Object get(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.Integer getOrderNum()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Map _orderEntries(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.io.ObjectStreamClass: java.lang.String toString()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<java.util.concurrent.ThreadPoolExecutor: void reject(java.lang.Runnable)>-><java.util.concurrent.ThreadPoolExecutor$DiscardPolicy: void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.google.common.base.Predicates$ObjectPredicate$1: java.lang.String toString()>
<java.lang.reflect.Field: int hashCode()>-><java.lang.String: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<org.aspectj.weaver.MemberImpl: int hashCode()>-><org.aspectj.weaver.MemberImpl: java.lang.String getName()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<org.springframework.web.util.pattern.LiteralPathElement: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.AbstractList$ListItr: void set(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: int size()>-><io.netty.channel.nio.SelectedSelectionKeySet: int size()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.logging.log4j.Level: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: void resetLock()>-><java.util.concurrent.locks.ReentrantLock: void <init>()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Duration: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>
<org.springframework.web.context.request.AbstractRequestAttributes: void registerRequestDestructionCallback(java.lang.String,java.lang.Runnable)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Long: long longValue()>
<org.apache.catalina.valves.ValveBase: java.lang.String toString()>-><org.apache.catalina.util.ToStringUtil: java.lang.String toString(org.apache.catalina.Contained)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveManagedArray(java.lang.Object,java.util.List,java.lang.Class)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Boolean: void <init>(boolean)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.MemberName: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.io.SerializedString: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.matcher.OrRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.reflect.Constructor: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void handleMBeans(com.zaxxer.hikari.pool.HikariPool,boolean)>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.ParentTypeAwareTypeInformation: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<org.aspectj.weaver.UnresolvedType: java.lang.String signatureToName(java.lang.String)>-><java.lang.String: java.lang.String substring(int,int)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.String toString()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.awt.Rectangle: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><io.lettuce.core.masterslave.MasterSlaveConnectionProvider$ConnectionKey: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.NotAnnotationTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.concurrent.atomic.AtomicLong: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>
<java.util.AbstractList$ListItr: java.lang.Object previous()>-><java.util.AbstractList$Itr: void checkForComodification()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<org.apache.catalina.connector.OutputBuffer: void append(byte[],int,int)>-><org.apache.catalina.connector.OutputBuffer: void flushByteBuffer()>
<java.util.AbstractList: boolean add(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<com.alibaba.fastjson.serializer.MiscCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><java.lang.Throwable: java.lang.String getMessage()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.provider.PolicyParser$PrincipalEntry: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<org.apache.catalina.util.ToStringUtil: java.lang.String containedToString(java.lang.Object,java.lang.Object,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><com.zaxxer.hikari.pool.HikariPool: int getTotalConnections()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.security.Provider: java.lang.Object get(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.core.scheduler.DelegateServiceScheduler: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.HashMap$Node: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.provider.OAuth2Request: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.text.AttributedCharacterIterator$Attribute: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.WithinCodeAnnotationPointcut: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.ZoneOffset: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.Point: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Character: char charValue()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.FloatNode: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.UtilityElf$DefaultThreadFactory: void <init>(java.lang.String,boolean)>-><java.lang.Object: void <init>()>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.WithincodePointcut: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.invoke.MemberName: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.StackTraceElement: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.time.LocalDate: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Optional: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<org.springframework.validation.AbstractBindingResult: void setMessageCodesResolver(org.springframework.validation.MessageCodesResolver)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<java.util.TreeSet: boolean addAll(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><com.zaxxer.hikari.pool.ProxyConnection: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.security.ProtectionDomain: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.awt.Point: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.nio.charset.Charset: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.Throwable: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.ArgsPointcut: java.lang.String toString()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><cc.mrbird.febs.auth.entity.BindUser: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><java.nio.CharBuffer: int hashCode()>
<com.google.common.collect.AbstractMapBasedMultimap: void removeValuesForKey(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: void clear()>
<org.springframework.expression.spel.support.StandardTypeLocator: java.lang.Class findType(java.lang.String)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.ArrayType: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<java.sql.DriverManager: java.util.Enumeration getDrivers()>-><java.sql.DriverManager: boolean isDriverAllowed(java.sql.Driver,java.lang.Class)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.BaseLocale$Key: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.map.ser.std.JsonValueSerializer: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.map.type.ClassKey: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Collections$EmptySet: boolean contains(java.lang.Object)>
<javax.print.MimeType$ParameterMapEntry: int hashCode()>-><java.lang.String: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><org.springframework.http.HttpHeaders: java.lang.Object get(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.util.CollectionUtils$MultiValueMapAdapter: java.lang.Object get(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: java.lang.Boolean call()>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.JsonProcessingException: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<java.time.format.DateTimeFormatterBuilder$2: int compare(java.lang.String,java.lang.String)>-><java.lang.String: int compareTo(java.lang.String)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.beans.factory.config.DependencyDescriptor: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<com.zaxxer.hikari.util.SuspendResumeLock: void acquire()>-><java.util.concurrent.Semaphore: boolean tryAcquire()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.AbstractList: java.util.Iterator iterator()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Arrays$ArrayList: java.lang.Object set(int,java.lang.Object)>
<org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.security.cert.Certificate: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>-><java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void setMetricRegistry(java.lang.Object)>-><com.zaxxer.hikari.util.UtilityElf: boolean safeIsAssignableFrom(java.lang.Object,java.lang.String)>
<org.aspectj.weaver.patterns.NotAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><javax.management.MBeanException: java.lang.Throwable getCause()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.security.authentication.RememberMeAuthenticationToken: java.lang.Object getCredentials()>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><com.zaxxer.hikari.util.ClockSource: long elapsedMillis(long)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.springframework.util.LinkedMultiValueMap: java.util.Set entrySet()>
<com.zaxxer.hikari.pool.HikariPool: java.sql.SQLException createTimeoutException(long)>-><java.sql.SQLException: java.lang.String getSQLState()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.zaxxer.hikari.pool.HikariPool: void softEvictConnections()>-><java.util.concurrent.CopyOnWriteArrayList: void forEach(java.util.function.Consumer)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.Double: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.provider.OAuth2Authentication: int hashCode()>-><org.springframework.security.authentication.RememberMeAuthenticationToken: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.bouncycastle.asn1.ASN1Primitive: boolean equals(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.JapaneseImperialCalendar: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.UtilityElf: int getTransactionIsolation(java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.text.MessageFormat: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><cn.hutool.core.date.format.FastDateFormat: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void checkDefaultIsolation(java.sql.Connection)>-><org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.regex.Pattern: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<java.util.AbstractList: void rangeCheckForAdd(int)>-><com.google.common.base.Joiner$3: int size()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><io.netty.util.AbstractConstant: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.sql.Timestamp: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><com.google.common.base.Joiner$3: java.lang.Object get(int)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.alibaba.fastjson.util.FieldInfo: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.Short: java.lang.String toString()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<sun.text.normalizer.UCharacterProperty: sun.text.normalizer.UCharacterProperty getInstance()>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.ArrayType: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<java.util.LinkedList$ListItr: java.lang.Object previous()>-><java.util.LinkedList$ListItr: void checkForComodification()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<sun.reflect.UnsafeStaticLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.sun.activation.registries.MimeTypeEntry: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>-><java.lang.Object: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<org.springframework.security.web.firewall.RequestWrapper: java.lang.String getServletPath()>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getServletPath()>
<sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl: byte getByte(java.lang.Object)>
<io.netty.util.concurrent.FastThreadLocal: void removeFromVariablesToRemove(io.netty.util.internal.InternalThreadLocalMap,io.netty.util.concurrent.FastThreadLocal)>-><io.netty.channel.nio.SelectedSelectionKeySet: boolean remove(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.BeanExpressionContext: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><sun.misc.Unsafe: java.lang.Object staticFieldBase(java.lang.reflect.Field)>
<java.util.AbstractCollection: java.lang.String toString()>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<com.zaxxer.hikari.pool.ProxyConnection: void setTransactionIsolation(int)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void setTransactionIsolation(int)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Year: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.classic.spi.ClassPackagingData: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.imageio.ImageTypeSpecifier: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.LinkedList: boolean add(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.DoubleNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.base.Predicates$NotPredicate: boolean equals(java.lang.Object)>
<java.sql.DriverManager: java.sql.Driver getDriver(java.lang.String)>-><java.sql.SQLException: void <init>(java.lang.String,java.lang.String)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.ParsePosition: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy: void <init>()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.TreeMap$Entry: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.UEncoder: void urlEncode(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><org.apache.tomcat.util.buf.CharChunk: void append(char)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<org.apache.catalina.connector.OutputBuffer: void writeBytes(byte[],int,int)>-><org.apache.catalina.connector.OutputBuffer: void append(byte[],int,int)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.Class getRawType()>-><java.lang.reflect.Field: java.lang.Class getType()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><java.lang.reflect.Field: java.lang.String toString()>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.net.SocketPermission: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$SingletonSet: int size()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void beforePrototypeCreation(java.lang.String)>-><java.util.Collections$SetFromMap: boolean add(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.util.calendar.Era: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.Year: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.springframework.security.authentication.RememberMeAuthenticationToken: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.net.InetSocketAddress: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.core.convert.support.GenericConversionService$ConverterAdapter: java.lang.String toString()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.node.NullNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.web.context.support.ServletContextResource: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.format.DateTimeFormatter: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.calendar.Era: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.DecimalNode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String getComponent()>
<java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.awt.Point: java.lang.String toString()>
<com.zaxxer.hikari.HikariConfig: java.lang.String generatePoolName()>-><java.util.concurrent.ThreadLocalRandom: java.util.concurrent.ThreadLocalRandom current()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<io.micrometer.core.instrument.Timer$Builder: io.micrometer.core.instrument.Timer$Builder minimumExpectedValue(java.time.Duration)>-><java.time.Duration: long toNanos()>
<org.aspectj.bridge.MessageUtil: java.lang.String addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.env.PropertySource: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.security.BasicPermission: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>-><java.util.IdentityHashMap$EntrySet: java.lang.Object[] toArray()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeBooleanFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ReferencePipeline$7$1: void accept(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: void set(java.lang.Object)>
<com.alibaba.fastjson.serializer.JavaBeanSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean remove(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.config.BeanDefinitionHolder: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object[])>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.hibernate.validator.internal.util.annotation.AnnotationProxy: java.lang.String toString()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: int hashCode()>
<sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$Variable: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.util.locale.provider.RuleBasedBreakIterator: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.zaxxer.hikari.util.ClockSource: java.lang.String elapsedDisplayString0(long,long)>-><java.util.concurrent.TimeUnit$4: long convert(long,java.util.concurrent.TimeUnit)>
<org.aspectj.weaver.patterns.KindedPointcut: java.lang.String toString()>-><java.lang.StringBuffer: void <init>()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><java.lang.reflect.Field: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.temporal.ChronoUnit: java.lang.String toString()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.ResourceBundle$CacheKey: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.codehaus.jackson.io.SerializedString: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: int compareComparables(java.lang.Class,java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: int compareTo(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void appendMap(java.lang.Object,java.lang.StringBuilder,java.util.Set)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.IdentityHashMap: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ReferencePipeline$4$1: void accept(java.lang.Object)>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>
<java.beans.FeatureDescriptor: java.lang.String toString()>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: void setValue(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serializeContents(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeStaticByteFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.Long getDeptId()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.validation.FieldError: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.google.common.collect.ArrayListMultimap: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.type.ArrayType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.asm.ConstantDynamic: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><cn.hutool.core.date.format.FastDateFormat: java.lang.String toString()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><java.lang.reflect.Field: java.lang.String toString()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: void removeRange(int,int)>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.ser.std.JsonValueSerializer: java.lang.String toString()>
<cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.Integer getOrderNum()>
<sun.reflect.UnsafeShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object get(int)>
<org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><com.zaxxer.hikari.util.ClockSource: long elapsedNanos(long)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: void logConfiguration()>-><java.lang.String: boolean matches(java.lang.String)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.MapSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.RuntimeBeanReference: boolean equals(java.lang.Object)>
<org.aspectj.weaver.BCException: void <init>(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.zone.ZoneOffsetTransitionRule: boolean equals(java.lang.Object)>
<org.springframework.security.web.session.SessionManagementFilter: void doFilter_c0f8bb2f7080ed4f256caea8dcaed458(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><synthetic.method.SingletonFactory: cc.mrbird.febs.common.security.starter.handler.FebsAuthExceptionEntryPoint getAuthenticationEntryPoint()>
<java.util.HashMap: int hash(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeStaticIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.MethodInfo: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.Byte: java.lang.String toString()>
<org.springframework.web.util.pattern.RegexPathElement: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.zaxxer.hikari.util.ClockSource$NanosecondClockSource: long elapsedMillis0(long,long)>-><java.util.concurrent.TimeUnit$1: long toMillis(long)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerDependentBean(java.lang.String,java.lang.String)>-><io.netty.channel.nio.SelectedSelectionKeySet: boolean add(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.HikariConfig: java.lang.String getTransactionIsolation()>
<org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Calendar: java.lang.String toString()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.security.web.util.matcher.RequestHeaderRequestMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String getPerms()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.util.BuddhistCalendar: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<reactor.core.scheduler.ParallelScheduler: java.lang.Object get()>-><reactor.core.scheduler.ParallelScheduler: java.util.concurrent.ScheduledExecutorService get()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.base.Predicates$AndPredicate: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<org.aspectj.bridge.context.CompilationAndWeavingContext: java.lang.String getCurrentContext()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker: void <init>(java.lang.String,com.zaxxer.hikari.metrics.PoolStats,io.micrometer.core.instrument.MeterRegistry)>-><io.micrometer.core.instrument.Counter: io.micrometer.core.instrument.Counter$Builder builder(java.lang.String)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.net.HttpCookie: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.sql.Timestamp: boolean equals(java.lang.Object)>
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getQueryString()>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpServletRequest _getHttpServletRequest()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.ClassTypeInformation: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.core.Scannable$Attr$2: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.support.AbstractPointcutAdvisor: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><org.springframework.util.LinkedCaseInsensitiveMap$KeySetIterator: java.lang.Object next()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.google.common.base.Predicates$AndPredicate: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: int hashCode()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.nio.CharBuffer: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.security.jca.ProviderConfig: java.lang.String toString()>
<org.springframework.security.core.context.SecurityContextImpl: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.HikariConfig: boolean isIsolateInternalQueries()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.node.DecimalNode: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><io.netty.util.concurrent.PromiseTask: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.BeanDefinitionHolder: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariProxyConnection: void commit()>-><com.zaxxer.hikari.pool.ProxyConnection: void commit()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void quietlyCloseConnection(java.sql.Connection,java.lang.String)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void close()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.POJONode: boolean equals(java.lang.Object)>
<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.format.DateTimeFormatterBuilder$SettingsParser: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.ArgsPointcut: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.bouncycastle.asn1.ASN1UTCTime: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.Object: java.lang.Class getClass()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: int hashCode()>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.IfPointcut$IfTruePointcut: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Collections$UnmodifiableList: java.lang.Object set(int,java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<org.springframework.util.CollectionUtils$MultiValueMapAdapter: boolean isEmpty()>-><java.util.Collections$UnmodifiableMap: boolean isEmpty()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.aop.framework.JdkDynamicAopProxy: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.metrics.dropwizard.CodahaleHealthChecker: void registerHealthChecks(com.zaxxer.hikari.pool.HikariPool,com.zaxxer.hikari.HikariConfig,com.codahale.metrics.health.HealthCheckRegistry)>-><java.lang.String: java.lang.String valueOf(long)>
<org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.String toString()>
<com.zaxxer.hikari.util.UtilityElf: void quietlySleep(long)>-><java.lang.Thread: void sleep(long)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.security.provider.PolicyFile$PolicyEntry: java.lang.String toString()>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.net.httpserver.HttpConnection: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<javax.management.MBeanPermission: void setClassName(java.lang.String)>-><java.lang.String: java.lang.String substring(int,int)>
<org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>-><org.aspectj.weaver.JoinPointSignature: java.lang.String getName()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: boolean equals(java.lang.Object)>
<org.springframework.web.util.pattern.CaptureTheRestPathElement: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.util.concurrent.PromiseTask: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Hashtable$Entry: java.lang.Object getValue()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.Character: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.aspectj.weaver.MemberImpl: java.lang.String toString()>-><org.aspectj.weaver.UnresolvedType: java.lang.String getName()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.Collections$UnmodifiableCollection: int size()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.MediaTypeCache: java.lang.String[] parse(java.lang.String)>-><org.apache.tomcat.util.http.parser.MediaType: java.lang.String toStringNoCharset()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.WildAnnotationTypePattern: int hashCode()>
<sun.reflect.UnsafeStaticFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putFloat(java.lang.Object,long,float)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.AnnotationTypePattern: boolean isForParameterAnnotationMatch()>
<com.zaxxer.hikari.util.ConcurrentBag: void add(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.concurrent.atomic.AtomicInteger: int get()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<com.google.common.util.concurrent.MoreExecutors$ListeningDecorator: void execute(java.lang.Runnable)>-><java.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)>
<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>-><java.util.IdentityHashMap$KeySet: java.lang.Object[] toArray()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Proxy$Key2: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<java.util.concurrent.TimeUnit$1: long convert(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.TimeUnit$7: long toNanos(long)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.LocalTime: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.springframework.data.redis.connection.RedisPassword: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><com.p6spy.engine.wrapper.ConnectionWrapper: java.sql.Statement createStatement()>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Vector: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.sun.jmx.mbeanserver.Repository: void addMoiToTb(javax.management.DynamicMBean,javax.management.ObjectName,java.lang.String,java.util.Map,com.sun.jmx.mbeanserver.Repository$RegistrationContext)>-><org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.aspectj.weaver.MemberImpl: int hashCode()>-><java.lang.Object: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedList,int)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.ListIterator listIterator(int)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.CodeSigner: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<java.util.ComparableTimSort: void mergeHi(int,int,int,int)>-><org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore$TokenExpiry: int compareTo(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.baomidou.dynamic.datasource.DynamicGroupDataSource: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.TreeMap$EntrySet: boolean contains(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<io.micrometer.core.instrument.Timer$Builder: void <init>(java.lang.String,io.micrometer.core.instrument.Timer$1)>-><io.micrometer.core.instrument.Timer$Builder: void <init>(java.lang.String)>
<org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: java.lang.String toString()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><reactor.util.function.Tuple2: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<java.util.Hashtable: void putAll(java.util.Map)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<java.lang.reflect.Field: int hashCode()>-><java.lang.reflect.Field: java.lang.String getName()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolEntry: java.sql.Connection close()>-><org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.codehaus.jackson.node.LongNode: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildRequestUrl(javax.servlet.http.HttpServletRequest)>-><org.springframework.security.web.util.UrlUtils: java.lang.String buildRequestUrl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.auth.entity.OauthClientDetails: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ClockSource: java.lang.String elapsedDisplayString(long,long)>-><com.zaxxer.hikari.util.ClockSource: java.lang.String elapsedDisplayString0(long,long)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><java.lang.reflect.Field: int hashCode()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.Thread$WeakClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.calendar.Era: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.Color: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.util.RawValue: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void appendCollection(java.lang.Object,java.lang.StringBuilder,java.util.Set)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>
<com.alibaba.fastjson.JSON: java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Formatter$FormatSpecifier: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><java.lang.StringBuilder: void <init>()>
<org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><com.zaxxer.hikari.pool.HikariPool: java.sql.SQLException createTimeoutException(long)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<ch.qos.logback.classic.spi.ThrowableProxy: void <init>(java.lang.Throwable)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.std.IterableSerializer: boolean hasSingleElement(java.lang.Iterable)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl: boolean getBoolean(java.lang.Object)>-><sun.misc.Unsafe: boolean getBooleanVolatile(java.lang.Object,long)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.time.OffsetDateTime: boolean equals(java.lang.Object)>
<org.aspectj.bridge.MessageUtil: java.lang.String renderMessage(org.aspectj.bridge.IMessage,boolean)>-><org.aspectj.util.LangUtil: java.lang.String renderException(java.lang.Throwable,boolean)>
<com.zaxxer.hikari.HikariConfig: void validateNumerics()>-><org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedByteFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Byte: void <init>(byte)>
<org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: org.aspectj.weaver.MemberKind getKind()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.data.redis.connection.util.ByteArrayWrapper: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.concurrent.CompletableFuture: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.SuspendResumeLock: void <init>(boolean)>-><java.util.concurrent.Semaphore: void <init>(int,boolean)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.security.x509.RDN: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.lettuce.core.RedisURI: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.MapLikeType: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.asm.ConstantDynamic: boolean equals(java.lang.Object)>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onBeforeSetAutoCommit(com.p6spy.engine.common.ConnectionInformation,boolean,boolean)>-><java.util.ArrayList$Itr: boolean hasNext()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypePatternList: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<sun.reflect.UnsafeStaticFloatFieldAccessorImpl: float getFloat(java.lang.Object)>-><sun.misc.Unsafe: float getFloat(java.lang.Object,long)>
<org.springframework.security.web.FilterChainProxy$VirtualFilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>-><com.google.common.base.Joiner$3: java.lang.Object get(int)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.ParentTypeAwareTypeInformation: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.map.type.SimpleType: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.ThisOrTargetPointcut: java.lang.String toString()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(java.nio.CharBuffer,java.nio.ByteBuffer)>-><java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.WithincodePointcut: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.misc.Signal: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.invoke.MemberName: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<org.springframework.cglib.core.CollectionUtils: java.util.Map bucket(java.util.Collection,org.springframework.cglib.core.Transformer)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.beans.factory.config.RuntimeBeanReference: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.BinaryNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanNotificationInfo: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.bouncycastle.asn1.ASN1Primitive: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray()>-><java.util.concurrent.LinkedBlockingQueue: java.lang.Object[] toArray()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><java.util.IdentityHashMap: int size()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.VisibilityPredicate: boolean evaluate(java.lang.Object)>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.BeanExpressionContext: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<reactor.core.publisher.Traces: java.lang.String[] extractOperatorAssemblyInformationParts(java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.ArrayList$SubList: java.lang.Object get(int)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<com.zaxxer.hikari.pool.HikariProxyConnection: void abort(java.util.concurrent.Executor)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void abort(java.util.concurrent.Executor)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.LongNode: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeShortFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Short: void <init>(short)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.crypto.CryptoPermission: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<com.fasterxml.classmate.ResolvedType: java.lang.String toString()>-><com.fasterxml.classmate.ResolvedType: java.lang.String getBriefDescription()>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.bouncycastle.asn1.ASN1Boolean: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.imageio.ImageTypeSpecifier: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.image.PackedColorModel: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.IntNode: boolean equals(java.lang.Object)>
<java.nio.CharBuffer: int compareTo(java.nio.CharBuffer)>-><java.nio.Buffer: int remaining()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.google.common.collect.ImmutableEntry: java.lang.Object getKey()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<org.aspectj.weaver.patterns.ReferencePointcut: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<org.apache.catalina.connector.OutputBuffer: void write(java.lang.String)>-><java.lang.String: int length()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.ResourceBundle$CacheKey: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String getMenuName()>
<org.aspectj.bridge.IMessage$Kind$1: int compare(java.lang.Object,java.lang.Object)>-><org.aspectj.bridge.IMessage$Kind$1: int compare(org.aspectj.bridge.IMessage$Kind,org.aspectj.bridge.IMessage$Kind)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.text.AttributedString$AttributedStringIterator: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ReduceOps$3ReducingSink: void accept(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.StringJoiner: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member,boolean)>-><java.lang.reflect.Field: int getModifiers()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.validation.ObjectError: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.CompositeType: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.concurrent.CopyOnWriteArraySet: boolean contains(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.ZoneOffset: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.io.FilePermission: boolean equals(java.lang.Object)>
<java.util.stream.ForEachOps$ForEachTask: void compute()>-><java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: long estimateSize()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.RegularEnumSet: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.Boolean: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Hashtable: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl: short getShort(java.lang.Object)>
<com.p6spy.engine.spy.P6DataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)>-><com.p6spy.engine.common.ConnectionInformation: void setConnection(java.sql.Connection)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.alibaba.fastjson.util.GenericArrayTypeImpl: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.ArraysParallelSortHelpers$FJObject$Merger: void compute()>-><java.time.format.DateTimeFormatterBuilder$2: int compare(java.lang.Object,java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.Response: boolean doIsEncodeable(org.apache.catalina.Context,org.apache.catalina.connector.Request,org.apache.catalina.Session,java.lang.String)>-><java.lang.String: int indexOf(java.lang.String,int)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><java.nio.CharBuffer: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.net.SocketImpl: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.aop.support.annotation.AnnotationMatchingPointcut: java.lang.String toString()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.reflect.Proxy$Key2: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.pool.PoolEntry createPoolEntry()>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.format.support.FormattingConversionService$PrinterConverter: java.lang.String toString()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.springframework.data.util.Pair: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<java.util.AbstractCollection: boolean remove(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.UnresolvedPermission: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.WithinAnnotationPointcut: java.lang.String toString()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy: void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor)>-><java.util.concurrent.FutureTask: void run()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Byte: void <init>(byte)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.calendar.ZoneInfo: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.MapLikeType: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Locale$LocaleKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OperatorBetween: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object get(int)>
<com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void recordBorrowStats(com.zaxxer.hikari.pool.PoolEntry,long)>-><com.zaxxer.hikari.util.ClockSource: long elapsedNanos(long,long)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: java.lang.Object next()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.web.context.support.WebApplicationContextUtils$ResponseObjectFactory: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Short: short shortValue()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><com.google.common.base.Joiner$3: java.lang.Object get(int)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.LongNode: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<com.zaxxer.hikari.pool.HikariPool: java.util.concurrent.ScheduledExecutorService initializeHouseKeepingExecutorService()>-><java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.UUID: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.management.ImmutableDescriptor: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void <init>(com.zaxxer.hikari.metrics.IMetricsTracker)>-><java.lang.Object: void <init>()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.jsontype.NamedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<sun.reflect.UnsafeBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.Boolean: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.HttpParser: org.apache.tomcat.util.http.parser.SkipResult skipConstant(java.io.Reader,java.lang.String)>-><java.lang.String: char charAt(int)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeOptionalFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.LinkedHashMap$LinkedEntrySet: int size()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.StringCache$CharEntry: int hashCode()>-><java.lang.String: int hashCode()>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.tree.ClassTypeSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.cglib.core.ClassInfo: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Double: void <init>(double)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<sun.reflect.UnsafeStaticShortFieldAccessorImpl: short getShort(java.lang.Object)>-><sun.misc.Unsafe: short getShort(java.lang.Object,long)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Constructor: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.DigitList: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.google.common.base.Predicates$NotPredicate: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: int hashCode()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.ArrayList$SubList: int size()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<org.aspectj.util.LangUtil: void elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.security.util.DerValue: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorImpl: java.lang.String getSetMessage(java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<javax.print.MimeType$ParameterMapEntry: int hashCode()>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Constructor: boolean equals(java.lang.Object)>
<java.util.IdentityHashMap$EntrySet: boolean contains(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.util.TypeKey: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><cc.mrbird.febs.auth.entity.OauthClientDetails: boolean equals(java.lang.Object)>
<org.aspectj.bridge.MessageUtil: java.lang.String renderMessage(org.aspectj.bridge.IMessage,boolean)>-><java.lang.StringBuilder: void <init>()>
<java.beans.Introspector: void processPropertyDescriptors()>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void <init>(java.util.concurrent.LinkedBlockingQueue)>-><java.util.concurrent.LinkedBlockingQueue: int size()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.MethodType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><org.springframework.util.LinkedCaseInsensitiveMap$EntrySetIterator: java.lang.Object next()>
<org.springframework.aop.framework.ProxyConfig: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<java.lang.Object: java.lang.String toString()>-><springfox.documentation.service.ResponseMessage: int hashCode()>
<java.util.Collections$SynchronizedCollection: boolean remove(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet: boolean remove(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.ObjectInstance: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><com.zaxxer.hikari.util.ClockSource: long elapsedMillis(long)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.OffsetDateTime: java.lang.String toString()>
<org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><java.nio.CharBuffer: char[] array()>
<org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>-><org.aspectj.weaver.ResolvedType$Missing: java.lang.String getName()>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.time.Period: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<org.apache.catalina.connector.OutputBuffer: void write(java.lang.String,int,int)>-><org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.Byte: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.ZoneOffset: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.invoke.LambdaFormEditor$Transform: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.Extension: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.HikariDataSource: java.sql.Connection getConnection()>-><com.zaxxer.hikari.HikariConfig: void validate()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FastDateFormat: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.aspectj.weaver.JoinPointSignature: int hashCode()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(java.nio.CharBuffer,java.nio.ByteBuffer)>-><java.nio.HeapCharBuffer: char get()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$HouseKeeper: void <init>(com.zaxxer.hikari.pool.HikariPool,com.zaxxer.hikari.pool.HikariPool$1)>-><com.zaxxer.hikari.pool.HikariPool$HouseKeeper: void <init>(com.zaxxer.hikari.pool.HikariPool)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><cn.hutool.http.ContentType: java.lang.String toString()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<io.netty.channel.nio.SelectedSelectionKeySet: boolean add(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet: boolean add(java.nio.channels.SelectionKey)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveManagedArray(java.lang.Object,java.util.List,java.lang.Class)>-><com.google.common.base.Joiner$3: java.lang.Object get(int)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: java.util.concurrent.ScheduledExecutorService initializeHouseKeepingExecutorService()>-><java.util.concurrent.ThreadPoolExecutor$DiscardPolicy: void <init>()>
<reactor.core.publisher.FluxIterable$IterableSubscriptionConditional: boolean isEmpty()>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<sun.reflect.UnsafeStaticIntegerFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeStaticIntegerFieldAccessorImpl: int getInt(java.lang.Object)>
<java.util.ComparableTimSort: void mergeHi(int,int,int,int)>-><org.aspectj.bridge.IMessage$Kind: int compareTo(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.DecimalNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.aspectj.weaver.patterns.TypePatternList: java.lang.String toString()>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<org.aspectj.weaver.UnresolvedType: java.lang.String signatureToName(java.lang.String)>-><java.lang.String: char charAt(int)>
<org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.Tag: int compareTo(io.micrometer.core.instrument.Tag)>-><java.lang.String: int compareTo(java.lang.String)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<org.aspectj.util.LangUtil: java.lang.String renderExceptionShort(java.lang.Throwable)>-><java.lang.StringBuilder: void <init>()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.IdentityHashMap: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.beans.FeatureDescriptor: java.lang.String toString()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.lang.reflect.Field: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><io.netty.util.AbstractConstant: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Hashtable: int size()>
<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>-><reactor.core.Fuseable$QueueSubscription: java.lang.Object[] toArray()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeOptionalFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.security.provider.PolicyFile$PolicyEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.lettuce.core.internal.AbstractInvocationHandler: boolean equals(java.lang.Object)>
<org.springframework.security.web.authentication.WebAuthenticationDetails: boolean equals(java.lang.Object)>-><org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String getSessionId()>
<java.util.stream.ReferencePipeline$11$1: void accept(java.lang.Object)>-><java.util.stream.ReferencePipeline$11$1: void accept(java.lang.Object)>
<org.springframework.expression.spel.ast.OperatorBetween: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<java.util.Collections$SetFromMap: boolean remove(java.lang.Object)>-><org.springframework.util.LinkedCaseInsensitiveMap: java.lang.Object remove(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.security.oauth2.common.exceptions.OAuth2Exception: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.security.util.DerInputBuffer: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.Object: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.QueryRequest: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: int hashCode()>
<reactor.core.publisher.FluxOnAssembly$OnAssemblyException: java.lang.String getMessage()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArraySet: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<org.springframework.beans.CachedIntrospectionResults: boolean isClassLoaderAccepted(java.lang.ClassLoader)>-><org.springframework.util.LinkedCaseInsensitiveMap$EntryIterator: boolean hasNext()>
<org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: void <init>()>
<org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><com.zaxxer.hikari.pool.ProxyLeakTaskFactory: com.zaxxer.hikari.pool.ProxyLeakTask schedule(com.zaxxer.hikari.pool.PoolEntry)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.bridge.context.CompilationAndWeavingContext: java.util.Stack getContextStack()>-><java.lang.ThreadLocal: java.lang.Object get()>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<java.sql.SQLException: void <init>(java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><java.lang.reflect.Field: java.lang.String toString()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.collections.ConcurrentCache: void put(java.lang.Object,java.lang.Object)>-><java.util.WeakHashMap: void putAll(java.util.Map)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.EnumMap: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.Response: javax.servlet.ServletOutputStream getOutputStream()>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeStaticObjectFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: boolean shouldCreateAnotherConnection()>-><com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.util.ConcurrentBag access$200(com.zaxxer.hikari.pool.HikariPool)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.core.annotation.AnnotationsScanner: java.lang.annotation.Annotation[] getDeclaredAnnotations(java.lang.reflect.AnnotatedElement,boolean)>-><java.lang.reflect.Field: java.lang.annotation.Annotation[] getDeclaredAnnotations()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.asm.Type: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.asm.Type: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<java.util.AbstractCollection: boolean isEmpty()>-><com.google.common.base.Joiner$3: int size()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.context.request.ServletRequestAttributes: java.lang.Object getSessionMutex()>-><org.springframework.web.context.request.ServletRequestAttributes: javax.servlet.http.HttpSession obtainSession()>
<org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariProxyStatement: void setQueryTimeout(int)>-><com.zaxxer.hikari.pool.HikariProxyStatement: void setQueryTimeout(int)>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><com.zaxxer.hikari.util.ClockSource: long currentTime()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.security.Provider$UString: java.lang.String toString()>
<org.springframework.web.util.pattern.SingleCharWildcardedPathElement: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.sun.jmx.mbeanserver.NamedObject: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.lettuce.core.RedisURI: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><com.zaxxer.hikari.pool.PoolBase: void quietlyCloseConnection(java.sql.Connection,java.lang.String)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.data.util.GenericArrayTypeInformation: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.http.HttpStatus: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><io.netty.util.AbstractConstant: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.ArrayList$SubList$1: java.lang.Object previous()>-><java.util.ConcurrentModificationException: void <init>()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList: java.lang.Object set(int,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object set(int,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.TreeMap$Entry: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<java.util.concurrent.ThreadPoolExecutor$DiscardPolicy: void <init>()>-><java.lang.Object: void <init>()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.Thread$WeakClassKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: void commit()>-><com.zaxxer.hikari.pool.HikariProxyConnection: void commit()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><ch.qos.logback.core.joran.spi.ElementPath: java.lang.String toString()>
<sun.reflect.UnsafeStaticFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.jar.Attributes: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: void validate()>-><ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object)>
<org.apache.catalina.util.SessionConfig: java.lang.String getSessionUriParamName(org.apache.catalina.Context)>-><org.apache.catalina.util.SessionConfig: java.lang.String getConfiguredSessionCookieName(org.apache.catalina.Context)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.awt.Font: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.data.util.GenericArrayTypeInformation: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyConnection: void setNetworkTimeout(java.util.concurrent.Executor,int)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void setNetworkTimeout(java.util.concurrent.Executor,int)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.node.POJONode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.chrono.AbstractChronology: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.WildAnnotationTypePattern: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ClassKey: java.lang.String toString()>
<com.zaxxer.hikari.util.PropertyElf: java.util.Set getPropertyNames(java.lang.Class)>-><java.lang.reflect.Method: java.lang.String getName()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.context.support.ApplicationListenerDetector: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl: char getChar(java.lang.Object)>-><sun.misc.Unsafe: char getCharVolatile(java.lang.Object,long)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void beforePrototypeCreation(java.lang.String)>-><javax.security.auth.Subject$SecureSet: boolean add(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.misc.Signal: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.EnumMap$EntrySet: int size()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<ch.qos.logback.classic.spi.ThrowableProxy: void <init>(java.lang.Throwable)>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyFactory: com.zaxxer.hikari.pool.ProxyConnection getProxyConnection(com.zaxxer.hikari.pool.PoolEntry,java.sql.Connection,com.zaxxer.hikari.util.FastList,com.zaxxer.hikari.pool.ProxyLeakTask,long,boolean,boolean)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void <init>(com.zaxxer.hikari.pool.PoolEntry,java.sql.Connection,com.zaxxer.hikari.util.FastList,com.zaxxer.hikari.pool.ProxyLeakTask,long,boolean,boolean)>
<java.util.Hashtable: void putAll(java.util.Map)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><reactor.util.function.Tuple2: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Vector: java.lang.Object set(int,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.TextNode: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.management.openmbean.CompositeType: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: int hashCode()>
<org.springframework.cglib.proxy.Enhancer: void emitMethods(org.springframework.cglib.core.ClassEmitter,java.util.List,java.util.List)>-><java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<java.util.LinkedHashSet: void <init>(java.util.Collection)>-><io.netty.channel.nio.SelectedSelectionKeySet: int size()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><com.zaxxer.hikari.pool.PoolEntry: java.sql.Connection close()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.reflect.Constructor: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.bouncycastle.asn1.DERIA5String: java.lang.String toString()>
<org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>-><org.aspectj.weaver.MemberImpl: org.aspectj.weaver.UnresolvedType getDeclaringType()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.env.PropertySource: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<org.springframework.cglib.core.KeyFactory$Generator: void generateClass(org.springframework.asm.ClassVisitor)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.core.io.AbstractResource: java.lang.String toString()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.security.BasicPermission: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void setCatalog(java.lang.String)>
<org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore$TokenExpiry: int compareTo(java.util.concurrent.Delayed)>-><java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask: long getDelay(java.util.concurrent.TimeUnit)>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Proxy$Key2: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.p6spy.engine.spy.option.P6OptionsRepository$DelayedOptionChange: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<java.lang.ThreadLocal$SuppliedThreadLocal: java.lang.Object initialValue()>-><java.lang.ref.Reference: java.lang.Object get()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.MemberName: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><java.nio.CharBuffer: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object remove(int)>-><java.util.concurrent.locks.ReentrantLock: void unlock()>
<org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object set(int,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: void checkForComodification()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ListSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.security.CodeSource: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<java.lang.Object: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.sun.beans.WildcardTypeImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.DependencyDescriptor: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.C2BConverter: void convert(java.nio.CharBuffer,java.nio.ByteBuffer)>-><java.nio.charset.CoderResult: boolean isUnderflow()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.time.zone.ZoneRules: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.OptionalDouble: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><java.util.concurrent.TimeUnit$4: long toMillis(long)>
<com.fasterxml.jackson.databind.ser.impl.IteratorSerializer: void serializeContents(java.util.Iterator,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.micrometer.core.instrument.Tags$ArrayIterator: boolean hasNext()>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeOptionalFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.temporal.IsoFields$Field$3: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><com.zaxxer.hikari.pool.PoolBase: void executeSql(java.sql.Connection,java.lang.String,boolean)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<java.lang.reflect.Field: sun.reflect.FieldAccessor acquireFieldAccessor(boolean)>-><java.lang.reflect.Field: void setFieldAccessor(sun.reflect.FieldAccessor,boolean)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<java.util.HashMap: int hash(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getValue()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.aop.support.AbstractPointcutAdvisor: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<java.util.AbstractList$Itr: boolean hasNext()>-><com.google.common.base.Joiner$3: int size()>
<org.aspectj.weaver.patterns.TypePatternList: java.lang.String toString()>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.env.PropertySource: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.util.function.Tuple2: java.lang.String toString()>
<ch.qos.logback.core.helpers.ThrowableToStringArray: java.lang.String formatFirstLine(java.lang.Throwable,java.lang.StackTraceElement[])>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.management.ImmutableDescriptor: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FastDateFormat: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: int hashCode()>-><java.lang.String: int hashCode()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.HttpCookie: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.lang.String toString()>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putByteVolatile(java.lang.Object,long,byte)>
<org.apache.tomcat.util.http.parser.MediaType: org.apache.tomcat.util.http.parser.MediaType parseMediaType(java.io.StringReader)>-><java.lang.String: int length()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotAnnotationTypePattern: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: void removeRange(int,int)>-><java.util.concurrent.locks.ReentrantLock: void unlock()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.format.DateTimeFormatterBuilder$StringLiteralPrinterParser: java.lang.String toString()>
<org.aspectj.util.LangUtil: void elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)>-><java.util.LinkedList: java.lang.Object removeLast()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: java.lang.String toString()>
<com.zaxxer.hikari.HikariDataSource: void close()>-><ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.LambdaForm: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.data.redis.connection.RedisNode: boolean equals(java.lang.Object)>
<org.aspectj.bridge.SourceLocation: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.util.LinkedMultiValueMap: java.lang.String toString()>
<org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Character: char charValue()>
<com.p6spy.engine.spy.P6DataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)>-><com.p6spy.engine.spy.P6DataSource: void bindDataSource()>
<com.zaxxer.hikari.pool.PoolBase: void setupConnection(java.sql.Connection)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void setReadOnly(boolean)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: java.lang.Object next()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.net.Inet4Address: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.http.ResponseEntity: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: int size()>
<com.zaxxer.hikari.pool.PoolEntry: int getState()>-><java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl: int get(java.lang.Object)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeOptionalFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.context.support.ApplicationListenerDetector: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Parameter: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.JumboEnumSet: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.HttpParser: java.lang.String readToken(java.io.Reader)>-><java.io.StringReader: void mark(int)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>
<cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.Long getUserId()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.URL: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.reflect.WeakCache$CacheValue: boolean equals(java.lang.Object)>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><java.net.HttpCookie: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.net.SocketPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.zip.ZipEntry: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.asm.Handle: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.util.function.Tuple2: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<sun.reflect.UnsafeFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.provider.PolicyFile$SelfPermission: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OperatorBetween: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.temporal.WeekFields: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.io.File: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.Collections$SetFromMap: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFieldsUsing(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><com.sun.jmx.mbeanserver.JmxMBeanServer$3: java.lang.Object run()>
<com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker: void <init>(java.lang.String,com.zaxxer.hikari.metrics.PoolStats,io.micrometer.core.instrument.MeterRegistry)>-><java.lang.Object: void <init>()>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.HikariConfig: java.lang.Object getMetricRegistry()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.p6spy.engine.logging.Category: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.MediaType: org.apache.tomcat.util.http.parser.MediaType parseMediaType(java.io.StringReader)>-><org.apache.tomcat.util.http.parser.HttpParser: org.apache.tomcat.util.http.parser.SkipResult skipConstant(java.io.Reader,java.lang.String)>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cn.hutool.core.date.format.FormatCache$MultipartKey: boolean equals(java.lang.Object)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.hibernate.validator.internal.util.annotation.AnnotationDescriptor: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><io.lettuce.core.masterslave.RedisMasterSlaveNode: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<java.util.concurrent.FutureTask: void run()>-><com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: java.lang.Object call()>
<sun.reflect.UnsafeFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><sun.reflect.FieldAccessorImpl: void <init>()>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.concurrent.locks.LockSupport: void parkNanos(long)>
<com.google.common.util.concurrent.MoreExecutors$ListeningDecorator: void execute(java.lang.Runnable)>-><java.util.concurrent.ScheduledThreadPoolExecutor: void execute(java.lang.Runnable)>
<sun.reflect.UnsafeDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<org.apache.tomcat.util.http.parser.HttpParser: java.lang.String readTokenOrQuotedString(java.io.Reader,boolean)>-><org.apache.tomcat.util.http.parser.HttpParser: java.lang.String readToken(java.io.Reader)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.util.concurrent.PromiseTask: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.Vector$Itr: java.lang.Object next()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.math.BigInteger: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Year: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.locks.ReentrantLock: java.lang.String toString()>
<org.aspectj.weaver.patterns.ReferencePointcut: java.lang.String toString()>-><java.lang.StringBuffer: void <init>()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$StringEntry: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.security.provider.PolicyParser$PermissionEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object get(int)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.validation.DataBinder: org.springframework.beans.TypeConverter getTypeConverter()>-><org.springframework.validation.DataBinder: java.lang.Object getTarget()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.web.method.ControllerAdviceBean: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean equals(java.lang.Object)>
<org.springframework.web.util.pattern.RegexPathElement: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.aspectj.weaver.patterns.HandlerPointcut: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.temporal.ChronoUnit: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.AbstractMap$SimpleEntry: java.lang.String toString()>
<org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><ch.qos.logback.core.subst.Token: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.security.UnresolvedPermission: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><java.lang.Object: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: boolean equals(java.lang.Object)>
<org.springframework.security.core.context.SecurityContextImpl: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<sun.reflect.UnsafeObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Class: boolean isAssignableFrom(java.lang.Class)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.util.unit.DataSize: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><org.springframework.util.LinkedCaseInsensitiveMap$EntrySetIterator: java.lang.Object next()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><java.nio.CharBuffer: int hashCode()>
<org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>-><java.lang.StringBuffer: void <init>()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: boolean add(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><org.codehaus.jackson.JsonProcessingException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.IntNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void setNetworkTimeout(java.util.concurrent.Executor,int)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.IfPointcut: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.POJONode: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.IdentityHashMap$EntrySet: boolean contains(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection()>-><com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>
<org.aspectj.weaver.patterns.WithincodePointcut: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.HashMap$EntrySet: boolean remove(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>-><java.lang.Class: boolean isAssignableFrom(java.lang.Class)>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><com.zaxxer.hikari.util.SuspendResumeLock: void release()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.JapaneseImperialCalendar: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.aspectj.weaver.UnresolvedType: java.lang.String signatureToName(java.lang.String)>-><java.lang.String: int indexOf(java.lang.String)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$Variable: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.alibaba.fastjson.JSONArray: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>
<org.springframework.security.web.savedrequest.DefaultSavedRequest: java.lang.String getRedirectUrl()>-><org.springframework.security.web.util.UrlUtils: java.lang.String buildFullRequestUrl(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.support.DefaultIntroductionAdvisor: boolean equals(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: boolean shouldCreateAnotherConnection()>-><com.zaxxer.hikari.pool.HikariPool: int getTotalConnections()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.Duration: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.ClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.image.ColorModel: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.CollectionCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.stream.ReferencePipeline$11$1: void accept(java.lang.Object)>-><java.util.stream.Sink$OfInt: void accept(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<org.aspectj.weaver.JoinPointSignature: int compareTo(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: int compareTo(org.aspectj.weaver.Member)>
<java.util.HashSet: void <init>(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.support.GenericBeanDefinition: boolean equals(java.lang.Object)>
<org.aspectj.bridge.AbortException: void printStackTrace(java.io.PrintWriter)>-><java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>
<com.fasterxml.jackson.databind.ser.std.IterableSerializer: boolean hasSingleElement(java.lang.Iterable)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.security.cert.Certificate: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<org.aspectj.weaver.MemberImpl: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.alibaba.fastjson.JSONPObject: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ListSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<org.apache.catalina.connector.OutputBuffer: void toWriteMode(java.nio.Buffer)>-><java.nio.Buffer: java.nio.Buffer limit(int)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><reactor.core.publisher.FluxOnAssembly$OnAssemblyException: java.lang.String getMessage()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><javax.management.MBeanInfo: java.lang.String toString()>
<java.util.AbstractMap: int hashCode()>-><javax.print.MimeType$ParameterMapEntry: int hashCode()>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><javax.management.openmbean.TabularDataSupport: java.util.Set entrySet()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.atomic.AtomicBoolean: java.lang.String toString()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore$TokenExpiry: long getDelay(java.util.concurrent.TimeUnit)>-><java.lang.System: long currentTimeMillis()>
<com.zaxxer.hikari.pool.ProxyConnection: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.Point: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<org.apache.catalina.connector.CoyoteOutputStream: void write(byte[])>-><org.apache.catalina.connector.CoyoteOutputStream: void write(byte[],int,int)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean contains(java.lang.Object)>-><java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.util.MimeType: java.lang.String toString()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><reactor.util.function.Tuple4: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><com.zaxxer.hikari.HikariConfig: java.lang.String getPassword()>
<com.alibaba.fastjson.util.GenericArrayTypeImpl: java.lang.String toString()>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<reactor.core.publisher.Traces: java.lang.String[] extractOperatorAssemblyInformationParts(java.lang.String)>-><com.google.common.base.Joiner$3: int size()>
<java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.management.openmbean.ArrayType: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.security.Provider$UString: java.lang.String toString()>
<org.springframework.security.web.session.SessionManagementFilter: void doFilter_68e151f3e9a47bf82064ac958f54d6a8(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><synthetic.method.SingletonFactory: cc.mrbird.febs.common.security.starter.handler.FebsAuthExceptionEntryPoint getAuthenticationEntryPoint()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: int hashCode()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<org.aspectj.util.LangUtil: java.lang.String renderException(java.lang.Throwable,boolean)>-><org.aspectj.util.LangUtil: void elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.env.PropertySource: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$EmptyList: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.TabularDataSupport: boolean equals(java.lang.Object)>
<io.netty.util.internal.logging.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.bridge.AbortException: void printStackTrace()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.hibernate.validator.internal.util.annotation.AnnotationProxy: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFieldsUsing(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.concurrent.CopyOnWriteArraySet: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><org.springframework.util.LinkedMultiValueMap: java.lang.Object get(java.lang.Object)>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.Short: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.ArrayNode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask: boolean cancel(boolean)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.Long: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.nio.ByteBuffer: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<com.zaxxer.hikari.util.PropertyElf: java.util.Properties copyProperties(java.util.Properties)>-><java.util.Properties: void <init>()>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.netty.channel.nio.SelectedSelectionKeySet: int size()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.POJONode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.deser.SettableBeanProperty: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ListSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><com.google.common.base.Joiner$3: java.lang.Object get(int)>
<com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.String[] findEnumValues(java.lang.Class,java.lang.Enum[],java.lang.String[])>-><java.lang.reflect.Field: java.lang.String getName()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.FieldPosition: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.JapaneseImperialCalendar: boolean equals(java.lang.Object)>
<org.slf4j.helpers.Util: void report(java.lang.String,java.lang.Throwable)>-><org.aspectj.bridge.AbortException: void printStackTrace()>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.aspectj.bridge.SourceLocation: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(int)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.concurrent.TimeUnit$1: long convert(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.TimeUnit$4: long toNanos(long)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.awt.image.ComponentColorModel: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>
<java.util.concurrent.TimeUnit$3: long convert(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.TimeUnit$1: long toMillis(long)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.math.BigInteger: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.util.context.Context0: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy: void <init>()>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<com.zaxxer.hikari.pool.HikariPool$1: void <init>(com.zaxxer.hikari.pool.HikariPool,long)>-><com.zaxxer.hikari.metrics.PoolStats: void <init>(long)>
<java.lang.reflect.Field: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>-><java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>
<org.springframework.aop.framework.AdvisedSupport: java.lang.String toString()>-><org.springframework.aop.framework.ProxyConfig: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<java.beans.FeatureDescriptor: java.lang.String toString()>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.apache.catalina.connector.Response: void setContentType(java.lang.String)>-><org.apache.tomcat.util.http.parser.MediaTypeCache: java.lang.String[] parse(java.lang.String)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: java.lang.Boolean call()>-><com.zaxxer.hikari.pool.HikariPool: void logPoolState(java.lang.String[])>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Long: void <init>(long)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: int hashCode()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.aop.support.annotation.AnnotationMatchingPointcut: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><java.lang.Throwable: java.lang.String getMessage()>
<sun.reflect.UnsafeStaticObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.EnumMap$EntrySet: boolean contains(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.RegularEnumSet: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.AttributeAccessorSupport: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><org.apache.commons.logging.LogConfigurationException: java.lang.Throwable getCause()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.DecimalNode: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.ClassKey: boolean equals(java.lang.Object)>
<org.springframework.web.context.support.WebApplicationContextUtils$RequestObjectFactory: javax.servlet.ServletRequest getObject()>-><org.springframework.web.context.request.ServletRequestAttributes: javax.servlet.http.HttpServletRequest getRequest()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<org.springframework.util.ReflectionUtils: void doWithFields(java.lang.Class,org.springframework.util.ReflectionUtils$FieldCallback,org.springframework.util.ReflectionUtils$FieldFilter)>-><java.lang.reflect.Field: java.lang.String getName()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<sun.reflect.UnsafeCharacterFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><sun.reflect.UnsafeFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: void add(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><ch.qos.logback.classic.Logger: void info(java.lang.String)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$EmptyList: java.lang.Object get(int)>
<sun.reflect.UnsafeBooleanFieldAccessorImpl: boolean getBoolean(java.lang.Object)>-><sun.misc.Unsafe: boolean getBoolean(java.lang.Object,long)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.security.x509.Extension: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.apache.tomcat.util.buf.UEncoder: org.apache.tomcat.util.buf.CharChunk encodeURL(java.lang.String,int,int)>-><org.apache.tomcat.util.buf.C2BConverter: void <init>(java.nio.charset.Charset)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.jar.Attributes: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$StringEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.expression.spel.standard.TokenKind: java.lang.String toString()>
<sun.reflect.UnsafeFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Character: char charValue()>
<com.zaxxer.hikari.pool.PoolBase: void checkDefaultIsolation(java.sql.Connection)>-><org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.patterns.ReferencePointcut: java.lang.String toString()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.google.common.collect.ImmutableEntry: java.lang.Object getValue()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.invoke.LambdaFormEditor$Transform: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.BinaryNode: boolean equals(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.springframework.core.convert.TypeDescriptor: void <init>(java.lang.reflect.Field)>-><java.lang.reflect.Field: java.lang.Class getType()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.aspectj.weaver.JoinPointSignature: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><io.netty.buffer.SwappedByteBuf: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.provider.RuleBasedBreakIterator: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.POJONode: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.IdentityHashMap$KeySet: int size()>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeShortFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<com.zaxxer.hikari.pool.PoolBase: void initializeDataSource()>-><com.zaxxer.hikari.HikariConfig: java.lang.String getDataSourceClassName()>
<org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.Collections$SetFromMap: void <init>(java.util.Map)>-><org.springframework.util.LinkedCaseInsensitiveMap: java.util.Set keySet()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.DecimalNode: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.CharChunk: void <init>(int)>-><org.apache.tomcat.util.buf.AbstractChunk: void <init>()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<io.micrometer.core.instrument.Timer$Builder: io.micrometer.core.instrument.Timer$Builder maximumExpectedValue(java.time.Duration)>-><io.micrometer.core.instrument.distribution.DistributionStatisticConfig$Builder: io.micrometer.core.instrument.distribution.DistributionStatisticConfig$Builder maximumExpectedValue(java.lang.Long)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.String,java.lang.String)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.sun.jmx.mbeanserver.MBeanAnalyzer: void initMaps(java.lang.Class,com.sun.jmx.mbeanserver.MBeanIntrospector)>-><java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.JsonMappingException: java.lang.String toString()>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<sun.util.locale.provider.CalendarNameProviderImpl: boolean isSupportedLocale(java.util.Locale)>-><io.netty.channel.nio.SelectedSelectionKeySet: boolean contains(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void setMetricsTrackerFactory(com.zaxxer.hikari.metrics.MetricsTrackerFactory)>-><com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void <init>(com.zaxxer.hikari.metrics.IMetricsTracker)>
<com.google.common.util.concurrent.MoreExecutors$ListeningDecorator: void execute(java.lang.Runnable)>-><reactor.core.scheduler.DelegateServiceScheduler$UnsupportedScheduledExecutorService: void execute(java.lang.Runnable)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><javax.management.MBeanNotificationInfo: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean remove(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.support.DefaultIntroductionAdvisor: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.SuspendResumeLock: void <init>()>-><com.zaxxer.hikari.util.SuspendResumeLock: void <init>(boolean)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><java.lang.reflect.Field: java.lang.String toString()>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.bouncycastle.asn1.ASN1OctetString: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void recordBorrowStats(com.zaxxer.hikari.pool.PoolEntry,long)>-><com.zaxxer.hikari.util.ClockSource: long currentTime()>
<cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String getCreateTimeTo()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<java.util.AbstractCollection: java.lang.Object[] toArray()>-><io.netty.channel.nio.SelectedSelectionKeySet: int size()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.core.env.PropertySource: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.OptionalInt: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<org.apache.catalina.connector.CoyoteOutputStream: void write(byte[],int,int)>-><org.apache.catalina.connector.CoyoteOutputStream: boolean checkNonBlockingWrite()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.Color: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.FieldPosition: boolean equals(java.lang.Object)>
<java.util.TreeMap: java.util.TreeMap$Entry getEntry(java.lang.Object)>-><org.aspectj.bridge.IMessage$Kind: int compareTo(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.HashMap$Node: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.Provider$ServiceKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<java.util.AbstractCollection: java.lang.Object[] toArray()>-><javax.print.MimeType$ParameterMapEntrySet: int size()>
<java.util.Spliterator: long getExactSizeIfKnown()>-><java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: long estimateSize()>
<javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpServletRequest _getHttpServletRequest()>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onAfterCommit(com.p6spy.engine.common.ConnectionInformation,long,java.sql.SQLException)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<com.zaxxer.hikari.pool.ProxyConnection: void commit()>-><com.zaxxer.hikari.util.ClockSource: long currentTime()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<java.sql.DriverManager: java.util.Enumeration getDrivers()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.io.ObjectStreamClass$FieldReflectorKey: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.p6spy.engine.spy.option.P6OptionsRepository$DelayedOptionChange: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: int hashCode()>
<org.springframework.cglib.core.CollectionUtils: java.util.Map bucket(java.util.Collection,org.springframework.cglib.core.Transformer)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<com.zaxxer.hikari.HikariConfig: void logConfiguration()>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.List resolveManagedList(java.lang.Object,java.util.List)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object get(int)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.asm.ConstantDynamic: boolean equals(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.RenderingHints$Key: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String getIcon()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.provider.RuleBasedBreakIterator: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.net.HttpCookie: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.web.util.pattern.CaptureTheRestPathElement: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<org.aspectj.bridge.MessageUtil: java.lang.String renderMessage(org.aspectj.bridge.IMessage,boolean)>-><org.aspectj.bridge.MessageUtil: java.lang.String addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.aspectj.weaver.BCException: void printStackTrace(java.io.PrintWriter)>-><java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.sun.jmx.mbeanserver.NamedObject: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.baomidou.dynamic.datasource.DynamicGroupDataSource: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.asm.Type: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.io.ObjectStreamClass$FieldReflectorKey: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: java.lang.String toString()>
<org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><io.lettuce.core.masterslave.RedisMasterSlaveNode: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putShortVolatile(java.lang.Object,long,short)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<reactor.core.scheduler.ReactorThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>-><java.lang.StringBuilder: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnnotationTypePattern: boolean isForParameterAnnotationMatch()>
<sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putLongVolatile(java.lang.Object,long,long)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.EnumMap: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<com.zaxxer.hikari.pool.HikariProxyConnection: int getTransactionIsolation()>-><com.zaxxer.hikari.pool.HikariProxyConnection: int getTransactionIsolation()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.asm.Type: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.distribution.DistributionStatisticConfig$Builder: io.micrometer.core.instrument.distribution.DistributionStatisticConfig$Builder minimumExpectedValue(java.lang.Long)>-><io.micrometer.core.instrument.distribution.DistributionStatisticConfig: java.lang.Long access$402(io.micrometer.core.instrument.distribution.DistributionStatisticConfig,java.lang.Long)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.EnumMap$EntrySet: java.util.Iterator iterator()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><ch.qos.logback.core.subst.Node: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.net.SocketPermission: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeIntegerFieldAccessorImpl: int getInt(java.lang.Object)>-><sun.misc.Unsafe: int getInt(java.lang.Object,long)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.NamePattern: int hashCode()>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>-><io.netty.channel.nio.SelectedSelectionKeySet: int size()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.DigitList: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.boot.ansi.AnsiBackground: java.lang.String toString()>
<sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><sun.reflect.UnsafeStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.util.unit.DataSize: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.TreeSet: boolean isEmpty()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><com.zaxxer.hikari.pool.PoolBase: void quietlyCloseConnection(java.sql.Connection,java.lang.String)>
<com.zaxxer.hikari.pool.PoolBase: void executeSql(java.sql.Connection,java.lang.String,boolean)>-><com.zaxxer.hikari.pool.HikariProxyConnection: java.sql.Statement createStatement()>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.TreeMap$Entry: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.C2BConverter: boolean isUndeflow()>-><java.nio.Buffer: int position()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.validation.FieldError: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.invoke.LambdaForm$Name: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<org.aspectj.bridge.SourceLocation: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.TypeVariableTypeInformation: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: java.lang.String generatePoolName()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: int hashCode()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.lang.reflect.Field: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.CollectionUtils: java.util.Map bucket(java.util.Collection,org.springframework.cglib.core.Transformer)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.util.ClassUtil: java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean)>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><com.zaxxer.hikari.HikariConfig: java.util.concurrent.ThreadFactory getThreadFactory()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.reflect.Field: java.lang.String toString()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void appendMap(java.lang.Object,java.lang.StringBuilder,java.util.Set)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.Object: java.lang.Class getClass()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.ansi.Ansi8BitColor: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.access.SecurityConfig: boolean equals(java.lang.Object)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String getAttribute()>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.OptionalDouble: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<org.aspectj.bridge.AbortException: void printStackTrace(java.io.PrintStream)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: sun.reflect.generics.repository.FieldRepository getGenericInfo()>-><java.lang.reflect.Field: sun.reflect.generics.factory.GenericsFactory getFactory()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: int hashCode()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.jsontype.NamedType: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.String toString()>
<io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields: long lvConsumerIndex()>-><sun.misc.Unsafe: long getLongVolatile(java.lang.Object,long)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.bouncycastle.asn1.DERUTF8String: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.util.concurrent.PromiseTask: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.security.PermissionCollection: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Short: short shortValue()>
<com.p6spy.engine.spy.P6DataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)>-><com.p6spy.engine.wrapper.ConnectionWrapper: com.p6spy.engine.wrapper.ConnectionWrapper wrap(java.sql.Connection,com.p6spy.engine.event.JdbcEventListener,com.p6spy.engine.common.ConnectionInformation)>
<com.zaxxer.hikari.pool.PoolBase: void executeSql(java.sql.Connection,java.lang.String,boolean)>-><com.zaxxer.hikari.pool.ProxyStatement: void close()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><org.apache.ibatis.session.Configuration$StrictMap: java.lang.Object get(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void executeSql(java.sql.Connection,java.lang.String,boolean)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.classic.spi.ClassPackagingData: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.Extension: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.String toString()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void recordBorrowTimeoutStats(long)>-><com.zaxxer.hikari.util.ClockSource: long elapsedNanos(long)>
<org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: int hashCode()>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><io.lettuce.core.RedisURI: java.lang.String toString()>
<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<sun.reflect.UnsafeQualifiedShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><java.lang.Thread: java.lang.Thread currentThread()>
<java.util.stream.ReferencePipeline$11$1: void accept(java.lang.Object)>-><java.util.stream.ReduceOps$2ReducingSink: void accept(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><io.netty.buffer.AbstractByteBuf: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.JumboEnumSet: boolean isEmpty()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.boot.ansi.AnsiColor: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.expression.spel.ast.StringLiteral: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.codehaus.jackson.node.IntNode: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.URL: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.Response: void setStatus(int,java.lang.String)>-><org.apache.catalina.connector.Response: org.apache.coyote.Response getCoyoteResponse()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.AbstractSequentialList: java.util.Iterator iterator()>
<org.apache.tomcat.util.http.parser.HttpParser: java.lang.String readQuotedString(java.io.Reader,boolean)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<org.slf4j.LoggerFactory: java.util.Set findPossibleStaticLoggerBinderPathSet()>-><java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.sun.jmx.mbeanserver.NamedObject: boolean equals(java.lang.Object)>
<java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask: int compareTo(java.util.concurrent.Delayed)>-><org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore$TokenExpiry: long getDelay(java.util.concurrent.TimeUnit)>
<org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String getName()>
<cn.hutool.core.exceptions.ExceptionUtil: java.lang.String getMessage(java.lang.Throwable)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.apache.commons.pool2.BaseObject: java.lang.String toString()>
<io.micrometer.core.instrument.Timer$Builder: void <init>(java.lang.String)>-><io.micrometer.core.instrument.Timer$Builder: io.micrometer.core.instrument.Timer$Builder minimumExpectedValue(java.time.Duration)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<org.apache.tomcat.util.buf.UEncoder: void urlEncode(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><org.apache.tomcat.util.buf.AbstractChunk: int getStart()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<sun.reflect.UnsafeCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putChar(java.lang.Object,long,char)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.SubList$1: boolean hasNext()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.data.util.ParentTypeAwareTypeInformation: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.validation.FieldError: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><org.codehaus.jackson.map.JsonMappingException: java.lang.String getMessage()>
<io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags and(java.lang.Iterable)>-><io.micrometer.core.instrument.Tags$ArrayIterator: boolean hasNext()>
<sun.reflect.generics.repository.FieldRepository: sun.reflect.generics.tree.TypeSignature parse(java.lang.String)>-><sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.parser.SignatureParser make()>
<org.aspectj.bridge.AbortException: void printStackTrace(java.io.PrintWriter)>-><org.aspectj.bridge.AbortException: boolean isPorter()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.CompositeType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.WeakCache$CacheKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.IsolationLevel: com.zaxxer.hikari.util.IsolationLevel[] values()>-><java.lang.Object: java.lang.Object clone()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.Timer$Builder: void <init>(java.lang.String)>-><io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags empty()>
<java.nio.CharBuffer: boolean equals(java.lang.Object)>-><java.nio.Buffer: int limit()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.CflowPointcut: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.awt.RenderingHints$Key: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.support.AbstractPointcutAdvisor: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyStatement: boolean execute(java.lang.String)>-><com.zaxxer.hikari.pool.HikariProxyPreparedStatement: boolean execute(java.lang.String)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<com.fasterxml.classmate.ResolvedType: java.lang.StringBuilder _appendClassDescription(java.lang.StringBuilder)>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.BinaryNode: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.core.publisher.FluxOnAssembly: java.lang.String toString()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.AbstractList$Itr: boolean hasNext()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.classmate.ResolvedType: java.lang.StringBuilder _appendClassDescription(java.lang.StringBuilder)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.RegularEnumSet: boolean equals(java.lang.Object)>
<java.util.Hashtable: void putAll(java.util.Map)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>-><java.lang.Object: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.alibaba.fastjson.serializer.SerialContext: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: int hashCode()>
<com.zaxxer.hikari.pool.HikariProxyStatement: boolean execute(java.lang.String)>-><com.zaxxer.hikari.pool.ProxyStatement: java.sql.SQLException checkException(java.sql.SQLException)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.node.BaseJsonNode: java.lang.String toString()>
<com.alibaba.fastjson.serializer.JavaBeanSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><java.lang.String: java.lang.String trim()>
<java.sql.SQLTransientException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>-><java.sql.SQLException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList: java.util.List subList(int,int)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.List subList(int,int)>
<java.util.ComparableTimSort: void mergeLo(int,int,int,int)>-><org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore$TokenExpiry: int compareTo(java.lang.Object)>
<org.springframework.util.CollectionUtils$MultiValueMapAdapter: java.util.Set entrySet()>-><java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.expression.spel.standard.Token: java.lang.String toString()>
<java.util.AbstractCollection: java.lang.Object[] toArray()>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<org.springframework.validation.DataBinder: org.springframework.validation.AbstractPropertyBindingResult createBeanPropertyBindingResult()>-><org.springframework.validation.DataBinder: java.lang.Object getTarget()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.text.AttributeEntry: boolean equals(java.lang.Object)>
<java.util.Hashtable: void putAll(java.util.Map)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.lang.Integer: java.lang.String toString()>
<org.aspectj.bridge.MessageUtil: java.lang.String addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.AbstractList$ListItr: java.lang.Object previous()>-><java.util.Arrays$ArrayList: java.lang.Object get(int)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.baomidou.dynamic.datasource.DynamicGroupDataSource: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.node.BigIntegerNode: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String getDescription()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.util.calendar.CalendarDate: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object next()>
<org.apache.catalina.connector.Response: boolean doIsEncodeable(org.apache.catalina.Context,org.apache.catalina.connector.Request,org.apache.catalina.Session,java.lang.String)>-><java.net.URL: java.lang.String getProtocol()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.Inet6Address: boolean equals(java.lang.Object)>
<org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>-><org.aspectj.weaver.JoinPointSignature: org.aspectj.weaver.UnresolvedType getReturnType()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$EmptyList: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.io.FilePermission: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<org.apache.tomcat.util.http.parser.HttpParser: int skipLws(java.io.Reader)>-><java.io.StringReader: void mark(int)>
<org.springframework.data.util.TypeDiscoverer: org.springframework.data.util.TypeInformation createInfo(java.lang.reflect.Type)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.io.SerializedString: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.reflect.annotation.TypeAnnotation: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<sun.reflect.UnsafeByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putByte(java.lang.Object,long,byte)>
<org.springframework.security.web.FilterChainProxy$VirtualFilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>-><org.springframework.security.web.FilterChainProxy$VirtualFilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>
<org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.codehaus.jackson.map.introspect.MemberKey: boolean equals(java.lang.Object)>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: void acquireShared(int)>-><java.util.concurrent.Semaphore$NonfairSync: int tryAcquireShared(int)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.p6spy.engine.spy.option.P6OptionsRepository$DelayedOptionChange: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void setMetricsTrackerFactory(com.zaxxer.hikari.metrics.MetricsTrackerFactory)>-><com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.metrics.PoolStats getPoolStats()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.p6spy.engine.common.CustomHashedHashSet: java.util.Iterator iterator()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><io.netty.buffer.AbstractByteBufAllocator: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.bouncycastle.asn1.ASN1Primitive: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.BeanDefinitionHolder: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.GmtTimeZone: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.print.MimeType$ParameterMapEntrySet: int size()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.net.URL: boolean equals(java.lang.Object)>
<javax.management.MBeanPermission: void setClassName(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.aspectj.bridge.IMessage$Kind: int compareTo(java.lang.Object)>-><org.aspectj.bridge.IMessage$Kind: int compareTo(org.aspectj.bridge.IMessage$Kind)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.time.ZonedDateTime: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.QueryRequest: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.zaxxer.hikari.pool.ProxyLeakTask: void cancel()>-><ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>
<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>-><com.google.common.base.Joiner$3: int size()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><org.apache.tomcat.util.buf.AbstractChunk: int getLength()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.web.util.pattern.WildcardPathElement: java.lang.String toString()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.AbstractMap$1$1: boolean hasNext()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.cglib.core.EmitUtils$6: void processCase(int,org.springframework.asm.Label)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Hashtable$KeySet: int size()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.util.BuddhistCalendar: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cn.hutool.core.date.format.FastDateFormat: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.SimpleType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><io.netty.util.ResourceLeakDetector$DefaultResourceLeak: java.lang.String toString()>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object get(int)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.context.request.ServletRequestAttributes: void registerSessionDestructionCallback(java.lang.String,java.lang.Runnable)>-><org.springframework.web.context.request.ServletRequestAttributes: javax.servlet.http.HttpSession obtainSession()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.management.openmbean.TabularType: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.sql.Timestamp: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.validation.DataBinder: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.BitSet: java.lang.String toString()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.concurrent.LinkedBlockingQueue: void fullyLock()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.security.x509.Extension: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.net.www.MimeEntry: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$StringLiteralPrinterParser: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><java.lang.Throwable: java.lang.String getMessage()>
<com.zaxxer.hikari.pool.PoolBase$NopMetricsTrackerDelegate: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.buffer.AbstractByteBuf: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.URI: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.codehaus.jackson.map.type.CollectionLikeType: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.ClassKey: boolean equals(java.lang.Object)>
<java.util.ComparableTimSort: int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int)>-><org.aspectj.weaver.JoinPointSignature: int compareTo(java.lang.Object)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isDependent(java.lang.String,java.lang.String,java.util.Set)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.ansi.Ansi8BitColor: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.TreeMap: java.lang.Object get(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: int hashCode()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.util.FieldInfo: void <init>(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Field,java.lang.Class,java.lang.reflect.Type,int,int,int,com.alibaba.fastjson.annotation.JSONField,com.alibaba.fastjson.annotation.JSONField,java.lang.String,java.util.Map)>-><java.lang.reflect.Field: java.lang.Class getType()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedShortFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.boot.ansi.AnsiStyle: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<org.springframework.web.context.request.ServletRequestAttributes: javax.servlet.http.HttpSession obtainSession()>-><org.springframework.web.context.request.ServletRequestAttributes: javax.servlet.http.HttpSession getSession(boolean)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.util.FieldInfo: void <init>(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Field,java.lang.Class,java.lang.reflect.Type,int,int,int,com.alibaba.fastjson.annotation.JSONField,com.alibaba.fastjson.annotation.JSONField,java.lang.String,java.util.Map)>-><java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.Font: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.core.env.AbstractEnvironment: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.LinkedList$ListItr: java.lang.Object previous()>-><java.util.NoSuchElementException: void <init>()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.MessageFormat: boolean equals(java.lang.Object)>
<reactor.core.publisher.Traces: java.lang.String[] extractOperatorAssemblyInformationParts(java.lang.String)>-><com.google.common.base.Joiner$3: java.lang.Object get(int)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.http.HttpHeaders: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<java.util.concurrent.ScheduledThreadPoolExecutor: void setExecuteExistingDelayedTasksAfterShutdownPolicy(boolean)>-><java.util.concurrent.ScheduledThreadPoolExecutor: void onShutdown()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void destroyHouseKeepingExecutorService()>-><java.util.concurrent.ScheduledThreadPoolExecutor: java.util.List shutdownNow()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.core.scheduler.DelegateServiceScheduler: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.CollectionLikeType: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><com.alibaba.fastjson.JSONArray: java.lang.Object get(int)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.PropertyPermission: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.EnumMap: java.util.Set entrySet()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void setMetricsTrackerFactory(com.zaxxer.hikari.metrics.MetricsTrackerFactory)>-><com.zaxxer.hikari.pool.PoolBase$NopMetricsTrackerDelegate: void <init>()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: boolean useWeakThreadLocals()>-><java.lang.Boolean: boolean getBoolean(java.lang.String)>
<com.alibaba.fastjson.serializer.MiscCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<sun.reflect.UnsafeLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Integer: int intValue()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.MediaType: java.lang.String toStringNoCharset()>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.Provider$ServiceKey: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.UtilityElf: java.lang.Object createInstance(java.lang.String,java.lang.Class,java.lang.Object[])>-><java.lang.Class: java.lang.Object newInstance()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><cc.mrbird.febs.auth.entity.BindUser: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><cc.mrbird.febs.auth.entity.OauthClientDetails: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.base.Joiner$3: int size()>
<org.apache.tomcat.util.buf.C2BConverter: void <init>(java.nio.charset.Charset)>-><java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onMalformedInput(java.nio.charset.CodingErrorAction)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void recordConnectionUsage(com.zaxxer.hikari.pool.PoolEntry)>-><com.zaxxer.hikari.pool.PoolEntry: long getMillisSinceBorrowed()>
<sun.reflect.UnsafeFieldAccessorImpl: java.lang.String getSetMessage(java.lang.String,java.lang.String)>-><java.lang.String: int length()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.time.zone.ZoneOffsetTransitionRule: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: void closeStatements()>-><com.zaxxer.hikari.util.FastList: void clear()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><org.springframework.security.authentication.RememberMeAuthenticationToken: java.lang.Object getPrincipal()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<org.apache.tomcat.util.http.parser.MediaType: org.apache.tomcat.util.http.parser.MediaType parseMediaType(java.io.StringReader)>-><org.apache.tomcat.util.http.parser.MediaType: void <init>(java.lang.String,java.lang.String,java.util.LinkedHashMap)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.Reflection: boolean quickCheckMemberAccess(java.lang.Class,int)>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.Vector: int size()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.DigitList: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void initializeDataSource()>-><com.zaxxer.hikari.HikariConfig: java.lang.String getDataSourceJNDI()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.calendar.ZoneInfo: boolean equals(java.lang.Object)>
<java.util.ComparableTimSort: void binarySort(java.lang.Object[],int,int,int)>-><org.aspectj.weaver.MemberImpl: int compareTo(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.cglib.core.ClassInfo: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.codehaus.jackson.map.introspect.MemberKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: java.lang.String toString()>-><java.lang.Object: java.lang.Class getClass()>
<reactor.core.Exceptions: java.lang.Throwable addSuppressed(java.lang.Throwable,java.lang.Throwable)>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.crypto.CryptoAllPermission: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.image.ColorModel: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.MapLikeType: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>-><ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object[])>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<javax.management.MBeanPermission: void setClassName(java.lang.String)>-><java.lang.String: int length()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: int hashCode()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><java.nio.CharBuffer: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.springframework.util.LinkedCaseInsensitiveMap$EntrySet: java.util.Iterator iterator()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.Response: boolean doIsEncodeable(org.apache.catalina.Context,org.apache.catalina.connector.Request,org.apache.catalina.Session,java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Method: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$StringEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<java.util.Spliterator: long getExactSizeIfKnown()>-><java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: int characteristics()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.misc.Unsafe: java.lang.Object getObjectVolatile(java.lang.Object,long)>
<com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.Collections$UnmodifiableList: java.lang.Object remove(int)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.springframework.util.LinkedCaseInsensitiveMap$ValuesIterator: java.lang.Object next()>
<sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Character: char charValue()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<org.springframework.web.context.support.WebApplicationContextUtils$ResponseObjectFactory: javax.servlet.ServletResponse getObject()>-><org.springframework.web.context.request.ServletRequestAttributes: javax.servlet.http.HttpServletResponse getResponse()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.time.LocalTime: boolean equals(java.lang.Object)>
<org.aspectj.weaver.BCException: void printStackTrace(java.io.PrintStream)>-><java.io.PrintWriter: void <init>(java.io.OutputStream)>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.IterableSerializer: boolean hasSingleElement(java.lang.Iterable)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<java.util.stream.ReferencePipeline$11$1: void accept(java.lang.Object)>-><java.util.stream.SortedOps$SizedRefSortingSink: void accept(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.data.redis.connection.util.ByteArrayWrapper: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.lang.String stringFromResetBits(int)>-><java.lang.StringBuilder: int length()>
<java.util.Collections: void reverse(java.util.List)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: void set(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<io.micrometer.core.instrument.Counter$Builder: io.micrometer.core.instrument.Counter register(io.micrometer.core.instrument.MeterRegistry)>-><io.micrometer.core.instrument.Meter$Id: void <init>(java.lang.String,io.micrometer.core.instrument.Tags,java.lang.String,java.lang.String,io.micrometer.core.instrument.Meter$Type)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><com.zaxxer.hikari.pool.PoolBase: java.lang.Exception getLastConnectionFailure()>
<org.springframework.security.web.firewall.RequestWrapper: java.lang.String getPathInfo()>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getPathInfo()>
<sun.reflect.UnsafeObjectFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.misc.Unsafe: java.lang.Object getObject(java.lang.Object,long)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.io.ByteArrayOutputStream: java.lang.String toString()>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.Short: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<org.springframework.expression.spel.support.StandardTypeComparator: int compare(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.MemberImpl: int compareTo(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.temporal.IsoFields$Field$1: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.util.LinkedMultiValueMap: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.temporal.WeekFields: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean remove(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: void clear()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.crypto.CryptoPermission: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.RenderingHints$Key: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<com.zaxxer.hikari.pool.HikariProxyConnection: boolean isReadOnly()>-><com.zaxxer.hikari.pool.HikariProxyConnection: boolean isReadOnly()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.codehaus.jackson.node.DoubleNode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<java.util.Collections$UnmodifiableCollection: int size()>-><java.util.concurrent.LinkedBlockingQueue: int size()>
<sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: void serializeWithType(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>-><com.google.common.base.Joiner$3: int size()>
<org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.context.support.ApplicationListenerDetector: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.codehaus.jackson.node.BigIntegerNode: boolean equals(java.lang.Object)>
<org.aspectj.bridge.context.CompilationAndWeavingContext: java.lang.String getCurrentContext()>-><org.aspectj.bridge.context.CompilationAndWeavingContext$DefaultFormatter: java.lang.String formatEntry(int,java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.TypePatternList: int hashCode()>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.zone.TzdbZoneRulesProvider: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><com.zaxxer.hikari.HikariConfig: java.lang.String getUsername()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.ArrayNode: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.security.UnresolvedPermission: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.PropertyPermission: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><cn.hutool.core.date.format.FastDateFormat: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.provider.BaseRequest: boolean equals(java.lang.Object)>-><java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.awt.image.ColorModel: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.zaxxer.hikari.util.PropertyElf: java.util.Set getPropertyNames(java.lang.Class)>-><java.lang.Class: java.lang.reflect.Method[] getMethods()>
<org.aspectj.weaver.patterns.IfPointcut: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeLongFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<java.util.stream.ForEachOps$ForEachOrderedTask: void doCompute(java.util.stream.ForEachOps$ForEachOrderedTask)>-><java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: long estimateSize()>
<com.zaxxer.hikari.pool.HikariPool: java.util.concurrent.ScheduledExecutorService initializeHouseKeepingExecutorService()>-><java.util.concurrent.ScheduledThreadPoolExecutor: void setExecuteExistingDelayedTasksAfterShutdownPolicy(boolean)>
<sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl: boolean getBoolean(java.lang.Object)>-><sun.misc.Unsafe: boolean getBooleanVolatile(java.lang.Object,long)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArraySet: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.expression.spel.ast.Literal: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.Object: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><java.lang.reflect.Field: java.lang.String toString()>
<com.alibaba.fastjson.serializer.CollectionCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.String getName()>-><java.lang.reflect.Field: java.lang.String getName()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isDependent(java.lang.String,java.lang.String,java.util.Set)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.SocketPermission: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.MutablePropertyValues: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cn.hutool.core.date.format.FastDatePrinter$TimeZoneDisplayKey: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.ser.std.JsonValueSerializer: java.lang.String toString()>
<com.p6spy.engine.spy.P6DataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)>-><java.lang.System: long nanoTime()>
<sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><io.lettuce.core.protocol.CommandArgs$CharArrayArgument: java.lang.String toString()>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.format.support.FormattingConversionService$AnnotationConverterKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.io.ObjectStreamClass$WeakClassKey: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.ThreadLocalRandom: long nextLong(long)>-><java.util.concurrent.ThreadLocalRandom: long mix64(long)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.ProcessEnvironment$StringValues: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.util.Map declaredAnnotations()>-><java.lang.reflect.Field: java.util.Map declaredAnnotations()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.Nodes$FixedNodeBuilder: void accept(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<org.aspectj.util.LangUtil: void elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)>-><java.lang.StringBuffer: int length()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><io.lettuce.core.internal.AbstractInvocationHandler: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><io.netty.util.concurrent.PromiseTask: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cn.hutool.core.date.format.FastDatePrinter$TimeZoneDisplayKey: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<sun.reflect.UnsafeStaticCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Character: char charValue()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedShortFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedShortFieldAccessorImpl: short getShort(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.chrono.AbstractChronology: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.data.util.ParameterizedTypeInformation: java.lang.String toString()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.boot.ansi.AnsiStyle: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntrySet: int size()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Hashtable$EntrySet: java.util.Iterator iterator()>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.Reflection: boolean quickCheckMemberAccess(java.lang.Class,int)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<java.util.SubList$1: int previousIndex()>-><java.util.SubList: int access$000(java.util.SubList)>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.BooleanNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.IdentityHashMap$KeySet: boolean contains(java.lang.Object)>
<sun.reflect.UnsafeCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Boolean: void <init>(boolean)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.LambdaForm$Name: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><cn.hutool.core.date.DateTime: java.lang.String toString()>
<org.aspectj.weaver.JoinPointSignature: org.aspectj.weaver.UnresolvedType[] getParameterTypes()>-><org.aspectj.weaver.MemberImpl: org.aspectj.weaver.UnresolvedType[] getParameterTypes()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: java.lang.Boolean call()>-><com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.pool.PoolEntry access$100(com.zaxxer.hikari.pool.HikariPool)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><cn.hutool.http.Header: java.lang.String toString()>
<org.aspectj.weaver.patterns.HandlerPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.ArrayList: int size()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String getEmail()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Field: sun.reflect.FieldAccessor getFieldAccessor(java.lang.Object)>
<com.zaxxer.hikari.util.ClockSource: long elapsedMillis(long)>-><com.zaxxer.hikari.util.ClockSource$MillisecondClockSource: long elapsedMillis0(long)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.RegularEnumSet: java.util.Iterator iterator()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Method: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.HandlerPointcut: java.lang.String toString()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.Collections$SingletonList: int size()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.LambdaForm: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<org.aspectj.weaver.patterns.TypePatternList: int hashCode()>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.HandlerPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.DoubleNode: boolean equals(java.lang.Object)>
<javax.xml.transform.TransformerFactoryConfigurationError: java.lang.String getMessage()>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.ProtectionDomain$WeakProtectionDomainKey: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><java.util.concurrent.CopyOnWriteArrayList: int hashCode()>
<org.springframework.security.oauth2.provider.BaseRequest: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.status.StatusBase: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.Font: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ReferencePipeline$2$1: void accept(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>
<com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: java.lang.Boolean call()>-><com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: boolean shouldCreateAnotherConnection()>
<org.aspectj.util.LangUtil: void elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)>-><java.util.LinkedList: java.lang.Object getLast()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.util.locale.BaseLocale$Key: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serializeContents(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.time.Year: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.crypto.CryptoAllPermission: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.nio.charset.Charset: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><java.nio.CharBuffer: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Collections$SingletonSet: boolean contains(java.lang.Object)>
<io.netty.channel.nio.SelectedSelectionKeySet: void increaseCapacity()>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<org.apache.catalina.connector.OutputBuffer: void write(java.lang.String,int,int)>-><org.apache.catalina.connector.OutputBuffer: void flushCharBuffer()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.ArrayList$SubList: int size()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.security.oauth2.provider.OAuth2Authentication: int hashCode()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<org.springframework.expression.spel.support.StandardTypeComparator: int compare(java.lang.Object,java.lang.Object)>-><org.aspectj.bridge.IMessage$Kind: int compareTo(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.util.CollectionUtils$MultiValueMapAdapter: java.lang.Object get(java.lang.Object)>
<org.aspectj.bridge.AbortException: java.lang.String getMessage()>-><java.lang.Throwable: java.lang.String getMessage()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.management.openmbean.ArrayType: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariDataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)>-><java.sql.SQLFeatureNotSupportedException: void <init>()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.sun.jmx.mbeanserver.NamedObject: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serializeContents(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><java.lang.reflect.Field: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.security.ProtectionDomain$WeakProtectionDomainKey: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.format.DateTimeFormatterBuilder$PadPrinterParserDecorator: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.Long getMenuId()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.ResourceBundle$CacheKey: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><java.lang.reflect.Field: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.validation.ObjectError: java.lang.String toString()>
<org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>-><org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getDependencyType()>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: java.lang.reflect.Type getRawType()>
<sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Float: void <init>(float)>
<org.springframework.aop.framework.AdvisedSupport: java.lang.String toString()>-><java.lang.StringBuilder: void <init>(java.lang.String)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.JumboEnumSet: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: int hashCode()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><com.p6spy.engine.common.CustomHashedHashSet$CustomHashedHashSetIterator: boolean hasNext()>
<com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker: void <init>(java.lang.String,com.zaxxer.hikari.metrics.PoolStats,io.micrometer.core.instrument.MeterRegistry)>-><io.micrometer.core.instrument.Timer$Builder: io.micrometer.core.instrument.Timer$Builder tags(java.lang.String[])>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.jsontype.NamedType: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><java.lang.reflect.Modifier: boolean isFinal(int)>
<org.apache.tomcat.util.buf.CharChunk: void flushBuffer()>-><org.apache.tomcat.util.buf.AbstractChunk: int getLimit()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.OptionalLong: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.SimpleType: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: java.lang.Object next()>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<com.zaxxer.hikari.pool.PoolBase: void setupConnection(java.sql.Connection)>-><com.zaxxer.hikari.HikariConfig: java.lang.String getConnectionInitSql()>
<org.aspectj.bridge.IMessage$Kind$1: int compare(org.aspectj.bridge.IMessage$Kind,org.aspectj.bridge.IMessage$Kind)>-><org.aspectj.bridge.IMessage$Kind: int access$100(org.aspectj.bridge.IMessage$Kind)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.web.context.support.WebApplicationContextUtils$FacesDependencyRegistrar$1: java.lang.String toString()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<com.p6spy.engine.spy.P6DataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)>-><com.p6spy.engine.event.CompoundJdbcEventListener: void onAfterGetConnection(com.p6spy.engine.common.ConnectionInformation,java.sql.SQLException)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.chrono.AbstractChronology: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><java.util.Hashtable: java.lang.String toString()>
<ch.qos.logback.classic.spi.ThrowableProxy: void <init>(java.lang.Throwable)>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$SingletonSet: java.util.Iterator iterator()>
<sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.ClassInfo: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<org.springframework.util.ReflectionUtils: void makeAccessible(java.lang.reflect.Field)>-><java.lang.reflect.Field: int getModifiers()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><ch.qos.logback.core.joran.spi.ElementSelector: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><reactor.util.context.ContextN: java.lang.Object get(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: void markCommitStateDirty()>-><com.zaxxer.hikari.util.ClockSource: long currentTime()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.core.MethodParameter: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.atomic.AtomicReferenceArray: java.lang.String toString()>
<com.alibaba.fastjson.util.TypeUtils: void computeFields(java.lang.Class,java.util.Map,com.alibaba.fastjson.PropertyNamingStrategy,java.util.Map,java.lang.reflect.Field[])>-><java.lang.reflect.Field: java.lang.String getName()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><io.lettuce.core.internal.AbstractInvocationHandler: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.awt.image.IndexColorModel: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><reactor.core.publisher.FluxOnAssembly$OnAssemblyException: java.lang.String getMessage()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: int hashCode()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.lang.reflect.Field: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.String,java.lang.String)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.node.POJONode: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.util.TypeKey: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyDatabaseMetaData: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getKey()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: java.lang.Object previous()>-><java.util.LinkedList$ListItr: java.lang.Object previous()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.aspectj.bridge.AbortException: void printStackTrace(java.io.PrintStream)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<io.micrometer.core.instrument.distribution.DistributionStatisticConfig$Builder: void <init>()>-><io.micrometer.core.instrument.distribution.DistributionStatisticConfig: void <init>()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.security.jca.ProviderConfig: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.RejectModifierPredicate: boolean evaluate(java.lang.Object)>-><java.lang.reflect.Field: int getModifiers()>
<com.zaxxer.hikari.pool.ProxyDatabaseMetaData: java.lang.String toString()>-><java.lang.System: int identityHashCode(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void close()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.stream.StreamSpliterators$DelegatingSpliterator: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.security.x509.GeneralName: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.concurrent.SynchronousQueue: boolean offer(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.ArrayList$Itr: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.alibaba.fastjson.JSONObject: boolean equals(java.lang.Object)>
<java.beans.Introspector: void processPropertyDescriptors()>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.security.CodeSource: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<org.apache.tomcat.util.buf.CharChunk: void append(char)>-><org.apache.tomcat.util.buf.CharChunk: void makeSpace(int)>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><com.zaxxer.hikari.pool.PoolEntry: int getState()>
<com.zaxxer.hikari.pool.PoolBase: void shutdownNetworkTimeoutExecutor()>-><java.util.concurrent.ThreadPoolExecutor: java.util.List shutdownNow()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><io.lettuce.core.RedisURI: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cn.hutool.core.date.format.FormatCache$MultipartKey: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.String toString()>-><java.lang.reflect.Field: java.lang.String getName()>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onAfterCommit(com.p6spy.engine.common.ConnectionInformation,long,java.sql.SQLException)>-><com.p6spy.engine.event.JdbcEventListener: void onAfterCommit(com.p6spy.engine.common.ConnectionInformation,long,java.sql.SQLException)>
<com.zaxxer.hikari.HikariDataSource: void setLoginTimeout(int)>-><com.zaxxer.hikari.util.DriverDataSource: void setLoginTimeout(int)>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><com.p6spy.engine.wrapper.StatementWrapper: void close()>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<sun.reflect.UnsafeObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.node.DoubleNode: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><java.nio.CharBuffer: int hashCode()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.core.convert.support.GenericConversionService$ConvertersForPair: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><java.nio.charset.CoderResult: void throwException()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.WeakCache$CacheKey: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><org.apache.tomcat.util.buf.CharChunk: int subtract()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: void <init>(com.zaxxer.hikari.util.ConcurrentBag$IBagStateListener)>-><java.lang.ThreadLocal: java.lang.ThreadLocal withInitial(java.util.function.Supplier)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.String toString()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.pool.PoolEntry createPoolEntry()>-><java.util.concurrent.ThreadLocalRandom: long nextLong(long)>
<java.util.concurrent.ScheduledThreadPoolExecutor: void setExecuteExistingDelayedTasksAfterShutdownPolicy(boolean)>-><java.util.concurrent.ThreadPoolExecutor: boolean isShutdown()>
<com.google.common.collect.AbstractMapBasedMultimap: void removeValuesForKey(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.beans.factory.support.RootBeanDefinition: boolean equals(java.lang.Object)>
<io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields: void soProducerLimit(long)>-><sun.misc.Unsafe: void putOrderedLong(java.lang.Object,long,long)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<com.zaxxer.hikari.util.ClockSource: long elapsedNanos(long)>-><com.zaxxer.hikari.util.ClockSource$NanosecondClockSource: long elapsedNanos0(long)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.management.MBeanConstructorInfo: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<java.lang.invoke.BoundMethodHandle$Factory: void setSpeciesDataToConcreteBMHClass(java.lang.Class,java.lang.invoke.BoundMethodHandle$SpeciesData)>-><java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation getDeclaredAnnotation(java.lang.Class)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><ch.qos.logback.core.subst.Token: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.Vector: java.lang.Object remove(int)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl$ClassIndexWrapper: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.TextNode: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.CoyoteOutputStream: void checkRegisterForWrite()>-><org.apache.catalina.connector.OutputBuffer: void checkRegisterForWrite()>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedShortFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<java.util.ComparableTimSort: int countRunAndMakeAscending(java.lang.Object[],int,int)>-><java.nio.CharBuffer: int compareTo(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.Calendar: java.lang.String toString()>
<io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>-><java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.Character$Subset: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.apache.logging.log4j.spi.Provider: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.ParameterizedTypeInformation: boolean equals(java.lang.Object)>
<org.apache.catalina.util.ToStringUtil: java.lang.String toString(java.lang.Object,org.apache.catalina.Container)>-><org.apache.catalina.util.ToStringUtil: java.lang.String containedToString(java.lang.Object,java.lang.Object,java.lang.String)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue$Itr: java.lang.Object next()>-><java.util.concurrent.LinkedBlockingQueue: void fullyLock()>
<org.springframework.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.buffer.AbstractByteBuf: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.TypePatternList: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><cn.hutool.http.Header: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.Long: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: double getDouble(java.lang.Object)>
<org.springframework.cglib.core.CollectionUtils: java.util.Map bucket(java.util.Collection,org.springframework.cglib.core.Transformer)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.apache.catalina.connector.OutputBuffer: void appendByteArray(byte[],int,int)>-><org.apache.catalina.connector.OutputBuffer: void realWriteBytes(java.nio.ByteBuffer)>
<java.util.Collections: void reverse(java.util.List)>-><com.google.common.base.Joiner$3: int size()>
<reactor.core.scheduler.ReactorThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>-><java.util.concurrent.atomic.AtomicLong: long incrementAndGet()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<com.zaxxer.hikari.util.UtilityElf: void quietlySleep(long)>-><java.lang.Thread: void interrupt()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.LambdaForm$Name: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isDependent(java.lang.String,java.lang.String,java.util.Set)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.SerializerProvider: java.text.DateFormat _dateFormat()>-><org.codehaus.jackson.map.util.StdDateFormat: java.lang.Object clone()>
<com.fasterxml.classmate.types.ResolvedObjectType: java.lang.StringBuilder appendBriefDescription(java.lang.StringBuilder)>-><com.fasterxml.classmate.ResolvedType: java.lang.StringBuilder _appendClassDescription(java.lang.StringBuilder)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.IntNode: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyDatabaseMetaData: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.awt.Rectangle: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.introspect.MemberKey: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.OptionalDouble: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Object getPrincipal()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.invoke.LambdaForm$Name: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.core.env.PropertySource: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: java.sql.SQLException createTimeoutException(long)>-><java.sql.SQLException: void setNextException(java.sql.SQLException)>
<com.zaxxer.hikari.util.DriverDataSource: int getLoginTimeout()>-><java.sql.DriverManager: int getLoginTimeout()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.bouncycastle.asn1.ASN1Primitive: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.cglib.core.EmitUtils$6: void processCase(int,org.springframework.asm.Label)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: int hashCode()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.HashMap: java.util.Set entrySet()>
<javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>-><javax.print.MimeType: java.lang.String[] access$000(javax.print.MimeType)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.ThisOrTargetAnnotationPointcut: java.lang.String toString()>
<org.apache.tomcat.util.http.parser.MediaType: org.apache.tomcat.util.http.parser.MediaType parseMediaType(java.io.StringReader)>-><java.util.LinkedHashMap: void <init>()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.ImmutableDescriptor: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.InetSocketAddress: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.util.RawValue: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.imageio.ImageTypeSpecifier$Interleaved: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.EmitUtils: void member_helper_type(org.springframework.cglib.core.CodeEmitter,java.util.List,org.springframework.cglib.core.ObjectSwitchCallback,org.springframework.cglib.core.EmitUtils$ParameterTyper,org.springframework.asm.Label,org.springframework.asm.Label,java.util.BitSet)>-><com.google.common.base.Joiner$3: java.lang.Object get(int)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$UnmodifiableList: java.lang.Object get(int)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<io.micrometer.core.instrument.Gauge$Builder: void <init>(java.lang.String,java.lang.Object,java.util.function.ToDoubleFunction)>-><java.lang.Object: void <init>()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.client.BaseClientDetails: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.zone.ZoneOffsetTransition: java.lang.String toString()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><java.nio.charset.CoderResult: boolean isOverflow()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.time.temporal.WeekFields: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<cc.mrbird.febs.auth.service.impl.SocialLoginServiceImpl: org.springframework.security.oauth2.common.OAuth2AccessToken bindLogin(cc.mrbird.febs.auth.entity.BindUser,me.zhyd.oauth.model.AuthUser)>-><org.springframework.security.crypto.password.NoOpPasswordEncoder: boolean matches(java.lang.CharSequence,java.lang.String)>
<org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.AndAnnotationTypePattern: int hashCode()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.base.Predicates$NotPredicate: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<java.beans.FeatureDescriptor: java.lang.String toString()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.ArrayType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Hashtable: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedByteFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.sun.activation.registries.MimeTypeEntry: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: int hashCode()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: int hashCode()>
<org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.imageio.ImageTypeSpecifier$Interleaved: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<java.net.InetAddress: java.lang.String getHostFromNameService(java.net.InetAddress,boolean)>-><java.net.InetAddress: byte[] getAddress()>
<io.micrometer.core.instrument.Counter$Builder: io.micrometer.core.instrument.Counter$Builder tags(java.lang.String[])>-><io.micrometer.core.instrument.Counter$Builder: io.micrometer.core.instrument.Counter$Builder tags(java.lang.Iterable)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanAttributeInfo: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.aspectj.bridge.AbortException: void printStackTrace(java.io.PrintStream)>-><org.aspectj.bridge.Message: java.lang.Throwable getThrown()>
<org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<com.zaxxer.hikari.util.UtilityElf: java.util.concurrent.ThreadPoolExecutor createThreadPoolExecutor(java.util.concurrent.BlockingQueue,java.lang.String,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)>-><java.util.concurrent.ThreadPoolExecutor: void allowCoreThreadTimeOut(boolean)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.provider.PolicyParser$PermissionEntry: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.data.redis.connection.RedisClusterNode: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.ResourceBundle$CacheKey: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.SubList: int size()>
<java.lang.Object: java.lang.String toString()>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><java.lang.reflect.Field: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolEntry: java.sql.Connection createProxyConnection(com.zaxxer.hikari.pool.ProxyLeakTask,long)>-><com.zaxxer.hikari.pool.ProxyFactory: com.zaxxer.hikari.pool.ProxyConnection getProxyConnection(com.zaxxer.hikari.pool.PoolEntry,java.sql.Connection,com.zaxxer.hikari.util.FastList,com.zaxxer.hikari.pool.ProxyLeakTask,long,boolean,boolean)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void checkDriverSupport(java.sql.Connection)>-><com.zaxxer.hikari.pool.PoolBase: void checkDefaultIsolation(java.sql.Connection)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>
<org.aspectj.weaver.JoinPointSignature: int hashCode()>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><java.lang.reflect.Field: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><ch.qos.logback.classic.LoggerContext: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.util.UtilityElf: java.util.concurrent.ThreadPoolExecutor createThreadPoolExecutor(int,java.lang.String,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.web.context.support.WebApplicationContextUtils$ResponseObjectFactory: java.lang.String toString()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><reactor.core.publisher.FluxOnAssembly$OnAssemblyException: java.lang.String getMessage()>
<org.aspectj.weaver.patterns.HandlerPointcut: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.beans.IndexedPropertyDescriptor: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.String toString()>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.support.annotation.AnnotationMatchingPointcut: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.BitSet: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.UtilityElf: int getTransactionIsolation(java.lang.String)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.ClassKey: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.HandlerPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<com.sun.jmx.mbeanserver.Introspector: javax.management.NotCompliantMBeanException throwException(java.lang.Class,java.lang.Throwable)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><cn.hutool.core.date.format.FormatCache$MultipartKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.BooleanNode: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.TypePatternList: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.time.ZoneId: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.ProtectionDomain$WeakProtectionDomainKey: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<com.zaxxer.hikari.pool.PoolBase: void initializeDataSource()>-><javax.naming.InitialContext: java.lang.Object lookup(java.lang.String)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.format.support.FormattingConversionService$AnnotationConverterKey: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<org.springframework.web.context.request.DestructionCallbackBindingListener: void <init>(java.lang.Runnable)>-><java.lang.Object: void <init>()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$Variable: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.Signature: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>
<org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypePatternList: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.FastList: boolean add(java.lang.Object)>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member,boolean)>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<java.util.stream.AbstractPipeline: java.util.stream.Node evaluateToArrayNode(java.util.function.IntFunction)>-><java.util.stream.ReferencePipeline$Head: boolean opIsStateful()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.IfPointcut$IfTruePointcut: java.lang.String toString()>
<io.micrometer.core.instrument.Tag: int compareTo(io.micrometer.core.instrument.Tag)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String getKey()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<java.util.stream.ReferencePipeline$11$1: void accept(java.lang.Object)>-><java.util.stream.ForEachOps$ForEachOp$OfRef: void accept(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.core.publisher.Flux: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: java.lang.Object previous()>-><java.util.AbstractList$ListItr: java.lang.Object previous()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.nio.ch.SocketOptionRegistry$RegistryKey: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector: void _renameWithWrappers(java.util.Map)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.GregorianCalendar: boolean equals(java.lang.Object)>
<com.sun.jmx.mbeanserver.MBeanAnalyzer: void visit(com.sun.jmx.mbeanserver.MBeanAnalyzer$MBeanVisitor)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<java.util.AbstractCollection: boolean remove(java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>-><java.util.Date: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFilteredFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.ZoneId: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Character: void <init>(char)>
<com.zaxxer.hikari.pool.ProxyConnection: void close()>-><com.p6spy.engine.wrapper.ConnectionWrapper: void rollback()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.CodeSigner: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setupConnection(java.sql.Connection)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void setSchema(java.lang.String)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.TreeMap$Entry: java.lang.Object getValue()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.imageio.ImageTypeSpecifier: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.MediaType: java.lang.String toStringNoCharset()>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Character: char charValue()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.bridge.MessageUtil: java.lang.String addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)>-><java.io.StringWriter: java.lang.StringBuffer getBuffer()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.ChoiceFormat: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.xml.bind.JAXBException: java.lang.String toString()>
<java.util.TreeMap: java.util.TreeMap$Entry getEntry(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: int compareTo(java.lang.Object)>
<java.util.Collections: void reverse(java.util.List)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.ListIterator listIterator(int)>
<cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String getComponent()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.Response$PrivilegedDoIsEncodable: java.lang.Boolean run()>-><org.apache.catalina.connector.Response: boolean access$000(org.apache.catalina.Context,org.apache.catalina.connector.Request,org.apache.catalina.Session,java.lang.String)>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.lang.Object next()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.data.redis.connection.RedisNode: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.NullNode: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: java.lang.String toString()>
<java.util.AbstractCollection: boolean remove(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><cn.hutool.core.io.resource.UrlResource: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object next()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.lang.reflect.Field: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.SubList: java.lang.Object get(int)>
<java.lang.Object: java.lang.String toString()>-><org.aspectj.weaver.patterns.NamePattern: int hashCode()>
<java.util.TreeMap: java.util.TreeMap$Entry getEntry(java.lang.Object)>-><org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore$TokenExpiry: int compareTo(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.context.support.ApplicationListenerDetector: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void setLoginTimeout(int)>-><java.sql.DriverManager: void setLoginTimeout(int)>
<sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putDoubleVolatile(java.lang.Object,long,double)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.invoke.BoundMethodHandle$SpeciesData: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.management.MBeanInfo: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.provider.approval.Approval: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JavaBeanSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<com.zaxxer.hikari.HikariConfig: void validate()>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.springframework.http.ReadOnlyHttpHeaders: java.util.Set entrySet()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.temporal.WeekFields: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.web.session.SessionManagementFilter: void doFilter_7fd3af7f4759d85198b8ae9bca3c9754(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><synthetic.method.SingletonFactory: cc.mrbird.febs.common.security.starter.handler.FebsAuthExceptionEntryPoint getAuthenticationEntryPoint()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSON: java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.POJONode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.temporal.IsoFields$Field$1: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.OptionalLong: java.lang.String toString()>
<java.sql.DriverManager: java.sql.Driver getDriver(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.codehaus.jackson.map.introspect.MemberKey: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.data.util.ParameterizedTypeInformation: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.OffsetDateTime: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.security.CodeSigner: java.lang.String toString()>
<org.springframework.web.context.request.ServletRequestAttributes: java.lang.Object getAttribute(java.lang.String,int)>-><javax.servlet.ServletRequestWrapper: java.lang.Object getAttribute(java.lang.String)>
<org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<org.apache.catalina.connector.Response: void setContentType(java.lang.String)>-><org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.ZoneId: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArraySet: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.data.redis.connection.RedisPassword: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.codehaus.jackson.node.ArrayNode: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.HttpParser: java.lang.String readToken(java.io.Reader)>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<java.util.ComparableTimSort: void binarySort(java.lang.Object[],int,int,int)>-><org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore$TokenExpiry: int compareTo(java.lang.Object)>
<org.aspectj.weaver.patterns.NotAnnotationTypePattern: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.codehaus.jackson.node.NullNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.lang.Exception getLastConnectionFailure()>-><java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.cert.Certificate: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.QueryRequest: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$UnmodifiableMap: int size()>
<sun.reflect.UnsafeStaticCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putChar(java.lang.Object,long,char)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.NullBean: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.util.context.Context1: java.lang.String toString()>
<java.util.Collections$SynchronizedCollection: java.lang.String toString()>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.auth.entity.BindUser: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.google.common.collect.Maps$ViewCachingAbstractMap: java.util.Set entrySet()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.introspect.MemberKey: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.awt.RenderingHints$Key: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection: boolean isEmpty()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.imageio.ImageTypeSpecifier$Interleaved: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.util.ClockSource: long plusMillis(long,long)>-><com.zaxxer.hikari.util.ClockSource$MillisecondClockSource: long plusMillis0(long,long)>
<sun.reflect.UnsafeDoubleFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeDoubleFieldAccessorImpl: double getDouble(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<sun.reflect.UnsafeStaticIntegerFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><sun.reflect.UnsafeStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.map.JsonMappingException$Reference: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.alibaba.fastjson.util.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<org.apache.catalina.core.ContainerBase: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.BeanExpressionContext: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.MediaType: org.apache.tomcat.util.http.parser.MediaType parseMediaType(java.io.StringReader)>-><org.apache.tomcat.util.http.parser.HttpParser: java.lang.String readTokenOrQuotedString(java.io.Reader,boolean)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.pool.PoolEntry createPoolEntry()>-><com.zaxxer.hikari.pool.PoolBase: com.zaxxer.hikari.pool.PoolEntry newPoolEntry()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.JapaneseImperialCalendar: boolean equals(java.lang.Object)>
<sun.reflect.generics.repository.FieldRepository: sun.reflect.generics.tree.Tree parse(java.lang.String)>-><sun.reflect.generics.repository.FieldRepository: sun.reflect.generics.tree.TypeSignature parse(java.lang.String)>
<java.util.Collections: void reverse(java.util.List)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: int size()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.awt.image.IndexColorModel: java.lang.String toString()>
<org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.google.common.collect.ArrayListMultimap: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.access.SecurityConfig: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: int hashCode()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><cc.mrbird.febs.common.core.entity.FebsResponse: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: int hashCode()>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void rollback()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.springframework.util.LinkedCaseInsensitiveMap$EntrySetIterator: java.lang.Object next()>
<sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Double: double doubleValue()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.Arrays$ArrayList: int size()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<java.nio.CharBuffer: int compare(char,char)>-><java.lang.Character: int compare(char,char)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Character: char charValue()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.ResolvableType: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.lang.reflect.Field: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<sun.reflect.UnsafeStaticByteFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Byte: void <init>(byte)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<reactor.core.scheduler.ParallelScheduler: java.lang.Object scanUnsafe(reactor.core.Scannable$Attr)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<com.sun.jmx.mbeanserver.MBeanAnalyzer: void visit(com.sun.jmx.mbeanserver.MBeanAnalyzer$MBeanVisitor)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.String toString()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.HikariConfig: long getInitializationFailTimeout()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.Double: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.text.DigitList: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeStaticBooleanFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<com.zaxxer.hikari.pool.HikariProxyPreparedStatement: boolean execute(java.lang.String)>-><com.zaxxer.hikari.pool.ProxyStatement: java.sql.SQLException checkException(java.sql.SQLException)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.GregorianCalendar: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Collections$UnmodifiableCollection: boolean contains(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.web.util.pattern.LiteralPathElement: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.C2BConverter: void <init>(java.nio.charset.Charset)>-><sun.nio.cs.US_ASCII: java.nio.charset.CharsetEncoder newEncoder()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.joran.spi.ElementSelector: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.FloatNode: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags of(java.lang.Iterable)>-><java.util.stream.ReferencePipeline: java.lang.Object[] toArray(java.util.function.IntFunction)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.ObjectNode: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.security.provider.PolicyFile$SelfPermission: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyLeakTask: void <init>(com.zaxxer.hikari.pool.PoolEntry)>-><com.zaxxer.hikari.pool.ProxyConnection: java.lang.String toString()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><com.zaxxer.hikari.pool.HikariPool: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.aspectj.bridge.MessageUtil: java.lang.String addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)>-><java.io.PrintWriter: void print(java.lang.String)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: int hashCode()>
<org.apache.catalina.connector.Response: boolean doIsEncodeable(org.apache.catalina.Context,org.apache.catalina.connector.Request,org.apache.catalina.Session,java.lang.String)>-><java.net.URL: java.lang.String getHost()>
<com.zaxxer.hikari.pool.ProxyConnection: void <init>(com.zaxxer.hikari.pool.PoolEntry,java.sql.Connection,com.zaxxer.hikari.util.FastList,com.zaxxer.hikari.pool.ProxyLeakTask,long,boolean,boolean)>-><java.lang.Object: void <init>()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.reflect.Parameter: java.lang.String toString()>
<org.springframework.web.context.request.ServletRequestAttributes: javax.servlet.http.HttpSession getSession(boolean)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<org.aspectj.bridge.MessageUtil: java.lang.String addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void throwPoolInitializationException(java.lang.Throwable)>-><com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.crypto.CryptoAllPermission: boolean equals(java.lang.Object)>
<org.springframework.web.util.pattern.LiteralPathElement: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.TreeSet: boolean contains(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.codehaus.jackson.node.POJONode: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<com.zaxxer.hikari.util.UtilityElf: java.util.concurrent.ThreadPoolExecutor createThreadPoolExecutor(java.util.concurrent.BlockingQueue,java.lang.String,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)>-><com.zaxxer.hikari.util.UtilityElf$DefaultThreadFactory: void <init>(java.lang.String,boolean)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.aop.support.AbstractPointcutAdvisor: boolean equals(java.lang.Object)>
<org.springframework.beans.DirectFieldAccessor$FieldPropertyHandler: void setValue(java.lang.Object)>-><java.lang.reflect.Field: java.lang.String getName()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>-><org.aspectj.weaver.MemberImpl: org.aspectj.weaver.UnresolvedType[] getParameterTypes()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$EmptyMap: java.lang.Object get(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: void clear()>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] getArray()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.core.JsonLocation: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><javax.print.MimeType$ParameterMapEntry: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.io.SerializedString: java.lang.String toString()>
<org.apache.tomcat.util.http.parser.MediaTypeCache: java.lang.String[] parse(java.lang.String)>-><org.apache.tomcat.util.collections.ConcurrentCache: void put(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<org.aspectj.weaver.UnresolvedType: java.lang.String toString()>-><org.aspectj.weaver.UnresolvedType: java.lang.String getName()>
<org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<com.zaxxer.hikari.util.UtilityElf: int getTransactionIsolation(java.lang.String)>-><java.lang.Integer: int parseInt(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.support.NullBean: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: int size()>-><javax.print.MimeType$ParameterMapEntrySet: int size()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.SimpleTimeZone: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.invoke.LambdaForm: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.Class: java.lang.Object newInstance()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.OptionalLong: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.CflowPointcut: java.lang.String toString()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.awt.Color: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<org.apache.catalina.connector.Response: boolean doIsEncodeable(org.apache.catalina.Context,org.apache.catalina.connector.Request,org.apache.catalina.Session,java.lang.String)>-><org.apache.catalina.util.SessionConfig: java.lang.String getSessionUriParamName(org.apache.catalina.Context)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<java.beans.Introspector: void processPropertyDescriptors()>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.ArgsAnnotationPointcut: java.lang.String toString()>
<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.reflect.Field copy()>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.node.BooleanNode: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><com.zaxxer.hikari.HikariConfig: java.lang.String getConnectionTestQuery()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.text.AttributedString$AttributedStringIterator: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void setMetricsTrackerFactory(com.zaxxer.hikari.metrics.MetricsTrackerFactory)>-><com.zaxxer.hikari.HikariConfig: java.lang.String getPoolName()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.util.LinkedMultiValueMap: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object[])>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.security.web.session.SessionManagementFilter: void doFilter_d351a97ccabbb8dc2c900b1f99baade2(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><synthetic.method.SingletonFactory: cc.mrbird.febs.common.security.starter.handler.FebsAuthExceptionEntryPoint getAuthenticationEntryPoint()>
<org.apache.tomcat.util.buf.CharChunk: void <init>(int)>-><org.apache.tomcat.util.buf.CharChunk: void allocate(int,int)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ClockSource: long elapsedMillis(long)>-><com.zaxxer.hikari.util.ClockSource$NanosecondClockSource: long elapsedMillis0(long)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.security.UnresolvedPermission: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.Integer: java.lang.String toString()>
<org.hibernate.validator.internal.util.annotation.AnnotationProxy: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<org.springframework.security.web.FilterInvocation: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.zone.ZoneOffsetTransitionRule: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.WeakHashMap$EntrySet: boolean contains(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.nio.ch.SocketOptionRegistry$RegistryKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.String toString()>
<org.springframework.web.context.request.AbstractRequestAttributesScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.Object getAttribute(java.lang.String,int)>
<org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>-><org.aspectj.weaver.TypeVariable: java.lang.String getName()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><java.lang.reflect.Field: java.lang.String toString()>
<reactor.core.Exceptions: java.lang.Throwable addSuppressed(java.lang.Throwable,java.lang.Throwable)>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.util.UtilityElf: int getTransactionIsolation(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<sun.reflect.UnsafeByteFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Byte: void <init>(byte)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.AttributedCharacterIterator$Attribute: boolean equals(java.lang.Object)>
<cc.mrbird.febs.auth.handler.FebsWebLoginSuccessHandler: void onAuthenticationSuccess(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain,org.springframework.security.core.Authentication)>-><org.springframework.security.web.FilterChainProxy$VirtualFilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.util.unit.DataSize: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.time.MonthDay: boolean equals(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<io.micrometer.core.instrument.Tags: void dedup()>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String getKey()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.NamePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.LongNode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.core.publisher.FluxCreate$IgnoreSink: java.lang.String toString()>
<com.zaxxer.hikari.util.PropertyElf: java.util.Set getPropertyNames(java.lang.Class)>-><java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.nio.CharBuffer: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><cn.hutool.core.date.format.FastDatePrinter$TimeZoneDisplayKey: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.core.JsonLocation: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.BinaryNode: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<org.springframework.security.web.FilterChainProxy$VirtualFilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.aspectj.weaver.patterns.ReferencePointcut: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$EmptySet: java.util.Iterator iterator()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.node.TextNode: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: int hashCode()>
<com.sun.beans.TypeResolver: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.reflect.Type)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<com.zaxxer.hikari.util.ClockSource: long plusMillis(long,long)>-><com.zaxxer.hikari.util.ClockSource$NanosecondClockSource: long plusMillis0(long,long)>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<io.micrometer.core.instrument.distribution.DistributionStatisticConfig$Builder: void <init>()>-><java.lang.Object: void <init>()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onBeforeSetAutoCommit(com.p6spy.engine.common.ConnectionInformation,boolean,boolean)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.security.x509.RDN: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.map.introspect.AnnotatedParameter: java.lang.String toString()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><io.netty.buffer.AbstractByteBuf: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.core.convert.TypeDescriptor: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>
<sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl: byte getByte(java.lang.Object)>-><sun.misc.Unsafe: byte getByteVolatile(java.lang.Object,long)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.util.unit.DataSize: java.lang.String toString()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.management.openmbean.TabularDataSupport: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><java.nio.Buffer: int position()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.security.MessageDigest: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.math.BigDecimal: boolean equals(java.lang.Object)>
<org.aspectj.bridge.SourceLocation: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Proxy$KeyX: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.management.MBeanInfo: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><java.lang.reflect.Field: int hashCode()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.SubList: java.lang.Object set(int,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.NullNode: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.security.provider.PolicyParser$DomainEntry: java.lang.String toString()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.beans.PropertyValue: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FormatCache$MultipartKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getValue()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ReferenceType: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Hashtable$KeySet: java.util.Iterator iterator()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void appendCollection(java.lang.Object,java.lang.StringBuilder,java.util.Set)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.math.BigDecimal: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.ArrayList: int size()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource: java.lang.String toString()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.AnnotationTypePattern: boolean isForParameterAnnotationMatch()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.MethodInfo: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<java.sql.SQLException: void <init>(java.lang.String,java.lang.String)>-><java.sql.DriverManager: void println(java.lang.String)>
<com.zaxxer.hikari.pool.ProxyConnection: void closeStatements()>-><org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.GmtTimeZone: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.Vector: int size()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.URI: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.jar.Attributes: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onAfterRollback(com.p6spy.engine.common.ConnectionInformation,long,java.sql.SQLException)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: int hashCode()>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnnotationTypePattern: boolean isForParameterAnnotationMatch()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.aop.support.AbstractPointcutAdvisor: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><java.nio.Buffer: java.nio.Buffer position(int)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.Integer: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.Boolean: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<java.util.ComparableTimSort: int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int)>-><java.nio.CharBuffer: int compareTo(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.common.collect.AbstractMapBasedMultimap: void removeValuesForKey(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: void clear()>
<java.util.ComparableTimSort: void binarySort(java.lang.Object[],int,int,int)>-><java.nio.CharBuffer: int compareTo(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String getType()>
<sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl: int getInt(java.lang.Object)>-><sun.misc.Unsafe: int getIntVolatile(java.lang.Object,long)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Hashtable$Entry: java.lang.Object getValue()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><sun.misc.Unsafe: long staticFieldOffset(java.lang.reflect.Field)>
<org.springframework.web.util.pattern.RegexPathElement: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.alibaba.fastjson.JSONObject: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<cc.mrbird.febs.common.core.entity.system.UserDataPermission: int hashCode()>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.Long getUserId()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.NullBean: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.Formatter$FixedString: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object next()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFieldsUsing(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.apache.tomcat.util.buf.StringCache$CharEntry: int hashCode()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<java.util.stream.StreamOpFlag: int fromCharacteristics(java.util.Spliterator)>-><java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: int characteristics()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Indexer$PropertyIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><java.lang.reflect.Field: java.lang.Class getType()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildRequestUrl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<java.util.stream.ForEachOps$ForEachOrderedTask: void doCompute(java.util.stream.ForEachOps$ForEachOrderedTask)>-><java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: java.util.Spliterator trySplit()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.font.AttributeValues: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<java.beans.Introspector: void processPropertyDescriptors()>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object get(int)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.URI: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.Character$Subset: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.EmitUtils: void stringSwitchHelper(org.springframework.cglib.core.CodeEmitter,java.util.List,org.springframework.cglib.core.ObjectSwitchCallback,org.springframework.asm.Label,org.springframework.asm.Label,int)>-><com.google.common.base.Joiner$3: java.lang.Object get(int)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<com.alibaba.fastjson.serializer.JavaBeanSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<java.sql.SQLException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>-><java.lang.StringBuilder: void <init>()>
<com.zaxxer.hikari.pool.PoolBase: void initializeDataSource()>-><com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.io.File: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.MemberImpl: int hashCode()>
<com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.FilterInvocation: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.codehaus.jackson.node.POJONode: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<sun.reflect.UnsafeLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.JumboEnumSet: boolean contains(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><ch.qos.logback.classic.Logger: boolean isDebugEnabled()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.lang.Object next()>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.CodeSource: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$StringValues: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.StringCharacterIterator: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: long getLong(java.lang.Object)>-><sun.misc.Unsafe: long getLongVolatile(java.lang.Object,long)>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><com.zaxxer.hikari.util.ClockSource: long elapsedMillis(long)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object next()>
<org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AndAnnotationTypePattern: java.lang.String toString()>
<org.apache.tomcat.util.buf.C2BConverter: void <init>(java.nio.charset.Charset)>-><java.lang.Object: void <init>()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><org.apache.tomcat.util.buf.CharChunk: char[] getBuffer()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.google.common.base.Predicates$ObjectPredicate$3: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.Collections$SynchronizedCollection: int size()>
<org.aspectj.bridge.context.CompilationAndWeavingContext: java.lang.String getCurrentContext()>-><java.util.Stack: void <init>()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.LambdaForm$Name: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.Collections: void reverse(java.util.List)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.lang.reflect.Field: java.lang.String toString()>-><java.lang.reflect.Field: int getModifiers()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.management.openmbean.SimpleType: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Boolean: boolean booleanValue()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.Inet6Address: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.UUID: java.lang.String toString()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><cn.hutool.http.ContentType: java.lang.String toString()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.core.publisher.Mono: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.stream.Nodes$IntFixedNodeBuilder: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.SimpleTimeZone: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>
<org.aspectj.bridge.MessageUtil: java.lang.String addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.lettuce.core.masterslave.RedisMasterSlaveNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FormatCache$MultipartKey: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.MemberName: boolean equals(java.lang.Object)>
<java.util.IdentityHashMap$EntrySet: boolean contains(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<com.zaxxer.hikari.pool.HikariPool: void addBagItem(int)>-><java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.CflowPointcut: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.core.convert.support.GenericConversionService$ConverterAdapter: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.aop.framework.AdvisedSupport: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.HikariConfig: java.lang.String getPoolName()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.reflect.WeakCache$CacheKey: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.boot.ansi.AnsiColor: java.lang.String toString()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.annotation.Annotation getAnnotation(java.lang.reflect.Field,java.lang.Class)>-><java.lang.reflect.Field: java.lang.String getName()>
<com.fasterxml.jackson.core.JsonLocation: java.lang.StringBuilder _appendSourceDesc(java.lang.StringBuilder)>-><java.nio.HeapCharBuffer: java.lang.CharSequence subSequence(int,int)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.jca.ProviderConfig: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.crypto.CryptoAllPermission: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: java.lang.String toString()>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.sun.naming.internal.ResourceManager: void mergeTables(java.util.Hashtable,java.util.Hashtable)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<java.sql.DriverManager: java.util.Enumeration getDrivers()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>
<com.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.Object: java.lang.Class getClass()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.HttpCookie: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Parameter: boolean equals(java.lang.Object)>
<org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.Character: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.access.SecurityConfig: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<java.util.ArrayList$SubList$1: java.lang.Object previous()>-><java.util.ArrayList$SubList$1: void checkForComodification()>
<org.apache.logging.log4j.message.ParameterFormatter: void appendCollection(java.lang.Object,java.lang.StringBuilder,java.util.Set)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.format.support.FormattingConversionService$AnnotationConverterKey: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><java.nio.CharBuffer: int hashCode()>
<com.p6spy.engine.spy.P6DataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)>-><com.p6spy.engine.event.CompoundJdbcEventListener: void onBeforeGetConnection(com.p6spy.engine.common.ConnectionInformation)>
<cc.mrbird.febs.common.core.utils.FebsUtil: void makeResponse(javax.servlet.http.HttpServletResponse,java.lang.String,int,java.lang.Object)>-><org.apache.catalina.connector.Response: javax.servlet.ServletOutputStream getOutputStream()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.AttributeEntry: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><org.bouncycastle.asn1.ASN1ParsingException: java.lang.Throwable getCause()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.OptionalInt: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.web.context.request.ServletRequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)>-><org.springframework.web.context.request.ServletRequestAttributes: javax.servlet.http.HttpSession obtainSession()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.util.DerInputBuffer: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$SynchronizedCollection: int size()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.Response: boolean doIsEncodeable(org.apache.catalina.Context,org.apache.catalina.connector.Request,org.apache.catalina.Session,java.lang.String)>-><java.net.URL: void <init>(java.lang.String)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.web.method.ControllerAdviceBean: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.AnnotationPointcut: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.Thread: java.lang.String toString()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.net.InetSocketAddress: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.awt.Color: boolean equals(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: int hashCode()>
<com.zaxxer.hikari.util.SuspendResumeLock: void acquire()>-><java.lang.Boolean: boolean getBoolean(java.lang.String)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.PropertyElf: java.util.Set getPropertyNames(java.lang.Class)>-><java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<com.alibaba.fastjson.JSONArray: int size()>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.format.support.FormattingConversionService$AnnotationConverterKey: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut: java.lang.String toString()>
<java.util.ComparableTimSort: void binarySort(java.lang.Object[],int,int,int)>-><io.micrometer.core.instrument.Tag: int compareTo(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.zone.ZoneRules: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Collections$UnmodifiableCollection: int size()>
<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><javax.print.MimeType$ParameterMapEntry: int hashCode()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: java.lang.Object get(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Optional: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.Gauge: io.micrometer.core.instrument.Gauge$Builder builder(java.lang.String,java.lang.Object,java.util.function.ToDoubleFunction)>-><io.micrometer.core.instrument.Gauge$Builder: void <init>(java.lang.String,java.lang.Object,java.util.function.ToDoubleFunction,io.micrometer.core.instrument.Gauge$1)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSON: java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><ch.qos.logback.core.subst.Node: java.lang.String toString()>
<org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: int hashCode()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.alibaba.fastjson.JSONObject: boolean equals(java.lang.Object)>
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.core.MethodParameter: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Vector: java.lang.Object get(int)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void beforePrototypeCreation(java.lang.String)>-><java.util.TreeSet: boolean add(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Formatter$FixedString: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.Response: void setContentType(java.lang.String)>-><org.apache.catalina.connector.Response: boolean isCommitted()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<java.util.Collections: void reverse(java.util.List)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.util.RawValue: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.reflect.WeakCache$CacheValue: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$OptimalPropertyAccessor: boolean isCompilable()>-><java.lang.reflect.Field: int getModifiers()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.reflect.Method: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl: char getChar(java.lang.Object)>-><sun.misc.Unsafe: char getCharVolatile(java.lang.Object,long)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.RenderingHints$Key: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.context.support.DelegatingMessageSource: java.lang.String toString()>
<java.security.UnresolvedPermissionCollection: void add(java.security.Permission)>-><java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Proxy$Key1: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: void add(int,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] getArray()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.Inet4Address: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<java.nio.CharBuffer: boolean equals(java.lang.Object)>-><java.nio.HeapCharBuffer: char get(int)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<cn.hutool.core.exceptions.ExceptionUtil: java.lang.String getMessage(java.lang.Throwable)>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields: long lvProducerIndex()>-><sun.misc.Unsafe: long getLongVolatile(java.lang.Object,long)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.String toString()>
<org.aspectj.weaver.patterns.HandlerPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><io.netty.util.internal.RecyclableArrayList: boolean add(java.lang.Object)>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<io.netty.util.internal.ThreadExecutorMap$1: void execute(java.lang.Runnable)>-><com.google.common.util.concurrent.MoreExecutors$ListeningDecorator: void execute(java.lang.Runnable)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.MapSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.ArrayList: java.lang.Object get(int)>
<java.net.InetAddress$Cache: java.net.InetAddress$Cache put(java.lang.String,java.net.InetAddress[])>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><com.p6spy.engine.wrapper.StatementWrapper: boolean execute(java.lang.String)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void recordBorrowTimeoutStats(long)>-><com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker: void recordConnectionAcquiredNanos(long)>
<org.aspectj.bridge.context.CompilationAndWeavingContext: java.lang.String getCurrentContext()>-><org.aspectj.bridge.context.CompilationAndWeavingContext: java.util.Stack getContextStack()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<com.p6spy.engine.spy.P6DataSource: int getLoginTimeout()>-><com.p6spy.engine.spy.P6DataSource: void bindDataSource()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.ReferencePointcut: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><java.lang.Boolean: boolean getBoolean(java.lang.String)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.PropertyElf: java.util.Set getPropertyNames(java.lang.Class)>-><java.util.regex.Matcher: boolean matches()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<org.apache.catalina.connector.CoyoteOutputStream: boolean checkNonBlockingWrite()>-><org.apache.catalina.connector.OutputBuffer: boolean isReady()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.ser.BeanSerializer: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.base.Predicates$NotPredicate: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.sun.naming.internal.ResourceManager: void mergeTables(java.util.Hashtable,java.util.Hashtable)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.BooleanNode: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.RootBeanDefinition: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.time.chrono.AbstractChronology: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: java.lang.Object next()>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cn.hutool.core.date.format.FastDateFormat: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags of(java.lang.Iterable)>-><io.micrometer.core.instrument.Tags$ArrayIterator: boolean hasNext()>
<java.util.ComparableTimSort: void mergeLo(int,int,int,int)>-><org.aspectj.bridge.IMessage$Kind: int compareTo(java.lang.Object)>
<org.hibernate.validator.internal.util.annotation.AnnotationProxy: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.provider.PolicyFile$SelfPermission: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.expression.spel.standard.Token: java.lang.String toString()>
<org.aspectj.weaver.patterns.KindedPointcut: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.String toString()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><java.nio.CharBuffer: java.lang.String toString()>
<sun.reflect.UnsafeFieldAccessorImpl: java.lang.String getQualifiedFieldName()>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.ClassTypeInformation: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><reactor.util.function.Tuple4: boolean equals(java.lang.Object)>
<javax.management.ObjectInstance: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.HashSet: void <init>(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.Float: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.CompositeType: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<reactor.core.scheduler.ReactorThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>-><java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<org.aspectj.bridge.AbortException: void printStackTrace(java.io.PrintStream)>-><org.aspectj.bridge.AbortException: boolean isPorter()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.awt.AppContext: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.io.SerializedString: boolean equals(java.lang.Object)>
<org.springframework.web.util.pattern.CaptureTheRestPathElement: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.apache.commons.pool2.BaseObject: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.Character: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.HikariDataSource: void setLoginTimeout(int)>-><com.zaxxer.hikari.pool.HikariPool: javax.sql.DataSource getUnwrappedDataSource()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Hashtable$EntrySet: java.util.Iterator iterator()>
<org.springframework.security.core.context.SecurityContextImpl: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<org.springframework.web.util.pattern.SingleCharWildcardedPathElement: java.lang.String toString()>-><java.lang.String: java.lang.String valueOf(char[])>
<org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeCharacterFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.ArrayList: java.lang.Object get(int)>
<reactor.core.scheduler.ReactorThreadFactory$NonBlockingThread: void <init>(java.lang.Runnable,java.lang.String)>-><java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><java.nio.CharBuffer: java.lang.String toString()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(java.nio.CharBuffer,java.nio.ByteBuffer)>-><java.nio.charset.CoderResult: boolean isMalformed()>
<org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void quietlyCloseConnection(java.sql.Connection,java.lang.String)>-><com.zaxxer.hikari.pool.PoolBase: void setNetworkTimeout(java.sql.Connection,long)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.Collections$SynchronizedCollection: boolean isEmpty()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.MemberName: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.OffsetDateTime: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Integer: int intValue()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><java.nio.CharBuffer: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.BasicPermission: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.springframework.cglib.core.EmitUtils: void stringSwitchHelper(org.springframework.cglib.core.CodeEmitter,java.util.List,org.springframework.cglib.core.ObjectSwitchCallback,org.springframework.asm.Label,org.springframework.asm.Label,int)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object get(int)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.temporal.WeekFields: java.lang.String toString()>
<org.apache.tomcat.util.http.parser.MediaType: java.lang.String toStringNoCharset()>-><java.util.HashMap$Node: java.lang.Object getValue()>
<com.zaxxer.hikari.util.ConcurrentBag: int getCount(int)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.management.ImmutableDescriptor: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void checkDefaultIsolation(java.sql.Connection)>-><com.p6spy.engine.wrapper.ConnectionWrapper: int getTransactionIsolation()>
<org.aspectj.weaver.patterns.TypePatternList: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.google.common.util.concurrent.MoreExecutors$ListeningDecorator: void execute(java.lang.Runnable)>-><com.google.common.util.concurrent.MoreExecutors$ListeningDecorator: void execute(java.lang.Runnable)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.apache.commons.pool2.impl.BaseGenericObjectPool$IdentityWrapper: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void close()>-><com.zaxxer.hikari.metrics.IMetricsTracker: void close()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.jar.Attributes: boolean equals(java.lang.Object)>
<org.springframework.web.util.pattern.CaptureVariablePathElement: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><com.zaxxer.hikari.pool.PoolBase: void quietlyCloseConnection(java.sql.Connection,java.lang.String)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.bridge.Message: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: boolean hasNext()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.Collections$SetFromMap: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<sun.util.logging.PlatformLogger$DefaultLoggerProxy: java.lang.String format(sun.util.logging.PlatformLogger$Level,java.lang.String,java.lang.Throwable)>-><org.aspectj.weaver.BCException: void printStackTrace(java.io.PrintWriter)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$SetFromMap: java.util.Iterator iterator()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><reactor.core.publisher.FluxOnAssembly$OnAssemblyException: java.lang.String getMessage()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>
<com.zaxxer.hikari.pool.HikariPool: void logPoolState(java.lang.String[])>-><com.zaxxer.hikari.pool.HikariPool: int getIdleConnections()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.lang.ProcessEnvironment$StringKeySet: java.util.Iterator iterator()>
<org.aspectj.weaver.patterns.ModifiersPattern: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void createNetworkTimeoutExecutor(javax.sql.DataSource,java.lang.String,java.lang.String)>-><com.zaxxer.hikari.HikariConfig: java.util.concurrent.ThreadFactory getThreadFactory()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<java.lang.ThreadLocal: java.lang.Object setInitialValue()>-><java.lang.ThreadLocal$SuppliedThreadLocal: java.lang.Object initialValue()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.IdentityHashMap$KeySet: java.util.Iterator iterator()>
<com.zaxxer.hikari.util.PropertyElf: java.util.Set getPropertyNames(java.lang.Class)>-><java.lang.Character: char toLowerCase(char)>
<com.google.common.collect.TransformedIterator: boolean hasNext()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ForEachOps$ForEachOp$OfRef: void accept(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.baomidou.dynamic.datasource.DynamicGroupDataSource: boolean equals(java.lang.Object)>
<reactor.core.publisher.FluxIterable$IterableSubscription: boolean isEmpty()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap: java.lang.Object get(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.codehaus.jackson.io.SerializedString: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><io.lettuce.core.RedisURI: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.codehaus.jackson.map.type.CollectionLikeType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.io.ObjectStreamClass$WeakClassKey: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putObject(java.lang.Object,long,java.lang.Object)>
<sun.reflect.UnsafeStaticLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Integer: int intValue()>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.tree.DoubleSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.util.locale.BaseLocale: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFilteredFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap: int size()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.JumboEnumSet: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariProxyConnection: void setReadOnly(boolean)>-><com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.TextNode: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Hashtable$Entry: java.lang.Object getKey()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.security.CodeSigner: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>-><org.aspectj.weaver.JoinPointSignature: org.aspectj.weaver.MemberKind getKind()>
<com.zaxxer.hikari.HikariConfig: java.lang.String generatePoolName()>-><ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>
<org.springframework.util.ReflectionUtils: java.lang.reflect.Field findField(java.lang.Class,java.lang.String,java.lang.Class)>-><java.lang.reflect.Field: java.lang.Class getType()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.apache.commons.pool2.impl.BaseGenericObjectPool$IdentityWrapper: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: void closeStatements()>-><com.zaxxer.hikari.pool.ProxyLeakTask: void cancel()>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><java.lang.reflect.Field: java.lang.String toString()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.HikariConfig: void logConfiguration()>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<org.apache.catalina.connector.OutputBuffer: int transfer(java.lang.String,int,int,java.nio.CharBuffer)>-><org.apache.catalina.connector.OutputBuffer: void toReadMode(java.nio.Buffer)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.http.ResponseEntity: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeIntegerFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><sun.reflect.UnsafeFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<org.springframework.security.web.session.SessionManagementFilter: void doFilter_c9503b13d455a9d9d6db37d7897e159a(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><synthetic.method.SingletonFactory: cc.mrbird.febs.common.security.starter.handler.FebsAuthExceptionEntryPoint getAuthenticationEntryPoint()>
<org.aspectj.util.LangUtil: void elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)>-><org.aspectj.util.LangUtil$StringChecker: boolean acceptString(java.lang.String)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<org.springframework.security.web.session.SessionManagementFilter: void doFilter_8da2016b7ccd28d1cbcefbb3326e404b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><synthetic.method.SingletonFactory: cc.mrbird.febs.common.security.starter.handler.FebsAuthExceptionEntryPoint getAuthenticationEntryPoint()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.jar.Attributes$Name: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.math.BigDecimal: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int getKeyHash()>
<org.apache.catalina.core.ContainerBase: java.lang.String toString()>-><java.lang.Object: java.lang.Class getClass()>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onAfterRollback(com.p6spy.engine.common.ConnectionInformation,long,java.sql.SQLException)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>-><org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object[])>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.auth.entity.OauthClientDetails: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.framework.JdkDynamicAopProxy: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.lang.Object next()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.ListIterator listIterator()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.GenericBeanDefinition: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void createNetworkTimeoutExecutor(javax.sql.DataSource,java.lang.String,java.lang.String)>-><java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool(java.util.concurrent.ThreadFactory)>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<com.zaxxer.hikari.pool.PoolBase: void <init>(com.zaxxer.hikari.HikariConfig)>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.util.calendar.ZoneInfo: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><com.p6spy.engine.wrapper.ConnectionWrapper: int getNetworkTimeout()>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<java.util.Collection: java.util.stream.Stream stream()>-><java.util.concurrent.LinkedBlockingQueue: java.util.Spliterator spliterator()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object)>
<ch.qos.logback.core.helpers.ThrowableToStringArray: java.lang.String formatFirstLine(java.lang.Throwable,java.lang.StackTraceElement[])>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.aspectj.weaver.patterns.TypePatternList: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.BasicPermission: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue$Itr: void <init>(java.util.concurrent.LinkedBlockingQueue)>-><java.lang.Object: void <init>()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$OptimalPropertyAccessor: void generateCode(java.lang.String,org.springframework.asm.MethodVisitor,org.springframework.expression.spel.CodeFlow)>-><java.lang.reflect.Field: int getModifiers()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.text.AttributedCharacterIterator$Attribute: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: boolean isAuthenticated()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><org.apache.ibatis.session.Configuration$StrictMap: java.lang.Object get(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.http.HttpHeaders: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyDatabaseMetaData: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<java.util.TimSort: int gallopLeft(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator)>-><java.time.format.DateTimeFormatterBuilder$2: int compare(java.lang.Object,java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.awt.Point: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.util.CollectionUtils$MultiValueMapAdapter: int size()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanParameterInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.Collections$SynchronizedCollection: boolean remove(java.lang.Object)>
<org.springframework.cglib.proxy.Enhancer: void emitMethods(org.springframework.cglib.core.ClassEmitter,java.util.List,java.util.List)>-><io.netty.channel.nio.SelectedSelectionKeySet: boolean add(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.node.BinaryNode: java.lang.String toString()>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.sun.naming.internal.ResourceManager: java.lang.Object getFactory(java.lang.String,java.util.Hashtable,javax.naming.Context,java.lang.String,java.lang.String)>-><org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><java.lang.reflect.Field: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.StringCharacterIterator: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$SingletonMap: java.lang.Object get(java.lang.Object)>
<javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>-><java.util.NoSuchElementException: void <init>()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: boolean hasNext()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><ch.qos.logback.core.subst.Node: java.lang.String toString()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.core.MethodParameter: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.alibaba.fastjson.JSON: java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig)>-><io.netty.channel.nio.SelectedSelectionKeySet: int size()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.util.context.Context1: java.lang.Object getKey()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<org.springframework.expression.spel.ast.Indexer: void generateCode(org.springframework.asm.MethodVisitor,org.springframework.expression.spel.CodeFlow)>-><java.lang.reflect.Field: java.lang.Class getType()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.util.DerInputBuffer: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue$Itr: java.lang.Object next()>-><java.util.concurrent.LinkedBlockingQueue: void fullyUnlock()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.text.DecimalFormat: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<sun.reflect.UnsafeLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.security.UnresolvedPermission: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.codehaus.jackson.node.TextNode: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.security.oauth2.provider.OAuth2Authentication: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.TreeMap$KeySet: boolean contains(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.stream.Nodes$FixedNodeBuilder: java.lang.String toString()>
<org.aspectj.util.LangUtil: java.lang.String renderException(java.lang.Throwable,boolean)>-><org.aspectj.util.LangUtil: java.lang.Throwable unwrapException(java.lang.Throwable)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<org.aspectj.bridge.Message: java.lang.String toString()>-><org.aspectj.bridge.MessageUtil: java.lang.String renderMessage(org.aspectj.bridge.IMessage,boolean)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.security.x509.X509CertImpl: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: java.lang.String toString()>
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getDependencyType()>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.reflect.Type getRawType()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.provider.PolicyFile$SelfPermission: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.MutablePropertyValues: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.Locale: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.MethodType: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.Nodes$SpinedNodeBuilder: void accept(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<sun.reflect.UnsafeStaticCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: void add(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.concurrent.SynchronousQueue: boolean offer(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.invoke.MemberName: java.lang.String toString()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.Period: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.data.redis.connection.util.ByteArrayWrapper: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: int hashCode()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.YearMonth: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<com.zaxxer.hikari.HikariConfig: void logConfiguration()>-><com.zaxxer.hikari.util.PropertyElf: java.util.Set getPropertyNames(java.lang.Class)>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: boolean add(java.lang.Object)>
<java.lang.ProcessEnvironment$StringEntrySet$2: java.lang.ProcessEnvironment$Value getValue()>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String getPath()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.imageio.ImageTypeSpecifier: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.stream.StreamSpliterators$AbstractWrappingSpliterator: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: int hashCode()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.aspectj.weaver.patterns.NamePattern: int hashCode()>
<org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>-><org.aspectj.weaver.MemberImpl: java.lang.String getName()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.imageio.ImageTypeSpecifier$Interleaved: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.ThisOrTargetAnnotationPointcut: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.metrics.PoolStats: void <init>(long)>-><java.util.concurrent.atomic.AtomicLong: void <init>()>
<org.aspectj.bridge.AbortException: void printStackTrace(java.io.PrintWriter)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean remove(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet: int size()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: int hashCode()>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Integer: int intValue()>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.tree.FloatSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.Thread$WeakClassKey: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<org.springframework.context.expression.BeanFactoryResolver: java.lang.Object resolve(org.springframework.expression.EvaluationContext,java.lang.String)>-><org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.String)>
<org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore$TokenExpiry: int compareTo(java.util.concurrent.Delayed)>-><org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore$TokenExpiry: long getDelay(java.util.concurrent.TimeUnit)>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serializeContents(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.image.PackedColorModel: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><cn.hutool.core.date.format.FormatCache$MultipartKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Year: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(java.nio.CharBuffer,java.nio.ByteBuffer)>-><java.nio.CharBuffer: int arrayOffset()>
<org.apache.catalina.util.ToStringUtil: java.lang.String containedToString(java.lang.Object,java.lang.Object,java.lang.String)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><io.netty.buffer.SwappedByteBuf: java.lang.String toString()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.beans.factory.config.BeanDefinitionHolder: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariProxyPreparedStatement: void setQueryTimeout(int)>-><com.zaxxer.hikari.pool.ProxyStatement: java.sql.SQLException checkException(java.sql.SQLException)>
<sun.reflect.UnsafeFieldAccessorImpl: java.lang.String getQualifiedFieldName()>-><java.lang.Class: java.lang.String getName()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: boolean equals(java.lang.Object)>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.base.Joiner$3: java.lang.Object get(int)>
<sun.reflect.UnsafeStaticFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Long: long longValue()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.alibaba.fastjson.JSONObject: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.data.redis.listener.PatternTopic: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><io.netty.buffer.PoolArena: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<org.aspectj.weaver.patterns.HandlerPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.URL: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><org.springframework.util.LinkedCaseInsensitiveMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.util.RawValue: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.imageio.ImageTypeSpecifier: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: boolean hasNext()>
<org.apache.catalina.connector.OutputBuffer: void writeBytes(byte[],int,int)>-><org.apache.catalina.connector.OutputBuffer: void flushByteBuffer()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.OffsetDateTime: boolean equals(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<com.zaxxer.hikari.util.ClockSource: long currentTime()>-><com.zaxxer.hikari.util.ClockSource$MillisecondClockSource: long currentTime0()>
<com.p6spy.engine.wrapper.ConnectionWrapper: void commit()>-><com.p6spy.engine.event.CompoundJdbcEventListener: void onAfterCommit(com.p6spy.engine.common.ConnectionInformation,long,java.sql.SQLException)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.connection.util.ByteArrayWrapper: boolean equals(java.lang.Object)>
<sun.util.logging.PlatformLogger$DefaultLoggerProxy: java.lang.String format(sun.util.logging.PlatformLogger$Level,java.lang.String,java.lang.Throwable)>-><org.aspectj.bridge.AbortException: void printStackTrace(java.io.PrintWriter)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(java.nio.CharBuffer,java.nio.ByteBuffer)>-><java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<org.apache.tomcat.util.buf.CharChunk: void append(char)>-><org.apache.tomcat.util.buf.AbstractChunk: int getLimitInternal()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<java.sql.DriverManager: java.util.Enumeration getDrivers()>-><java.lang.StringBuilder: void <init>()>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeIntegerFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<java.util.TreeMap$EntrySet: boolean contains(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><io.netty.buffer.SwappedByteBuf: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.Signature: boolean equals(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: int hashCode()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.zone.ZoneOffsetTransitionRule: java.lang.String toString()>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><java.util.SubList$1: int previousIndex()>
<org.springframework.util.StringUtils: java.lang.String collectionToDelimitedString(java.util.Collection,java.lang.String,java.lang.String,java.lang.String)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanNotificationInfo: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: java.util.Iterator iterator()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.HashMap$KeySet: java.util.Iterator iterator()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.ObjectNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.baomidou.dynamic.datasource.DynamicGroupDataSource: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: int hashCode()>
<sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl: boolean getBoolean(java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<org.apache.catalina.connector.ClientAbortException: void <init>(java.lang.Throwable)>-><java.io.IOException: void <init>(java.lang.Throwable)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.format.DecimalStyle: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.SynchronousQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>
<org.aspectj.weaver.BCException: void printStackTrace(java.io.PrintWriter)>-><java.lang.Object: java.lang.Class getClass()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyStatement: boolean execute(java.lang.String)>-><com.p6spy.engine.wrapper.StatementWrapper: boolean execute(java.lang.String)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariProxyConnection: void setNetworkTimeout(java.util.concurrent.Executor,int)>-><com.zaxxer.hikari.pool.ProxyConnection: void setNetworkTimeout(java.util.concurrent.Executor,int)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.MutablePropertyValues: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.TreeMap$Entry: java.lang.String toString()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.commons.pool2.impl.BaseGenericObjectPool$IdentityWrapper: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.zone.ZoneOffsetTransitionRule: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<org.springframework.boot.convert.CollectionToDelimitedStringConverter: java.lang.Object convert(java.util.Collection,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ReflectionUtils: java.lang.Object getField(java.lang.reflect.Field,java.lang.Object)>-><java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.time.ZoneOffset: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.security.provider.PolicyFile$SelfPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.awt.Font: java.lang.String toString()>
<cn.hutool.core.map.MapProxy: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><cn.hutool.core.date.format.FormatCache$MultipartKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><javax.management.RuntimeOperationsException: java.lang.Throwable getCause()>
<java.util.TimSort: void mergeLo(int,int,int,int)>-><java.time.format.DateTimeFormatterBuilder$2: int compare(java.lang.Object,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<org.aspectj.bridge.context.CompilationAndWeavingContext: java.lang.String getCurrentContext()>-><java.util.Vector$Itr: boolean hasNext()>
<com.zaxxer.hikari.pool.ProxyConnection: void close()>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String getPoolName()>
<cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>-><java.lang.String: int hashCode()>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>
<com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>-><java.lang.Object: int hashCode()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap$EntrySet: boolean contains(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><reactor.util.function.Tuple2: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.EnumMap: java.lang.Object get(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.bouncycastle.asn1.DERUTF8String: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.text.AttributedString$AttributedStringIterator: boolean equals(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.CollectionCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.node.ArrayNode: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyConnection: void close()>-><com.p6spy.engine.wrapper.ConnectionWrapper: void clearWarnings()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.text.FieldPosition: java.lang.String toString()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: int hashCode()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.temporal.WeekFields$ComputedDayOfField: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.SubList$1: boolean hasNext()>
<org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.Float: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><io.lettuce.core.event.metrics.CommandLatencyEvent: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.util.WeakHashMap$Entry: java.lang.Object getValue()>
<org.apache.tomcat.util.http.parser.HttpParser: java.lang.String readToken(java.io.Reader)>-><org.apache.tomcat.util.http.parser.HttpParser: int skipLws(java.io.Reader)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariDataSource: int getLoginTimeout()>-><com.zaxxer.hikari.pool.HikariPool: javax.sql.DataSource getUnwrappedDataSource()>
<org.springframework.web.util.pattern.SeparatorPathElement: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: int hashCode()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.DecimalFormat: boolean equals(java.lang.Object)>
<org.apache.catalina.core.ContainerBase: java.lang.String toString()>-><org.apache.catalina.core.ContainerBase: org.apache.catalina.Container getParent()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Collections$UnmodifiableMap: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.WeakHashMap$KeySet: boolean remove(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.bouncycastle.asn1.DERIA5String: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.auth.entity.BindUser: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.metrics.dropwizard.CodahaleHealthChecker$ConnectivityHealthCheck: void <init>(com.zaxxer.hikari.pool.HikariPool,long)>-><java.util.concurrent.TimeUnit$4: long toMillis(long)>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.SubList$1: int previousIndex()>-><java.util.SubList$1: int previousIndex()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSON: java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<com.zaxxer.hikari.HikariDataSource: java.sql.Connection getConnection()>-><com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<com.sun.naming.internal.ResourceManager: void mergeTables(java.util.Hashtable,java.util.Hashtable)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.Extension: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>-><java.lang.reflect.Field: java.lang.Class getType()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.IdentityHashMap: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: int hashCode()>
<javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>-><javax.print.MimeType$ParameterMapEntrySetIterator: void <init>(javax.print.MimeType,javax.print.MimeType$1)>
<sun.reflect.UnsafeStaticByteFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><sun.reflect.UnsafeStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.time.OffsetTime: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getDependencyType()>-><java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.io.ObjectStreamClass$WeakClassKey: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: int hashCode()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ListSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<java.sql.DriverManager: java.sql.Driver getDriver(java.lang.String)>-><java.sql.DriverManager: void println(java.lang.String)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.asm.Type: boolean equals(java.lang.Object)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: long getLoginTimeout()>-><com.p6spy.engine.spy.P6DataSource: int getLoginTimeout()>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.LinkedHashMap$LinkedEntrySet: boolean contains(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: int hashCode()>
<com.zaxxer.hikari.pool.ProxyLeakTaskFactory: void <init>(long,java.util.concurrent.ScheduledExecutorService)>-><java.lang.Object: void <init>()>
<java.util.concurrent.ThreadPoolExecutor$Worker: void <init>(java.util.concurrent.ThreadPoolExecutor,java.lang.Runnable)>-><reactor.core.scheduler.ReactorThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>
<org.apache.tomcat.util.http.parser.HttpParser: int skipLws(java.io.Reader)>-><java.io.StringReader: void reset()>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><javax.management.openmbean.TabularDataSupport: java.lang.String toString()>
<com.sun.jmx.interceptor.DefaultMBeanServerInterceptor: javax.management.ObjectName preRegister(javax.management.DynamicMBean,javax.management.MBeanServer,javax.management.ObjectName)>-><com.sun.jmx.mbeanserver.MBeanServerDelegateImpl: javax.management.ObjectName preRegister(javax.management.MBeanServer,javax.management.ObjectName)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><io.netty.util.internal.RecyclableArrayList: java.lang.Object set(int,java.lang.Object)>
<org.aspectj.weaver.Shadow$Kind: java.lang.String getSimpleName()>-><java.lang.String: java.lang.String substring(int)>
<java.sql.DriverManager: java.util.Enumeration getDrivers()>-><java.util.Vector: java.util.Enumeration elements()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: java.lang.Object previous()>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: java.lang.Object previous()>
<org.aspectj.weaver.patterns.TypePatternList: int hashCode()>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl$ClassIndexWrapper: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeStaticByteFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap: void removeValuesForKey(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.tomcat.util.http.parser.HttpParser: int skipLws(java.io.Reader)>-><java.io.StringReader: int read()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.security.x509.X509CRLEntryImpl: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>
<org.springframework.web.util.pattern.WildcardTheRestPathElement: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.QueryRequest: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$1: boolean hasNext()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><cc.mrbird.febs.auth.entity.BindUser: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.aspectj.weaver.patterns.ConcreteCflowPointcut: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String getSignature()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<com.zaxxer.hikari.util.ClockSource$MillisecondClockSource: long currentTime0()>-><java.lang.System: long currentTimeMillis()>
<com.zaxxer.hikari.pool.ProxyLeakTaskFactory: com.zaxxer.hikari.pool.ProxyLeakTask scheduleNewTask(com.zaxxer.hikari.pool.PoolEntry)>-><com.zaxxer.hikari.pool.ProxyLeakTask: void <init>(com.zaxxer.hikari.pool.PoolEntry)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><io.netty.buffer.PoolArena: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.invoke.MethodType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.security.x509.X509CertImpl: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.RDN: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><io.lettuce.core.metrics.CommandMetrics: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Optional: java.lang.String toString()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<com.sun.naming.internal.ResourceManager: void mergeTables(java.util.Hashtable,java.util.Hashtable)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.lang.ProcessEnvironment$StringEntrySet: java.util.Iterator iterator()>
<java.util.ComparableTimSort: void mergeLo(int,int,int,int)>-><org.aspectj.weaver.MemberImpl: int compareTo(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><org.springframework.util.LinkedMultiValueMap: java.lang.Object get(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.google.common.base.Predicates$AndPredicate: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cn.hutool.core.date.format.FastDateFormat: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.http.HttpStatus: java.lang.String toString()>
<org.apache.tomcat.util.http.parser.MediaType: void <init>(java.lang.String,java.lang.String,java.util.LinkedHashMap)>-><java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setupConnection(java.sql.Connection)>-><com.zaxxer.hikari.pool.HikariProxyConnection: boolean isReadOnly()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.support.DefaultIntroductionAdvisor: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.ProtectionDomain$WeakProtectionDomainKey: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><java.lang.reflect.Field: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<com.alibaba.fastjson.JSON: java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.core.publisher.Flux: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.reflect.Constructor: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<java.lang.Class: java.net.URL getResource(java.lang.String)>-><java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.ComparableTimSort: int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int)>-><org.aspectj.bridge.IMessage$Kind: int compareTo(java.lang.Object)>
<org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><com.zaxxer.hikari.pool.ProxyStatement: void close()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.ProcessEnvironment$ExternalData: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<org.springframework.beans.factory.support.DisposableBeanAdapter: java.lang.reflect.Method determineDestroyMethod(java.lang.String)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>-><java.util.Arrays: boolean equals(char[],char[])>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.math.BigDecimal: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<io.micrometer.core.instrument.Tags$ArrayIterator: java.lang.Object next()>-><io.micrometer.core.instrument.Tags$ArrayIterator: io.micrometer.core.instrument.Tag next()>
<com.zaxxer.hikari.pool.HikariProxyConnection: boolean isReadOnly()>-><com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.ArrayNode: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<java.lang.ThreadLocal$SuppliedThreadLocal: java.lang.Object initialValue()>-><java.util.stream.ReduceOps$5ReducingSink: java.lang.Object get()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.TabularType: boolean equals(java.lang.Object)>
<java.util.Collections: void reverse(java.util.List)>-><java.util.ArrayList$SubList$1: void set(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>-><org.springframework.security.web.authentication.WebAuthenticationDetails: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.beans.MutablePropertyValues: java.lang.String toString()>
<reactor.core.Exceptions: java.lang.Throwable addSuppressed(java.lang.Throwable,java.lang.Throwable)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.map.type.ClassKey: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Character: char charValue()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: int hashCode()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.core.scheduler.DelegateServiceScheduler$UnsupportedScheduledExecutorService: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.bouncycastle.asn1.DERBMPString: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.LinkedHashMap$LinkedEntrySet: java.util.Iterator iterator()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.provider.approval.Approval: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: void set(java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: void set(java.lang.Object)>
<org.springframework.beans.DirectFieldAccessor$FieldPropertyHandler: java.lang.Object getValue()>-><java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.Thread$WeakClassKey: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags and(java.lang.Iterable)>-><io.micrometer.core.instrument.Tags: java.util.Iterator iterator()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><cn.hutool.core.date.format.FastDatePrinter$TimeZoneDisplayKey: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.ObjectInstance: boolean equals(java.lang.Object)>
<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><java.time.format.DateTimeFormatterBuilder$2: int compare(java.lang.Object,java.lang.Object)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.google.common.base.Predicates$NotPredicate: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.AbstractMap: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<java.lang.ThreadLocal$SuppliedThreadLocal: java.lang.Object initialValue()>-><java.util.stream.ForEachOps$ForEachOp$OfRef: java.lang.Object get()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.springframework.web.context.request.ServletRequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<cc.mrbird.febs.common.core.utils.FebsUtil: void makeResponse(javax.servlet.http.HttpServletResponse,java.lang.String,int,java.lang.Object)>-><org.apache.catalina.connector.Response: void setStatus(int)>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.TimeUnit$3: long toNanos(long)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticFloatFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Float: void <init>(float)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeObjectFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<java.util.Collections: void reverse(java.util.List)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: java.lang.Object previous()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.ThreadPoolExecutor: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.aspectj.bridge.context.CompilationAndWeavingContext: org.aspectj.bridge.context.ContextFormatter getFormatter(org.aspectj.bridge.context.CompilationAndWeavingContext$ContextStackEntry)>-><java.lang.Integer: void <init>(int)>
<com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker: void <init>(java.lang.String,com.zaxxer.hikari.metrics.PoolStats,io.micrometer.core.instrument.MeterRegistry)>-><io.micrometer.core.instrument.Counter$Builder: io.micrometer.core.instrument.Counter$Builder description(java.lang.String)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<sun.reflect.UnsafeFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><java.lang.reflect.Modifier: boolean isFinal(int)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><springfox.documentation.service.ResponseMessage: int hashCode()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<org.aspectj.bridge.MessageUtil: java.lang.String renderMessage(org.aspectj.bridge.IMessage,boolean)>-><org.aspectj.bridge.Message: java.util.List getExtraSourceLocations()>
<sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.beans.MutablePropertyValues: boolean equals(java.lang.Object)>
<java.util.Collections: void reverse(java.util.List)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void <init>(com.zaxxer.hikari.HikariConfig)>-><java.lang.Object: void <init>()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cn.hutool.core.date.format.FastDateFormat: boolean equals(java.lang.Object)>
<java.beans.FeatureDescriptor: java.lang.String toString()>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: boolean equals(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.Pointcut$MatchesNothingPointcut: java.lang.String toString()>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Proxy$Key1: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serializeContents(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: int hashCode()>
<sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.EnumMap: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.EmitUtils$6: void processCase(int,org.springframework.asm.Label)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.AbstractMap$1$1: boolean hasNext()>
<com.fasterxml.classmate.TypeBindings: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<java.util.Hashtable: java.lang.String toString()>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<org.apache.catalina.connector.OutputBuffer: void toReadMode(java.nio.Buffer)>-><java.nio.Buffer: int position()>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.TreeMap$KeySet: int size()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getValue()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.math.BigDecimal: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.image.ColorModel: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.UnresolvedPermission: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<java.util.stream.ReferencePipeline$11$1: void accept(java.lang.Object)>-><java.util.stream.ReferencePipeline$7$1: void accept(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.LambdaForm: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.IfPointcut$IfFalsePointcut: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: float getFloat(java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.Hashtable: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.nio.ByteBuffer: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.AbstractList$Itr: boolean hasNext()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.beans.factory.config.BeanExpressionContext: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.time.zone.ZoneOffsetTransitionRule: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void recycle(com.zaxxer.hikari.pool.PoolEntry)>-><com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>
<org.apache.catalina.connector.OutputBuffer: void write(java.lang.String,int,int)>-><java.lang.NullPointerException: void <init>(java.lang.String)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Map _orderEntries(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.validation.FieldError: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.BeanExpressionContext: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: void validateNumerics()>-><ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<java.util.concurrent.ScheduledThreadPoolExecutor: long triggerTime(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.TimeUnit$2: long toNanos(long)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.DependencyDescriptor: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<org.springframework.web.context.request.ServletWebRequest: java.lang.String getDescription(boolean)>-><javax.servlet.ServletRequestWrapper: java.lang.String getRemoteAddr()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.ArrayNode: boolean equals(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.DoubleNode: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.MethodParameter: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<org.apache.catalina.core.ContainerBase: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$TextPrinterParser: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.TextNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.ansi.Ansi8BitColor: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.OptionalLong: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.beans.IndexedPropertyDescriptor: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.concurrent.TimeUnit$1: long convert(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.TimeUnit$5: long toNanos(long)>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><org.slf4j.helpers.SubstituteLogger: boolean isDebugEnabled()>
<org.aspectj.weaver.patterns.WithinPointcut: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<com.sun.jmx.mbeanserver.JmxMBeanServer$3: com.sun.jmx.mbeanserver.ModifiableClassLoaderRepository run()>-><com.sun.jmx.mbeanserver.JmxMBeanServer: com.sun.jmx.mbeanserver.MBeanInstantiator access$200(com.sun.jmx.mbeanserver.JmxMBeanServer)>
<org.springframework.web.util.pattern.SingleCharWildcardedPathElement: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.data.redis.connection.RedisNode: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.OptionalDouble: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSON: java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig)>-><com.google.common.base.Joiner$3: int size()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><io.lettuce.core.metrics.CommandMetrics: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.p6spy.engine.wrapper.ConnectionWrapper: void setAutoCommit(boolean)>-><com.p6spy.engine.event.CompoundJdbcEventListener: void onBeforeSetAutoCommit(com.p6spy.engine.common.ConnectionInformation,boolean,boolean)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><java.nio.CharBuffer: int hashCode()>
<java.lang.invoke.BoundMethodHandle$Factory: void setSpeciesDataToConcreteBMHClass(java.lang.Class,java.lang.invoke.BoundMethodHandle$SpeciesData)>-><java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.Vector: int size()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>
<com.sun.jmx.mbeanserver.MBeanAnalyzer: void visit(com.sun.jmx.mbeanserver.MBeanAnalyzer$MBeanVisitor)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticObjectFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.misc.Unsafe: java.lang.Object getObject(java.lang.Object,long)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.p6spy.engine.logging.Category: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.LinkedList: java.util.ListIterator listIterator(int)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.Collections$SynchronizedCollection: boolean remove(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: boolean remove(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object)>
<org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: int hashCode()>
<sun.reflect.UnsafeFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><org.springframework.util.LinkedCaseInsensitiveMap$EntrySet: int size()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.BeanDefinitionHolder: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: java.lang.Boolean call()>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.reflect.Method: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><javax.management.RuntimeErrorException: java.lang.Throwable getCause()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.awt.Rectangle: java.lang.String toString()>
<org.apache.catalina.connector.Response: boolean doIsEncodeable(org.apache.catalina.Context,org.apache.catalina.connector.Request,org.apache.catalina.Session,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.BCException: void printStackTrace(java.io.PrintWriter)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: int size()>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><com.zaxxer.hikari.pool.ProxyConnection: java.lang.String getCatalogState()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.text.ParsePosition: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><java.lang.reflect.Modifier: boolean isStatic(int)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.awt.SunHints$Key: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><cc.mrbird.febs.auth.entity.OauthClientDetails: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.security.access.SecurityConfig: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.GmtTimeZone: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.TypePatternList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.Long getDeptId()>
<org.apache.tomcat.util.http.parser.MediaType: void <init>(java.lang.String,java.lang.String,java.util.LinkedHashMap)>-><org.apache.tomcat.util.http.parser.HttpParser: java.lang.String unquote(java.lang.String)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><io.netty.buffer.SwappedByteBuf: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><com.google.common.collect.Maps$EntrySet: boolean isEmpty()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.BigIntegerNode: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<com.zaxxer.hikari.pool.PoolBase: long getLoginTimeout()>-><com.zaxxer.hikari.util.DriverDataSource: int getLoginTimeout()>
<org.aspectj.weaver.patterns.TypePatternList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.joran.spi.ElementSelector: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.deser.impl.ReadableObjectId: java.lang.String toString()>
<org.apache.tomcat.util.buf.UEncoder: org.apache.tomcat.util.buf.CharChunk encodeURL(java.lang.String,int,int)>-><org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.util.CollectionUtils$MultiValueMapAdapter: java.lang.Object get(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><javax.management.openmbean.CompositeType: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.expression.spel.ast.Literal: java.lang.String toString()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: int hashCode()>
<com.alibaba.fastjson.util.FieldInfo: void <init>(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Field,java.lang.Class,java.lang.reflect.Type,int,int,int,com.alibaba.fastjson.annotation.JSONField,com.alibaba.fastjson.annotation.JSONField,java.lang.String,java.util.Map)>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<org.springframework.cglib.core.EmitUtils$6: void processCase(int,org.springframework.asm.Label)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.UnresolvedPermission: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><java.nio.CharBuffer: java.lang.String toString()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Character: char charValue()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyLeakTask: void <init>(com.zaxxer.hikari.pool.PoolEntry)>-><java.lang.Object: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.support.annotation.AnnotationMatchingPointcut: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.awt.image.ColorModel: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.codehaus.jackson.map.type.MapLikeType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.pool.PoolBase: void <init>(com.zaxxer.hikari.HikariConfig)>
<com.zaxxer.hikari.util.ClockSource: java.lang.String elapsedDisplayString0(long,long)>-><java.util.concurrent.TimeUnit$1: long convert(long,java.util.concurrent.TimeUnit)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.HashMap$KeySet: boolean remove(java.lang.Object)>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildRequestUrl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><cc.mrbird.febs.auth.entity.BindUser: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.springframework.http.HttpHeaders: int size()>
<com.sun.jmx.mbeanserver.JmxMBeanServer$1: java.lang.Object run()>-><com.sun.jmx.mbeanserver.JmxMBeanServer$1: javax.management.loading.ClassLoaderRepository run()>
<sun.reflect.UnsafeStaticBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putBoolean(java.lang.Object,long,boolean)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>-><java.util.Collections$SetFromMap: java.lang.Object[] toArray()>
<com.zaxxer.hikari.pool.PoolEntry: java.lang.String getPoolName()>-><com.zaxxer.hikari.pool.HikariPool: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.p6spy.engine.spy.option.P6OptionsRepository$DelayedOptionChange: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.beans.factory.support.GenericBeanDefinition: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AndAnnotationTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.stream.SpinedBuffer$OfInt: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<org.springframework.validation.DataBinder: org.springframework.beans.TypeConverter getTypeConverter()>-><org.springframework.validation.BeanPropertyBindingResult: org.springframework.beans.ConfigurablePropertyAccessor getPropertyAccessor()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.hibernate.validator.internal.util.annotation.AnnotationProxy: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.springframework.expression.spel.ast.OperatorBetween: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><com.google.common.base.Joiner$3: int size()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.util.calendar.ZoneInfo: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeStaticCharacterFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.alibaba.fastjson.util.FieldInfo: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.nio.ch.ExtendedSocketOption$1: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Hashtable$Entry: java.lang.Object getKey()>
<org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.sun.jmx.mbeanserver.NamedObject: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void handleMBeans(com.zaxxer.hikari.pool.HikariPool,boolean)>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object,java.lang.Object)>
<org.aspectj.weaver.MemberImpl: int hashCode()>-><org.aspectj.weaver.MemberImpl: org.aspectj.weaver.MemberKind getKind()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Hashtable$Entry: java.lang.String toString()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.codehaus.jackson.map.type.ClassKey: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: java.lang.Object[] toArray()>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] toByteArray()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractSet: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.RuntimeBeanReference: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<io.micrometer.core.instrument.Gauge$Builder: io.micrometer.core.instrument.Gauge$Builder tags(java.lang.String[])>-><io.micrometer.core.instrument.Gauge$Builder: io.micrometer.core.instrument.Gauge$Builder tags(java.lang.Iterable)>
<org.springframework.util.CollectionUtils$MultiValueMapAdapter: java.util.List get(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: java.util.Spliterator trySplit()>-><java.util.concurrent.LinkedBlockingQueue: void fullyLock()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<org.aspectj.util.LangUtil: void elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)>-><java.lang.StringBuilder: void <init>()>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.node.BinaryNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.connection.util.ByteArrayWrapper: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.Meter$Id: void <init>(java.lang.String,io.micrometer.core.instrument.Tags,java.lang.String,java.lang.String,io.micrometer.core.instrument.Meter$Type,io.micrometer.core.instrument.Meter$Id)>-><java.lang.Object: void <init>()>
<org.apache.tomcat.util.buf.C2BConverter: void <init>(java.nio.charset.Charset)>-><java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.ResolvableType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void appendCollection(java.lang.Object,java.lang.StringBuilder,java.util.Set)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<java.nio.CharBuffer: int compareTo(java.nio.CharBuffer)>-><java.nio.Buffer: int position()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.LinkedList: java.lang.Object get(int)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.TreeSet: boolean remove(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.core.ResolvableType: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildRequestUrl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.ProtectionDomain$WeakProtectionDomainKey: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.invoke.MethodHandle: java.lang.String toString()>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool(java.util.concurrent.ThreadFactory)>-><java.util.concurrent.SynchronousQueue: void <init>()>
<org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: int hashCode()>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection: int size()>-><io.netty.channel.nio.SelectedSelectionKeySet: int size()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.DecimalNode: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.beans.factory.config.BeanDefinitionHolder: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><org.springframework.data.redis.listener.PatternTopic: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void executeSql(java.sql.Connection,java.lang.String,boolean)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void rollback()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.WithinCodeAnnotationPointcut: java.lang.String toString()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><org.bouncycastle.util.encoders.EncoderException: java.lang.Throwable getCause()>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotAnnotationTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.WildAnnotationTypePattern: java.lang.String toString()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.Enum: java.lang.String toString()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><org.apache.tomcat.util.buf.AbstractChunk: void setOffset(int)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: int hashCode()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Double: void <init>(double)>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.NotAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: int hashCode()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.tree.CharSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.RDN: boolean equals(java.lang.Object)>
<java.sql.SQLException: void <init>()>-><java.lang.Exception: void <init>()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<org.aspectj.weaver.patterns.WithinPointcut: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.core.annotation.TypeMappedAnnotation: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.OptionalDouble: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>-><java.lang.String: void <init>(char[])>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.invoke.MethodType: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.AbstractList: boolean add(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.ArrayType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.metrics.PoolStats getPoolStats()>-><java.util.concurrent.TimeUnit$4: long toMillis(long)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.net.InetAddress: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><reactor.util.function.Tuple2: boolean equals(java.lang.Object)>
<org.springframework.data.redis.connection.RedisPassword: int hashCode()>-><java.util.Arrays: int hashCode(char[])>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.temporal.IsoFields$Unit: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.framework.JdkDynamicAopProxy: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.core.annotation.TypeMappedAnnotation: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.WeakHashMap$KeySet: java.util.Iterator iterator()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.aspectj.weaver.BCException: void printStackTrace(java.io.PrintWriter)>-><java.io.PrintWriter: void print(java.lang.String)>
<sun.reflect.UnsafeBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putBoolean(java.lang.Object,long,boolean)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.QueryRequest: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeCharacterFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Character: void <init>(char)>
<java.util.Collections$SetFromMap: void <init>(java.util.Map)>-><org.springframework.util.LinkedCaseInsensitiveMap: boolean isEmpty()>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><io.lettuce.core.event.metrics.CommandLatencyEvent: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><org.springframework.util.LinkedCaseInsensitiveMap$EntryIterator: boolean hasNext()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.Collections$UnmodifiableList: java.util.ListIterator listIterator(int)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.apache.catalina.connector.OutputBuffer: void appendByteArray(byte[],int,int)>-><java.nio.Buffer: int capacity()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.apache.tomcat.util.buf.UEncoder: org.apache.tomcat.util.buf.CharChunk encodeURL(java.lang.String,int,int)>-><java.util.BitSet: boolean get(int)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.format.support.FormattingConversionService$AnnotationConverterKey: boolean equals(java.lang.Object)>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><java.util.SubList$1: java.lang.Object next()>
<org.apache.tomcat.util.buf.UEncoder: org.apache.tomcat.util.buf.CharChunk encodeURL(java.lang.String,int,int)>-><org.apache.tomcat.util.buf.CharChunk: void append(char)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.util.DerValue: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><com.p6spy.engine.wrapper.ConnectionWrapper: boolean isValid(int)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.nio.ByteBuffer: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.beans.factory.support.GenericBeanDefinition: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: void removeRange(int,int)>-><java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>
<org.springframework.util.ObjectUtils: boolean isEmpty(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<sun.reflect.UnsafeStaticObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Class: boolean isAssignableFrom(java.lang.Class)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.LocalDate: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariProxyPreparedStatement: void setQueryTimeout(int)>-><com.zaxxer.hikari.pool.HikariProxyPreparedStatement: void setQueryTimeout(int)>
<java.nio.CharBuffer: boolean equals(java.lang.Object)>-><java.nio.Buffer: int position()>
<java.util.ComparableTimSort: void mergeHi(int,int,int,int)>-><org.aspectj.weaver.JoinPointSignature: int compareTo(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.format.DecimalStyle: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.ObjectNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.validation.FieldError: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: int hashCode()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.GmtTimeZone: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<sun.reflect.UnsafeIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Float: float floatValue()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$EmptySet: int size()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyConnection: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.misc.Signal: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.bouncycastle.asn1.DERVisibleString: java.lang.String toString()>
<cc.mrbird.febs.common.core.utils.FebsUtil: void makeResponse(javax.servlet.http.HttpServletResponse,java.lang.String,int,java.lang.Object)>-><org.apache.catalina.connector.CoyoteOutputStream: void write(byte[])>
<java.util.concurrent.locks.AbstractQueuedSynchronizer: void acquireShared(int)>-><java.util.concurrent.Semaphore$FairSync: int tryAcquireShared(int)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Constructor: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.LinkedList: boolean add(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.apache.commons.pool2.impl.DefaultPooledObject: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.Date: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.bouncycastle.asn1.DERUniversalString: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: java.lang.Object previous()>-><java.util.SubList$1: java.lang.Object previous()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.util.BuddhistCalendar: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.temporal.IsoFields$Field$2: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.Reflection: java.lang.Class getCallerClass()>
<com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.pool.PoolEntry createPoolEntry()>-><java.util.concurrent.ThreadLocalRandom: java.util.concurrent.ThreadLocalRandom current()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<com.zaxxer.hikari.pool.PoolBase: void setupConnection(java.sql.Connection)>-><com.zaxxer.hikari.pool.PoolBase: void setNetworkTimeout(java.sql.Connection,long)>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeShortFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: java.lang.Boolean call()>-><com.zaxxer.hikari.pool.HikariPool: org.slf4j.Logger access$300(com.zaxxer.hikari.pool.HikariPool)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.SimpleType: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<java.lang.ThreadLocal$SuppliedThreadLocal: java.lang.Object initialValue()>-><reactor.core.scheduler.Schedulers$CachedScheduler: java.lang.Object get()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.crypto.CryptoPermission: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.security.x509.AVA: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.PropertyPermission: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: void <init>()>
<sun.reflect.generics.repository.FieldRepository: sun.reflect.generics.repository.FieldRepository make(java.lang.String,sun.reflect.generics.factory.GenericsFactory)>-><sun.reflect.generics.repository.FieldRepository: void <init>(java.lang.String,sun.reflect.generics.factory.GenericsFactory)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<java.nio.CharBuffer: int compareTo(java.nio.CharBuffer)>-><java.lang.Math: int min(int,int)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><javax.management.openmbean.TabularType: java.lang.String toString()>
<org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.apache.tomcat.util.buf.CharChunk: void makeSpace(int)>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<org.hibernate.validator.internal.util.annotation.AnnotationProxy: boolean equals(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.GenericBeanDefinition: boolean equals(java.lang.Object)>
<java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>-><com.fasterxml.classmate.util.ClassKey: int compareTo(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.ObjectNode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyLeakTask: void <init>(com.zaxxer.hikari.pool.PoolEntry)>-><java.lang.Object: void <init>()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray(java.lang.Object[])>-><java.util.concurrent.LinkedBlockingQueue: java.lang.Object[] toArray(java.lang.Object[])>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSON: java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.util.LinkedMultiValueMap: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.TabularDataSupport: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><io.netty.util.ResourceLeakDetector$DefaultResourceLeak: java.lang.String toString()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void recordBorrowTimeoutStats(long)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><com.zaxxer.hikari.HikariDataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.ClassTypeInformation: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.HikariConfig: void validateNumerics()>-><org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.String toString()>
<org.apache.tomcat.util.buf.ByteChunk: void <init>(int)>-><org.apache.tomcat.util.buf.ByteChunk: void allocate(int,int)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.PropertyElf: java.util.Set getPropertyNames(java.lang.Class)>-><java.lang.StringBuilder: void <init>()>
<cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.web.context.request.ServletRequestAttributes: javax.servlet.http.HttpSession getSession(boolean)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession(boolean)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: int hashCode()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String toString()>
<java.sql.SQLNonTransientException: void <init>()>-><java.sql.SQLException: void <init>()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Locale: boolean equals(java.lang.Object)>
<java.sql.DriverManager: java.sql.Driver getDriver(java.lang.String)>-><sun.reflect.Reflection: java.lang.Class getCallerClass()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeCharacterFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><springfox.documentation.service.ResponseMessage: int hashCode()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeAwareMethods(java.lang.String,java.lang.Object)>-><org.springframework.web.filter.GenericFilterBean: void setBeanName(java.lang.String)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.jca.ProviderConfig: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<java.util.AbstractSet: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.DecimalFormat: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<org.springframework.web.context.request.ServletRequestAttributes: void registerSessionDestructionCallback(java.lang.String,java.lang.Runnable)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><io.lettuce.core.masterslave.RedisMasterSlaveNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.aop.support.annotation.AnnotationMatchingPointcut: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.EnumMap$KeySet: boolean remove(java.lang.Object)>
<org.springframework.core.PrioritizedParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<sun.reflect.UnsafeDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putDouble(java.lang.Object,long,double)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeDoubleFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void recordBorrowStats(com.zaxxer.hikari.pool.PoolEntry,long)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void <init>(com.zaxxer.hikari.HikariConfig)>-><java.util.concurrent.atomic.AtomicReference: void <init>()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: double getDouble(java.lang.Object)>-><sun.misc.Unsafe: double getDoubleVolatile(java.lang.Object,long)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void executeSql(java.sql.Connection,java.lang.String,boolean)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void commit()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.Inet4Address: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.web.method.ControllerAdviceBean: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.format.DateTimeFormatter: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: boolean isEnumConstant()>-><java.lang.reflect.Field: int getModifiers()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<org.springframework.web.util.pattern.LiteralPathElement: java.lang.String toString()>-><java.lang.String: java.lang.String valueOf(char[])>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.font.EAttribute: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onAfterCommit(com.p6spy.engine.common.ConnectionInformation,long,java.sql.SQLException)>-><java.util.ArrayList$Itr: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.TextNode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<com.google.common.collect.TransformedIterator: java.lang.Object next()>-><io.micrometer.core.instrument.Tags$ArrayIterator: java.lang.Object next()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.map.type.ArrayType: java.lang.String toString()>
<com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTrackerFactory: void <init>(io.micrometer.core.instrument.MeterRegistry)>-><java.lang.Object: void <init>()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.Thread$WeakClassKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.security.pkcs.SignerInfo: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.io.ObjectStreamClass$WeakClassKey: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.String toString()>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeStaticShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<java.lang.ProcessEnvironment$StringEntrySet$2: java.lang.ProcessEnvironment$Variable getKey()>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker: void <init>(java.lang.String,com.zaxxer.hikari.metrics.PoolStats,io.micrometer.core.instrument.MeterRegistry)>-><io.micrometer.core.instrument.Gauge$Builder: io.micrometer.core.instrument.Gauge$Builder description(java.lang.String)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><java.util.ArrayList$SubList$1: int previousIndex()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: void setReadOnly(boolean)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void setReadOnly(boolean)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.p6spy.engine.logging.Category: boolean equals(java.lang.Object)>
<java.sql.SQLFeatureNotSupportedException: void <init>()>-><java.sql.SQLNonTransientException: void <init>()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><org.springframework.util.LinkedCaseInsensitiveMap$KeySetIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.misc.Signal: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>-><java.lang.Object: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: boolean add(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: void serializeWithType(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<io.netty.channel.nio.SelectedSelectionKeySet$1: void <init>(io.netty.channel.nio.SelectedSelectionKeySet)>-><java.lang.Object: void <init>()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection: int size()>-><com.google.common.base.Joiner$3: int size()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.BuddhistCalendar: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.crypto.CryptoPermission: boolean equals(java.lang.Object)>
<java.util.ArrayList$SubList$1: java.lang.Object previous()>-><java.util.NoSuchElementException: void <init>()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.security.oauth2.common.exceptions.OAuth2Exception: java.lang.String toString()>
<java.util.Collections$SynchronizedCollection: boolean add(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet: boolean add(java.lang.Object)>
<cc.mrbird.febs.common.core.utils.FebsUtil: void makeResponse(javax.servlet.http.HttpServletResponse,java.lang.String,int,java.lang.Object)>-><org.apache.catalina.connector.Response: void setContentType(java.lang.String)>
<java.util.ComparableTimSort: int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int)>-><org.aspectj.weaver.JoinPointSignature: int compareTo(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putInt(java.lang.Object,long,int)>
<java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>-><io.micrometer.core.instrument.Tag: int compareTo(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: boolean add(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet: boolean add(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.invoke.MethodType: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.Optional: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Map _orderEntries(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<java.util.stream.ReferencePipeline$11$1: void accept(java.lang.Object)>-><java.util.stream.ReferencePipeline$4$1: void accept(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.core.scheduler.Schedulers$CachedScheduler: java.lang.String toString()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArraySet: boolean equals(java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><java.lang.reflect.Field: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.util.CollectionUtils$MultiValueMapAdapter: int size()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.io.ObjectStreamClass$WeakClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$Variable: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.DecimalFormat: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.pool.PoolEntry createPoolEntry()>-><java.lang.Throwable: java.lang.Throwable getCause()>
<org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void handleMBeans(com.zaxxer.hikari.pool.HikariPool,boolean)>-><com.zaxxer.hikari.HikariConfig: boolean isRegisterMbeans()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.font.AttributeValues: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.YearMonth: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariProxyConnection: void clearWarnings()>-><com.zaxxer.hikari.pool.HikariProxyConnection: void clearWarnings()>
<org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.map.type.ArrayType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.MemberName: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<com.sun.jmx.mbeanserver.JmxMBeanServer$2: java.lang.Object run()>-><com.sun.jmx.interceptor.DefaultMBeanServerInterceptor: javax.management.ObjectInstance registerMBean(java.lang.Object,javax.management.ObjectName)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.IdentityHashMap$KeySet: boolean remove(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<org.aspectj.bridge.AbortException: java.lang.String getMessage()>-><org.aspectj.bridge.Message: java.lang.Throwable getThrown()>
<sun.reflect.UnsafeQualifiedByteFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedByteFieldAccessorImpl: byte getByte(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.util.unit.DataSize: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanParameterInfo: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.time.Duration: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.p6spy.engine.common.Value: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<java.util.ComparableTimSort: int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int)>-><org.aspectj.weaver.MemberImpl: int compareTo(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void appendMap(java.lang.Object,java.lang.StringBuilder,java.util.Set)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<org.apache.catalina.connector.OutputBuffer: void realWriteChars(java.nio.CharBuffer)>-><java.nio.Buffer: int remaining()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.DecimalNode: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.OptionalLong: boolean equals(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.ParsePosition: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Long: void <init>(long)>
<org.aspectj.weaver.BCException: void printStackTrace()>-><org.aspectj.weaver.BCException: void printStackTrace(java.io.PrintStream)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<java.util.Properties: java.lang.String getProperty(java.lang.String)>-><java.util.Properties: java.lang.String getProperty(java.lang.String)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.Short: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.Rectangle: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><org.aspectj.bridge.AbortException: void printStackTrace(java.io.PrintStream)>
<sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putCharVolatile(java.lang.Object,long,char)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: int hashCode()>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.MethodInfo: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.Character$Subset: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<java.nio.CharBuffer: boolean equals(java.lang.Object)>-><java.nio.Buffer: int remaining()>
<java.util.stream.ReferencePipeline$2$1: void accept(java.lang.Object)>-><java.util.stream.ReferencePipeline$11$1: void accept(java.lang.Object)>
<reactor.core.scheduler.ParallelScheduler: java.lang.Object scanUnsafe(reactor.core.Scannable$Attr)>-><reactor.core.scheduler.ParallelScheduler: boolean isDisposed()>
<com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FastDateFormat: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<java.io.FileDescriptor: void closeAll(java.io.Closeable)>-><com.zaxxer.hikari.HikariDataSource: void close()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.bouncycastle.asn1.ASN1Primitive: boolean equals(java.lang.Object)>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.font.AttributeValues: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<org.aspectj.util.LangUtil: java.lang.StringBuffer stackToString(java.lang.Throwable,boolean)>-><java.lang.StringBuffer: void <init>()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: int hashCode()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.security.CodeSource: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>-><java.lang.Object: int hashCode()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.WeakHashMap$Entry: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><com.zaxxer.hikari.HikariDataSource: void setLoginTimeout(int)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.ProcessEnvironment$Value: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeCharacterFieldAccessorImpl: char getChar(java.lang.Object)>-><sun.misc.Unsafe: char getChar(java.lang.Object,long)>
<ch.qos.logback.classic.spi.PackagingDataCalculator: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)>-><org.aspectj.weaver.BCException: void printStackTrace()>
<com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><com.zaxxer.hikari.pool.HikariPool: void addBagItem(int)>
<com.zaxxer.hikari.pool.ProxyConnection: void close()>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><com.zaxxer.hikari.util.SuspendResumeLock$1: void acquire()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeStaticLongFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<sun.reflect.UnsafeFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: int hashCode()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><java.lang.reflect.Field: java.lang.String toString()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.util.ClockSource: java.lang.String elapsedDisplayString0(long,long)>-><com.zaxxer.hikari.util.ClockSource$NanosecondClockSource: long elapsedNanos0(long,long)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.core.NamedThreadLocal: java.lang.String toString()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.bouncycastle.asn1.DERBMPString: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.io.ByteArrayOutputStream: java.lang.String toString()>
<org.springframework.web.context.request.ServletRequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)>-><org.springframework.web.context.request.AbstractRequestAttributes: boolean isRequestActive()>
<cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.Long getUserId()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<org.apache.tomcat.util.http.parser.HttpParser: java.lang.String readQuotedString(java.io.Reader,boolean)>-><java.lang.StringBuilder: void <init>()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.JumboEnumSet: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags of(java.lang.String[])>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<org.apache.tomcat.util.http.parser.HttpParser: java.lang.String unquote(java.lang.String)>-><java.lang.String: char charAt(int)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.core.NamedThreadLocal: java.lang.String toString()>
<org.springframework.validation.DataBinder: org.springframework.validation.AbstractPropertyBindingResult createBeanPropertyBindingResult()>-><org.springframework.validation.DataBinder: boolean isAutoGrowNestedPaths()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<org.apache.logging.log4j.message.ParameterFormatter: void appendMap(java.lang.Object,java.lang.StringBuilder,java.util.Set)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.awt.Font: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariProxyConnection: void clearWarnings()>-><com.p6spy.engine.wrapper.ConnectionWrapper: void clearWarnings()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.OutputBuffer: void append(byte[],int,int)>-><org.apache.catalina.connector.OutputBuffer: void appendByteArray(byte[],int,int)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.codehaus.jackson.map.jsontype.NamedType: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ArrayType: java.lang.String toString()>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.tree.IntSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<sun.reflect.UnsafeStaticFloatFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeStaticFloatFieldAccessorImpl: float getFloat(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.TabularDataSupport: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.RuntimeException: void <init>(java.lang.String)>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveManagedArray(java.lang.Object,java.util.List,java.lang.Class)>-><com.google.common.base.Joiner$3: int size()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><ch.qos.logback.classic.jmx.JMXConfigurator: java.lang.String toString()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.atomic.AtomicLong: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.AndAnnotationTypePattern: int hashCode()>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<java.util.stream.IntPipeline$4$1: void accept(int)>-><java.util.stream.ReferencePipeline$11$1: void accept(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: java.lang.String toString()>
<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.String toString()>-><java.lang.reflect.Field: java.lang.String getName()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.text.FieldPosition: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.math.BigInteger: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.MethodInfo: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>-><com.zaxxer.hikari.HikariDataSource: void close()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.lettuce.core.masterslave.RedisMasterSlaveNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.LongNode: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.CharChunk: int subtract(char[],int,int)>-><org.apache.tomcat.util.buf.AbstractChunk: int getLength()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.SimpleTimeZone: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Double: double doubleValue()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap: int size()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.ArrayListMultimap: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.util.ClockSource: long elapsedMillis(long)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.TextNode: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedList,int)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.ListIterator listIterator(int)>
<com.zaxxer.hikari.pool.ProxyConnection: void close()>-><com.zaxxer.hikari.pool.PoolEntry: boolean isMarkedEvicted()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.security.x509.AVA: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.StringBuffer: java.lang.String toString()>
<com.zaxxer.hikari.HikariDataSource: int getLoginTimeout()>-><com.zaxxer.hikari.util.DriverDataSource: int getLoginTimeout()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JavaBeanSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.util.Map$Entry next()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: int size()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.deser.UnresolvedId: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.OptionalInt: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String getIcon()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.data.redis.listener.PatternTopic: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: int hashCode()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: java.lang.String toString()>
<org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>-><java.lang.Object: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.beans.BeanMetadataAttribute: java.lang.String toString()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><java.io.InvalidClassException: java.lang.String getMessage()>
<sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putObjectVolatile(java.lang.Object,long,java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.google.common.collect.ArrayListMultimap: java.lang.String toString()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.BigIntegerNode: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.time.ZoneOffset: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<java.lang.reflect.Field: sun.reflect.FieldAccessor acquireFieldAccessor(boolean)>-><sun.reflect.ReflectionFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>
<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.text.DateFormatSymbols: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.map.ser.std.JsonValueSerializer: java.lang.String toString()>
<com.zaxxer.hikari.util.UtilityElf: void quietlySleep(long)>-><java.lang.Thread: java.lang.Thread currentThread()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.sql.Timestamp: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>
<java.util.AbstractMap: java.lang.String toString()>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.beans.IndexedPropertyDescriptor: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>
<org.bouncycastle.asn1.DERExternalParser: org.bouncycastle.asn1.ASN1Primitive getLoadedObject()>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: int hashCode()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<com.zaxxer.hikari.pool.PoolBase: void quietlyCloseConnection(java.sql.Connection,java.lang.String)>-><java.util.concurrent.TimeUnit$4: long toMillis(long)>
<org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: java.lang.String generatePoolName()>-><org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.nio.CharBuffer: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.management.MBeanParameterInfo: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.LinkedList: int size()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.bridge.MessageUtil: java.lang.String addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)>-><java.io.PrintWriter: void <init>(java.io.Writer)>
<org.apache.tomcat.util.http.parser.MediaType: java.lang.String toStringNoCharset()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.locks.AbstractQueuedSynchronizer: java.lang.String toString()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<org.springframework.context.i18n.LocaleContextHolder: java.util.Locale getLocale(org.springframework.context.i18n.LocaleContext)>-><org.springframework.context.i18n.SimpleLocaleContext: java.util.Locale getLocale()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.HashSet: java.util.Iterator iterator()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.security.x509.GeneralName: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.util.MimeType: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<io.netty.util.concurrent.AbstractEventExecutor: void safeExecute(java.lang.Runnable)>-><io.netty.util.internal.ThreadExecutorMap$2: void run()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanAttributeInfo: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolEntry: void evict(java.lang.String)>-><com.zaxxer.hikari.pool.HikariPool: void closeConnection(com.zaxxer.hikari.pool.PoolEntry,java.lang.String)>
<cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String getType()>
<org.springframework.web.context.request.ServletRequestAttributes: java.lang.Object getAttribute(java.lang.String,int)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: int hashCode()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.boot.ansi.Ansi8BitColor: boolean equals(java.lang.Object)>
<java.util.ComparableTimSort: int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int)>-><org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore$TokenExpiry: int compareTo(java.lang.Object)>
<org.springframework.web.context.support.WebApplicationContextUtils$SessionObjectFactory: javax.servlet.http.HttpSession getObject()>-><org.springframework.web.context.request.ServletRequestAttributes: javax.servlet.http.HttpServletRequest getRequest()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.management.ObjectName: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.StackTraceElement: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.asm.Handle: boolean equals(java.lang.Object)>
<org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.HttpParser: java.lang.String readToken(java.io.Reader)>-><org.apache.tomcat.util.http.parser.HttpParser: boolean isToken(int)>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.ImmutableEntry: java.lang.Object getValue()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: void validate()>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><com.zaxxer.hikari.pool.PoolEntry: boolean isMarkedEvicted()>
<org.springframework.validation.DataBinder: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class)>-><org.springframework.validation.DataBinder: org.springframework.beans.TypeConverter getTypeConverter()>
<org.aspectj.weaver.MemberImpl: int compareTo(org.aspectj.weaver.Member)>-><org.aspectj.weaver.MemberImpl: java.lang.String getSignature()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.node.BigIntegerNode: boolean equals(java.lang.Object)>
<java.util.AbstractSet: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySet: int size()>
<org.aspectj.weaver.patterns.TypePatternList: java.lang.String toString()>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.SimpleTimeZone: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.util.calendar.ZoneInfo: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>-><java.lang.String: int hashCode()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: java.lang.String toString()>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.time.YearMonth: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.BitSet: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Character: char charValue()>
<org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.NullBean: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolEntry: void <init>(java.sql.Connection,com.zaxxer.hikari.pool.PoolBase,boolean,boolean)>-><com.zaxxer.hikari.util.ClockSource: long currentTime()>
<java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.bouncycastle.asn1.ASN1OctetString: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.format.Parsed: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Vector$Itr: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.ArrayListMultimap: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.management.ImmutableDescriptor: boolean equals(java.lang.Object)>
<java.util.AbstractList$ListItr: java.lang.Object previous()>-><java.util.Collections$EmptyList: java.lang.Object get(int)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.connection.RedisNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.Response: void setStatus(int,java.lang.String)>-><org.apache.catalina.connector.Response: boolean isCommitted()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><java.util.concurrent.TimeUnit$4: long toMillis(long)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<java.util.stream.ReferencePipeline$11$1: void accept(java.lang.Object)>-><java.util.stream.MatchOps$1MatchSink: void accept(java.lang.Object)>
<java.sql.DriverManager: boolean isDriverAllowed(java.sql.Driver,java.lang.Class)>-><java.sql.DriverManager: boolean isDriverAllowed(java.sql.Driver,java.lang.ClassLoader)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean contains(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>
<org.springframework.cglib.core.EmitUtils: void member_helper_type(org.springframework.cglib.core.CodeEmitter,java.util.List,org.springframework.cglib.core.ObjectSwitchCallback,org.springframework.cglib.core.EmitUtils$ParameterTyper,org.springframework.asm.Label,org.springframework.asm.Label,java.util.BitSet)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<org.springframework.core.ResolvableType: org.springframework.core.ResolvableType forField(java.lang.reflect.Field,int,java.lang.Class)>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<com.zaxxer.hikari.HikariConfig: void logConfiguration()>-><java.lang.String: boolean equals(java.lang.Object)>
<java.sql.DriverManager: java.util.Enumeration getDrivers()>-><sun.reflect.Reflection: java.lang.Class getCallerClass()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.DoubleNode: boolean equals(java.lang.Object)>
<org.aspectj.util.LangUtil: void elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)>-><java.util.LinkedList: java.lang.Object getFirst()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean contains(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.font.AttributeValues: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.introspect.MemberKey: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.aop.framework.AdvisedSupport: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.data.util.Pair: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<org.springframework.cglib.core.KeyFactory$Generator: void generateClass(org.springframework.asm.ClassVisitor)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.BeanDefinitionHolder: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<java.lang.reflect.Field: java.util.Map declaredAnnotations()>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<java.lang.reflect.Field: sun.reflect.FieldAccessor acquireFieldAccessor(boolean)>-><java.lang.reflect.Field: sun.reflect.FieldAccessor getFieldAccessor(boolean)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.node.ArrayNode: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void logPoolState(java.lang.String[])>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object[])>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.codehaus.jackson.node.BinaryNode: boolean equals(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<sun.reflect.UnsafeByteFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeByteFieldAccessorImpl: byte getByte(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<com.alibaba.fastjson.JSONArray: int size()>-><com.google.common.base.Joiner$3: int size()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.map.type.CollectionType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$Value: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.BinaryNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<org.springframework.web.context.request.ServletRequestAttributes: javax.servlet.http.HttpSession getSession(boolean)>-><org.springframework.web.context.request.AbstractRequestAttributes: boolean isRequestActive()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.BasicPermission: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.nio.charset.Charset: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.LinkedHashMap$LinkedKeySet: boolean contains(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void setTransactionIsolation(int)>
<org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>-><org.aspectj.weaver.patterns.WildAnnotationTypePattern: int hashCode()>
<org.springframework.cglib.core.KeyFactory$Generator: void generateClass(org.springframework.asm.ClassVisitor)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.support.DefaultIntroductionAdvisor: boolean equals(java.lang.Object)>
<org.springframework.aop.framework.AdvisedSupport: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: void setCatalog(java.lang.String)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void setCatalog(java.lang.String)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.BuddhistCalendar: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><com.p6spy.engine.spy.P6DataSource: java.sql.Connection getConnection()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<com.sun.jmx.mbeanserver.JmxMBeanServer$3: java.lang.Object run()>-><com.sun.jmx.mbeanserver.JmxMBeanServer$3: com.sun.jmx.mbeanserver.ModifiableClassLoaderRepository run()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.Optional: java.lang.String toString()>
<com.zaxxer.hikari.util.PropertyElf: java.util.Set getPropertyNames(java.lang.Class)>-><java.lang.String: char charAt(int)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<sun.reflect.UnsafeIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Short: short shortValue()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.core.io.SerializedString: java.lang.String toString()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<org.aspectj.bridge.AbortException: java.lang.String getMessage()>-><org.aspectj.bridge.Message: java.lang.String getMessage()>
<org.springframework.security.web.FilterInvocation: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.security.x509.AVA: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyDatabaseMetaData: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: long getLong(java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.ArrayList$SubList: int size()>
<java.util.Collections$SetFromMap: java.util.Iterator iterator()>-><org.springframework.util.LinkedCaseInsensitiveMap$KeySet: java.util.Iterator iterator()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector: void _renameWithWrappers(java.util.Map)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.alibaba.fastjson.serializer.SerializeConfig: com.alibaba.fastjson.serializer.ObjectSerializer createJavaBeanSerializer(com.alibaba.fastjson.serializer.SerializeBeanInfo)>-><java.lang.reflect.Field: java.lang.Class getType()>
<java.util.List: void sort(java.util.Comparator)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: void set(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.LocalDate: java.lang.String toString()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.pool.PoolEntry createPoolEntry()>-><ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.time.format.DecimalStyle: boolean equals(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<org.apache.catalina.util.ToStringUtil: java.lang.String containedToString(java.lang.Object,java.lang.Object,java.lang.String)>-><org.apache.catalina.core.ContainerBase: java.lang.String toString()>
<org.apache.catalina.core.ContainerBase: java.lang.String toString()>-><org.apache.catalina.core.ContainerBase: java.lang.String getName()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeStaticLongFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.ZoneOffset: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><springfox.documentation.service.ResponseMessage: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.node.POJONode: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.google.common.base.Predicates$ObjectPredicate$3: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.HashMap$Node: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.util.RawValue: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$OptimalPropertyAccessor: void generateCode(java.lang.String,org.springframework.asm.MethodVisitor,org.springframework.expression.spel.CodeFlow)>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.concurrent.atomic.AtomicIntegerArray: java.lang.String toString()>
<com.zaxxer.hikari.util.ClockSource$MillisecondClockSource: long elapsedMillis0(long)>-><java.lang.System: long currentTimeMillis()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.util.LinkedMultiValueMap: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.util.calendar.ZoneInfo: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.TreeSet: boolean addAll(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.cglib.core.ClassInfo: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.aop.support.DefaultIntroductionAdvisor: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.data.redis.connection.RedisNode: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.OptionalInt: java.lang.String toString()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.ArgsAnnotationPointcut: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.util.locale.provider.RuleBasedBreakIterator: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.access.SecurityConfig: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.security.x509.UnparseableExtension: java.lang.String toString()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.HttpParser: java.lang.String readTokenOrQuotedString(java.io.Reader,boolean)>-><org.apache.tomcat.util.http.parser.HttpParser: int skipLws(java.io.Reader)>
<com.zaxxer.hikari.metrics.dropwizard.CodahaleHealthChecker: void registerHealthChecks(com.zaxxer.hikari.pool.HikariPool,com.zaxxer.hikari.HikariConfig,com.codahale.metrics.health.HealthCheckRegistry)>-><com.zaxxer.hikari.metrics.dropwizard.CodahaleHealthChecker$ConnectivityHealthCheck: void <init>(com.zaxxer.hikari.pool.HikariPool,long)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.node.TextNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.RegularEnumSet: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.data.util.TypeVariableTypeInformation: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><cc.mrbird.febs.auth.entity.OauthClientDetails: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet: java.util.Iterator iterator()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap$EntrySet: boolean remove(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: int hashCode()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<java.util.Collections$UnmodifiableList$1: java.lang.Object previous()>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object previous()>
<com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serializeContents(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: boolean equals(java.lang.Object)>
<java.util.ArrayList: void <init>(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.SimpleType: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.ArrayList: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cn.hutool.core.date.format.FastDatePrinter$TimeZoneDisplayKey: boolean equals(java.lang.Object)>
<org.apache.catalina.util.ToStringUtil: java.lang.String containedToString(java.lang.Object,java.lang.Object,java.lang.String)>-><java.lang.StringBuilder: void <init>(java.lang.String)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.image.PackedColorModel: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><com.p6spy.engine.spy.P6DataSource: void setLoginTimeout(int)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.security.ProtectionDomain: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><javax.management.openmbean.TabularDataSupport: int size()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><ch.qos.logback.core.status.StatusBase: boolean equals(java.lang.Object)>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FastDateFormat: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.OptionalLong: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.LongNode: boolean equals(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.scheduling.config.Task: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.zone.ZoneRules: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.Hashtable$Entry: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariProxyConnection: void setReadOnly(boolean)>-><com.zaxxer.hikari.pool.ProxyConnection: void setReadOnly(boolean)>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.repository.AbstractRepository: sun.reflect.generics.tree.Tree getTree()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.HttpParser: java.lang.String readQuotedString(java.io.Reader,boolean)>-><org.apache.tomcat.util.http.parser.HttpParser: int skipLws(java.io.Reader)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Constructor: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyConnection: void close()>-><ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<org.aspectj.weaver.UnresolvedType: java.lang.String signatureToName(java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.springframework.security.authentication.RememberMeAuthenticationToken: int hashCode()>-><org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<org.aspectj.bridge.SourceLocation: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void beforePrototypeCreation(java.lang.String)>-><java.util.Hashtable$EntrySet: boolean add(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void throwPoolInitializationException(java.lang.Throwable)>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object,java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<org.aspectj.weaver.MemberImpl: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: int hashCode()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.Long getParentId()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><reactor.util.context.ContextN: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: java.util.ListIterator listIterator()>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] getArray()>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(java.nio.CharBuffer,java.nio.ByteBuffer)>-><java.nio.Buffer: int position()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<java.sql.SQLException: void <init>(java.lang.String,java.lang.String)>-><java.sql.DriverManager: java.io.PrintWriter getLogWriter()>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariDataSource: int getLoginTimeout()>-><com.p6spy.engine.spy.P6DataSource: int getLoginTimeout()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.security.access.SecurityConfig: java.lang.String toString()>
<reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.context.support.AbstractApplicationContext: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Locale$LocaleKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: void closeStatements()>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String getPoolName()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>-><java.util.concurrent.LinkedBlockingQueue$Itr: boolean hasNext()>
<org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration: void <init>()>-><synthetic.method.SingletonFactory: cc.mrbird.febs.auth.service.impl.RedisClientDetailsService getRedisClientDetailsService()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<org.springframework.expression.spel.ast.FunctionReference: org.springframework.expression.TypedValue executeFunctionJLRMethod(org.springframework.expression.spel.ExpressionState,java.lang.reflect.Method)>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<com.zaxxer.hikari.pool.HikariProxyConnection: void setNetworkTimeout(java.util.concurrent.Executor,int)>-><com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.management.openmbean.ArrayType: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags and(io.micrometer.core.instrument.Tag[])>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.ResourceBundle$CacheKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanNotificationInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object previous()>-><java.util.NoSuchElementException: void <init>()>
<cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.util.Date getModifyTime()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Hashtable$EntrySet: int size()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.Double: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<sun.reflect.generics.repository.FieldRepository: void <init>(java.lang.String,sun.reflect.generics.factory.GenericsFactory)>-><sun.reflect.generics.repository.AbstractRepository: void <init>(java.lang.String,sun.reflect.generics.factory.GenericsFactory)>
<sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: double getDouble(java.lang.Object)>-><sun.misc.Unsafe: double getDoubleVolatile(java.lang.Object,long)>
<com.zaxxer.hikari.util.ClockSource$NanosecondClockSource: long currentTime0()>-><java.lang.System: long nanoTime()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.TypePatternList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.auth.entity.OauthClientDetails: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><com.alibaba.fastjson.JSONArray: java.lang.Object remove(int)>
<com.google.common.util.concurrent.MoreExecutors$ListeningDecorator: void execute(java.lang.Runnable)>-><io.netty.util.concurrent.AbstractEventExecutorGroup: void execute(java.lang.Runnable)>
<sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.reflect.Field copy()>-><java.lang.reflect.Field: void <init>(java.lang.Class,java.lang.String,java.lang.Class,int,int,java.lang.String,byte[])>
<org.apache.catalina.connector.OutputBuffer: void appendByteArray(byte[],int,int)>-><java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object)>
<java.util.EnumMap$EntrySet: boolean contains(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<com.fasterxml.jackson.databind.introspect.AnnotatedField: com.fasterxml.jackson.databind.JavaType getType()>-><java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><java.nio.CharBuffer: java.lang.String toString()>
<org.springframework.beans.CachedIntrospectionResults: boolean isClassLoaderAccepted(java.lang.ClassLoader)>-><org.springframework.util.LinkedCaseInsensitiveMap$KeySetIterator: java.lang.Object next()>
<com.zaxxer.hikari.pool.PoolBase: void setupConnection(java.sql.Connection)>-><com.p6spy.engine.wrapper.ConnectionWrapper: boolean isReadOnly()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<java.nio.Buffer: java.nio.Buffer reset()>-><java.nio.InvalidMarkException: void <init>()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.security.provider.PolicyParser$KeyStoreEntry: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.SuspendResumeLock: void acquire()>-><java.util.concurrent.Semaphore: void acquireUninterruptibly()>
<com.zaxxer.hikari.pool.PoolBase: java.lang.String stringFromResetBits(int)>-><java.lang.StringBuilder: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<com.fasterxml.jackson.core.JsonLocation: java.lang.StringBuilder _appendSourceDesc(java.lang.StringBuilder)>-><java.nio.CharBuffer: int length()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.Shadow$Kind: java.lang.String getSimpleName()>-><java.lang.String: int lastIndexOf(int)>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.lang.ThreadLocal: java.lang.Object get()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.Enum: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: int hashCode()>
<java.util.SubList$1: java.lang.Object previous()>-><java.util.NoSuchElementException: void <init>()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.beans.factory.support.NullBean: java.lang.String toString()>
<java.util.StringJoiner: void <init>(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>-><java.nio.CharBuffer: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void createNetworkTimeoutExecutor(javax.sql.DataSource,java.lang.String,java.lang.String)>-><java.lang.Object: java.lang.Class getClass()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.time.YearMonth: boolean equals(java.lang.Object)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>
<org.springframework.expression.spel.support.StandardTypeComparator: int compare(java.lang.Object,java.lang.Object)>-><java.nio.CharBuffer: int compareTo(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><java.util.concurrent.ThreadPoolExecutor: boolean awaitTermination(long,java.util.concurrent.TimeUnit)>
<org.apache.tomcat.util.buf.UEncoder: org.apache.tomcat.util.buf.CharChunk encodeURL(java.lang.String,int,int)>-><org.apache.tomcat.util.buf.CharChunk: void <init>(int)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.URL: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.InjectionPoint: java.lang.String toString()>-><java.lang.reflect.Field: java.lang.String getName()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: int hashCode()>
<java.util.Collections: void reverse(java.util.List)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: void set(java.lang.Object)>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.ParsePosition: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.node.ValueNode: java.lang.String toString()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.UnresolvedPermission: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<com.zaxxer.hikari.util.PropertyElf: java.util.Set getPropertyNames(java.lang.Class)>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.text.StringCharacterIterator: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void executeSql(java.sql.Connection,java.lang.String,boolean)>-><com.p6spy.engine.wrapper.StatementWrapper: boolean execute(java.lang.String)>
<com.zaxxer.hikari.pool.PoolBase: java.lang.String stringFromResetBits(int)>-><java.lang.StringBuilder: void <init>()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void closeConnection(com.zaxxer.hikari.pool.PoolEntry,java.lang.String)>-><java.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String toString()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<reactor.core.scheduler.ParallelScheduler: java.util.concurrent.ScheduledExecutorService get()>-><java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int,java.util.concurrent.ThreadFactory)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.OptionalDouble: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.LocalTime: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.ArrayList: int size()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<org.springframework.expression.spel.support.StandardTypeComparator: int compare(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: int compareTo(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.YearMonth: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><com.zaxxer.hikari.pool.PoolEntry: java.sql.Connection createProxyConnection(com.zaxxer.hikari.pool.ProxyLeakTask,long)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.node.LongNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanInfo: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyLeakTask: void cancel()>-><org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><com.alibaba.fastjson.JSONArray: boolean add(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><cn.hutool.core.map.MapProxy: java.lang.Object get(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<org.apache.tomcat.util.http.parser.MediaType: java.lang.String toStringNoCharset()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<org.springframework.security.oauth2.provider.OAuth2Request: boolean equals(java.lang.Object)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><reactor.util.function.Tuple4: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void setSchema(java.lang.String)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<org.springframework.cglib.core.EmitUtils$6: void processCase(int,org.springframework.asm.Label)>-><com.google.common.base.Joiner$3: java.lang.Object get(int)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.format.DateTimeFormatterBuilder$FractionPrinterParser: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.annotation.Annotation getAnnotation(java.lang.reflect.Field,java.lang.Class)>-><java.lang.reflect.Field: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: int compareTo(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><ch.qos.logback.core.subst.Token: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>-><org.aspectj.weaver.ResolvedType$Missing: java.lang.String getName()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.AttributeEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<org.apache.tomcat.util.buf.ByteChunk: void recycle()>-><org.apache.tomcat.util.buf.AbstractChunk: void recycle()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.util.DerInputBuffer: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.print.MimeType$ParameterMapEntrySet: int size()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariProxyConnection: java.sql.Statement createStatement()>-><com.zaxxer.hikari.pool.ProxyConnection: java.sql.Statement createStatement()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.concurrent.ThreadPoolExecutor: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<org.aspectj.bridge.AbortException: void printStackTrace(java.io.PrintWriter)>-><java.io.PrintWriter: void println(java.lang.String)>
<org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: org.aspectj.weaver.UnresolvedType getDeclaringType()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.node.TextNode: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.codehaus.jackson.node.BigIntegerNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.AttributedCharacterIterator$Attribute: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Long: long longValue()>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><com.zaxxer.hikari.pool.HikariProxyStatement: boolean execute(java.lang.String)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.util.RawValue: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.data.util.TypeVariableTypeInformation: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.ZoneId: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Boolean: boolean booleanValue()>
<java.lang.reflect.Field: sun.reflect.generics.factory.GenericsFactory getFactory()>-><sun.reflect.generics.scope.ClassScope: sun.reflect.generics.scope.ClassScope make(java.lang.Class)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.Thread$WeakClassKey: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.beans.factory.support.GenericBeanDefinition: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.IntNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector: void _sortProperties(java.util.Map)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><java.nio.CharBuffer: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: double getDouble(java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.BitSet: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.image.ComponentColorModel: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableList$1: java.lang.Object previous()>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: java.lang.Object previous()>
<java.util.Hashtable: void putAll(java.util.Map)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.beans.PropertyValue: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.sun.jmx.mbeanserver.WeakIdentityHashMap$IdentityWeakReference: boolean equals(java.lang.Object)>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.text.FieldPosition: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.ArgsPointcut: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.security.BasicPermission: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.node.IntNode: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.POJONode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.util.MimeType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.concurrent.TimeUnit$2: long toNanos(long)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.JumboEnumSet: boolean remove(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.nio.ByteBuffer: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object set(int,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: void rangeCheck(int)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.MonthDay: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.sql.DriverManager: java.sql.Driver getDriver(java.lang.String)>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><org.slf4j.helpers.NOPLogger: boolean isDebugEnabled()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><com.zaxxer.hikari.pool.ProxyConnection: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.alibaba.fastjson.util.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(java.lang.CharSequence)>-><java.nio.CharBuffer: int length()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ThreadPoolExecutor: void setMaximumPoolSize(int)>-><java.util.concurrent.atomic.AtomicInteger: int get()>
<com.fasterxml.classmate.ResolvedType: java.lang.String getBriefDescription()>-><com.fasterxml.classmate.types.ResolvedPrimitiveType: java.lang.StringBuilder appendBriefDescription(java.lang.StringBuilder)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.HashMap$EntrySet: boolean contains(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<java.nio.CharBuffer: int hashCode()>-><java.nio.Buffer: int limit()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.provider.OAuth2Request: boolean equals(java.lang.Object)>-><java.util.AbstractSet: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.ArrayNode: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.EnumMap$KeySet: java.util.Iterator iterator()>
<cn.hutool.core.exceptions.ExceptionUtil: java.lang.String getMessage(java.lang.Throwable)>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.temporal.IsoFields$Field$4: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.List resolveManagedList(java.lang.Object,java.util.List)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedList: java.lang.Object get(int)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<sun.reflect.UnsafeDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Double: double doubleValue()>
<cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String getDeptIds()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.UsernamePasswordAuthenticationToken: java.lang.Object getCredentials()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFieldsUsing(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.reflect.Parameter: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: void resetLock()>-><sun.misc.Unsafe: void putObjectVolatile(java.lang.Object,long,java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.apache.tomcat.util.http.parser.HttpParser: java.lang.String readToken(java.io.Reader)>-><java.io.StringReader: void reset()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList: java.lang.Object get(int)>-><com.google.common.base.Joiner$3: java.lang.Object get(int)>
<com.zaxxer.hikari.pool.PoolBase: void createNetworkTimeoutExecutor(javax.sql.DataSource,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildFullRequestUrl(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.sql.DriverManager: java.util.Enumeration getDrivers()>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><java.security.Provider: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void createNetworkTimeoutExecutor(javax.sql.DataSource,java.lang.String,java.lang.String)>-><com.zaxxer.hikari.pool.PoolBase$SynchronousExecutor: void <init>(com.zaxxer.hikari.pool.PoolBase$1)>
<java.lang.reflect.Field: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Parameter: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.math.BigInteger: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.DoubleNode: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeStaticObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.sun.jmx.mbeanserver.WeakIdentityHashMap$IdentityWeakReference: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.ThisOrTargetPointcut: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.Provider$UString: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><java.nio.ByteBuffer: byte[] array()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Locale: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.web.context.support.WebApplicationContextUtils$WebRequestObjectFactory: java.lang.String toString()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.time.ZonedDateTime: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.pool.HikariPool: int getTotalConnections()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.awt.image.PackedColorModel: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.Collections$EmptyList: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.RuntimeBeanReference: boolean equals(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>-><java.util.Collections$EmptySet: java.lang.Object[] toArray()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AndAnnotationTypePattern: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariDataSource: java.sql.Connection getConnection()>-><java.lang.Throwable: java.lang.Throwable getCause()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.ser.BeanSerializer: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.BooleanNode: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<io.micrometer.core.instrument.Timer$Builder: void <init>(java.lang.String)>-><io.micrometer.core.instrument.Timer$Builder: io.micrometer.core.instrument.Timer$Builder maximumExpectedValue(java.time.Duration)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.CodeSource: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Collections$1: java.lang.Object next()>
<com.zaxxer.hikari.pool.HikariPool: java.sql.SQLException createTimeoutException(long)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equals(java.lang.Object)>
<org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.validation.ObjectError: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.zone.ZoneRules: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void initializeDataSource()>-><com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArraySet: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><com.fasterxml.jackson.core.JsonParseException: java.lang.String getMessage()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.map.introspect.AnnotatedParameter: java.lang.String toString()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.p6spy.engine.common.Value: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.bouncycastle.asn1.ASN1Null: java.lang.String toString()>
<com.zaxxer.hikari.metrics.dropwizard.CodahaleHealthChecker: void registerHealthChecks(com.zaxxer.hikari.pool.HikariPool,com.zaxxer.hikari.HikariConfig,com.codahale.metrics.health.HealthCheckRegistry)>-><java.lang.Long: long parseLong(java.lang.String)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<java.util.stream.ReferencePipeline$11$1: void accept(java.lang.Object)>-><java.util.stream.SortedOps$RefSortingSink: void accept(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><com.zaxxer.hikari.HikariConfig: int getMaximumPoolSize()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: int hashCode()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.Object: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.Short: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.TreeMap$Entry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableMap: boolean equals(java.lang.Object)>
<sun.net.RegisteredDomain: java.lang.String getRegisteredDomain(java.lang.String)>-><io.netty.channel.nio.SelectedSelectionKeySet: boolean contains(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.AbstractSet: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: void setAutoCommit(boolean)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void setAutoCommit(boolean)>
<java.util.HashSet: void <init>(java.util.Collection)>-><io.netty.channel.nio.SelectedSelectionKeySet: int size()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: boolean hasNext()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.text.AttributeEntry: java.lang.Object getKey()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getKey()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.context.support.ApplicationListenerDetector: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: int getCount(int)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<java.util.HashMap$Node: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.jsontype.NamedType: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.invoke.LambdaForm$Name: java.lang.String toString()>
<org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFilteredFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<org.springframework.expression.spel.support.StandardTypeComparator: int compare(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: int compareTo(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.format.support.FormattingConversionService$AnnotationConverterKey: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.ArrayNode: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: java.util.Set entrySet()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.util.Map declaredAnnotations()>-><java.lang.System$2: sun.reflect.ConstantPool getConstantPool(java.lang.Class)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.PropertyElf: void setTargetFromProperties(java.lang.Object,java.util.Properties)>-><java.lang.Object: java.lang.Class getClass()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.RegularEnumSet: boolean equals(java.lang.Object)>
<java.util.Collections: void reverse(java.util.List)>-><java.util.Collections$EmptyList: java.util.ListIterator listIterator()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.util.DerInputBuffer: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.hibernate.validator.internal.util.annotation.AnnotationProxy: java.lang.String toString()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: boolean equals(java.lang.Object)>
<java.util.stream.Nodes$SizedCollectorTask: void compute()>-><java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: java.util.Spliterator trySplit()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.IfPointcut: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.QueryRequest: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Period: boolean equals(java.lang.Object)>
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.core.JsonProcessingException: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: void add(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><com.zaxxer.hikari.pool.PoolEntry: int getState()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.apache.commons.pool2.impl.BaseGenericObjectPool$IdentityWrapper: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: java.lang.Object previous()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object previous()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: java.lang.String toString()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><java.lang.reflect.Field: int hashCode()>
<org.aspectj.bridge.IMessage$Kind: int compareTo(org.aspectj.bridge.IMessage$Kind)>-><org.aspectj.bridge.IMessage$Kind$1: int compare(java.lang.Object,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: int hashCode()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.invoke.MethodType: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.text.AttributeEntry: java.lang.String toString()>
<org.aspectj.util.LangUtil: java.lang.StringBuffer stackToString(java.lang.Throwable,boolean)>-><java.io.PrintWriter: void println(java.lang.String)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.StringJoiner: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<org.springframework.util.ReflectionUtils: void makeAccessible(java.lang.reflect.Field)>-><java.lang.reflect.AccessibleObject: boolean isAccessible()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.math.BigDecimal: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><java.lang.reflect.Field: java.lang.String toString()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<sun.reflect.UnsafeStaticLongFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><sun.reflect.UnsafeStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<java.util.stream.ReferencePipeline$11$1: void accept(java.lang.Object)>-><java.util.stream.FindOps$FindSink: void accept(java.lang.Object)>
<org.aspectj.weaver.BCException: void <init>(java.lang.String)>-><org.aspectj.bridge.context.CompilationAndWeavingContext: java.lang.String getCurrentContext()>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ListSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.awt.Color: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList: java.lang.Object set(int,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.bouncycastle.asn1.ASN1Null: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.ThisOrTargetAnnotationPointcut: java.lang.String toString()>
<ch.qos.logback.core.util.StatusListenerConfigHelper: ch.qos.logback.core.status.StatusListener createListenerPerClassName(ch.qos.logback.core.Context,java.lang.String)>-><org.aspectj.weaver.BCException: void printStackTrace()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.TypeSignature parseTypeSig(java.lang.String)>-><java.lang.String: char[] toCharArray()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.alibaba.fastjson.util.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<org.aspectj.bridge.AbortException: void printStackTrace(java.io.PrintStream)>-><java.lang.Throwable: void printStackTrace(java.io.PrintStream)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.http.ResponseEntity: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.InetSocketAddress: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.util.DerValue: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.concurrent.Semaphore: java.lang.String toString()>
<com.sun.jmx.interceptor.DefaultMBeanServerInterceptor: void postRegister(javax.management.ObjectName,javax.management.DynamicMBean,boolean,boolean)>-><com.sun.jmx.mbeanserver.MBeanServerDelegateImpl: void postRegister(java.lang.Boolean)>
<org.springframework.util.CollectionUtils$MultiValueMapAdapter: java.util.Set keySet()>-><java.util.Collections$UnmodifiableMap: java.util.Set keySet()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void initializeDataSource()>-><com.zaxxer.hikari.HikariConfig: java.lang.String getDriverClassName()>
<sun.reflect.UnsafeStaticObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<sun.reflect.UnsafeLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putLong(java.lang.Object,long,long)>
<io.micrometer.core.instrument.Timer: io.micrometer.core.instrument.Timer$Builder builder(java.lang.String)>-><io.micrometer.core.instrument.Timer$Builder: void <init>(java.lang.String,io.micrometer.core.instrument.Timer$1)>
<org.aspectj.weaver.UnresolvedType: java.lang.String signatureToName(java.lang.String)>-><java.lang.String: java.lang.String replace(char,char)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.CollectionLikeType: boolean equals(java.lang.Object)>
<org.springframework.core.convert.TypeDescriptor: void <init>(java.lang.reflect.Field)>-><java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation[] getAnnotations()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<io.micrometer.core.instrument.Tags$ArrayIterator: io.micrometer.core.instrument.Tag next()>-><io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tag[] access$200(io.micrometer.core.instrument.Tags)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>
<org.aspectj.bridge.MessageUtil: java.lang.String renderMessage(org.aspectj.bridge.IMessage,boolean)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.zaxxer.hikari.metrics.dropwizard.CodahaleMetricsTrackerFactory: void <init>(com.codahale.metrics.MetricRegistry)>-><java.lang.Object: void <init>()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.security.provider.PolicyParser$PermissionEntry: boolean equals(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.codehaus.jackson.node.DecimalNode: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeStaticBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><java.lang.reflect.Field: java.lang.String toString()>
<sun.reflect.UnsafeLongFieldAccessorImpl: long getLong(java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><io.lettuce.core.masterslave.RedisMasterSlaveNode: java.lang.String toString()>
<sun.reflect.UnsafeFloatFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeFloatFieldAccessorImpl: float getFloat(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><reactor.util.function.Tuple2: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.HashMap$Node: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.security.util.DerValue: boolean equals(java.lang.Object)>
<org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean canEqual(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<com.google.common.collect.TransformedIterator: boolean hasNext()>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.security.Provider$Service: java.lang.String toString()>
<cc.mrbird.febs.auth.service.impl.SocialLoginServiceImpl: org.springframework.security.oauth2.common.OAuth2AccessToken signLogin(cc.mrbird.febs.auth.entity.BindUser,me.zhyd.oauth.model.AuthUser)>-><org.springframework.security.crypto.password.NoOpPasswordEncoder: java.lang.String encode(java.lang.CharSequence)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: int hashCode()>
<org.aspectj.weaver.patterns.TypePatternList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object[])>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanInfo: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<org.springframework.validation.DataBinder: org.springframework.validation.AbstractPropertyBindingResult createBeanPropertyBindingResult()>-><org.springframework.validation.DataBinder: java.lang.String getObjectName()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.util.ConcurrentBag: void <init>(com.zaxxer.hikari.util.ConcurrentBag$IBagStateListener)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><cn.hutool.core.date.format.FastDateFormat: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.lang.String: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$SetFromMap: java.util.Iterator iterator()>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object[])>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.alibaba.fastjson.util.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void recordConnectionCreated(long)>
<sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putDouble(java.lang.Object,long,double)>
<java.lang.Object: java.lang.String toString()>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><ch.qos.logback.core.AppenderBase: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String toString()>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<org.apache.catalina.connector.OutputBuffer: void toWriteMode(java.nio.Buffer)>-><java.nio.Buffer: java.nio.Buffer position(int)>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.LinkedList: int size()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<sun.reflect.UnsafeStaticIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Character: char charValue()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.TreeMap$Entry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: java.lang.String toString()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.nio.CharBuffer: java.lang.String toString()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.format.DateTimeFormatterBuilder$CompositePrinterParser: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><ch.qos.logback.core.joran.spi.ElementPath: java.lang.String toString()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putShortVolatile(java.lang.Object,long,short)>
<org.apache.catalina.connector.Response: void setStatus(int)>-><org.apache.catalina.connector.Response: void setStatus(int,java.lang.String)>
<java.util.Collections$SynchronizedCollection: boolean isEmpty()>-><java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.HikariConfig: int getMinimumIdle()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.joran.spi.ElementSelector: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.util.calendar.Era: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Proxy$Key2: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.LocalDate: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.concurrent.TimeUnit$1: long convert(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.TimeUnit$6: long toNanos(long)>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Arrays$ArrayList: java.lang.Object get(int)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.lettuce.core.RedisURI: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<com.sun.jmx.interceptor.DefaultMBeanServerInterceptor: java.lang.String getNewMBeanClassName(java.lang.Object)>-><com.sun.jmx.mbeanserver.MBeanServerDelegateImpl: javax.management.MBeanInfo getMBeanInfo()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.LambdaForm: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: int hashCode()>
<org.springframework.web.util.pattern.WildcardTheRestPathElement: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.data.util.ParameterizedTypeInformation: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.NullNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.OptionalLong: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.crypto.CryptoAllPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ReferencePipeline$11$1: void accept(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><com.alibaba.fastjson.JSONArray: int size()>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.StringUtils: java.lang.String collectionToDelimitedString(java.util.Collection,java.lang.String,java.lang.String,java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<com.alibaba.fastjson.util.TypeUtils: void computeFields(java.lang.Class,java.util.Map,com.alibaba.fastjson.PropertyNamingStrategy,java.util.Map,java.lang.reflect.Field[])>-><java.lang.reflect.Field: int getModifiers()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.beans.MutablePropertyValues: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.LinkedList: java.lang.Object get(int)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanOperationInfo: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy: void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor)>-><java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask: void run()>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><ch.qos.logback.core.subst.Token: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: java.lang.Object previous()>-><java.util.Collections$UnmodifiableList$1: java.lang.Object previous()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.EnumMap$KeySet: int size()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeOptionalFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: boolean equals(java.lang.Object)>
<org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.String,java.lang.String)>-><java.lang.IllegalAccessException: void <init>(java.lang.String)>
<org.springframework.web.context.request.ServletRequestAttributes: void registerDestructionCallback(java.lang.String,java.lang.Runnable,int)>-><org.springframework.web.context.request.AbstractRequestAttributes: void registerRequestDestructionCallback(java.lang.String,java.lang.Runnable)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<java.util.concurrent.ScheduledThreadPoolExecutor: long triggerTime(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.TimeUnit$7: long toNanos(long)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.lang.annotation.Annotation[] getDeclaredAnnotations()>-><sun.reflect.annotation.AnnotationParser: java.lang.annotation.Annotation[] toArray(java.util.Map)>
<java.util.concurrent.LinkedBlockingQueue$Itr: void <init>(java.util.concurrent.LinkedBlockingQueue)>-><java.util.concurrent.LinkedBlockingQueue: void fullyUnlock()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.aspectj.util.LangUtil: void elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)>-><java.lang.StringBuffer: java.lang.String toString()>
<io.micrometer.core.instrument.Counter$Builder: void <init>(java.lang.String)>-><io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags empty()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<com.sun.jmx.mbeanserver.JmxMBeanServer$2: java.lang.Object run()>-><com.sun.jmx.mbeanserver.JmxMBeanServer: javax.management.MBeanServer access$100(com.sun.jmx.mbeanserver.JmxMBeanServer)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>-><org.aspectj.weaver.JoinPointSignature: org.aspectj.weaver.UnresolvedType getDeclaringType()>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><com.zaxxer.hikari.pool.PoolEntry: void setState(int)>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><com.zaxxer.hikari.pool.ProxyConnection: int getNetworkTimeoutState()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.management.MBeanInfo: java.lang.String toString()>
<org.springframework.web.context.request.ServletRequestAttributes: java.lang.Object getAttribute(java.lang.String,int)>-><org.springframework.web.context.request.ServletRequestAttributes: javax.servlet.http.HttpSession getSession(boolean)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariProxyConnection: void rollback()>-><com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.Nodes$SizedCollectorTask$OfRef: void accept(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><java.util.AbstractList$ListItr: int previousIndex()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<sun.reflect.UnsafeFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putFloat(java.lang.Object,long,float)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.time.Clock$SystemClock: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><reactor.util.function.Tuple4: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.Provider$ServiceKey: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><java.lang.reflect.Field: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.DecimalFormat: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><java.nio.CharBuffer: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.text.MessageFormat: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: void add(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><org.slf4j.helpers.NOPLogger: void info(java.lang.String)>
<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.zaxxer.hikari.util.ClockSource: java.lang.String elapsedDisplayString0(long,long)>-><java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation getDeclaredAnnotation(java.lang.Class)>-><java.lang.reflect.Field: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.SocketPermission: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><com.alibaba.fastjson.JSONObject: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.text.DigitList: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.stream.ReferencePipeline$Head: void forEach(java.util.function.Consumer)>-><java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void forEachRemaining(java.util.function.Consumer)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: boolean equals(java.lang.Object)>
<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.ClassInfo: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.MediaType: void <init>(java.lang.String,java.lang.String,java.util.LinkedHashMap)>-><java.lang.Object: void <init>()>
<java.util.Collections$UnmodifiableList$1: java.lang.Object previous()>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object previous()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.HttpParser: org.apache.tomcat.util.http.parser.SkipResult skipConstant(java.io.Reader,java.lang.String)>-><java.io.StringReader: int read()>
<org.aspectj.weaver.patterns.TypePatternList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.sun.jmx.mbeanserver.MBeanAnalyzer: void visit(com.sun.jmx.mbeanserver.MBeanAnalyzer$MBeanVisitor)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<java.util.ComparableTimSort: void binarySort(java.lang.Object[],int,int,int)>-><org.aspectj.weaver.JoinPointSignature: int compareTo(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<sun.reflect.UnsafeStaticObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Field: java.lang.Class getType()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: boolean equals(java.lang.Object)>-><org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource: boolean isStatic()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.Instant: java.lang.String toString()>
<org.apache.tomcat.util.http.parser.HttpParser: java.lang.String readToken(java.io.Reader)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.security.oauth2.provider.approval.Approval: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.asm.ConstantDynamic: boolean equals(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onAfterRollback(com.p6spy.engine.common.ConnectionInformation,long,java.sql.SQLException)>-><com.p6spy.engine.event.JdbcEventListener: void onAfterRollback(com.p6spy.engine.common.ConnectionInformation,long,java.sql.SQLException)>
<sun.reflect.UnsafeIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.security.util.DerInputBuffer: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.WithinPointcut: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.ProcessEnvironment$ExternalData: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.web.context.request.ServletWebRequest: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.LocalDate: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.util.concurrent.ThreadPoolExecutor: void setKeepAliveTime(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.TimeUnit$4: long toNanos(long)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>-><org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint$ConfigurationPropertiesAnnotationIntrospector: java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.Annotated)>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.Collections$UnmodifiableList: java.util.ListIterator listIterator()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<java.util.ComparableTimSort: int countRunAndMakeAscending(java.lang.Object[],int,int)>-><org.aspectj.bridge.IMessage$Kind: int compareTo(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.Package: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.AbstractSet: boolean equals(java.lang.Object)>-><com.google.common.base.Joiner$3: int size()>
<com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.HttpParser: org.apache.tomcat.util.http.parser.SkipResult skipConstant(java.io.Reader,java.lang.String)>-><java.io.StringReader: void mark(int)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.HandlerPointcut: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Duration: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.security.Provider$UString: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.reflect.Parameter: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.GregorianCalendar: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedByteFieldAccessorImpl: byte getByte(java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.aspectj.weaver.JoinPointSignature: java.lang.String getSignature()>-><org.aspectj.weaver.MemberImpl: java.lang.String getSignature()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<com.zaxxer.hikari.HikariConfig: void logConfiguration()>-><java.util.TreeSet: void <init>(java.util.Collection)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: int hashCode()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.validation.DataBinder: org.springframework.beans.TypeConverter getTypeConverter()>-><org.springframework.validation.DataBinder: org.springframework.beans.SimpleTypeConverter getSimpleTypeConverter()>
<java.text.AttributeEntry: java.lang.String toString()>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<org.springframework.cglib.core.EmitUtils$6: void processCase(int,org.springframework.asm.Label)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object get(int)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<reactor.core.scheduler.ParallelScheduler: java.lang.Object scanUnsafe(reactor.core.Scannable$Attr)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.UUID: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>-><org.aspectj.weaver.patterns.TypePatternList: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.IdentityHashMap: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void beforePrototypeCreation(java.lang.String)>-><java.util.concurrent.CopyOnWriteArraySet: boolean add(java.lang.Object)>
<sun.reflect.UnsafeDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Long: long longValue()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><javax.management.MBeanAttributeInfo: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.util.calendar.CalendarDate: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements: int getLength(int)>-><java.nio.CharBuffer: int length()>
<org.hibernate.validator.internal.util.annotation.AnnotationProxy: boolean equals(java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.reflect.WeakCache$CacheValue: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(java.nio.CharBuffer,java.nio.ByteBuffer)>-><java.nio.Buffer: int capacity()>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.util.Hashtable$Entry: java.lang.Object getKey()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><com.google.common.collect.Maps$KeySet: int size()>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.security.oauth2.provider.approval.Approval: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><com.p6spy.engine.common.CustomHashedHashSet$CustomHashedHashSetIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.imageio.ImageTypeSpecifier: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy: void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor)>-><io.netty.util.internal.ThreadExecutorMap$2: void run()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<cc.mrbird.febs.auth.configure.FebsSecurityConfigure: void <init>(org.springframework.security.core.userdetails.UserDetailsService,cc.mrbird.febs.auth.filter.ValidateCodeFilter,org.springframework.security.crypto.password.PasswordEncoder,cc.mrbird.febs.auth.handler.FebsWebLoginSuccessHandler,cc.mrbird.febs.auth.handler.FebsWebLoginFailureHandler)>-><org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerSecurityConfigurer$1: void <init>(org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerSecurityConfigurer)>
<com.zaxxer.hikari.pool.PoolBase$SynchronousExecutor: void <init>()>-><java.lang.Object: void <init>()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<java.sql.SQLException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>-><java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.security.PermissionCollection: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><org.apache.ibatis.scripting.xmltags.DynamicContext$ContextMap: java.lang.Object get(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanOperationInfo: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: int size()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.bouncycastle.asn1.ASN1BitString: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.support.RootBeanDefinition: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.codehaus.jackson.map.type.ArrayType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.lang.ProcessEnvironment$StringKeySet: int size()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.MethodOverrides: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.zaxxer.hikari.util.UtilityElf: java.util.concurrent.ThreadPoolExecutor createThreadPoolExecutor(int,java.lang.String,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)>-><com.zaxxer.hikari.util.UtilityElf$DefaultThreadFactory: void <init>(java.lang.String,boolean)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.type.ReferenceType: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker: void <init>(java.lang.String,com.zaxxer.hikari.metrics.PoolStats,com.codahale.metrics.MetricRegistry)>-><java.lang.Object: void <init>()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.support.AbstractPointcutAdvisor: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Date: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String getComponent()>
<java.util.concurrent.ConcurrentHashMap: int compareComparables(java.lang.Class,java.lang.Object,java.lang.Object)>-><org.aspectj.bridge.IMessage$Kind: int compareTo(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.jar.Manifest: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.asm.Type: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.OutputBuffer: void write(java.lang.String,int,int)>-><org.apache.catalina.connector.OutputBuffer: int transfer(java.lang.String,int,int,java.nio.CharBuffer)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object previous()>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object previous()>
<io.micrometer.core.instrument.Timer$Builder: void <init>(java.lang.String)>-><java.lang.Object: void <init>()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.Collections$UnmodifiableList$1: java.lang.Object previous()>
<sun.reflect.UnsafeStaticCharacterFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Character: void <init>(char)>
<com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.Double: boolean equals(java.lang.Object)>
<org.hibernate.validator.internal.util.annotation.AnnotationProxy: boolean equals(java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.data.util.ClassTypeInformation: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolEntry: java.sql.Connection close()>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String getPoolName()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.aspectj.weaver.patterns.TypePatternList: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.nio.CharBuffer: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariProxyPreparedStatement: void setQueryTimeout(int)>-><com.p6spy.engine.wrapper.StatementWrapper: void setQueryTimeout(int)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.google.common.util.concurrent.MoreExecutors$ListeningDecorator: void execute(java.lang.Runnable)>-><io.netty.util.concurrent.GlobalEventExecutor: void execute(java.lang.Runnable)>
<io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object previous()>-><java.io.PrintStream: void println(java.lang.String)>
<com.zaxxer.hikari.util.ConcurrentBag: void add(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.apache.logging.log4j.Level: boolean equals(java.lang.Object)>
<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Field: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.util.WeakHashMap$Entry: java.lang.Object getKey()>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.p6spy.engine.spy.P6DataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)>-><com.p6spy.engine.spy.DefaultJdbcEventListenerFactory: com.p6spy.engine.event.JdbcEventListener createJdbcEventListener()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.jar.Manifest: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.util.locale.BaseLocale: boolean equals(java.lang.Object)>
<java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>-><org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore$TokenExpiry: int compareTo(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onBeforeRollback(com.p6spy.engine.common.ConnectionInformation)>-><com.p6spy.engine.event.JdbcEventListener: void onBeforeRollback(com.p6spy.engine.common.ConnectionInformation)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.bouncycastle.asn1.ASN1UTCTime: java.lang.String toString()>
<org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: java.lang.String getSignature()>
<org.apache.catalina.connector.OutputBuffer: void realWriteChars(java.nio.CharBuffer)>-><org.apache.tomcat.util.buf.C2BConverter: void convert(java.nio.CharBuffer,java.nio.ByteBuffer)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.LinkedHashMap$LinkedKeySet: int size()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.management.MBeanInfo: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.util.concurrent.PromiseTask: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: void clear()>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: void checkForComodification()>
<sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putBooleanVolatile(java.lang.Object,long,boolean)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.WithinAnnotationPointcut: java.lang.String toString()>
<sun.reflect.UnsafeDoubleFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><sun.reflect.UnsafeFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.tomcat.util.buf.C2BConverter: void convert(java.nio.CharBuffer,java.nio.ByteBuffer)>-><java.nio.HeapCharBuffer: java.nio.CharBuffer get(char[],int,int)>
<com.zaxxer.hikari.util.ConcurrentBag: void add(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.YearMonth: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: float getFloat(java.lang.Object)>
<reactor.core.publisher.Traces: java.lang.String[] extractOperatorAssemblyInformationParts(java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object[])>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.reflect.Proxy$Key2: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.time.Duration: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.LambdaForm$Name: boolean equals(java.lang.Object)>
<java.util.Collections: void reverse(java.util.List)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.lettuce.core.internal.AbstractInvocationHandler: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ModifiersPattern: boolean equals(java.lang.Object)>
<org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource: java.lang.String toString()>-><java.lang.Object: java.lang.Class getClass()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.subst.Token: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.util.context.Context0: java.lang.String toString()>
<sun.reflect.UnsafeFloatFieldAccessorImpl: float getFloat(java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><com.alibaba.fastjson.JSONArray: boolean add(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.asm.Handle: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.pool.HikariPool: void setMetricsTrackerFactory(com.zaxxer.hikari.metrics.MetricsTrackerFactory)>
<java.util.ComparableTimSort: void binarySort(java.lang.Object[],int,int,int)>-><org.aspectj.bridge.IMessage$Kind: int compareTo(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<com.zaxxer.hikari.pool.ProxyLeakTask: void <init>(com.zaxxer.hikari.pool.PoolEntry)>-><java.lang.Thread: java.lang.String getName()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanNotificationInfo: boolean equals(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FastDateFormat: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<java.util.AbstractCollection: boolean isEmpty()>-><javax.print.MimeType$ParameterMapEntrySet: int size()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.net.URL: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: java.sql.SQLException createTimeoutException(long)>-><java.lang.StringBuilder: void <init>()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.Collections$1: boolean hasNext()>
<sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<sun.reflect.UnsafeStaticIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.deser.impl.ReadableObjectId: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setupConnection(java.sql.Connection)>-><com.zaxxer.hikari.pool.PoolBase: void executeSql(java.sql.Connection,java.lang.String,boolean)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: void validate()>-><org.slf4j.helpers.SubstituteLogger: boolean isDebugEnabled()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyConnection: void commit()>-><com.p6spy.engine.wrapper.ConnectionWrapper: void commit()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.WeakHashMap$EntrySet: boolean remove(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.ZonedDateTime: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><javax.xml.stream.FactoryConfigurationError: java.lang.String getMessage()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.codehaus.jackson.node.BooleanNode: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<org.springframework.web.util.pattern.PatternParseException$PatternMessage: java.lang.String formatMessage(java.lang.Object[])>-><java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.data.mapping.model.Property: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.node.LongNode: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.http.ResponseEntity: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.OutputBuffer: int transfer(byte[],int,int,java.nio.ByteBuffer)>-><org.apache.catalina.connector.OutputBuffer: void toWriteMode(java.nio.Buffer)>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeStaticCharacterFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Integer: int intValue()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.ClockSource: java.lang.String elapsedDisplayString0(long,long)>-><java.util.concurrent.TimeUnit$5: long convert(long,java.util.concurrent.TimeUnit)>
<com.zaxxer.hikari.HikariConfig: void validate()>-><com.zaxxer.hikari.HikariConfig: void validateNumerics()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.asm.Handle: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Duration: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String getMobile()>
<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.alibaba.fastjson.JSONArray: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.security.x509.Extension: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean remove(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<java.util.Collections$SynchronizedCollection: int size()>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<sun.reflect.UnsafeFieldAccessorImpl: java.lang.String getSetMessage(java.lang.String,java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.Signature: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.BooleanNode: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.net.Inet6Address: boolean equals(java.lang.Object)>
<java.sql.SQLException: void <init>(java.lang.String,java.lang.String)>-><java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>
<org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>-><org.aspectj.weaver.patterns.ThrowsPattern: int hashCode()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cn.hutool.core.date.format.FormatCache$MultipartKey: boolean equals(java.lang.Object)>
<org.aspectj.util.LangUtil$StringChecker: boolean acceptString(java.lang.String)>-><java.lang.String: int indexOf(java.lang.String)>
<org.springframework.cglib.core.EmitUtils$6: void processCase(int,org.springframework.asm.Label)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Short: short shortValue()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.core.env.PropertySource: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: int previousIndex()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.JsonMappingException: void _appendPathDesc(java.lang.StringBuilder)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><java.lang.StringBuilder: void <init>()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.AttributeAccessorSupport: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: void logConfiguration()>-><com.zaxxer.hikari.util.PropertyElf: java.util.Properties copyProperties(java.util.Properties)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.security.Provider$Service: java.lang.String toString()>
<org.aspectj.weaver.BCException: void printStackTrace(java.io.PrintStream)>-><org.aspectj.weaver.BCException: void printStackTrace(java.io.PrintWriter)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<io.micrometer.core.instrument.Counter$Builder: io.micrometer.core.instrument.Counter$Builder tags(java.lang.String[])>-><io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags of(java.lang.String[])>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void createNetworkTimeoutExecutor(javax.sql.DataSource,java.lang.String,java.lang.String)>-><java.util.concurrent.ThreadPoolExecutor: void setKeepAliveTime(long,java.util.concurrent.TimeUnit)>
<sun.reflect.UnsafeFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.aop.support.DefaultIntroductionAdvisor: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.io.ObjectStreamClass$FieldReflectorKey: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<com.zaxxer.hikari.pool.HikariPool: void throwPoolInitializationException(java.lang.Throwable)>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object,java.lang.Object)>
<com.zaxxer.hikari.HikariDataSource: void close()>-><java.lang.Thread: java.lang.Thread currentThread()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void recordConnectionUsage(com.zaxxer.hikari.pool.PoolEntry)>-><com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker: void recordConnectionUsageMillis(long)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.codehaus.jackson.map.type.MapLikeType: boolean equals(java.lang.Object)>
<java.util.ComparableTimSort: void mergeLo(int,int,int,int)>-><java.nio.CharBuffer: int compareTo(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyConnection: java.sql.Statement createStatement()>-><com.zaxxer.hikari.pool.HikariProxyConnection: java.sql.Statement createStatement()>
<java.util.concurrent.ThreadPoolExecutor: void setMaximumPoolSize(int)>-><java.lang.IllegalArgumentException: void <init>()>
<javax.security.auth.PrivateCredentialPermission: void <init>(java.lang.String,java.util.Set)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<java.util.Hashtable: void putAll(java.util.Map)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.security.x509.GeneralName: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.temporal.WeekFields: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: java.lang.Class getType()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.framework.JdkDynamicAopProxy: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>-><java.util.concurrent.CopyOnWriteArrayList: void resetLock()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.MonthDay: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.TreeMap$EntrySet: java.util.Iterator iterator()>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.UtilityElf: boolean safeIsAssignableFrom(java.lang.Object,java.lang.String)>-><java.lang.Class: java.lang.Class forName(java.lang.String)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.JumboEnumSet: java.util.Iterator iterator()>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.Pointcut$MatchesNothingPointcut: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<java.util.ComparableTimSort: int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int)>-><org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore$TokenExpiry: int compareTo(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: void <init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<java.util.ComparableTimSort: int countRunAndMakeAscending(java.lang.Object[],int,int)>-><com.fasterxml.classmate.util.ClassKey: int compareTo(java.lang.Object)>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<java.util.stream.AbstractPipeline: void copyInto(java.util.stream.Sink,java.util.Spliterator)>-><java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void forEachRemaining(java.util.function.Consumer)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.management.openmbean.TabularType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object)>
<org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.util.PropertyElf: void setTargetFromProperties(java.lang.Object,java.util.Properties)>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.DateFormatSymbols: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<java.lang.Object: java.lang.String toString()>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeInitMethods(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>-><org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider: void afterPropertiesSet()>
<org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.OptionalInt: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><io.netty.util.concurrent.PromiseTask: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String getRoleName()>
<com.zaxxer.hikari.util.ClockSource: long elapsedNanos(long,long)>-><com.zaxxer.hikari.util.ClockSource$NanosecondClockSource: long elapsedNanos0(long,long)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.core.publisher.FluxCreate$DropAsyncSink: java.lang.String toString()>
<com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker: void <init>(java.lang.String,com.zaxxer.hikari.metrics.PoolStats,io.micrometer.core.instrument.MeterRegistry)>-><io.micrometer.core.instrument.Timer$Builder: io.micrometer.core.instrument.Timer register(io.micrometer.core.instrument.MeterRegistry)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.format.support.FormattingConversionService$AnnotationConverterKey: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><org.springframework.validation.BindException: java.lang.String getMessage()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.util.RawValue: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putIntVolatile(java.lang.Object,long,int)>
<java.util.ComparableTimSort: void mergeLo(int,int,int,int)>-><com.fasterxml.classmate.util.ClassKey: int compareTo(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.provider.client.BaseClientDetails: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.Tags$ArrayIterator: void <init>(io.micrometer.core.instrument.Tags,io.micrometer.core.instrument.Tags$1)>-><io.micrometer.core.instrument.Tags$ArrayIterator: void <init>(io.micrometer.core.instrument.Tags)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.CharChunk: void append(char)>-><org.apache.tomcat.util.buf.CharChunk: void flushBuffer()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.Collections$EmptySet: boolean isEmpty()>
<com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: boolean shouldCreateAnotherConnection()>-><com.zaxxer.hikari.pool.HikariPool: int getIdleConnections()>
<com.zaxxer.hikari.util.PropertyElf: java.util.Set getPropertyNames(java.lang.Class)>-><java.util.HashSet: void <init>()>
<com.zaxxer.hikari.util.SuspendResumeLock: void acquire()>-><java.sql.SQLTransientException: void <init>(java.lang.String)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void setReadOnly(boolean)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.core.publisher.FluxOnAssembly: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.temporal.WeekFields: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.core.publisher.FluxCreate$ErrorAsyncSink: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.SimpleDateFormat: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<java.util.stream.ReferencePipeline$11$1: void accept(java.lang.Object)>-><java.util.stream.ReferencePipeline$2$1: void accept(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><java.lang.Long: java.lang.Long getLong(java.lang.String,long)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.std.IterableSerializer: boolean hasSingleElement(java.lang.Iterable)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: boolean equals(java.lang.Object)>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.tree.LongSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: int hashCode()>
<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector: java.util.Map _findFields(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.util.Map)>-><java.lang.reflect.Field: java.lang.String getName()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.Provider$UString: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.management.MBeanAttributeInfo: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Hashtable: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: void closeStatements()>-><com.zaxxer.hikari.pool.PoolEntry: void evict(java.lang.String)>
<com.alibaba.fastjson.JSON: java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.util.concurrent.PromiseTask: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><com.fasterxml.jackson.core.exc.StreamReadException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArraySet: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.TreeMap$KeySet: boolean isEmpty()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.crypto.CryptoAllPermission: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.bouncycastle.asn1.ASN1TaggedObject: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.google.common.base.Predicates$NotPredicate: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.MonthDay: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.mapping.model.Property: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.HikariConfig: java.lang.Object getHealthCheckRegistry()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: int getInt(java.lang.Object)>-><sun.misc.Unsafe: int getIntVolatile(java.lang.Object,long)>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnnotationPointcut: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.alibaba.fastjson.JSONObject: int size()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Field: java.lang.Class getType()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariProxyConnection: boolean getAutoCommit()>-><com.zaxxer.hikari.pool.HikariProxyConnection: boolean getAutoCommit()>
<org.aspectj.weaver.patterns.TypePatternList: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.List resolveManagedList(java.lang.Object,java.util.List)>-><com.google.common.base.Joiner$3: java.lang.Object get(int)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void initializeDataSource()>-><javax.naming.InitialContext: void <init>()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$SetFromMap: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.TextNode: boolean equals(java.lang.Object)>
<java.util.TimSort: void binarySort(java.lang.Object[],int,int,int,java.util.Comparator)>-><java.time.format.DateTimeFormatterBuilder$2: int compare(java.lang.Object,java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.alibaba.fastjson.util.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><org.springframework.util.CollectionUtils$MultiValueMapAdapter: java.util.Set entrySet()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.AVA: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<java.util.concurrent.ThreadPoolExecutor: void setKeepAliveTime(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.ThreadPoolExecutor: void interruptIdleWorkers()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><java.nio.CharBuffer: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.Vector: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><java.util.concurrent.ThreadPoolExecutor: void setCorePoolSize(int)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.data.util.TypeVariableTypeInformation: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<org.springframework.web.context.request.ServletRequestAttributes: java.lang.Object getSessionMutex()>-><org.springframework.web.util.WebUtils: java.lang.Object getSessionMutex(javax.servlet.http.HttpSession)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.JumboEnumSet: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: int getWaitingThreadCount()>-><java.util.concurrent.atomic.AtomicInteger: int get()>
<com.zaxxer.hikari.util.ConcurrentBag: void <init>(com.zaxxer.hikari.util.ConcurrentBag$IBagStateListener)>-><com.zaxxer.hikari.util.ConcurrentBag: boolean useWeakThreadLocals()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.concurrent.atomic.AtomicReferenceArray: java.lang.String toString()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: void <init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.sql.Date: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: java.lang.Object getCredentials()>
<org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.apache.tomcat.util.http.parser.HttpParser: org.apache.tomcat.util.http.parser.SkipResult skipConstant(java.io.Reader,java.lang.String)>-><java.lang.String: int length()>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean remove(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: void clear()>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onAfterSetAutoCommit(com.p6spy.engine.common.ConnectionInformation,boolean,boolean,java.sql.SQLException)>-><com.p6spy.engine.event.JdbcEventListener: void onAfterSetAutoCommit(com.p6spy.engine.common.ConnectionInformation,boolean,boolean,java.sql.SQLException)>
<org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<sun.reflect.UnsafeDoubleFieldAccessorImpl: double getDouble(java.lang.Object)>-><sun.misc.Unsafe: double getDouble(java.lang.Object,long)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.sun.jmx.mbeanserver.JmxMBeanServer$2: java.lang.Object run()>-><com.sun.jmx.mbeanserver.JmxMBeanServer: javax.management.MBeanServerDelegate access$000(com.sun.jmx.mbeanserver.JmxMBeanServer)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.LinkedList: int size()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.io.SerializedString: boolean equals(java.lang.Object)>
<javax.print.MimeType$ParameterMapEntrySetIterator: void remove()>-><java.lang.UnsupportedOperationException: void <init>()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<sun.reflect.UnsafeFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><java.lang.reflect.Field: int getModifiers()>
<sun.reflect.UnsafeStaticShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Short: short shortValue()>
<org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyConnection: void close()>-><com.zaxxer.hikari.pool.HikariProxyConnection: void clearWarnings()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.auth.entity.BindUser: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.temporal.IsoFields$Field$4: java.lang.String toString()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.AbstractList$ListItr: java.lang.Object previous()>
<com.zaxxer.hikari.pool.PoolBase: void createNetworkTimeoutExecutor(javax.sql.DataSource,java.lang.String,java.lang.String)>-><com.zaxxer.hikari.util.UtilityElf$DefaultThreadFactory: void <init>(java.lang.String,boolean)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>
<java.lang.ThreadLocal$SuppliedThreadLocal: java.lang.Object initialValue()>-><reactor.core.scheduler.DelegateServiceScheduler$UnsupportedScheduledExecutorService: java.lang.Object get()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: int hashCode()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><ch.qos.logback.classic.jmx.JMXConfigurator: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.validation.ObjectError: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<java.util.ComparableTimSort: void mergeHi(int,int,int,int)>-><java.nio.CharBuffer: int compareTo(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><com.p6spy.engine.common.CustomHashedHashSet: java.util.Iterator iterator()>
<java.lang.ThreadLocal$SuppliedThreadLocal: java.lang.Object initialValue()>-><java.lang.reflect.WeakCache$Factory: java.lang.Object get()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.EnumMap: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><javax.print.MimeType$ParameterMapEntry: int hashCode()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<org.springframework.cglib.core.EmitUtils$4: void processCase(int,org.springframework.asm.Label)>-><com.google.common.base.Joiner$3: java.lang.Object get(int)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.mapping.model.Property: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.introspect.MemberKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.PropertyPermission: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.List resolveManagedList(java.lang.Object,java.util.List)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.p6spy.engine.logging.Category: java.lang.String toString()>
<org.springframework.util.CollectionUtils$MultiValueMapAdapter: java.util.Collection values()>-><java.util.Collections$UnmodifiableMap: java.util.Collection values()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Float: void <init>(float)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.SimpleType: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanNotificationInfo: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.codehaus.jackson.map.type.SimpleType: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.IdentityHashMap: int size()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFilteredFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<reactor.core.publisher.FluxIterable$IterableSubscription: boolean isEmpty()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><java.lang.reflect.Field: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.channel.nio.SelectedSelectionKeySet: int size()>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<reactor.core.publisher.FluxOnAssembly$AssemblySnapshot: java.lang.String toAssemblyInformation()>-><reactor.core.scheduler.ParallelScheduler: java.lang.Object get()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.auth.entity.BindUser: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.nio.CharBuffer: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.Double: java.lang.String toString()>
<java.util.ArrayList: boolean addAll(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.connection.util.ByteArrayWrapper: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><com.zaxxer.hikari.pool.HikariProxyConnection: java.sql.Statement createStatement()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONArray: int size()>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedByteFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.hibernate.validator.internal.util.annotation.AnnotationProxy: boolean equals(java.lang.Object)>
<java.util.concurrent.TimeUnit$4: long convert(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.TimeUnit$1: long toSeconds(long)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<java.time.format.DateTimeFormatter: java.time.format.DateTimeParseException createError(java.lang.CharSequence,java.lang.RuntimeException)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: boolean equals(java.lang.Object)>-><java.lang.Object: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyLeakTask: void schedule(java.util.concurrent.ScheduledExecutorService,long)>-><java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><java.util.LinkedList$ListItr: int previousIndex()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><io.netty.buffer.AbstractByteBuf: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.alibaba.fastjson.JSON: java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.HikariConfig: java.lang.String getSchema()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.reflect.Proxy$Key1: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariProxyConnection: void setSchema(java.lang.String)>-><com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: int hashCode()>
<com.zaxxer.hikari.HikariDataSource: int getLoginTimeout()>-><com.zaxxer.hikari.HikariDataSource: int getLoginTimeout()>
<com.zaxxer.hikari.util.ClockSource$NanosecondClockSource: long elapsedMillis0(long)>-><java.util.concurrent.TimeUnit$1: long toMillis(long)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.StringCharacterIterator: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.HttpParser: org.apache.tomcat.util.http.parser.SkipResult skipConstant(java.io.Reader,java.lang.String)>-><java.io.StringReader: void reset()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<org.apache.catalina.connector.Response: boolean doIsEncodeable(org.apache.catalina.Context,org.apache.catalina.connector.Request,org.apache.catalina.Session,java.lang.String)>-><java.lang.String: boolean startsWith(java.lang.String)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.subst.Token: boolean equals(java.lang.Object)>
<org.springframework.beans.DirectFieldAccessor$FieldPropertyHandler: void <init>(org.springframework.beans.DirectFieldAccessor,java.lang.reflect.Field)>-><java.lang.reflect.Field: java.lang.Class getType()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.nio.charset.Charset: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Double: void <init>(double)>
<org.springframework.aop.framework.AdvisedSupport: java.lang.String toString()>-><org.springframework.util.ClassUtils: java.lang.String classNamesToString(java.util.Collection)>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>-><org.apache.catalina.connector.Response$PrivilgedEncodeUrl: java.lang.Object run()>
<java.lang.reflect.Field: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.SimpleType: boolean equals(java.lang.Object)>
<java.util.LinkedHashSet: void <init>(java.util.Collection)>-><com.google.common.base.Joiner$3: int size()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ClockSource: java.lang.String elapsedDisplayString0(long,long)>-><java.lang.Enum: int ordinal()>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.IfPointcut: java.lang.String toString()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<java.util.SubList$1: int previousIndex()>-><java.util.AbstractList$ListItr: int previousIndex()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<org.aspectj.weaver.MemberImpl: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.Collections$UnmodifiableCollection: boolean remove(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.http.HttpHeaders: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.KeyFactory$Generator: void generateClass(org.springframework.asm.ClassVisitor)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.jar.Attributes$Name: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: java.lang.String getPath()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<java.util.Collections$SetFromMap: int size()>-><org.springframework.util.LinkedCaseInsensitiveMap: int size()>
<com.zaxxer.hikari.pool.ProxyDatabaseMetaData: java.lang.String toString()>-><java.lang.Object: java.lang.Class getClass()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.invoke.LambdaForm: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.stream.Nodes$IntFixedNodeBuilder: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.reflect.Parameter: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.jca.ProviderConfig: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><java.nio.CharBuffer: java.lang.String toString()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.UUID: boolean equals(java.lang.Object)>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putObject(java.lang.Object,long,java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: int getThreadsAwaitingConnection()>-><com.zaxxer.hikari.util.ConcurrentBag: int getWaitingThreadCount()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>-><java.util.concurrent.LinkedBlockingQueue$Itr: java.lang.Object next()>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.validation.ObjectError: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: int hashCode()>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<java.util.ComparableTimSort: int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int)>-><org.aspectj.weaver.MemberImpl: int compareTo(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.GenericBeanDefinition: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: boolean useWeakThreadLocals()>-><java.lang.System: java.lang.String getProperty(java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.support.MethodOverrides: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: void setReadOnly(boolean)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void setReadOnly(boolean)>
<org.apache.catalina.connector.OutputBuffer: int transfer(java.lang.String,int,int,java.nio.CharBuffer)>-><java.lang.Math: int min(int,int)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.reflect.annotation.TypeAnnotation: java.lang.String toString()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><io.netty.util.internal.RecyclableArrayList: boolean add(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFilteredFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.aop.support.annotation.AnnotationMatchingPointcut: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FormatCache$MultipartKey: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.core.AttributeAccessorSupport: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object previous()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.ProtectionDomain$WeakProtectionDomainKey: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.lang.ref.Reference: java.lang.Object get()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.IsolationLevel: com.zaxxer.hikari.util.IsolationLevel valueOf(java.lang.String)>-><java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Vector: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.mapping.model.Property: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<org.apache.catalina.connector.OutputBuffer: int transfer(java.lang.String,int,int,java.nio.CharBuffer)>-><java.nio.Buffer: int remaining()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.provider.approval.Approval: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.asm.ConstantDynamic: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<java.lang.reflect.Field: int hashCode()>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<com.zaxxer.hikari.pool.PoolEntry: void <init>(java.sql.Connection,com.zaxxer.hikari.pool.PoolBase,boolean,boolean)>-><java.lang.Object: void <init>()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: boolean remove(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$SingletonSet: java.util.Iterator iterator()>
<sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.springframework.util.ObjectUtils: boolean isEmpty(java.lang.Object)>-><java.nio.CharBuffer: int length()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><javax.management.openmbean.SimpleType: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<sun.text.normalizer.UCharacterProperty: sun.text.normalizer.UCharacterProperty getInstance()>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.BigIntegerNode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.misc.Signal: java.lang.String toString()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeCharacterFieldAccessorImpl: char getChar(java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<org.springframework.web.context.request.ServletRequestAttributes: java.lang.Object getAttribute(java.lang.String,int)>-><org.springframework.web.context.request.AbstractRequestAttributes: boolean isRequestActive()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.SubList: int size()>
<sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Short: short shortValue()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.AttributeEntry: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><java.lang.reflect.Field: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.C2BConverter: void <init>(java.nio.charset.Charset)>-><java.nio.CharBuffer: java.nio.CharBuffer wrap(char[])>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><java.nio.CharBuffer: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.provider.client.BaseClientDetails: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<org.aspectj.bridge.context.CompilationAndWeavingContext$DefaultFormatter: java.lang.String formatEntry(int,java.lang.Object)>-><java.lang.String: void <init>(char[])>
<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>-><java.util.concurrent.ArrayBlockingQueue: java.lang.Object[] toArray()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.EnumMap$KeySet: java.util.Iterator iterator()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.HikariConfig: java.lang.String getConnectionTestQuery()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.asm.Handle: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.Locale$LocaleKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.SocketPermission: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<java.sql.SQLTransientException: void <init>(java.lang.String)>-><java.sql.SQLException: void <init>(java.lang.String)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.framework.JdkDynamicAopProxy: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<com.zaxxer.hikari.HikariDataSource: void close()>-><java.lang.Thread: void interrupt()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanParameterInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.time.LocalDate: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.io.File: java.lang.String toString()>
<org.springframework.beans.DirectFieldAccessor$FieldPropertyHandler: void setValue(java.lang.Object)>-><java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.alibaba.fastjson.JSONArray: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.Collections$EmptyList: int size()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: boolean remove(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><com.zaxxer.hikari.pool.PoolEntry: boolean compareAndSet(int,int)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.AttributeAccessorSupport: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.PropertyElf: java.lang.Object getProperty(java.lang.String,java.lang.Object)>-><java.lang.String: java.lang.String substring(int)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.MethodType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.map.JsonMappingException: java.lang.String toString()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<org.aspectj.bridge.MessageUtil: java.lang.String addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)>-><java.io.PrintWriter: void println(java.lang.String)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.WithinPointcut: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><reactor.util.function.Tuple2: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><ch.qos.logback.core.UnsynchronizedAppenderBase: java.lang.String toString()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<org.springframework.security.web.util.matcher.OrRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isDependent(java.lang.String,java.lang.String,java.util.Set)>-><io.netty.channel.nio.SelectedSelectionKeySet: boolean contains(java.lang.Object)>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><org.apache.tomcat.util.buf.AbstractChunk: void setEnd(int)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.OptionalLong: java.lang.String toString()>
<java.util.concurrent.Semaphore: void acquireUninterruptibly()>-><java.util.concurrent.locks.AbstractQueuedSynchronizer: void acquireShared(int)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Character: char charValue()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.util.Collections: void reverse(java.util.List)>-><com.alibaba.fastjson.JSONArray: java.util.ListIterator listIterator(int)>
<com.zaxxer.hikari.pool.HikariPool: java.sql.SQLException createTimeoutException(long)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.commons.pool2.impl.BaseGenericObjectPool$IdentityWrapper: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.util.DerValue: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.serializer.JavaBeanSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<org.apache.catalina.connector.OutputBuffer: void realWriteChars(java.nio.CharBuffer)>-><org.apache.catalina.connector.OutputBuffer: void flushByteBuffer()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap$KeySetIterator: java.lang.Object next()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: java.util.Iterator iterator()>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveManagedArray(java.lang.Object,java.util.List,java.lang.Class)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setupConnection(java.sql.Connection)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void setSchema(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.util.Hashtable$Entry: java.lang.Object getValue()>
<com.zaxxer.hikari.pool.PoolBase$SynchronousExecutor: void <init>(com.zaxxer.hikari.pool.PoolBase$1)>-><com.zaxxer.hikari.pool.PoolBase$SynchronousExecutor: void <init>()>
<java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.UtilityElf: java.lang.Object createInstance(java.lang.String,java.lang.Class,java.lang.Object[])>-><java.lang.RuntimeException: void <init>(java.lang.Throwable)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.jar.Manifest: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.awt.image.DirectColorModel: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.management.openmbean.CompositeType: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector: java.util.Map _findFields(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.util.Map)>-><java.lang.reflect.Field: java.lang.annotation.Annotation[] getDeclaredAnnotations()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.base.Predicates$AndPredicate: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void setAutoCommit(boolean)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Collections$SingletonList: int size()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.security.provider.PolicyParser$PrincipalEntry: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.SocketPermission: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.provider.client.BaseClientDetails: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><org.bouncycastle.asn1.ASN1Exception: java.lang.Throwable getCause()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: java.lang.String toString()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<reactor.core.scheduler.ReactorThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<org.aspectj.bridge.SourceLocation: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getValue()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.AVA: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.time.format.DateTimeFormatter: java.time.format.DateTimeParseException createError(java.lang.CharSequence,java.lang.RuntimeException)>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.ModifiersPattern: java.lang.String toString()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.alibaba.fastjson.util.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: int hashCode()>
<java.util.ResourceBundle$Control$CandidateListCache: java.util.List createObject(sun.util.locale.BaseLocale)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<java.util.ComparableTimSort: int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int)>-><com.fasterxml.classmate.util.ClassKey: int compareTo(java.lang.Object)>
<reactor.core.publisher.FluxIterable$IterableSubscription: boolean isEmpty()>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Proxy$Key1: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.security.Provider: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.codehaus.jackson.node.ObjectNode: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariProxyConnection: int getNetworkTimeout()>-><com.zaxxer.hikari.pool.HikariProxyConnection: int getNetworkTimeout()>
<java.util.Collections: void reverse(java.util.List)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.lang.Object next()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object set(int,java.lang.Object)>-><java.util.concurrent.locks.ReentrantLock: void unlock()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><io.netty.buffer.PoolChunkList: java.lang.String toString()>
<java.util.concurrent.TimeUnit$1: long convert(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.TimeUnit$3: long toNanos(long)>
<com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.base.Joiner$3: int size()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.misc.Signal: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><com.alibaba.fastjson.JSONObject: int size()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildFullRequestUrl(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: void add(int,java.lang.Object)>-><java.util.concurrent.locks.ReentrantLock: void lock()>
<sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: long getLong(java.lang.Object)>
<java.sql.DriverManager: java.sql.Driver getDriver(java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object next()>
<org.apache.catalina.connector.OutputBuffer: void doFlush(boolean)>-><java.nio.Buffer: int remaining()>
<sun.reflect.UnsafeStaticShortFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeStaticShortFieldAccessorImpl: short getShort(java.lang.Object)>
<java.beans.Introspector: void processPropertyDescriptors()>-><com.google.common.base.Joiner$3: int size()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.aspectj.weaver.patterns.ThrowsPattern: int hashCode()>-><org.aspectj.weaver.patterns.TypePatternList: int hashCode()>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><com.zaxxer.hikari.pool.HikariPool: void destroyHouseKeepingExecutorService()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.core.publisher.SignalType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.SimpleTimeZone: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.apache.logging.log4j.spi.Provider: java.lang.String toString()>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.awt.image.ComponentColorModel: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><org.springframework.cglib.core.Signature: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Integer: int intValue()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.provider.PolicyParser$PrincipalEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.GmtTimeZone: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void logPoolState(java.lang.String[])>-><com.zaxxer.hikari.pool.HikariPool: int getThreadsAwaitingConnection()>
<com.fasterxml.jackson.databind.util.ClassUtil: java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.DecimalFormat: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><com.zaxxer.hikari.pool.PoolBase: void setNetworkTimeout(java.sql.Connection,long)>
<org.apache.catalina.connector.OutputBuffer: void doFlush(boolean)>-><org.apache.catalina.connector.OutputBuffer: void flushCharBuffer()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.framework.JdkDynamicAopProxy: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.CoyoteOutputStream: boolean checkNonBlockingWrite()>-><org.apache.catalina.connector.OutputBuffer: boolean isBlocking()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.Signature: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<sun.reflect.UnsafeByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void setCatalog(java.lang.String)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void beforePrototypeCreation(java.lang.String)>-><java.util.Collections$SynchronizedCollection: boolean add(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.Response: boolean isCommitted()>-><org.apache.catalina.connector.Response: org.apache.coyote.Response getCoyoteResponse()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.cert.Certificate: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><ch.qos.logback.core.joran.spi.ElementSelector: boolean equals(java.lang.Object)>
<org.aspectj.util.LangUtil: java.lang.StringBuffer stackToString(java.lang.Throwable,boolean)>-><java.io.StringWriter: java.lang.StringBuffer getBuffer()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: int hashCode()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.FieldPosition: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.cert.Certificate: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$Value: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.lettuce.core.masterslave.MasterSlaveConnectionProvider$ConnectionKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector: void _renameProperties(java.util.Map)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.zaxxer.hikari.HikariConfig: void validate()>-><org.slf4j.helpers.NOPLogger: boolean isDebugEnabled()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap$LinkedEntrySet: boolean contains(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.lang.ProcessEnvironment$StringKeySet: boolean isEmpty()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.net.HttpCookie: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><org.apache.ibatis.session.Configuration$StrictMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.AttributeAccessorSupport: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$SynchronizedMap: java.util.Set entrySet()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onBeforeCommit(com.p6spy.engine.common.ConnectionInformation)>-><com.p6spy.engine.event.JdbcEventListener: void onBeforeCommit(com.p6spy.engine.common.ConnectionInformation)>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnnotationPointcut: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolEntry: void recycle(long)>-><com.zaxxer.hikari.pool.HikariPool: void recycle(com.zaxxer.hikari.pool.PoolEntry)>
<java.util.Collections: void reverse(java.util.List)>-><java.util.Collections$SynchronizedCollection: int size()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ModifiersPattern: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<java.util.SubList$1: int previousIndex()>-><java.util.Vector$ListItr: int previousIndex()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.Collections$SetFromMap: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.repository.AbstractRepository: sun.reflect.generics.visitor.Reifier getReifier()>
<com.zaxxer.hikari.pool.PoolEntry: void <init>(java.sql.Connection,com.zaxxer.hikari.pool.PoolBase,boolean,boolean)>-><com.zaxxer.hikari.util.FastList: void <init>(java.lang.Class,int)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.boot.ansi.Ansi8BitColor: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: java.util.Iterator iterator()>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.node.ValueNode: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.node.ArrayNode: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.util.GenericArrayTypeImpl: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.cert.Certificate: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setNetworkTimeout(java.sql.Connection,long)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void setNetworkTimeout(java.util.concurrent.Executor,int)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.p6spy.engine.logging.Category: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.BaseLocale: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.KindedPointcut: java.lang.String toString()>-><org.aspectj.weaver.Shadow$Kind: java.lang.String getSimpleName()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: int hashCode()>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.IntNode: boolean equals(java.lang.Object)>
<java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask: long getDelay(java.util.concurrent.TimeUnit)>-><java.util.concurrent.TimeUnit$3: long convert(long,java.util.concurrent.TimeUnit)>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>-><org.aspectj.weaver.UnresolvedType: java.lang.String getName()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.HashMap$EntrySet: int size()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.ResourceBundle$CacheKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.beans.IndexedPropertyDescriptor: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><com.zaxxer.hikari.pool.PoolBase: java.lang.String stringFromResetBits(int)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><jdk.net.ExtendedSocketOptions$ExtSocketOption: java.lang.String toString()>
<org.apache.tomcat.util.http.parser.MediaType: java.lang.String toStringNoCharset()>-><java.util.LinkedHashMap$LinkedEntrySet: java.util.Iterator iterator()>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.aspectj.weaver.JoinPointSignature: int hashCode()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void setReadOnly(boolean)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(java.nio.CharBuffer,java.nio.ByteBuffer)>-><java.nio.Buffer: int limit()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.Collections$1: java.lang.Object next()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><io.netty.util.concurrent.DefaultPromise$LeanCancellationException: java.lang.String toString()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Short: short shortValue()>
<org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><java.nio.CharBuffer: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.codehaus.jackson.node.BinaryNode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getDependencyType()>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.JsonMappingException$Reference: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<org.codehaus.jackson.map.JsonMappingException: void _appendPathDesc(java.lang.StringBuilder)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putBooleanVolatile(java.lang.Object,long,boolean)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.apache.catalina.connector.OutputBuffer: void clear(java.nio.Buffer)>-><java.nio.Buffer: java.nio.Buffer rewind()>
<io.micrometer.core.instrument.Timer$Builder: io.micrometer.core.instrument.Timer$Builder tags(java.lang.Iterable)>-><io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags and(java.lang.Iterable)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.ResourceBundle$CacheKey: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.nio.CharBuffer: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Integer: int intValue()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.pool.PoolBase: void handleMBeans(com.zaxxer.hikari.pool.HikariPool,boolean)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Method: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariDataSource: boolean isClosed()>-><java.util.concurrent.atomic.AtomicBoolean: boolean get()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: java.lang.Object previous()>-><java.util.Vector$ListItr: java.lang.Object previous()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.sun.beans.WildcardTypeImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.buffer.AbstractByteBuf: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>
<io.netty.util.internal.shaded.org.jctools.util.UnsafeRefArrayAccess: java.lang.Object lvElement(java.lang.Object[],long)>-><sun.misc.Unsafe: java.lang.Object getObjectVolatile(java.lang.Object,long)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.StackTraceElement: boolean equals(java.lang.Object)>
<java.util.LinkedHashSet: void <init>(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter: org.springframework.security.oauth2.common.OAuth2AccessToken enhance(org.springframework.security.oauth2.common.OAuth2AccessToken,org.springframework.security.oauth2.provider.OAuth2Authentication)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><java.nio.CharBuffer: java.lang.String toString()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.Currency: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.bridge.MessageUtil: java.lang.String renderMessage(org.aspectj.bridge.IMessage,boolean)>-><java.util.Collections$UnmodifiableCollection: boolean isEmpty()>
<io.micrometer.core.instrument.Tags: void dedup()>-><java.lang.String: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.PropertyElf: void setTargetFromProperties(java.lang.Object,java.util.Properties)>-><java.util.Hashtable: void forEach(java.util.function.BiConsumer)>
<org.springframework.core.annotation.AnnotationTypeMapping: java.util.Map resolveAliasedForTargets()>-><java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<com.zaxxer.hikari.util.PropertyElf: java.lang.Object getProperty(java.lang.String,java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<java.nio.CharBuffer: int compareTo(java.nio.CharBuffer)>-><java.nio.CharBuffer: int compare(char,char)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.YearMonth: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<org.springframework.web.util.pattern.CaptureTheRestPathElement: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.zaxxer.hikari.util.PropertyElf: java.util.Properties copyProperties(java.util.Properties)>-><java.util.Hashtable: void forEach(java.util.function.BiConsumer)>
<sun.reflect.UnsafeFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Integer: int intValue()>
<java.util.stream.ReferencePipeline$11$1: void accept(java.lang.Object)>-><java.util.stream.Nodes$FixedNodeBuilder: void accept(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.zone.ZoneOffsetTransitionRule: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.buffer.AbstractByteBuf: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.hibernate.validator.internal.util.annotation.AnnotationProxy: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setupConnection(java.sql.Connection)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void setTransactionIsolation(int)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.apache.tomcat.util.buf.AbstractChunk: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Collections$SynchronizedList: java.lang.Object get(int)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.map.introspect.POJOPropertyBuilder: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.security.provider.PolicyFile$SelfPermission: java.lang.String toString()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>
<com.fasterxml.classmate.ResolvedType: java.lang.StringBuilder _appendClassDescription(java.lang.StringBuilder)>-><com.fasterxml.classmate.TypeBindings: int size()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeStaticIntegerFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.codehaus.jackson.io.SerializedString: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.sun.jmx.mbeanserver.WeakIdentityHashMap$IdentityWeakReference: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.UtilityElf: java.lang.Object createInstance(java.lang.String,java.lang.Class,java.lang.Object[])>-><java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>
<org.apache.tomcat.util.http.parser.MediaTypeCache: java.lang.String[] parse(java.lang.String)>-><java.io.StringReader: void <init>(java.lang.String)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.web.util.pattern.SeparatorPathElement: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: void clear()>-><java.util.concurrent.locks.ReentrantLock: void lock()>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Float: float floatValue()>
<org.springframework.expression.spel.support.ReflectivePropertyAccessor$OptimalPropertyAccessor: void generateCode(java.lang.String,org.springframework.asm.MethodVisitor,org.springframework.expression.spel.CodeFlow)>-><java.lang.reflect.Field: java.lang.Class getType()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.ResolvableType: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.SimpleTimeZone: java.lang.String toString()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>
<org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.ThrowsPattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypePatternList: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><org.springframework.security.authentication.AbstractAuthenticationToken: boolean isAuthenticated()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Optional: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.Pair: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.management.openmbean.SimpleType: java.lang.String toString()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker: void <init>(java.lang.String,com.zaxxer.hikari.metrics.PoolStats,io.micrometer.core.instrument.MeterRegistry)>-><io.micrometer.core.instrument.Timer: io.micrometer.core.instrument.Timer$Builder builder(java.lang.String)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.springframework.security.web.session.SessionManagementFilter: void doFilter_6e2706f15827e92bd664b1b31c22316e(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><synthetic.method.SingletonFactory: cc.mrbird.febs.common.security.starter.handler.FebsAuthExceptionEntryPoint getAuthenticationEntryPoint()>
<com.zaxxer.hikari.pool.ProxyConnection: java.sql.Statement trackStatement(java.sql.Statement)>-><com.zaxxer.hikari.util.FastList: boolean add(java.lang.Object)>
<org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.net.InetSocketAddress: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: float getFloat(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.authentication.RememberMeAuthenticationToken: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Locale: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><java.nio.CharBuffer: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.SimpleTimeZone: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.EnumMap: java.lang.Object get(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.concurrent.LinkedBlockingQueue: void fullyUnlock()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><com.zaxxer.hikari.HikariConfig: long getInitializationFailTimeout()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.codehaus.jackson.node.BooleanNode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<sun.reflect.UnsafeStaticCharacterFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><sun.reflect.UnsafeStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<org.apache.catalina.connector.Response: boolean doIsEncodeable(org.apache.catalina.Context,org.apache.catalina.connector.Request,org.apache.catalina.Session,java.lang.String)>-><java.net.URL: java.lang.String getFile()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: java.lang.Object previous()>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object previous()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><ch.qos.logback.core.joran.spi.ConsoleTarget: java.lang.String toString()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.IfPointcut: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String toString()>-><java.lang.reflect.Field: java.lang.String getName()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.core.env.AbstractEnvironment: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><java.lang.reflect.Field: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<org.hibernate.validator.internal.util.StringHelper: java.lang.String toShortString(java.lang.reflect.Type)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$StringValues: boolean equals(java.lang.Object)>
<org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.time.LocalTime: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.support.AbstractPointcutAdvisor: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.OutputBuffer: void realWriteBytes(java.nio.ByteBuffer)>-><org.apache.catalina.connector.ClientAbortException: void <init>(java.lang.Throwable)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.node.BaseJsonNode: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.asm.Handle: java.lang.String toString()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<org.aspectj.util.LangUtil: java.lang.StringBuffer stackToString(java.lang.Throwable,boolean)>-><java.io.StringWriter: void close()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: void <init>(com.zaxxer.hikari.util.ConcurrentBag$IBagStateListener)>-><java.util.concurrent.atomic.AtomicInteger: void <init>()>
<sun.reflect.UnsafeShortFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeShortFieldAccessorImpl: short getShort(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyStatement: void close()>-><com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.asm.Type: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.Extension: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$SetFromMap: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Vector$1: java.lang.Object nextElement()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.OffsetDateTime: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.nio.charset.Charset: java.lang.String toString()>
<ch.qos.logback.core.util.StatusListenerConfigHelper: ch.qos.logback.core.status.StatusListener createListenerPerClassName(ch.qos.logback.core.Context,java.lang.String)>-><org.aspectj.bridge.AbortException: void printStackTrace()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.CflowPointcut: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><java.nio.Buffer: int limit()>
<com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void serializeDynamic(java.util.Map$Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.text.AttributeEntry: java.lang.Object getValue()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<com.zaxxer.hikari.pool.HikariProxyConnection: void abort(java.util.concurrent.Executor)>-><com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>
<org.apache.catalina.connector.Response$PrivilgedEncodeUrl: org.apache.tomcat.util.buf.CharChunk run()>-><org.apache.tomcat.util.buf.UEncoder: org.apache.tomcat.util.buf.CharChunk encodeURL(java.lang.String,int,int)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.util.MimeType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.stream.StreamSpliterators$AbstractWrappingSpliterator: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.Hashtable: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.Semaphore: java.lang.String toString()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.text.DigitList: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.StackTraceElement: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: java.lang.Boolean call()>-><java.lang.Math: long min(long,long)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: int hashCode()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: org.aspectj.weaver.UnresolvedType getDeclaringType()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.ObjectNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: void <init>()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><jdk.net.ExtendedSocketOptions$ExtSocketOption: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.core.publisher.SignalType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanConstructorInfo: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.Long getParentId()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.io.FilePermission: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$SetFromMap: boolean equals(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: int hashCode()>
<com.p6spy.engine.wrapper.ConnectionWrapper: void commit()>-><java.lang.System: long nanoTime()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.asm.Type: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.WithinCodeAnnotationPointcut: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Vector: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><java.util.concurrent.ThreadPoolExecutor$DiscardPolicy: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.springframework.security.core.userdetails.User: int hashCode()>-><java.lang.String: int hashCode()>
<org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.io.SerializedString: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.format.DateTimeFormatterBuilder$InstantPrinterParser: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.connection.RedisNode: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String getStatus()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Double: double doubleValue()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.IterableSerializer: boolean hasSingleElement(java.lang.Iterable)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.cglib.core.CollectionUtils: java.util.Map bucket(java.util.Collection,org.springframework.cglib.core.Transformer)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.UUID: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.TreeMap$Entry: java.lang.Object getKey()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><ch.qos.logback.core.joran.spi.ElementSelector: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setupConnection(java.sql.Connection)>-><com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><ch.qos.logback.classic.Logger: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Locale$LocaleKey: boolean equals(java.lang.Object)>
<java.util.ComparableTimSort: void mergeLo(int,int,int,int)>-><org.aspectj.weaver.JoinPointSignature: int compareTo(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><org.springframework.core.io.buffer.LimitedDataBufferList: boolean add(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.slf4j.event.Level: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.MessageFormat: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorImpl: java.lang.String getSetMessage(java.lang.String,java.lang.String)>-><java.lang.reflect.Field: int getModifiers()>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.AbstractList: java.lang.Object remove(int)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.HashMap$Node: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object[])>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.provider.PolicyParser$PermissionEntry: boolean equals(java.lang.Object)>
<org.aspectj.util.LangUtil: java.lang.String renderExceptionShort(java.lang.Throwable)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.CompletableFuture: java.lang.String toString()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.NullBean: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><com.p6spy.engine.common.CustomHashedHashSet: boolean remove(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.Color: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ListSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.Thread$WeakClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.DecimalNode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>
<com.fasterxml.jackson.databind.ser.std.IterableSerializer: boolean hasSingleElement(java.lang.Iterable)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ReduceOps$2ReducingSink: void accept(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.security.x509.Extension: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotAnnotationTypePattern: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.String toString()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeStaticByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<javax.xml.datatype.DatatypeConfigurationException: void printStackTrace0(java.io.PrintWriter)>-><org.aspectj.weaver.BCException: void printStackTrace(java.io.PrintWriter)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.format.support.FormattingConversionService$AnnotationConverterKey: boolean equals(java.lang.Object)>
<org.springframework.aop.framework.AopProxyUtils: boolean equalsInProxy(org.springframework.aop.framework.AdvisedSupport,org.springframework.aop.framework.AdvisedSupport)>-><org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JavaBeanSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.concurrent.locks.ReentrantLock: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Class: boolean isAssignableFrom(java.lang.Class)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><java.nio.CharBuffer: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.Locale: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void beforePrototypeCreation(java.lang.String)>-><com.p6spy.engine.common.CustomHashedHashSet: boolean add(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$1: java.lang.Object next()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.Collections$SynchronizedCollection: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><io.netty.buffer.SwappedByteBuf: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<com.zaxxer.hikari.util.PropertyElf: java.util.Set getPropertyNames(java.lang.Class)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.reflect.WeakCache$CacheKey: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.RuntimeBeanReference: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeStaticCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.AbstractSet: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.Integer: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void logPoolState(java.lang.String[])>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object[])>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.DoubleNode: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.netty.channel.nio.SelectedSelectionKeySet: int size()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><javax.xml.bind.JAXBException: java.lang.String toString()>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: void registerContainedBean(java.lang.String,java.lang.String)>-><io.netty.channel.nio.SelectedSelectionKeySet: boolean add(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.AbstractCollection: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.apache.catalina.connector.OutputBuffer: void flushCharBuffer()>-><java.nio.HeapCharBuffer: java.nio.CharBuffer slice()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><jdk.internal.org.xml.sax.SAXException: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.core.scheduler.DelegateServiceScheduler$UnsupportedScheduledExecutorService: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<org.apache.catalina.connector.OutputBuffer: void flushByteBuffer()>-><org.apache.catalina.connector.OutputBuffer: void realWriteBytes(java.nio.ByteBuffer)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><reactor.util.function.Tuple2: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList: java.lang.Object get(int)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getValue()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><ch.qos.logback.core.subst.Node: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$Value: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.RegularEnumSet: int size()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.URI: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.ChoiceFormat: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><io.netty.buffer.PoolChunk: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.web.context.support.WebApplicationContextUtils$RequestObjectFactory: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFilteredFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Collections$EmptyList: java.lang.Object get(int)>
<org.aspectj.util.LangUtil: void elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)>-><java.lang.String: int length()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>
<java.util.Hashtable: java.lang.String toString()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><javax.management.openmbean.TabularDataSupport: java.lang.Object get(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.p6spy.engine.logging.Category: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.sun.beans.WildcardTypeImpl: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.io.ObjectStreamClass: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Short: short shortValue()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.RDN: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><cn.hutool.core.io.resource.UrlResource: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: boolean containsAll(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.Collections$SynchronizedMap: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><com.zaxxer.hikari.util.ClockSource: long currentTime()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<com.zaxxer.hikari.HikariConfig: void validate()>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeStaticBooleanFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.awt.image.ColorModel: java.lang.String toString()>
<java.util.concurrent.ScheduledThreadPoolExecutor: long overflowFree(long)>-><org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore$TokenExpiry: long getDelay(java.util.concurrent.TimeUnit)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: java.util.List values(int)>-><java.util.Collections: void reverse(java.util.List)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.AbstractMap$1: boolean isEmpty()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.YearMonth: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.BigIntegerNode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Period: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: float getFloat(java.lang.Object)>-><sun.misc.Unsafe: float getFloatVolatile(java.lang.Object,long)>
<org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>-><java.lang.Boolean: void <init>(boolean)>
<org.apache.logging.log4j.message.ParameterFormatter: void appendCollection(java.lang.Object,java.lang.StringBuilder,java.util.Set)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.security.oauth2.provider.client.BaseClientDetails: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl$ClassIndexWrapper: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: java.util.Spliterator spliterator()>-><java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void <init>(java.util.concurrent.LinkedBlockingQueue)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.management.MBeanNotificationInfo: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.Pair: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.data.redis.listener.PatternTopic: java.lang.String toString()>
<org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.ImmutableDescriptor: boolean equals(java.lang.Object)>
<java.lang.ThreadLocal$SuppliedThreadLocal: java.lang.Object initialValue()>-><java.util.stream.ReduceOps$2ReducingSink: java.lang.Object get()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><java.nio.charset.CoderResult: boolean isError()>
<com.alibaba.fastjson.JSONObject: java.lang.Object put(java.lang.String,java.lang.Object)>-><org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<sun.reflect.UnsafeLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Short: short shortValue()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.security.Provider$UString: boolean equals(java.lang.Object)>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.tree.ArrayTypeSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.invoke.InvokerBytecodeGenerator$CpPatch: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><reactor.core.publisher.FluxOnAssembly$OnAssemblyException: java.lang.String getMessage()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.text.StringCharacterIterator: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Constructor: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariDataSource: java.sql.Connection getConnection()>-><com.zaxxer.hikari.HikariDataSource: boolean isClosed()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Field: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.core.env.PropertySource: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.status.StatusBase: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.BitSet: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>-><com.zaxxer.hikari.pool.PoolEntry: void evict(java.lang.String)>
<org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<io.micrometer.core.instrument.Timer$Builder: void <init>(java.lang.String)>-><java.time.Duration: java.time.Duration ofMillis(long)>
<com.zaxxer.hikari.pool.ProxyConnection: void close()>-><com.zaxxer.hikari.util.ClockSource: long currentTime()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.temporal.IsoFields$Field$3: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onBeforeRollback(com.p6spy.engine.common.ConnectionInformation)>-><java.util.ArrayList$Itr: boolean hasNext()>
<io.micrometer.core.instrument.Timer$Builder: io.micrometer.core.instrument.Timer$Builder tags(java.lang.String[])>-><io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags of(java.lang.String[])>
<org.aspectj.weaver.patterns.CflowPointcut: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.util.MimeType: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<org.aspectj.weaver.UnresolvedType: java.lang.String signatureToName(java.lang.String)>-><org.aspectj.weaver.UnresolvedType: java.lang.String signatureToName(java.lang.String)>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildRequestUrl(javax.servlet.http.HttpServletRequest)>-><org.springframework.security.web.firewall.RequestWrapper: java.lang.String getServletPath()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags of(java.lang.Iterable)>-><io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags empty()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.nio.charset.Charset: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.URI: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><com.zaxxer.hikari.util.ConcurrentBag: boolean remove(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>
<org.springframework.http.HttpHeaders: java.lang.String formatHeaders(org.springframework.util.MultiValueMap)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.stream.Stream stream()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.util.calendar.LocalGregorianCalendar$Date: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.OptionalLong: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.CodeGenerationException: void <init>(java.lang.Throwable)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.aspectj.weaver.MemberImpl: int hashCode()>
<com.alibaba.fastjson.serializer.ListSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><java.nio.CharBuffer: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.io.ObjectStreamClass$FieldReflectorKey: boolean equals(java.lang.Object)>
<java.time.format.DateTimeFormatterBuilder$2: int compare(java.lang.Object,java.lang.Object)>-><java.time.format.DateTimeFormatterBuilder$2: int compare(java.lang.String,java.lang.String)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.security.web.DefaultSecurityFilterChain: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: void <init>(com.zaxxer.hikari.util.ConcurrentBag$IBagStateListener)>-><java.util.concurrent.CopyOnWriteArrayList: void <init>()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<java.util.AbstractCollection: boolean isEmpty()>-><io.micrometer.shaded.org.pcollections.ConsPStack: int size()>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<java.util.stream.ReferencePipeline$11$1: void accept(java.lang.Object)>-><java.util.stream.ReferencePipeline$3$1: void accept(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.core.MethodParameter: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.HikariConfig: long getConnectionTimeout()>
<org.aspectj.bridge.MessageUtil: java.lang.String renderMessage(org.aspectj.bridge.IMessage,boolean)>-><org.aspectj.bridge.Message: org.aspectj.bridge.IMessage$Kind getKind()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><java.lang.reflect.Field: java.lang.String toString()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: int hashCode()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.zone.ZoneRules: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.AllPermission: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.UtilityElf: java.lang.Object createInstance(java.lang.String,java.lang.Class,java.lang.Object[])>-><java.lang.Class: java.lang.ClassLoader getClassLoader()>
<org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: int hashCode()>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.Object: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.aspectj.util.LangUtil: void elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)>-><java.lang.StringBuffer: void setLength(int)>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<com.google.common.collect.AbstractMapBasedMultimap: void removeValuesForKey(java.lang.Object)>-><com.google.common.base.Joiner$3: int size()>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$SynchronizedMap: int size()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><com.zaxxer.hikari.pool.ProxyDatabaseMetaData: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.core.publisher.MonoOnAssembly: java.lang.String toString()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.util.UtilityElf: int getTransactionIsolation(java.lang.String)>
<org.springframework.expression.spel.ast.Indexer: void generateCode(org.springframework.asm.MethodVisitor,org.springframework.expression.spel.CodeFlow)>-><java.lang.reflect.Field: int getModifiers()>
<com.zaxxer.hikari.pool.HikariProxyStatement: void <init>(com.zaxxer.hikari.pool.ProxyConnection,java.sql.Statement)>-><com.zaxxer.hikari.pool.ProxyStatement: void <init>(com.zaxxer.hikari.pool.ProxyConnection,java.sql.Statement)>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.text.SimpleDateFormat: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.lettuce.core.internal.AbstractInvocationHandler: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: int hashCode()>
<org.springframework.context.support.ApplicationContextAwareProcessor: void invokeAwareInterfaces(java.lang.Object)>-><org.springframework.web.filter.GenericFilterBean: void setEnvironment(org.springframework.core.env.Environment)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildFullRequestUrl(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.bouncycastle.asn1.DERGeneralString: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.web.context.request.ServletWebRequest: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.data.redis.listener.PatternTopic: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.POJONode: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.Integer: boolean equals(java.lang.Object)>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object remove(int)>-><java.util.concurrent.locks.ReentrantLock: void lock()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>
<com.sun.jmx.mbeanserver.JmxMBeanServer$3: com.sun.jmx.mbeanserver.ModifiableClassLoaderRepository run()>-><com.sun.jmx.mbeanserver.MBeanInstantiator: com.sun.jmx.mbeanserver.ModifiableClassLoaderRepository getClassLoaderRepository()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void setMetricRegistry(java.lang.Object)>-><com.zaxxer.hikari.metrics.dropwizard.CodahaleMetricsTrackerFactory: void <init>(com.codahale.metrics.MetricRegistry)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>
<org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: org.aspectj.weaver.MemberKind getKind()>
<org.aspectj.weaver.patterns.TypePatternList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.invoke.LambdaFormEditor$Transform: java.lang.String toString()>
<java.util.concurrent.FutureTask: boolean runAndReset()>-><com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: java.lang.Object call()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<com.zaxxer.hikari.HikariConfig: java.lang.String generatePoolName()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>-><javax.print.MimeType$ParameterMapEntry: void <init>(javax.print.MimeType,int)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.calendar.CalendarDate: boolean equals(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.springframework.security.web.FilterInvocation: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><java.util.jar.Attributes: int size()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: java.lang.String getPath()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.security.web.FilterChainProxy$VirtualFilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>-><org.springframework.security.web.FilterChainProxy: org.apache.commons.logging.Log access$200()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: int hashCode()>
<com.google.common.collect.TransformedIterator: boolean hasNext()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<org.apache.catalina.connector.CoyoteOutputStream: void write(byte[],int,int)>-><org.apache.catalina.connector.CoyoteOutputStream: void checkRegisterForWrite()>
<java.sql.DriverManager: java.sql.Driver getDriver(java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.reflect.Field: java.lang.String toString()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void appendMap(java.lang.Object,java.lang.StringBuilder,java.util.Set)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.std.IterableSerializer: boolean hasSingleElement(java.lang.Iterable)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.zaxxer.hikari.pool.PoolBase: void setupConnection(java.sql.Connection)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void setTransactionIsolation(int)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.format.DateTimeFormatterBuilder$CharLiteralPrinterParser: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><java.lang.reflect.Field: java.lang.String toString()>
<java.util.ComparableTimSort: int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int)>-><java.nio.CharBuffer: int compareTo(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.TreeSet: java.util.Iterator iterator()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.alibaba.fastjson.util.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><java.lang.reflect.Field: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.security.CodeSource: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.codehaus.jackson.node.BigIntegerNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<io.micrometer.core.instrument.Tag: int compareTo(java.lang.Object)>-><io.micrometer.core.instrument.Tag: int compareTo(io.micrometer.core.instrument.Tag)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.time.zone.ZoneRules: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.chrono.AbstractChronology: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.CharChunk: void flushBuffer()>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<java.util.HashSet: void <init>(java.util.Collection)>-><com.google.common.base.Joiner$3: int size()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.EnumMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.io.ObjectStreamClass$WeakClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><reactor.util.function.Tuple4: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<org.springframework.util.ClassUtils: java.lang.String classNamesToString(java.util.Collection)>-><java.util.ArrayList: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.AttributeEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<java.text.AttributeEntry: java.lang.String toString()>-><java.lang.reflect.Field: java.lang.String toString()>
<org.springframework.cglib.core.CollectionUtils: java.util.Map bucket(java.util.Collection,org.springframework.cglib.core.Transformer)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.security.provider.PolicyParser$DomainEntry: java.lang.String toString()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: void clear()>-><java.util.concurrent.locks.ReentrantLock: void unlock()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedList: java.lang.Object get(int)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.hibernate.validator.internal.util.annotation.AnnotationProxy: boolean equals(java.lang.Object)>
<java.io.PrintWriter: void newLine()>-><org.apache.catalina.connector.OutputBuffer: void write(java.lang.String)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.InetSocketAddress: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.classic.spi.ClassPackagingData: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.map.JsonMappingException$Reference: java.lang.String toString()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.CodeSigner: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.ObjectName: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: int previousIndex()>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: int previousIndex()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><reactor.util.function.Tuple2: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.jca.ProviderConfig: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<java.util.Vector$ListItr: java.lang.Object previous()>-><java.util.NoSuchElementException: void <init>()>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.classic.spi.ClassPackagingData: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.calendar.CalendarDate: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.alibaba.fastjson.JSONObject: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.ClassInfo: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.Formatter$FormatSpecifier: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap$KeySet: boolean remove(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><io.netty.util.concurrent.DefaultPromise: java.lang.String toString()>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.util.calendar.CalendarDate: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<com.zaxxer.hikari.util.UtilityElf: java.util.concurrent.ThreadPoolExecutor createThreadPoolExecutor(int,java.lang.String,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)>-><java.util.concurrent.ThreadPoolExecutor: void allowCoreThreadTimeOut(boolean)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: void <init>(com.zaxxer.hikari.util.ConcurrentBag$IBagStateListener)>-><java.util.concurrent.SynchronousQueue: void <init>(boolean)>
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<com.google.common.collect.TransformedIterator: java.lang.Object next()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.type.SimpleType: java.lang.String toString()>
<com.alibaba.fastjson.serializer.MiscCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.MapSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<sun.reflect.UnsafeByteFieldAccessorImpl: byte getByte(java.lang.Object)>-><sun.misc.Unsafe: byte getByte(java.lang.Object,long)>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.format.support.FormattingConversionService$AnnotationParserConverter: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.data.redis.connection.RedisPassword: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.alibaba.fastjson.JSONObject: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.UEncoder: org.apache.tomcat.util.buf.CharChunk encodeURL(java.lang.String,int,int)>-><org.apache.tomcat.util.buf.ByteChunk: void <init>(int)>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><com.google.common.base.Joiner$3: int size()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<java.lang.reflect.WeakCache: java.lang.Object get(java.lang.Object,java.lang.Object)>-><reactor.core.scheduler.ParallelScheduler: java.lang.Object get()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.imageio.ImageTypeSpecifier: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariDataSource: void setLoginTimeout(int)>-><com.zaxxer.hikari.HikariDataSource: void setLoginTimeout(int)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.MessageFormat: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.Provider$ServiceKey: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<java.util.concurrent.CopyOnWriteArrayList: void removeRange(int,int)>-><java.lang.IndexOutOfBoundsException: void <init>()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.pool.PoolEntry createPoolEntry()>
<sun.reflect.UnsafeStaticByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.io.ObjectStreamField: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<org.aspectj.bridge.MessageUtil: java.lang.String addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Year: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticCharacterFieldAccessorImpl: char getChar(java.lang.Object)>-><sun.misc.Unsafe: char getChar(java.lang.Object,long)>
<com.zaxxer.hikari.util.ClockSource: long elapsedMillis(long,long)>-><com.zaxxer.hikari.util.ClockSource$NanosecondClockSource: long elapsedMillis0(long,long)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.NotAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.util.locale.provider.RuleBasedBreakIterator: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.aspectj.weaver.MemberImpl: int hashCode()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyConnection: void setNetworkTimeout(java.util.concurrent.Executor,int)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void setNetworkTimeout(java.util.concurrent.Executor,int)>
<java.util.TreeMap$Entry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: void removeRange(int,int)>-><java.util.concurrent.locks.ReentrantLock: void lock()>
<com.zaxxer.hikari.pool.ProxyConnection: void close()>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.alibaba.fastjson.util.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl: int getInt(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray()>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.data.util.TypeVariableTypeInformation: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.subst.Node: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.invoke.MemberName: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue$Itr: void <init>(java.util.concurrent.LinkedBlockingQueue)>-><java.util.concurrent.LinkedBlockingQueue: void fullyLock()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><java.nio.file.FileSystemException: java.lang.String getMessage()>
<java.util.concurrent.ThreadLocalRandom: long nextLong(long)>-><java.util.concurrent.ThreadLocalRandom: long nextSeed()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.bouncycastle.asn1.ASN1Integer: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.OffsetTime: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: void validate()>-><ch.qos.logback.classic.Logger: boolean isDebugEnabled()>
<cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.util.Date getLastLoginTime()>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><com.zaxxer.hikari.pool.PoolBase: void handleMBeans(com.zaxxer.hikari.pool.HikariPool,boolean)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.time.ZoneOffset: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.OutputBuffer: int transfer(java.lang.String,int,int,java.nio.CharBuffer)>-><org.apache.catalina.connector.OutputBuffer: void toWriteMode(java.nio.Buffer)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.Throwable: java.lang.String toString()>
<org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.POJONode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setNetworkTimeout(java.sql.Connection,long)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void setNetworkTimeout(java.util.concurrent.Executor,int)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorImpl: java.lang.String getSetMessage(java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><org.springframework.http.ReadOnlyHttpHeaders: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: java.lang.String toString()>
<org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.validation.FieldError: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: boolean hasNext()>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>
<org.aspectj.weaver.MemberImpl: int compareTo(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: int compareTo(org.aspectj.weaver.Member)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.invoke.LambdaForm: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$EntrySet: boolean contains(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.channel.nio.SelectedSelectionKeySet: int size()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.nio.CharBuffer: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><io.netty.channel.nio.SelectedSelectionKeySet: int size()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<org.apache.catalina.connector.Response$PrivilegedDoIsEncodable: java.lang.Object run()>-><org.apache.catalina.connector.Response$PrivilegedDoIsEncodable: java.lang.Boolean run()>
<org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Field: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Locale: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArraySet: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.UtilityElf: int getTransactionIsolation(java.lang.String)>-><com.zaxxer.hikari.util.IsolationLevel: com.zaxxer.hikari.util.IsolationLevel[] values()>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><com.zaxxer.hikari.HikariDataSource: java.sql.Connection getConnection()>
<java.util.Collections$UnmodifiableList$1: java.lang.Object previous()>-><java.util.ArrayList$SubList$1: java.lang.Object previous()>
<java.io.PrintWriter: void write(java.lang.String,int,int)>-><org.apache.catalina.connector.OutputBuffer: void write(java.lang.String,int,int)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>-><java.lang.Object: int hashCode()>
<com.zaxxer.hikari.pool.PoolEntry: java.sql.Connection close()>-><java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask: boolean cancel(boolean)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Instant: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.HttpParser: java.lang.String unquote(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.util.PropertyElf: java.lang.Object getProperty(java.lang.String,java.lang.Object)>-><java.lang.String: java.lang.String substring(int,int)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void appendMap(java.lang.Object,java.lang.StringBuilder,java.util.Set)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean isEmpty()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<java.time.format.DateTimeFormatterBuilder$ZoneTextPrinterParser: java.lang.String getDisplayName(java.lang.String,int,java.util.Locale)>-><org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Proxy$KeyX: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.context.support.ApplicationListenerDetector: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.concurrent.CopyOnWriteArraySet: boolean isEmpty()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.asm.Type: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.management.MBeanAttributeInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl: short getShort(java.lang.Object)>-><sun.misc.Unsafe: short getShortVolatile(java.lang.Object,long)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.util.calendar.Era: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFilteredFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<java.lang.reflect.Field: sun.reflect.generics.repository.FieldRepository getGenericInfo()>-><java.lang.reflect.Field: java.lang.String getGenericSignature()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<javax.xml.parsers.FactoryConfigurationError: java.lang.String getMessage()>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.BaseLocale$Key: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean add(java.lang.Object)>-><com.google.common.base.Joiner$3: int size()>
<java.lang.Object: java.lang.String toString()>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: int hashCode()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<org.springframework.core.convert.support.GenericConversionService$ConvertersForPair: org.springframework.core.convert.converter.GenericConverter getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.validation.DataBinder: org.springframework.validation.AbstractPropertyBindingResult createBeanPropertyBindingResult()>-><org.springframework.validation.AbstractBindingResult: void setMessageCodesResolver(org.springframework.validation.MessageCodesResolver)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.boot.ansi.Ansi8BitColor: java.lang.String toString()>
<java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>-><java.lang.Object: java.lang.Class getClass()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<org.aspectj.weaver.UnresolvedType: java.lang.String signatureToName(java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.aspectj.bridge.MessageUtil: java.lang.String addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.text.AttributedCharacterIterator$Attribute: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.HashMap$Node: java.lang.Object getValue()>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.pool.HikariPool: void setHealthCheckRegistry(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.context.support.ApplicationListenerDetector: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.time.OffsetTime: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<sun.reflect.UnsafeByteFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><sun.reflect.UnsafeFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.invoke.InvokerBytecodeGenerator$CpPatch: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object set(int,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.GeneralName: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.subst.Node: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.lang.reflect.Field: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><java.lang.reflect.Field: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><javax.management.openmbean.TabularDataSupport: java.lang.Object put(java.lang.Object,java.lang.Object)>
<sun.reflect.UnsafeStaticBooleanFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Boolean: void <init>(boolean)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.jar.Attributes: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<com.zaxxer.hikari.pool.HikariPool: int getActiveConnections()>-><com.zaxxer.hikari.util.ConcurrentBag: int getCount(int)>
<io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags of(java.lang.Iterable)>-><io.micrometer.core.instrument.Tags: void <init>(io.micrometer.core.instrument.Tag[])>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><io.netty.buffer.AbstractByteBufAllocator: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.core.convert.support.GenericConversionService: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.pool.PoolEntry createPoolEntry()>-><java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticShortFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Short: void <init>(short)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.logging.log4j.Level: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.FieldPosition: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.HttpParser: java.lang.String readToken(java.io.Reader)>-><java.lang.StringBuilder: int length()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.nio.ByteBuffer: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$EmptySet: java.util.Iterator iterator()>
<org.aspectj.bridge.context.CompilationAndWeavingContext: java.lang.String getCurrentContext()>-><java.lang.String: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool$HouseKeeper: void <init>(com.zaxxer.hikari.pool.HikariPool)>-><com.zaxxer.hikari.pool.HikariPool: long access$400(com.zaxxer.hikari.pool.HikariPool)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$StringValues: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<sun.reflect.UnsafeStaticShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putShort(java.lang.Object,long,short)>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap: java.util.Iterator iteratorOrListIterator(java.util.Collection)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Vector: java.lang.String toString()>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><org.springframework.http.HttpHeaders: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><javax.management.openmbean.ArrayType: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.Character$Subset: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean equals(java.lang.Object)>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.MutablePropertyValues: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.EmitUtils: void member_helper_type(org.springframework.cglib.core.CodeEmitter,java.util.List,org.springframework.cglib.core.ObjectSwitchCallback,org.springframework.cglib.core.EmitUtils$ParameterTyper,org.springframework.asm.Label,org.springframework.asm.Label,java.util.BitSet)>-><com.google.common.base.Joiner$3: int size()>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onAfterSetAutoCommit(com.p6spy.engine.common.ConnectionInformation,boolean,boolean,java.sql.SQLException)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.validation.AbstractPropertyBindingResult: void initConversion(org.springframework.core.convert.ConversionService)>-><org.springframework.validation.BeanPropertyBindingResult: org.springframework.beans.ConfigurablePropertyAccessor getPropertyAccessor()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.Collections$UnmodifiableCollection: int size()>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onBeforeSetAutoCommit(com.p6spy.engine.common.ConnectionInformation,boolean,boolean)>-><com.p6spy.engine.event.JdbcEventListener: void onBeforeSetAutoCommit(com.p6spy.engine.common.ConnectionInformation,boolean,boolean)>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: void add(int,java.lang.Object)>-><java.lang.IndexOutOfBoundsException: void <init>()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.nio.charset.Charset: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.nio.ByteBuffer: boolean equals(java.lang.Object)>
<javax.print.MimeType$ParameterMapEntry: void <init>(javax.print.MimeType,int)>-><java.lang.Object: void <init>()>
<com.zaxxer.hikari.pool.ProxyConnection: void rollback()>-><com.zaxxer.hikari.util.ClockSource: long currentTime()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.StackTraceElement: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object)>
<org.springframework.security.web.session.SessionManagementFilter: void doFilter_8afd8da71cdda97ea533afd9f6c3ef4f(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><synthetic.method.SingletonFactory: cc.mrbird.febs.common.security.starter.handler.FebsAuthExceptionEntryPoint getAuthenticationEntryPoint()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.util.MimeType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><io.netty.channel.nio.SelectedSelectionKeySet: boolean contains(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<org.springframework.expression.spel.ast.FunctionReference: org.springframework.expression.TypedValue executeFunctionJLRMethod(org.springframework.expression.spel.ExpressionState,java.lang.reflect.Method)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<io.micrometer.core.instrument.Tags: java.util.Iterator iterator()>-><io.micrometer.core.instrument.Tags$ArrayIterator: void <init>(io.micrometer.core.instrument.Tags,io.micrometer.core.instrument.Tags$1)>
<org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<org.apache.catalina.connector.OutputBuffer: boolean isFull(java.nio.Buffer)>-><java.nio.Buffer: int limit()>
<org.springframework.util.StringUtils: java.lang.String collectionToDelimitedString(java.util.Collection,java.lang.String,java.lang.String,java.lang.String)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: boolean equals(java.lang.Object)>
<org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.WeakCache$CacheValue: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.Year: java.lang.String toString()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ListSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.http.ResponseEntity: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.security.starter.configure.FebsCloudSecurityAutoConfigure: void <init>()>-><org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration: void <init>()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Method: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.Point: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<com.sun.jmx.mbeanserver.Introspector: javax.management.NotCompliantMBeanException throwException(java.lang.Class,java.lang.Throwable)>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<com.zaxxer.hikari.HikariConfig: void validateNumerics()>-><java.lang.Long: java.lang.Long valueOf(long)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.HandlerPointcut: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void recordConnectionCreated(long)>-><com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker: void recordConnectionCreatedMillis(long)>
<java.util.HashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>-><com.zaxxer.hikari.util.ClockSource: long currentTime()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: int hashCode()>
<sun.reflect.UnsafeCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildRequestUrl(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getContextPath()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.jar.Manifest: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.C2BConverter: void convert(java.nio.CharBuffer,java.nio.ByteBuffer)>-><java.nio.Buffer: int remaining()>
<com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker: void <init>(java.lang.String,com.zaxxer.hikari.metrics.PoolStats,io.micrometer.core.instrument.MeterRegistry)>-><io.micrometer.core.instrument.Gauge$Builder: io.micrometer.core.instrument.Gauge register(io.micrometer.core.instrument.MeterRegistry)>
<org.aspectj.bridge.context.CompilationAndWeavingContext: java.lang.String getCurrentContext()>-><java.util.Vector: boolean isEmpty()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<org.springframework.security.web.FilterChainProxy$VirtualFilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>-><org.springframework.security.web.firewall.RequestWrapper: void reset()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.pool.HikariPool$HouseKeeper: void <init>(com.zaxxer.hikari.pool.HikariPool,com.zaxxer.hikari.pool.HikariPool$1)>
<org.springframework.expression.spel.ast.FunctionReference: org.springframework.expression.TypedValue executeFunctionJLRMethod(org.springframework.expression.spel.ExpressionState,java.lang.reflect.Method)>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: int hashCode()>
<org.apache.catalina.connector.Response: javax.servlet.ServletOutputStream getOutputStream()>-><org.apache.catalina.connector.CoyoteOutputStream: void <init>(org.apache.catalina.connector.OutputBuffer)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.OutputBuffer: void appendByteArray(byte[],int,int)>-><org.apache.catalina.connector.OutputBuffer: int transfer(byte[],int,int,java.nio.ByteBuffer)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><io.netty.buffer.PoolChunkList: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.lettuce.core.internal.AbstractInvocationHandler: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.RootBeanDefinition: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: java.lang.Boolean call()>-><com.zaxxer.hikari.util.ConcurrentBag: void add(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: int size()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<org.apache.catalina.core.ContainerBase: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<java.util.SubList$1: java.lang.Object previous()>-><java.util.Vector$ListItr: java.lang.Object previous()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><java.util.Collections$SynchronizedMap: int size()>
<com.zaxxer.hikari.HikariDataSource: void close()>-><com.zaxxer.hikari.HikariConfig: java.lang.String getPoolName()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><cn.hutool.core.date.DateTime: java.lang.String toString()>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Clock$SystemClock: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.StringCharacterIterator: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.MethodParameter: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AndAnnotationTypePattern: java.lang.String toString()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void beforePrototypeCreation(java.lang.String)>-><java.util.AbstractCollection: boolean add(java.lang.Object)>
<sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Character: char charValue()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.BasicPermission: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.p6spy.engine.logging.Category: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.format.support.FormattingConversionService$AnnotationPrinterConverter: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><io.lettuce.core.masterslave.MasterSlaveConnectionProvider$ConnectionKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.MonthDay: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.logging.log4j.spi.Provider: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.data.redis.connection.RedisNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.LocalDate: boolean equals(java.lang.Object)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String toString()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><cc.mrbird.febs.auth.entity.BindUser: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Hashtable$Entry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><com.zaxxer.hikari.pool.PoolBase: long getLoginTimeout()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><org.apache.ibatis.scripting.xmltags.DynamicContext$ContextMap: java.lang.Object get(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.PropertyElf: java.util.Set getPropertyNames(java.lang.Class)>-><java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><ch.qos.logback.core.AppenderBase: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.net.Inet6Address: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Character: char charValue()>
<org.aspectj.bridge.AbortException: java.lang.String getMessage()>-><org.aspectj.bridge.AbortException: org.aspectj.bridge.IMessage getIMessage()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<org.hibernate.validator.internal.util.annotation.AnnotationProxy: boolean equals(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.zaxxer.hikari.pool.HikariProxyStatement: void setQueryTimeout(int)>-><com.p6spy.engine.wrapper.StatementWrapper: void setQueryTimeout(int)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.logging.log4j.Level: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.text.MessageFormat: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.util.Collections$SetFromMap: boolean contains(java.lang.Object)>-><org.springframework.util.LinkedCaseInsensitiveMap: boolean containsKey(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><ch.qos.logback.core.joran.action.Action: java.lang.String toString()>
<org.springframework.web.util.pattern.SeparatorPathElement: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.util.MimeType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.MemberImpl: int hashCode()>-><org.aspectj.weaver.MemberImpl: java.lang.String getSignature()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.Point: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation[] getAnnotations()>-><java.lang.reflect.Field: java.lang.annotation.Annotation[] getDeclaredAnnotations()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: boolean equals(java.lang.Object)>
<org.springframework.security.core.context.SecurityContextImpl: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.security.core.context.SecurityContextImpl: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<io.micrometer.shaded.org.pcollections.ConsPStack$1: void remove()>-><java.lang.UnsupportedOperationException: void <init>()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.IdentityHashMap$EntrySet: int size()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.Vector: java.util.Iterator iterator()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.math.BigInteger: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><java.lang.reflect.Field: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.deser.UnresolvedId: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><java.nio.CharBuffer: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.ArrayNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.NullNode: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><com.zaxxer.hikari.util.ConcurrentBag: void add(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType$TypeKind: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.TextNode: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putObjectVolatile(java.lang.Object,long,java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: void logConfiguration()>-><java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><java.lang.StringBuffer: void <init>()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.AndAnnotationTypePattern: java.lang.String toString()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.naming.NamingException: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.awt.image.ComponentColorModel: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.subst.Node: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.subst.Node: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList: java.util.List subList(int,int)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.List subList(int,int)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void recycle(com.zaxxer.hikari.pool.PoolEntry)>-><com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void recordConnectionUsage(com.zaxxer.hikari.pool.PoolEntry)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><javax.management.MBeanOperationInfo: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cn.hutool.core.date.format.FastDatePrinter$TimeZoneDisplayKey: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: int hashCode()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.alibaba.fastjson.parser.ParserConfig: void parserAllFieldToCache(java.lang.Class,java.util.Map)>-><java.lang.reflect.Field: java.lang.String getName()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.google.common.base.Predicates$ObjectPredicate$4: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><io.lettuce.core.internal.AbstractInvocationHandler: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: void logConfiguration()>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String)>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.FastList: boolean add(java.lang.Object)>-><java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: int hashCode()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.util.TreeMap$Entry: java.lang.Object getValue()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.reflect.Proxy$Key1: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.jar.Attributes: java.lang.Object get(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildFullRequestUrl(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.context.support.DelegatingMessageSource: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.nio.CharBuffer: java.lang.String toString()>
<org.aspectj.weaver.patterns.TypePatternList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.EmitUtils$6: void processCase(int,org.springframework.asm.Label)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.SimpleTimeZone: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: int hashCode()>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String getAvatar()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeObjectFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.net.www.MimeEntry: java.lang.String toString()>
<io.netty.util.concurrent.FastThreadLocal: void addToVariablesToRemove(io.netty.util.internal.InternalThreadLocalMap,io.netty.util.concurrent.FastThreadLocal)>-><io.netty.channel.nio.SelectedSelectionKeySet: boolean add(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.HashMap$KeySet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.GeneralName: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.GeneralName: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.CollectionCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.time.Year: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.StrongReferenceGaugeFunction: void <init>(java.lang.Object,java.util.function.ToDoubleFunction)>-><java.lang.Object: void <init>()>
<io.netty.channel.nio.SelectedSelectionKeySet$1: java.nio.channels.SelectionKey next()>-><java.util.NoSuchElementException: void <init>()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasPrevious()>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: int previousIndex()>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.ArrayList$SubList: java.lang.Object remove(int)>
<com.zaxxer.hikari.pool.HikariPool: void softEvictConnections()>-><com.zaxxer.hikari.util.ConcurrentBag: java.util.List values()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.TypeVariableTypeInformation: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractSet: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableList$1: java.lang.Object previous()>-><java.util.SubList$1: java.lang.Object previous()>
<org.springframework.util.ClassUtils: java.lang.String classNamesToString(java.util.Collection)>-><java.util.ArrayList$Itr: boolean hasNext()>
<com.zaxxer.hikari.HikariConfig: java.lang.String generatePoolName()>-><java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.TabularDataSupport: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<com.zaxxer.hikari.HikariDataSource: void close()>-><java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl$ClassIndexWrapper: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.aop.support.annotation.AnnotationMatchingPointcut: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.http.ResponseEntity: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Float: float floatValue()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.Boolean: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void quietlyCloseConnection(java.sql.Connection,java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object[])>
<com.zaxxer.hikari.pool.ProxyStatement: void close()>-><com.p6spy.engine.wrapper.StatementWrapper: void close()>
<java.util.stream.ReferencePipeline$11$1: void accept(java.lang.Object)>-><java.util.stream.ReduceOps$3ReducingSink: void accept(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker: void <init>(java.lang.String,com.zaxxer.hikari.metrics.PoolStats,io.micrometer.core.instrument.MeterRegistry)>-><io.micrometer.core.instrument.Counter$Builder: io.micrometer.core.instrument.Counter$Builder tags(java.lang.String[])>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.ConcurrentHashMap: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.Response: void setContentType(java.lang.String)>-><org.apache.juli.logging.DirectJDKLog: void warn(java.lang.Object,java.lang.Throwable)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.TabularDataSupport: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void handleMBeans(com.zaxxer.hikari.pool.HikariPool,boolean)>-><java.lang.StringBuilder: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.MemberImpl: int hashCode()>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><java.lang.reflect.Modifier: boolean isVolatile(int)>
<com.zaxxer.hikari.util.PropertyElf: java.util.Set getPropertyNames(java.lang.Class)>-><java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>
<sun.reflect.UnsafeIntegerFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Integer: void <init>(int)>
<org.aspectj.weaver.patterns.TypePatternList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFloatFieldAccessorImpl: float getFloat(java.lang.Object)>-><sun.misc.Unsafe: float getFloat(java.lang.Object,long)>
<com.zaxxer.hikari.pool.HikariProxyConnection: boolean getAutoCommit()>-><com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$SingletonMap: java.util.Set entrySet()>
<org.springframework.core.SerializableTypeWrapper$FieldTypeProvider: java.lang.reflect.Type getType()>-><java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.data.util.Pair: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.map.introspect.MemberKey: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.image.PackedColorModel: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.node.ObjectNode: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.node.ObjectNode: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.util.calendar.CalendarDate: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.util.context.Context1: java.lang.Object getValue()>
<io.micrometer.core.instrument.Gauge$Builder: void <init>(java.lang.String,java.lang.Object,java.util.function.ToDoubleFunction)>-><io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags empty()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.MessageFormat: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Arrays$ArrayList: int size()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.calendar.CalendarDate: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.http.ResponseEntity: java.lang.String toString()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getKey()>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.Provider$ServiceKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.metrics.dropwizard.CodahaleHealthChecker: void registerHealthChecks(com.zaxxer.hikari.pool.HikariPool,com.zaxxer.hikari.HikariConfig,com.codahale.metrics.health.HealthCheckRegistry)>-><com.zaxxer.hikari.HikariConfig: java.lang.String getPoolName()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: java.lang.String toString()>
<org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.subst.Node: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.io.File: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.format.support.FormattingConversionService$ParserConverter: java.lang.String toString()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Character: char charValue()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.security.CodeSigner: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><com.google.common.base.Joiner$3: java.lang.Object get(int)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.invoke.LambdaForm$Name: java.lang.String toString()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<sun.reflect.UnsafeStaticLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Short: short shortValue()>
<org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.nio.CharBuffer: int hashCode()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.MediaType: java.lang.String toStringNoCharset()>-><java.lang.StringBuilder: void <init>()>
<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore$TokenExpiry: int compareTo(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<com.p6spy.engine.wrapper.ConnectionWrapper: void rollback()>-><com.p6spy.engine.event.CompoundJdbcEventListener: void onBeforeRollback(com.p6spy.engine.common.ConnectionInformation)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.lang.reflect.Field: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void handleMBeans(com.zaxxer.hikari.pool.HikariPool,boolean)>-><javax.management.ObjectName: void <init>(java.lang.String)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.security.Provider$ServiceKey: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags of(java.lang.Iterable)>-><java.util.stream.StreamSupport: java.util.stream.Stream stream(java.util.Spliterator,boolean)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.cglib.core.Signature: java.lang.String toString()>
<org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.font.AttributeValues: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.alibaba.fastjson.JSONArray: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: boolean isEmpty()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.Vector$ListItr: void set(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.springframework.security.authentication.RememberMeAuthenticationToken: java.lang.Object getPrincipal()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.data.util.ParentTypeAwareTypeInformation: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.HikariConfig: com.zaxxer.hikari.metrics.MetricsTrackerFactory getMetricsTrackerFactory()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.text.SimpleDateFormat: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.deser.CreatorProperty: java.lang.String toString()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.RegularEnumSet: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.AbstractCollection: java.lang.String toString()>
<com.zaxxer.hikari.metrics.dropwizard.CodahaleMetricsTrackerFactory: com.zaxxer.hikari.metrics.IMetricsTracker create(java.lang.String,com.zaxxer.hikari.metrics.PoolStats)>-><com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker: void <init>(java.lang.String,com.zaxxer.hikari.metrics.PoolStats,com.codahale.metrics.MetricRegistry)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.io.FilePermission: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey: boolean equals(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><java.lang.reflect.Field: int hashCode()>
<com.zaxxer.hikari.pool.PoolBase: void createNetworkTimeoutExecutor(javax.sql.DataSource,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.SimpleType: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: int hashCode()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.CoyoteOutputStream: void write(byte[],int,int)>-><org.apache.catalina.connector.OutputBuffer: void write(byte[],int,int)>
<com.zaxxer.hikari.pool.PoolBase: void executeSql(java.sql.Connection,java.lang.String,boolean)>-><com.p6spy.engine.wrapper.ConnectionWrapper: java.sql.Statement createStatement()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyConnection: java.sql.Statement createStatement()>-><com.p6spy.engine.wrapper.ConnectionWrapper: java.sql.Statement createStatement()>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<org.apache.catalina.connector.Response$PrivilgedEncodeUrl: java.lang.Object run()>-><org.apache.catalina.connector.Response$PrivilgedEncodeUrl: org.apache.tomcat.util.buf.CharChunk run()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.core.publisher.FluxCreate$DropAsyncSink: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><java.util.concurrent.CopyOnWriteArrayList: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.io.ObjectStreamClass$WeakClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.buffer.AbstractByteBuf: boolean equals(java.lang.Object)>
<org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.RegularEnumSet: java.util.Iterator iterator()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><java.nio.CharBuffer: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: int hashCode()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.JsonProcessingException: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.beans.factory.config.RuntimeBeanReference: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.Object get(java.lang.Object)>-><java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<com.alibaba.fastjson.serializer.ListSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><com.google.common.base.Joiner$3: int size()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.ParameterizedTypeInformation: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(java.nio.CharBuffer,java.nio.ByteBuffer)>-><java.nio.charset.CoderResult: boolean isError()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.io.ObjectStreamField: java.lang.String toString()>
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getDependencyType()>-><com.alibaba.fastjson.util.ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.LocalDate: java.lang.String toString()>
<org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>-><org.aspectj.weaver.patterns.ModifiersPattern: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.node.POJONode: boolean equals(java.lang.Object)>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.nio.ch.SocketOptionRegistry$RegistryKey: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><java.lang.reflect.Field: int getModifiers()>
<reactor.core.publisher.FluxIterable$IterableSubscriptionConditional: boolean isEmpty()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.codehaus.jackson.map.jsontype.NamedType: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.management.MBeanAttributeInfo: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.bouncycastle.asn1.ASN1Sequence: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.io.ObjectStreamClass$FieldReflectorKey: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.image.ColorModel: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariProxyConnection: java.sql.Statement createStatement()>-><com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>
<com.p6spy.engine.spy.P6DataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)>-><com.p6spy.engine.common.ConnectionInformation: com.p6spy.engine.common.ConnectionInformation fromDataSource(javax.sql.CommonDataSource)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.management.openmbean.TabularType: boolean equals(java.lang.Object)>
<org.aspectj.bridge.AbortException: void printStackTrace(java.io.PrintWriter)>-><java.lang.StringBuilder: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<java.util.ComparableTimSort: int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int)>-><io.micrometer.core.instrument.Tag: int compareTo(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.core.publisher.FluxCreate$BufferAsyncSink: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.reflect.WeakCache$CacheKey: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.LocalTime: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.NullNode: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><java.nio.Buffer: java.nio.Buffer flip()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Collections$SynchronizedCollection: boolean contains(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: boolean equals(java.lang.Object)>
<org.aspectj.bridge.context.CompilationAndWeavingContext: java.lang.String getCurrentContext()>-><java.util.Vector$Itr: java.lang.Object next()>
<org.springframework.context.expression.MapAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>-><org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.zaxxer.hikari.util.UtilityElf$DefaultThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>-><java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.codehaus.jackson.map.jsontype.NamedType: boolean equals(java.lang.Object)>
<org.springframework.util.StringUtils: java.lang.String collectionToDelimitedString(java.util.Collection,java.lang.String,java.lang.String,java.lang.String)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.pool.PoolEntry createPoolEntry()>-><com.zaxxer.hikari.pool.PoolEntry: void setFutureEol(java.util.concurrent.ScheduledFuture)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.provider.PolicyParser$PrincipalEntry: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.lang.Boolean: java.lang.String toString()>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onBeforeSetAutoCommit(com.p6spy.engine.common.ConnectionInformation,boolean,boolean)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><org.aspectj.weaver.BCException: void printStackTrace(java.io.PrintStream)>
<java.util.AbstractCollection: java.lang.String toString()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.aspectj.util.LangUtil: void elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)>-><java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.bridge.context.CompilationAndWeavingContext: java.lang.String getCurrentContext()>-><java.util.Stack: java.lang.Object pop()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: int hashCode()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$StringValues: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void recordBorrowStats(com.zaxxer.hikari.pool.PoolEntry,long)>-><com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker: void recordConnectionAcquiredNanos(long)>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>-><com.sun.jmx.mbeanserver.JmxMBeanServer$2: java.lang.Object run()>
<ch.qos.logback.classic.spi.PackagingDataCalculator: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)>-><org.aspectj.bridge.AbortException: void printStackTrace()>
<java.lang.reflect.Type: java.lang.String getTypeName()>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.concurrent.atomic.AtomicBoolean: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<org.springframework.security.web.session.SessionManagementFilter: void doFilter_f0ef063ce92811bc0c40925b9b99e9b1(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><synthetic.method.SingletonFactory: cc.mrbird.febs.common.security.starter.handler.FebsAuthExceptionEntryPoint getAuthenticationEntryPoint()>
<reactor.core.scheduler.ReactorThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>-><java.lang.Thread: void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>
<com.zaxxer.hikari.util.ConcurrentBag: void add(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.lang.Thread: void yield()>
<io.micrometer.core.instrument.Tags: void <init>(io.micrometer.core.instrument.Tag[])>-><io.micrometer.core.instrument.Tags: void dedup()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractSet: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.baomidou.dynamic.datasource.DynamicGroupDataSource: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.time.ZoneId: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.PropertyName: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>-><com.zaxxer.hikari.util.ClockSource: java.lang.String elapsedDisplayString(long,long)>
<com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.MethodOverrides: boolean equals(java.lang.Object)>
<cc.mrbird.febs.auth.service.impl.FebsUserDetailServiceImpl: org.springframework.security.core.userdetails.UserDetails loadUserByUsername(java.lang.String)>-><org.springframework.security.crypto.password.NoOpPasswordEncoder: java.lang.String encode(java.lang.CharSequence)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object previous()>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasPrevious()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.data.redis.connection.RedisClusterNode: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags of(java.lang.String[])>-><io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags empty()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.aop.support.DefaultIntroductionAdvisor: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.time.zone.ZoneRules: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$StringValues: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.type.MapType: java.lang.String toString()>
<com.zaxxer.hikari.metrics.PoolStats: void <init>(long)>-><java.lang.Object: void <init>()>
<com.alibaba.fastjson.util.FieldInfo: void <init>(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Field,java.lang.Class,java.lang.reflect.Type,int,int,int,com.alibaba.fastjson.annotation.JSONField,com.alibaba.fastjson.annotation.JSONField,java.lang.String,java.util.Map)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Collections$SingletonList: java.lang.Object get(int)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void appendCollection(java.lang.Object,java.lang.StringBuilder,java.util.Set)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.logging.log4j.spi.Provider: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.provider.RuleBasedBreakIterator: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.ResolvableType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: boolean remove(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object)>
<org.apache.catalina.connector.OutputBuffer: void toReadMode(java.nio.Buffer)>-><java.nio.Buffer: java.nio.Buffer reset()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int,java.util.Comparator)>-><java.time.format.DateTimeFormatterBuilder$2: int compare(java.lang.Object,java.lang.Object)>
<sun.reflect.UnsafeCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.awt.Color: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<com.p6spy.engine.wrapper.ConnectionWrapper: void setAutoCommit(boolean)>-><com.p6spy.engine.event.CompoundJdbcEventListener: void onAfterSetAutoCommit(com.p6spy.engine.common.ConnectionInformation,boolean,boolean,java.sql.SQLException)>
<sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Integer: void <init>(int)>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void setSchema(java.lang.String)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><com.zaxxer.hikari.pool.HikariProxyConnection: int getNetworkTimeout()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<java.beans.Introspector: void addPropertyDescriptor(java.beans.PropertyDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.StackTraceElement: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.codehaus.jackson.map.type.ArrayType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.WithinPointcut: java.lang.String toString()>
<java.util.Collections$UnmodifiableCollection$1: void <init>(java.util.Collections$UnmodifiableCollection)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl: long getLong(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.p6spy.engine.logging.Category: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><jdk.internal.org.xml.sax.SAXException: java.lang.String getMessage()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Collections$SetFromMap: boolean contains(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.bridge.MessageUtil: java.lang.String renderMessage(org.aspectj.bridge.IMessage,boolean)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.validation.DataBinder: org.springframework.validation.AbstractPropertyBindingResult createBeanPropertyBindingResult()>-><org.springframework.validation.DataBinder: int getAutoGrowCollectionLimit()>
<sun.reflect.UnsafeIntegerFieldAccessorImpl: int getInt(java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.BigIntegerNode: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><java.util.concurrent.CopyOnWriteArrayList: int hashCode()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.ZoneId: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.ParameterizedTypeInformation: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.matcher.OrRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.format.DecimalStyle: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.commons.pool2.impl.BaseGenericObjectPool$IdentityWrapper: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.NotAnnotationTypePattern: int hashCode()>
<com.sun.jmx.mbeanserver.MBeanIntrospector: javax.management.MBeanNotificationInfo[] findNotifications(java.lang.Object)>-><javax.management.MBeanServerDelegate: javax.management.MBeanNotificationInfo[] getNotificationInfo()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: int hashCode()>
<com.zaxxer.hikari.pool.HikariPool$HouseKeeper: void <init>(com.zaxxer.hikari.pool.HikariPool)>-><com.zaxxer.hikari.util.ClockSource: long currentTime()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.time.Period: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.nio.ByteBuffer: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.BaseLocale$Key: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.aspectj.weaver.patterns.NamePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.calendar.Era: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolEntry: void setState(int)>-><java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl: void set(java.lang.Object,int)>
<com.zaxxer.hikari.HikariConfig: java.lang.String generatePoolName()>-><org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.HashMap$KeySet: boolean contains(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<java.util.TreeMap: java.util.TreeMap$Entry getEntry(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: int compareTo(java.lang.Object)>
<com.sun.jmx.mbeanserver.MBeanAnalyzer: void visit(com.sun.jmx.mbeanserver.MBeanAnalyzer$MBeanVisitor)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<com.zaxxer.hikari.pool.PoolEntry: java.sql.Connection close()>-><ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><org.springframework.util.LinkedCaseInsensitiveMap$KeySet: java.util.Iterator iterator()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<org.apache.catalina.util.ToStringUtil: java.lang.String toString(org.apache.catalina.Contained)>-><org.apache.catalina.valves.ValveBase: org.apache.catalina.Container getContainer()>
<com.zaxxer.hikari.util.ClockSource: java.lang.String elapsedDisplayString0(long,long)>-><com.zaxxer.hikari.util.ClockSource$MillisecondClockSource: long elapsedNanos0(long,long)>
<java.util.HashMap: int hash(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: int hashCode()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void handleMBeans(com.zaxxer.hikari.pool.HikariPool,boolean)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: int getCount(int)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object next()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.BaseLocale$Key: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.apache.catalina.connector.OutputBuffer: void flushCharBuffer()>-><org.apache.catalina.connector.OutputBuffer: void realWriteChars(java.nio.CharBuffer)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: int hashCode()>
<org.hibernate.validator.internal.util.annotation.AnnotationDescriptor: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>-><org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Object getPrincipal()>
<sun.reflect.UnsafeQualifiedShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Short: short shortValue()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.misc.Signal: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.ThisOrTargetPointcut: java.lang.String toString()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void setMetricsTrackerFactory(com.zaxxer.hikari.metrics.MetricsTrackerFactory)>-><com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTrackerFactory: com.zaxxer.hikari.metrics.IMetricsTracker create(java.lang.String,com.zaxxer.hikari.metrics.PoolStats)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<com.sun.jmx.mbeanserver.MBeanAnalyzer: void visit(com.sun.jmx.mbeanserver.MBeanAnalyzer$MBeanVisitor)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.text.StringCharacterIterator: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: java.lang.Boolean call()>-><java.util.concurrent.TimeUnit$4: long toMillis(long)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<java.util.Spliterator: boolean hasCharacteristics(int)>-><java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: int characteristics()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><jdk.internal.org.xml.sax.SAXParseException: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.SimpleType: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><java.nio.charset.CoderResult: boolean isMalformed()>
<reactor.core.publisher.Traces: java.lang.String[] extractOperatorAssemblyInformationParts(java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Period: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: java.lang.String toString()>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.aop.TruePointcut: java.lang.String toString()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Hashtable: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.google.common.collect.ImmutableEntry: java.lang.Object getValue()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.HandlerPointcut: java.lang.String toString()>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: java.lang.String generatePoolName()>-><java.util.concurrent.ThreadLocalRandom: int nextInt(int)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.security.x509.GeneralName: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariProxyConnection: int getTransactionIsolation()>-><com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>
<java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy: void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor)>-><io.netty.util.concurrent.PromiseTask: void run()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.ArrayList$Itr: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><java.lang.Math: long max(long,long)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Proxy$Key2: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.UEncoder: org.apache.tomcat.util.buf.CharChunk encodeURL(java.lang.String,int,int)>-><org.apache.tomcat.util.buf.AbstractChunk: void recycle()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.apache.commons.pool2.impl.DefaultPooledObject: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.JSON: java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.fasterxml.jackson.databind.JsonMappingException: void _appendPathDesc(java.lang.StringBuilder)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Clock$SystemClock: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Properties: void <init>()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanAttributeInfo: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.ReferencePipeline$3$1: void accept(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.Pointcut$MatchesNothingPointcut: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.web.context.support.WebApplicationContextUtils$FacesDependencyRegistrar$2: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<java.sql.SQLTransientConnectionException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>-><java.sql.SQLTransientException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.security.Permission: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.springframework.http.HttpHeaders: java.util.Set entrySet()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.Inet4Address: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.zone.ZoneRules: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.cglib.core.MethodInfo: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><cn.hutool.core.map.MapProxy: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><ch.qos.logback.classic.joran.ReconfigureOnChangeTask: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean add(java.util.Map$Entry)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<org.aspectj.bridge.MessageUtil: java.lang.String addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Collections$EmptyList: int size()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><java.util.concurrent.ThreadPoolExecutor: void shutdown()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.format.DecimalStyle: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.validation.FieldError: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.calendar.ZoneInfo: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource: boolean equals(java.lang.Object)>-><org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>
<sun.reflect.UnsafeCharacterFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeCharacterFieldAccessorImpl: char getChar(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: java.lang.Object[] toArray()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<java.util.SubList$1: java.lang.Object previous()>-><java.util.SubList$1: java.lang.Object previous()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.awt.image.PackedColorModel: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.temporal.IsoFields$Field$2: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.CodeSource: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.metrics.dropwizard.CodahaleHealthChecker$Connection99Percent: void <init>(com.codahale.metrics.Timer,long)>-><com.codahale.metrics.health.HealthCheck: void <init>()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: java.lang.Object call()>-><com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: java.lang.Boolean call()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.TypePatternList: int hashCode()>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>
<org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.util.unit.DataSize: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object previous()>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: boolean hasPrevious()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.IfPointcut$IfTruePointcut: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.alibaba.fastjson.JSONArray: boolean equals(java.lang.Object)>
<java.util.List: void sort(java.util.Comparator)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.subst.Token: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.TypePatternList: int hashCode()>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<org.springframework.validation.DataBinder: org.springframework.validation.AbstractPropertyBindingResult createBeanPropertyBindingResult()>-><org.springframework.validation.AbstractPropertyBindingResult: void initConversion(org.springframework.core.convert.ConversionService)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.security.util.DerValue: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void throwPoolInitializationException(java.lang.Throwable)>-><com.zaxxer.hikari.pool.HikariPool: void destroyHouseKeepingExecutorService()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSON: java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><com.alibaba.fastjson.JSONArray: int size()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.font.AttributeValues: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.validation.ObjectError: boolean equals(java.lang.Object)>
<org.springframework.aop.framework.ProxyConfig: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>
<java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><reactor.util.context.Context1: java.lang.Object getKey()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void beforePrototypeCreation(java.lang.String)>-><java.util.JumboEnumSet: boolean add(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.security.Provider$UString: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.HikariConfig: void validate()>-><com.zaxxer.hikari.util.UtilityElf: java.lang.String getNullIfEmpty(java.lang.String)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>
<org.aspectj.weaver.patterns.TypePatternList: java.lang.String toString()>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><ch.qos.logback.core.status.StatusBase: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.security.Provider: java.util.Set entrySet()>
<com.zaxxer.hikari.HikariConfig: void validate()>-><com.zaxxer.hikari.HikariConfig: java.lang.String generatePoolName()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.aspectj.bridge.MessageUtil: java.lang.String addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.NullNode: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<java.util.stream.ForEachOps$ForEachTask: void compute()>-><java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: java.util.Spliterator trySplit()>
<org.aspectj.weaver.patterns.TypePatternList: int hashCode()>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<com.zaxxer.hikari.pool.ProxyConnection: void closeStatements()>-><com.zaxxer.hikari.util.FastList: java.lang.Object get(int)>
<org.aspectj.weaver.patterns.WithinPointcut: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.nio.charset.CoderResult: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.map.introspect.MemberKey: java.lang.String toString()>
<org.aspectj.weaver.patterns.TypePatternList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.Arrays$ArrayList: int size()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.data.mapping.model.Property: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.metrics.dropwizard.CodahaleHealthChecker$ConnectivityHealthCheck: void <init>(com.zaxxer.hikari.pool.HikariPool,long)>-><com.codahale.metrics.health.HealthCheck: void <init>()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: java.lang.Object next()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ThrowsPattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.MonthDay: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.core.NamedInheritableThreadLocal: java.lang.String toString()>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.KindedPointcut: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setupConnection(java.sql.Connection)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void setCatalog(java.lang.String)>
<com.zaxxer.hikari.pool.ProxyConnection: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><org.springframework.util.LinkedCaseInsensitiveMap$KeySet: int size()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: java.lang.String toString()>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<org.springframework.security.oauth2.provider.BaseRequest: boolean equals(java.lang.Object)>-><java.util.AbstractSet: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.OutputBuffer: void realWriteChars(java.nio.CharBuffer)>-><org.apache.tomcat.util.buf.C2BConverter: boolean isUndeflow()>
<org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariProxyConnection: void setTransactionIsolation(int)>-><com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>
<com.zaxxer.hikari.HikariDataSource: java.sql.Connection getConnection()>-><java.sql.SQLException: void <init>(java.lang.String)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Collections$1: boolean hasNext()>
<org.apache.catalina.connector.CoyoteOutputStream: void <init>(org.apache.catalina.connector.OutputBuffer)>-><javax.servlet.ServletOutputStream: void <init>()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.Object: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.zaxxer.hikari.HikariDataSource: void close()>-><org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.IfPointcut: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.ForkJoinWorkerThread$InnocuousForkJoinWorkerThread: java.lang.ClassLoader getContextClassLoader()>
<com.zaxxer.hikari.pool.HikariPool: java.sql.SQLException createTimeoutException(long)>-><com.zaxxer.hikari.util.ClockSource: long elapsedMillis(long)>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.security.x509.RDN: java.lang.String toString()>
<java.util.Collections$SynchronizedCollection: boolean contains(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean contains(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.codehaus.jackson.node.LongNode: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.HikariConfig: boolean isAllowPoolSuspension()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><java.nio.CharBuffer: java.lang.String toString()>
<com.zaxxer.hikari.util.ClockSource: java.lang.String elapsedDisplayString0(long,long)>-><java.util.concurrent.TimeUnit$6: long convert(long,java.util.concurrent.TimeUnit)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.AbstractList$Itr: boolean hasNext()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.OptionalDouble: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><com.zaxxer.hikari.util.DriverDataSource: void setLoginTimeout(int)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.util.Map declaredAnnotations()>-><sun.reflect.annotation.AnnotationParser: java.util.Map parseAnnotations(byte[],sun.reflect.ConstantPool,java.lang.Class)>
<com.zaxxer.hikari.pool.HikariPool: void logPoolState(java.lang.String[])>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.ImmutableDescriptor: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.OutputBuffer: void append(byte[],int,int)>-><java.nio.Buffer: int remaining()>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>
<org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>-><org.aspectj.weaver.UnresolvedType: java.lang.String getName()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.util.locale.UnicodeLocaleExtension: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<org.springframework.web.context.support.WebApplicationContextUtils$WebRequestObjectFactory: org.springframework.web.context.request.WebRequest getObject()>-><org.springframework.web.context.request.ServletRequestAttributes: javax.servlet.http.HttpServletRequest getRequest()>
<org.springframework.web.context.support.WebApplicationContextUtils$WebRequestObjectFactory: org.springframework.web.context.request.WebRequest getObject()>-><org.springframework.web.context.request.ServletRequestAttributes: javax.servlet.http.HttpServletResponse getResponse()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.security.util.ObjectIdentifier: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries: boolean contains(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean remove(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySet: int size()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: void removeRange(int,int)>-><java.util.concurrent.CopyOnWriteArrayList: void setArray(java.lang.Object[])>
<org.apache.tomcat.util.buf.C2BConverter: void convert(java.nio.CharBuffer,java.nio.ByteBuffer)>-><java.nio.Buffer: java.nio.Buffer limit(int)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.asm.Handle: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.lang.ThreadLocal: java.lang.Object get()>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void rollback()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<io.netty.util.concurrent.AbstractEventExecutorGroup: void execute(java.lang.Runnable)>-><io.netty.util.concurrent.MultithreadEventExecutorGroup: io.netty.util.concurrent.EventExecutor next()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$WeekBasedFieldPrinterParser: java.lang.String toString()>
<org.springframework.web.context.support.ServletContextAwareProcessor: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>-><org.springframework.web.filter.GenericFilterBean: void setServletContext(javax.servlet.ServletContext)>
<com.zaxxer.hikari.pool.ProxyConnection: java.sql.Statement createStatement()>-><com.zaxxer.hikari.pool.ProxyFactory: java.sql.Statement getProxyStatement(com.zaxxer.hikari.pool.ProxyConnection,java.sql.Statement)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFilteredFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object[])>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.Class getDeclaringClass()>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.lettuce.core.masterslave.RedisMasterSlaveNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.CodeSource: boolean equals(java.lang.Object)>
<java.beans.FeatureDescriptor: java.lang.String toString()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.codehaus.jackson.map.type.SimpleType: boolean equals(java.lang.Object)>
<java.util.ComparableTimSort: int countRunAndMakeAscending(java.lang.Object[],int,int)>-><org.aspectj.weaver.MemberImpl: int compareTo(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.IdentityHashMap: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.BinaryNode: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.util.context.ContextN: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.ResourceBundle$1: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.validation.ObjectError: boolean equals(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.StackTraceElement: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanConstructorInfo: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.Character$Subset: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.TreeMap: java.lang.Object get(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>-><java.lang.String: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><ch.qos.logback.core.status.StatusBase: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object next()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<java.util.concurrent.ThreadPoolExecutor: void setKeepAliveTime(long,java.util.concurrent.TimeUnit)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.ZonedDateTime: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.lang.reflect.ReflectAccess: java.lang.reflect.Field copyField(java.lang.reflect.Field)>-><java.lang.reflect.Field: java.lang.reflect.Field copy()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.nio.ByteBuffer: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Parameter: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.HikariConfig: java.lang.String generatePoolName()>-><java.lang.System: java.util.Properties getProperties()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Arrays$ArrayList: java.lang.Object get(int)>
<org.apache.tomcat.util.buf.UEncoder: void urlEncode(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><org.apache.tomcat.util.buf.ByteChunk: byte[] getBuffer()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.stream.Nodes$FixedNodeBuilder: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: boolean hasNext()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><com.zaxxer.hikari.pool.ProxyConnection: boolean getReadOnlyState()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.bouncycastle.asn1.DERNumericString: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<org.springframework.expression.spel.ast.OperatorBetween: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><com.google.common.base.Joiner$3: java.lang.Object get(int)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<com.zaxxer.hikari.HikariDataSource: java.sql.Connection getConnection()>-><org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.security.provider.PolicyParser$PermissionEntry: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.time.Clock$SystemClock: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><java.lang.reflect.Field: int hashCode()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<java.util.TreeSet: boolean addAll(java.util.Collection)>-><io.netty.channel.nio.SelectedSelectionKeySet: int size()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.ArrayNode: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<org.springframework.expression.spel.ast.Indexer: void generateCode(org.springframework.asm.MethodVisitor,org.springframework.expression.spel.CodeFlow)>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.Tags: void <init>(io.micrometer.core.instrument.Tag[])>-><java.lang.Object: void <init>()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.beans.factory.support.NullBean: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.String toString()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.time.Duration: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.LocalDateTime: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.p6spy.engine.logging.Category: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: int size()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onBeforeRollback(com.p6spy.engine.common.ConnectionInformation)>-><java.util.ArrayList: java.util.Iterator iterator()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.NotAnnotationTypePattern: int hashCode()>
<com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: java.lang.Boolean call()>-><com.zaxxer.hikari.util.UtilityElf: void quietlySleep(long)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$PadPrinterParserDecorator: java.lang.String toString()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.util.MimeType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdSerializer: com.fasterxml.jackson.databind.JsonSerializer findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)>-><org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.p6spy.engine.spy.option.P6OptionsRepository$DelayedOptionChange: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><java.util.concurrent.CopyOnWriteArrayList: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<java.sql.SQLException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.util.matcher.OrRequestMatcher: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><org.springframework.core.io.buffer.LimitedDataBufferList: boolean add(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><ch.qos.logback.core.joran.spi.ConsoleTarget: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<java.util.ComparableTimSort: void mergeHi(int,int,int,int)>-><com.fasterxml.classmate.util.ClassKey: int compareTo(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.IfPointcut$IfFalsePointcut: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.sun.beans.WildcardTypeImpl: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<org.apache.tomcat.util.buf.ByteChunk: void <init>(int)>-><org.apache.tomcat.util.buf.AbstractChunk: void <init>()>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.IteratorSerializer: void serializeContents(java.util.Iterator,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.micrometer.core.instrument.Tags$ArrayIterator: java.lang.Object next()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><java.lang.Long: long longValue()>
<org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.core.publisher.FluxCreate$BufferAsyncSink: java.lang.String toString()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><javax.print.MimeType$ParameterMapEntry: int hashCode()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FastDateFormat: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.JapaneseImperialCalendar: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.Collections$SingletonList: int size()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.web.util.pattern.PathPattern: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArraySet: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String toString()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<org.springframework.util.ClassUtils: java.lang.String classNamesToString(java.util.Collection)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><com.zaxxer.hikari.pool.PoolBase$IMetricsTrackerDelegate: void recordConnectionCreated(long)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<sun.reflect.UnsafeLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.listener.PatternTopic: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.Font: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.codehaus.jackson.map.type.ClassKey: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.pool.PoolEntry createPoolEntry()>-><com.zaxxer.hikari.HikariConfig: long getMaxLifetime()>
<java.sql.DriverManager: java.sql.Driver getDriver(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.GmtTimeZone: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.DoubleNode: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><java.nio.CharBuffer: java.lang.String toString()>
<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.bridge.IMessage$Kind: int compareTo(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariProxyConnection: void clearWarnings()>-><com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>
<org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Collections$SynchronizedCollection: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.sun.jmx.mbeanserver.NamedObject: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyLeakTask: void <init>(com.zaxxer.hikari.pool.PoolEntry)>-><java.lang.Thread: java.lang.Thread currentThread()>
<org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><javax.management.openmbean.CompositeDataSupport: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.bouncycastle.asn1.ASN1Primitive: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Currency: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.imageio.ImageTypeSpecifier$Interleaved: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.connection.RedisNode: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.String toString()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<com.alibaba.fastjson.serializer.MapSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.io.File: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ListSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<org.apache.tomcat.util.http.parser.MediaType: org.apache.tomcat.util.http.parser.MediaType parseMediaType(java.io.StringReader)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.LinkedList: java.lang.Object remove(int)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.metrics.dropwizard.CodahaleHealthChecker: void registerHealthChecks(com.zaxxer.hikari.pool.HikariPool,com.zaxxer.hikari.HikariConfig,com.codahale.metrics.health.HealthCheckRegistry)>-><com.zaxxer.hikari.HikariConfig: java.util.Properties getHealthCheckProperties()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.Collections$SynchronizedList: java.util.ListIterator listIterator()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.ClassKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ThreadPoolExecutor: void setKeepAliveTime(long,java.util.concurrent.TimeUnit)>-><java.lang.IllegalArgumentException: void <init>()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void logPoolState(java.lang.String[])>-><com.zaxxer.hikari.pool.HikariPool: int getTotalConnections()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Collections$SingletonMap: java.lang.Object get(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.LinkedHashMap$LinkedKeySet: boolean remove(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.ProcessEnvironment$Variable: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.io.SerializedString: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<sun.reflect.UnsafeFloatFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Float: void <init>(float)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.lettuce.core.masterslave.MasterSlaveConnectionProvider$ConnectionKey: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.ResolvableType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeOptionalFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.zone.ZoneOffsetTransition: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.Period: java.lang.String toString()>
<java.util.Collections$SynchronizedCollection: int size()>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.security.provider.PolicyParser$KeyStoreEntry: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><org.springframework.util.LinkedMultiValueMap: int size()>
<com.zaxxer.hikari.pool.ProxyConnection: void rollback()>-><com.zaxxer.hikari.pool.HikariProxyConnection: void rollback()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.AbstractList$Itr: boolean hasNext()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$SingletonMap: int size()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.Character: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><com.fasterxml.jackson.core.JsonProcessingException: java.lang.String getMessage()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.provider.PolicyFile$SelfPermission: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.ArgsAnnotationPointcut: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.PropertyPermission: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.security.CodeSource: java.lang.String toString()>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.GmtTimeZone: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><com.zaxxer.hikari.HikariConfig: int getMinimumIdle()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.google.common.collect.ArrayListMultimap: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.p6spy.engine.common.CustomHashedHashSet$CustomHashedHashSetIterator: boolean hasNext()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.Thread: java.lang.Thread currentThread()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onBeforeCommit(com.p6spy.engine.common.ConnectionInformation)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.codehaus.jackson.node.NullNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility: boolean isVisible(java.lang.reflect.Member)>-><java.lang.reflect.Field: int getModifiers()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.alibaba.fastjson.util.GenericArrayTypeImpl: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><java.util.concurrent.LinkedBlockingQueue: void <init>(int)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.concurrent.CopyOnWriteArraySet: int size()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.AttributeAccessorSupport: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><java.nio.CharBuffer: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.invoke.MethodHandle: java.lang.String toString()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyConnection: void close()>-><com.zaxxer.hikari.pool.PoolEntry: void recycle(long)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.beans.factory.support.MethodOverrides: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void addBagItem(int)>-><java.util.Collections$UnmodifiableCollection: int size()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.Clock$SystemClock: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariProxyPreparedStatement: boolean execute(java.lang.String)>-><com.zaxxer.hikari.pool.ProxyStatement: boolean execute(java.lang.String)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: int hashCode()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.time.OffsetDateTime: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.CoyoteOutputStream: boolean checkNonBlockingWrite()>-><org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.MethodParameter: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><ch.qos.logback.core.subst.Token: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.google.common.base.Predicates$ObjectPredicate$1: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.IdentityHashMap: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.util.calendar.LocalGregorianCalendar$Date: java.lang.String toString()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.lang.String toString()>-><java.lang.Class: java.lang.String getTypeName()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>
<io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.nio.channels.SelectionKey next()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><com.alibaba.fastjson.JSONArray: java.lang.Object get(int)>
<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>-><com.google.common.base.Joiner$3: java.lang.Object get(int)>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.AnnotationTypePattern: boolean isForParameterAnnotationMatch()>
<java.util.LinkedHashSet: void <init>(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.cglib.core.ClassInfo: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.POJONode: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<org.aspectj.bridge.context.CompilationAndWeavingContext: java.lang.String getCurrentContext()>-><java.util.Stack: java.lang.Object push(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.sun.jmx.mbeanserver.WeakIdentityHashMap$IdentityWeakReference: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.String[] findEnumValues(java.lang.Class,java.lang.Enum[],java.lang.String[])>-><java.lang.reflect.Field: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Field: java.lang.String toString()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.FloatNode: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.util.BuddhistCalendar: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.EventObject: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>
<sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: int getInt(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.reflect.Proxy$KeyX: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.management.MBeanParameterInfo: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<com.sun.jmx.mbeanserver.MBeanAnalyzer: void visit(com.sun.jmx.mbeanserver.MBeanAnalyzer$MBeanVisitor)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><org.springframework.http.ReadOnlyHttpHeaders: java.lang.Object get(java.lang.Object)>
<java.util.concurrent.ScheduledThreadPoolExecutor: long triggerTime(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.TimeUnit$5: long toNanos(long)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.invoke.BoundMethodHandle$SpeciesData: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><org.springframework.util.LinkedMultiValueMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.codehaus.jackson.node.NullNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeOptionalFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.security.ProtectionDomain$WeakProtectionDomainKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.DependencyDescriptor: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.codehaus.jackson.node.IntNode: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.sql.Time: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.aop.support.DefaultIntroductionAdvisor: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.bouncycastle.asn1.ASN1Set: java.lang.String toString()>
<org.springframework.security.web.FilterChainProxy$VirtualFilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>-><org.springframework.security.web.util.UrlUtils: java.lang.String buildRequestUrl(javax.servlet.http.HttpServletRequest)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.LongNode: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: boolean equals(java.lang.Object)>
<sun.util.locale.provider.LocaleProviderAdapter: boolean isSupportedLocale(java.util.Locale,sun.util.locale.provider.LocaleProviderAdapter$Type,java.util.Set)>-><io.netty.channel.nio.SelectedSelectionKeySet: boolean contains(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String getPath()>
<io.micrometer.core.instrument.Timer$Builder: io.micrometer.core.instrument.Timer$Builder minimumExpectedValue(java.time.Duration)>-><java.lang.Long: java.lang.Long valueOf(long)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><java.util.concurrent.CopyOnWriteArrayList: int hashCode()>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<org.springframework.validation.DataBinder: org.springframework.beans.SimpleTypeConverter getSimpleTypeConverter()>-><org.springframework.beans.PropertyEditorRegistrySupport: void setConversionService(org.springframework.core.convert.ConversionService)>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: int size()>-><io.netty.channel.nio.SelectedSelectionKeySet: int size()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: void setAutoCommit(boolean)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void setAutoCommit(boolean)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.ParameterizedTypeInformation: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$1: boolean hasNext()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.hibernate.validator.internal.util.annotation.AnnotationProxy: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><io.netty.util.ResourceLeakDetector$Record: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.bouncycastle.asn1.ASN1Primitive: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.Provider$UString: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: int hashCode()>-><java.lang.String: int hashCode()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.alibaba.fastjson.JSONObject: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<java.util.AbstractList$Itr: java.lang.Object next()>-><com.google.common.base.Joiner$3: java.lang.Object get(int)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.management.MBeanOperationInfo: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<java.util.LinkedList$ListItr: java.lang.Object previous()>-><java.util.LinkedList$ListItr: boolean hasPrevious()>
<com.zaxxer.hikari.pool.HikariPool: java.sql.SQLException createTimeoutException(long)>-><com.zaxxer.hikari.pool.PoolBase: java.lang.Exception getLastConnectionFailure()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.HttpParser: java.lang.String unquote(java.lang.String)>-><java.lang.String: int length()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.AbstractCollection: boolean contains(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getKey()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.util.Date getModifyTime()>
<com.zaxxer.hikari.pool.ProxyConnection: void closeStatements()>-><java.lang.NullPointerException: void <init>(java.lang.String)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><java.lang.reflect.Field: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.provider.PolicyParser$PrincipalEntry: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>-><java.util.concurrent.LinkedBlockingQueue$Itr: boolean hasNext()>
<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>-><reactor.util.concurrent.Queues$ZeroQueue: java.lang.Object[] toArray()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.p6spy.engine.common.CustomHashedHashSet: boolean contains(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.util.CollectionUtils$MultiValueMapAdapter: boolean containsKey(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Vector: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<java.util.Vector$ListItr: java.lang.Object previous()>-><java.util.Vector: java.lang.Object elementData(int)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.Character$Subset: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>
<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void serialize(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><java.lang.reflect.AccessibleObject: void checkAccess(java.lang.Class,java.lang.Class,java.lang.Object,int)>
<com.zaxxer.hikari.pool.PoolBase: void initializeDataSource()>-><com.zaxxer.hikari.HikariConfig: java.lang.String getUsername()>
<sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object remove(int)>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<com.google.common.collect.TransformedIterator: java.lang.Object next()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.codehaus.jackson.node.POJONode: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean contains(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void recordConnectionTimeout()>-><com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker: void recordConnectionTimeout()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.MiscCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.codehaus.jackson.node.ObjectNode: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.net.URI: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serializeContents(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<io.netty.channel.nio.SelectedSelectionKeySet$1: java.nio.channels.SelectionKey next()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String getValue()>
<org.aspectj.weaver.patterns.TypePatternList: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.sun.jmx.mbeanserver.NamedObject: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<com.sun.naming.internal.ResourceManager: void mergeTables(java.util.Hashtable,java.util.Hashtable)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setupConnection(java.sql.Connection)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void setAutoCommit(boolean)>
<java.util.stream.ReferencePipeline$3$1: void accept(java.lang.Object)>-><java.util.stream.ReferencePipeline$11$1: void accept(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariDataSource: java.sql.Connection getConnection()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.beans.factory.support.GenericBeanDefinition: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<org.aspectj.util.LangUtil: java.lang.String renderExceptionShort(java.lang.Throwable)>-><org.aspectj.util.LangUtil: java.lang.String unqualifiedClassName(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<sun.reflect.UnsafeStaticIntegerFieldAccessorImpl: int getInt(java.lang.Object)>-><sun.misc.Unsafe: int getInt(java.lang.Object,long)>
<io.micrometer.core.instrument.Tags: void <init>(io.micrometer.core.instrument.Tag[])>-><java.util.Arrays: void sort(java.lang.Object[])>
<org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>-><org.aspectj.weaver.TypeVariable: java.lang.String getName()>
<java.net.InetAddress$Cache: java.net.InetAddress$Cache put(java.lang.String,java.net.InetAddress[])>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><com.zaxxer.hikari.pool.PoolEntry: boolean compareAndSet(int,int)>
<com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void recordConnectionUsage(com.zaxxer.hikari.pool.PoolEntry)>-><com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker: void recordConnectionUsageMillis(long)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.management.ObjectName: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><java.lang.reflect.Field: sun.reflect.FieldAccessor getFieldAccessor(java.lang.Object)>
<com.zaxxer.hikari.metrics.dropwizard.CodahaleHealthChecker: void registerHealthChecks(com.zaxxer.hikari.pool.HikariPool,com.zaxxer.hikari.HikariConfig,com.codahale.metrics.health.HealthCheckRegistry)>-><java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>
<com.zaxxer.hikari.util.ConcurrentBag: boolean useWeakThreadLocals()>-><java.lang.Object: java.lang.Class getClass()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.io.ObjectStreamClass$FieldReflectorKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.core.publisher.FluxCreate$ErrorAsyncSink: java.lang.String toString()>
<java.util.stream.Nodes$SizedCollectorTask: void <init>(java.util.Spliterator,java.util.stream.PipelineHelper,int)>-><java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: long estimateSize()>
<com.zaxxer.hikari.pool.PoolBase: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.HikariConfig: java.lang.String getCatalog()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.net.SocketImpl: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.OptionalInt: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: int compareComparables(java.lang.Class,java.lang.Object,java.lang.Object)>-><io.micrometer.core.instrument.Tag: int compareTo(java.lang.Object)>
<com.zaxxer.hikari.util.PropertyElf: java.lang.Object getProperty(java.lang.String,java.lang.Object)>-><java.lang.StringBuilder: void <init>()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.aspectj.weaver.JoinPointSignature: int hashCode()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.concurrent.LinkedBlockingQueue: void fullyUnlock()>
<com.zaxxer.hikari.pool.PoolBase: void executeSql(java.sql.Connection,java.lang.String,boolean)>-><com.zaxxer.hikari.pool.HikariProxyStatement: boolean execute(java.lang.String)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractSet: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<java.util.TreeMap: java.util.TreeMap$Entry getEntry(java.lang.Object)>-><io.micrometer.core.instrument.Tag: int compareTo(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.AVA: boolean equals(java.lang.Object)>
<org.aspectj.util.LangUtil: java.lang.StringBuffer stackToString(java.lang.Throwable,boolean)>-><java.io.StringWriter: void <init>()>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><java.util.concurrent.TimeUnit$3: long toSeconds(long)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.invoke.LambdaFormEditor$Transform: java.lang.String toString()>
<com.zaxxer.hikari.util.SuspendResumeLock: void release()>-><java.util.concurrent.Semaphore: void release()>
<java.beans.FeatureDescriptor: java.lang.String toString()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.JapaneseImperialCalendar: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.MediaType: java.lang.String toStringNoCharset()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.context.properties.source.ConfigurationPropertyName: java.lang.String buildToString()>-><java.nio.CharBuffer: java.lang.String toString()>
<org.apache.tomcat.util.http.parser.HttpParser: org.apache.tomcat.util.http.parser.SkipResult skipConstant(java.io.Reader,java.lang.String)>-><org.apache.tomcat.util.http.parser.HttpParser: int skipLws(java.io.Reader)>
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Hashtable: java.util.Set entrySet()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.Enum: java.lang.String toString()>
<org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.IdentityHashMap$EntrySet: boolean remove(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: java.lang.String toString()>-><java.lang.System: int identityHashCode(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.nio.CharBuffer: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.ChoiceFormat: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.StackTraceElement: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.lang.String toString()>-><java.lang.reflect.Field: java.lang.Class getType()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: void putAll(java.util.Map)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<org.springframework.validation.DataBinder: void initBeanPropertyAccess()>-><org.springframework.validation.DataBinder: org.springframework.validation.AbstractPropertyBindingResult createBeanPropertyBindingResult()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.nio.charset.Charset: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.logging.log4j.spi.Provider: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap: java.lang.String toString()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.security.authentication.RememberMeAuthenticationToken: int hashCode()>
<sun.text.normalizer.UCharacterProperty: sun.text.normalizer.UCharacterProperty getInstance()>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.ParsePosition: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.bouncycastle.asn1.ASN1TaggedObject: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.LatencyUtils.TimeCappedMovingAverageIntervalEstimator: java.lang.String toString()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.Object put(java.lang.String,java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.io.File: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.C2BConverter: void convert(java.nio.CharBuffer,java.nio.ByteBuffer)>-><java.nio.Buffer: java.nio.Buffer position(int)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.IdentityHashMap: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.LocalTime: java.lang.String toString()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.util.RawValue: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.web.method.ControllerAdviceBean: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.util.SuspendResumeLock: void <init>()>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariProxyConnection: boolean isValid(int)>-><com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<java.util.Collections$UnmodifiableCollection: boolean contains(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet: boolean contains(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.UtilityElf: java.util.concurrent.ThreadPoolExecutor createThreadPoolExecutor(int,java.lang.String,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)>-><java.util.concurrent.LinkedBlockingQueue: void <init>(int)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isDependent(java.lang.String,java.lang.String,java.util.Set)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<org.springframework.aop.framework.ProxyConfig: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FastDateFormat: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.ArrayListMultimap: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean remove(java.lang.Object)>
<org.springframework.security.oauth2.provider.OAuth2Request: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.awt.Point: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.TreeMap$Entry: java.lang.String toString()>
<org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter: org.springframework.security.oauth2.common.OAuth2AccessToken enhance(org.springframework.security.oauth2.common.OAuth2AccessToken,org.springframework.security.oauth2.provider.OAuth2Authentication)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.http.ResponseEntity: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.String toString()>
<java.util.Vector$ListItr: java.lang.Object previous()>-><java.util.Vector$Itr: void checkForComodification()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void beforePrototypeCreation(java.lang.String)>-><java.util.Collections$UnmodifiableCollection: boolean add(java.lang.Object)>
<com.zaxxer.hikari.util.ClockSource$NanosecondClockSource: long elapsedMillis0(long)>-><java.lang.System: long nanoTime()>
<com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker: void <init>(java.lang.String,com.zaxxer.hikari.metrics.PoolStats,io.micrometer.core.instrument.MeterRegistry)>-><io.micrometer.core.instrument.Gauge: io.micrometer.core.instrument.Gauge$Builder builder(java.lang.String,java.lang.Object,java.util.function.ToDoubleFunction)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.jar.Attributes: java.util.Set entrySet()>
<com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator: java.lang.Object get(java.lang.Object,java.lang.reflect.Field)>-><java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<org.apache.catalina.connector.OutputBuffer: void flush()>-><org.apache.catalina.connector.OutputBuffer: void doFlush(boolean)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.beans.IndexedPropertyDescriptor: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.security.x509.X509CRLEntryImpl: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Clock$SystemClock: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.Locale: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean remove(java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: void remove()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.p6spy.engine.common.CustomHashedHashSet$CustomHashedHashSetIterator: java.lang.Object next()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.sql.Timestamp: java.lang.String toString()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.MediaType: org.apache.tomcat.util.http.parser.MediaType parseMediaType(java.io.StringReader)>-><java.lang.String: java.lang.String toLowerCase(java.util.Locale)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.zone.ZoneRules: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.MapSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.String toString()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: void serialize(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.nio.CharBuffer: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.http.HttpHeaders: boolean equals(java.lang.Object)>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void handleMBeans(com.zaxxer.hikari.pool.HikariPool,boolean)>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<com.zaxxer.hikari.HikariDataSource: java.sql.Connection getConnection()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.NotAnnotationTypePattern: int hashCode()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<java.lang.reflect.Executable: java.lang.String sharedToGenericString(int,boolean)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)>-><java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.ArrayNode: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.base.Predicates$NotPredicate: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String getKey()>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<sun.reflect.UnsafeShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<com.zaxxer.hikari.pool.HikariProxyConnection: void setAutoCommit(boolean)>-><com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map$Entry)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: java.util.List values()>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: int hashCode()>
<com.sun.jmx.mbeanserver.Introspector: javax.management.NotCompliantMBeanException throwException(java.lang.Class,java.lang.Throwable)>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.HikariConfig: java.util.concurrent.ThreadFactory getThreadFactory()>
<com.zaxxer.hikari.util.ClockSource: long elapsedMillis(long,long)>-><com.zaxxer.hikari.util.ClockSource$MillisecondClockSource: long elapsedMillis0(long,long)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.codehaus.jackson.node.TextNode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: void validateNumerics()>-><org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.google.common.collect.ArrayListMultimap: boolean equals(java.lang.Object)>
<java.util.TreeMap$Entry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<com.zaxxer.hikari.pool.ProxyStatement: boolean execute(java.lang.String)>-><com.zaxxer.hikari.pool.ProxyConnection: void markCommitStateDirty()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.ArrayNode: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Integer: int intValue()>
<java.util.ComparableTimSort: void mergeLo(int,int,int,int)>-><io.micrometer.core.instrument.Tag: int compareTo(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.boot.ansi.AnsiBackground: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.PropertyPermission: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: int hashCode()>-><java.util.AbstractMap: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.WeakHashMap$Entry: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: java.lang.Object previous()>-><java.util.ArrayList$ListItr: java.lang.Object previous()>
<java.lang.reflect.Field: sun.reflect.generics.repository.FieldRepository getGenericInfo()>-><sun.reflect.generics.repository.FieldRepository: sun.reflect.generics.repository.FieldRepository make(java.lang.String,sun.reflect.generics.factory.GenericsFactory)>
<sun.reflect.UnsafeBooleanFieldAccessorImpl: boolean getBoolean(java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.Sink$OfInt: void accept(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector: void _sortProperties(java.util.Map)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void close()>-><com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker: void close()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<org.aspectj.weaver.patterns.TypePatternList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.security.oauth2.provider.client.BaseClientDetails: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><com.p6spy.engine.wrapper.ConnectionWrapper: boolean isValid(int)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.data.util.Pair: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.apache.tomcat.util.buf.StringCache$CharEntry: int hashCode()>
<sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putLongVolatile(java.lang.Object,long,long)>
<sun.reflect.UnsafeQualifiedShortFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Short: void <init>(short)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.security.x509.Extension: java.lang.String toString()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FormatCache$MultipartKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.SuspendResumeLock: void <init>(boolean)>-><java.lang.Object: void <init>()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><java.util.SubList$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.LocalDate: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: java.lang.String generatePoolName()>-><java.lang.String: java.lang.String valueOf(int)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.security.oauth2.provider.approval.Approval: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.OffsetDateTime: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeBooleanFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><sun.reflect.UnsafeFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.ClassTypeInformation: boolean equals(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<java.util.concurrent.ThreadPoolExecutor: void setKeepAliveTime(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.ThreadPoolExecutor: boolean allowsCoreThreadTimeOut()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.security.web.authentication.WebAuthenticationDetails: int hashCode()>
<com.zaxxer.hikari.pool.PoolBase: void executeSql(java.sql.Connection,java.lang.String,boolean)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void rollback()>
<io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags of(java.lang.Iterable)>-><io.micrometer.core.instrument.Tags: java.util.Iterator iterator()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><java.nio.CharBuffer: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><reactor.util.context.ContextN: java.lang.Object get(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void appendCollection(java.lang.Object,java.lang.StringBuilder,java.util.Set)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<java.util.Collections$UnmodifiableList$1: java.lang.Object previous()>-><java.util.Vector$ListItr: java.lang.Object previous()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><com.google.common.base.Joiner$3: int size()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.security.util.DerInputBuffer: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.ArrayList$SubList: java.lang.Object get(int)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.net.StandardSocketOptions$StdSocketOption: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableMap: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase$ConnectionSetupException: void <init>(java.lang.Throwable)>-><java.lang.Exception: void <init>(java.lang.Throwable)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void beforePrototypeCreation(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean add(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void appendCollection(java.lang.Object,java.lang.StringBuilder,java.util.Set)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.sun.jmx.mbeanserver.WeakIdentityHashMap$IdentityWeakReference: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.apache.catalina.connector.OutputBuffer: void realWriteChars(java.nio.CharBuffer)>-><java.nio.Buffer: int capacity()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.ArrayType: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeQualifiedShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<com.zaxxer.hikari.util.ClockSource: java.lang.String elapsedDisplayString0(long,long)>-><java.lang.StringBuilder: void <init>(java.lang.String)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.web.authentication.WebAuthenticationDetails: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl$ClassIndexWrapper: java.lang.String toString()>
<org.springframework.validation.DataBinder: void initBeanPropertyAccess()>-><org.springframework.util.Assert: void state(boolean,java.lang.String)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<java.util.Collections: void reverse(java.util.List)>-><java.util.AbstractList: java.util.ListIterator listIterator()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object[])>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.beans.factory.config.BeanDefinitionHolder: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.core.NamedInheritableThreadLocal: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.logging.log4j.Level: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.collections.ConcurrentCache: void put(java.lang.Object,java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: void clear()>
<org.springframework.util.ReflectionUtils: void handleReflectionException(java.lang.Exception)>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.DoubleNode: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$Variable: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.time.ZoneId: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.TypePatternList: int size()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.fasterxml.classmate.ResolvedType: java.lang.String getBriefDescription()>-><com.fasterxml.classmate.types.ResolvedObjectType: java.lang.StringBuilder appendBriefDescription(java.lang.StringBuilder)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.IterableSerializer: boolean hasSingleElement(java.lang.Iterable)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Character: char charValue()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><ch.qos.logback.classic.joran.ReconfigureOnChangeTask: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.text.FieldPosition: java.lang.String toString()>
<org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: int hashCode()>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Field findField(java.lang.String,java.lang.Class,boolean)>-><java.lang.reflect.Field: java.lang.String getName()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.savedrequest.DefaultSavedRequest: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.util.Set entrySet()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.lang.Object next()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.springframework.security.web.savedrequest.DefaultSavedRequest: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<org.springframework.beans.DirectFieldAccessor$FieldPropertyHandler: java.lang.Object getValue()>-><java.lang.reflect.Field: java.lang.String getName()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.awt.image.ColorModel: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: int previousIndex()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.asm.ConstantDynamic: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedShortFieldAccessorImpl: short getShort(java.lang.Object)>-><sun.misc.Unsafe: short getShortVolatile(java.lang.Object,long)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<reactor.core.publisher.Traces: java.lang.String[] extractOperatorAssemblyInformationParts(java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.LocalTime: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: int hashCode()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.mapping.model.Property: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>-><com.zaxxer.hikari.pool.ProxyLeakTask: void cancel()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.node.BinaryNode: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.Collections$UnmodifiableCollection: boolean add(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection: java.lang.String toString()>-><java.util.concurrent.LinkedBlockingQueue: java.lang.String toString()>
<org.springframework.web.util.NestedServletException: java.lang.String getMessage()>-><java.lang.Throwable: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.logging.log4j.spi.Provider: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><com.zaxxer.hikari.pool.ProxyConnection: int getTransactionIsolationState()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$EmptyList: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.LinkedHashMap$LinkedKeySet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: int hashCode()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: double getDouble(java.lang.Object)>-><sun.misc.Unsafe: double getDouble(java.lang.Object,long)>
<com.zaxxer.hikari.util.PropertyElf: java.util.Set getPropertyNames(java.lang.Class)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><reactor.util.context.Context1: java.lang.Object getValue()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><com.google.common.base.Joiner$3: int size()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.time.temporal.WeekFields: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<org.springframework.security.web.savedrequest.DefaultSavedRequest: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: java.util.Iterator iterator()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: int hashCode()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.OptionalLong: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.TextNode: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.security.Provider$ServiceKey: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.nio.ch.SocketOptionRegistry$RegistryKey: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.management.ObjectInstance: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<sun.reflect.UnsafeStaticShortFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><sun.reflect.UnsafeStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<org.aspectj.bridge.context.CompilationAndWeavingContext: org.aspectj.bridge.context.ContextFormatter getFormatter(org.aspectj.bridge.context.CompilationAndWeavingContext$ContextStackEntry)>-><java.util.HashMap: boolean containsKey(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.NullNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.BooleanNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.baomidou.dynamic.datasource.DynamicGroupDataSource: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntrySet: int size()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.net.URI: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><javax.management.RuntimeMBeanException: java.lang.Throwable getCause()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><com.sun.jmx.mbeanserver.JmxMBeanServer$1: java.lang.Object run()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyLeakTask: void cancel()>-><org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.web.context.support.ServletContextResource: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.String toString()>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>-><java.lang.String: int hashCode()>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.type.MapType: java.lang.String toString()>
<org.springframework.core.annotation.TypeMappedAnnotation: java.lang.ClassLoader getClassLoader()>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: boolean hasNext()>
<java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>-><org.aspectj.bridge.IMessage$Kind: int compareTo(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.MethodOverrides: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.PropertyName: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolEntry: java.sql.Connection close()>-><java.util.concurrent.FutureTask: boolean isDone()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.util.HashMap$Node: java.lang.Object getValue()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.LinkedHashMap$LinkedEntrySet: boolean remove(java.lang.Object)>
<org.springframework.beans.factory.support.ConstructorResolver: org.springframework.beans.BeanWrapper autowireConstructor(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.reflect.Constructor[],java.lang.Object[])>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.text.AttributeEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.MemberImpl: int hashCode()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FormatCache$MultipartKey: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Hashtable: java.util.Set entrySet()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.UEncoder: void urlEncode(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><java.lang.Character: char forDigit(int,int)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><io.lettuce.core.masterslave.RedisMasterSlaveNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.Timer$Builder: io.micrometer.core.instrument.Timer$Builder maximumExpectedValue(java.time.Duration)>-><java.lang.Long: java.lang.Long valueOf(long)>
<com.zaxxer.hikari.util.ConcurrentBag: java.util.List values(int)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArraySet: boolean equals(java.lang.Object)>
<org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>-><org.springframework.expression.common.CompositeStringExpression: java.lang.String getExpressionString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><javax.management.ReflectionException: java.lang.Throwable getCause()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: int hashCode()>
<sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: int hashCode()>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>-><java.lang.reflect.Field: sun.reflect.generics.repository.FieldRepository getGenericInfo()>
<com.zaxxer.hikari.pool.PoolEntry: long getMillisSinceBorrowed()>-><com.zaxxer.hikari.util.ClockSource: long elapsedMillis(long)>
<java.util.ComparableTimSort: int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int)>-><com.fasterxml.classmate.util.ClassKey: int compareTo(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: java.lang.Object next()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: int getInt(java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.BeanDefinitionHolder: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.UEncoder: void urlEncode(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><org.apache.tomcat.util.buf.AbstractChunk: int getEnd()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.util.LinkedMultiValueMap: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Indexer: void generateCode(org.springframework.asm.MethodVisitor,org.springframework.expression.spel.CodeFlow)>-><java.lang.reflect.Field: java.lang.String getName()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$UnmodifiableCollection: int size()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$SynchronizedList: java.lang.Object get(int)>
<com.zaxxer.hikari.pool.HikariPool: void logPoolState(java.lang.String[])>-><ch.qos.logback.classic.Logger: boolean isDebugEnabled()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.cglib.core.Signature: boolean equals(java.lang.Object)>
<org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.PropertyPermission: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.WeakHashMap$EntrySet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.GmtTimeZone: boolean equals(java.lang.Object)>
<org.aspectj.weaver.UnresolvedType: java.lang.String signatureToName(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.util.AbstractConstant: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.reflect.Method: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.DependencyDescriptor: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.awt.Rectangle: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ClockSource: java.lang.String elapsedDisplayString0(long,long)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.alibaba.fastjson.util.TypeUtils: java.lang.annotation.Annotation getAnnotation(java.lang.reflect.Field,java.lang.Class)>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<javax.management.MBeanPermission: void setClassName(java.lang.String)>-><java.lang.String: boolean endsWith(java.lang.String)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.net.httpserver.HttpConnection: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.jar.Attributes: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.WildAnnotationTypePattern: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Field: java.lang.Class getType()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.Long getMenuId()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: void <init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet)>-><java.util.concurrent.LinkedBlockingQueue: java.util.Iterator iterator()>
<sun.reflect.UnsafeStaticByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><cn.hutool.core.map.MapProxy: int size()>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><java.lang.Throwable: java.lang.Throwable getCause()>
<org.aspectj.weaver.MemberImpl: int compareTo(org.aspectj.weaver.Member)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String getSignature()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<io.netty.channel.nio.SelectedSelectionKeySet: boolean add(java.nio.channels.SelectionKey)>-><io.netty.channel.nio.SelectedSelectionKeySet: void increaseCapacity()>
<org.aspectj.weaver.MemberImpl: int hashCode()>-><java.lang.String: int hashCode()>
<sun.misc.JarIndex: void merge(sun.misc.JarIndex,java.lang.String)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.validation.ObjectError: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<java.util.Hashtable: void putAll(java.util.Map)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: void setValue(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object set(int,java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><com.zaxxer.hikari.pool.PoolBase: void shutdownNetworkTimeoutExecutor()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: boolean hasNext()>
<org.apache.tomcat.util.http.parser.HttpParser: java.lang.String readToken(java.io.Reader)>-><java.lang.StringBuilder: void <init>()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.EnumMap: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.LocalTime: boolean equals(java.lang.Object)>
<com.p6spy.engine.wrapper.ConnectionWrapper: void commit()>-><com.p6spy.engine.event.CompoundJdbcEventListener: void onBeforeCommit(com.p6spy.engine.common.ConnectionInformation)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyDatabaseMetaData: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSON: java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] toByteArray()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><org.springframework.util.LinkedCaseInsensitiveMap$ValuesIterator: java.lang.Object next()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Hashtable$KeySet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.metrics.PoolStats getPoolStats()>-><com.zaxxer.hikari.pool.HikariPool$1: void <init>(com.zaxxer.hikari.pool.HikariPool,long)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.InetSocketAddress: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.springframework.util.LinkedCaseInsensitiveMap$EntryIterator: boolean hasNext()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.crypto.CryptoPermission: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.Inet6Address: boolean equals(java.lang.Object)>
<org.aspectj.weaver.MemberImpl: int hashCode()>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.security.jca.ProviderConfig: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Collections$UnmodifiableCollection: boolean add(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<org.springframework.cglib.core.EmitUtils$4: void processCase(int,org.springframework.asm.Label)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object get(int)>
<org.apache.tomcat.util.buf.UEncoder: org.apache.tomcat.util.buf.CharChunk encodeURL(java.lang.String,int,int)>-><org.apache.tomcat.util.buf.UEncoder: void urlEncode(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.concurrent.CopyOnWriteArraySet: java.util.Iterator iterator()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.format.support.FormattingConversionService$AnnotationParserConverter: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.GeneralName: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.support.StandardTypeComparator: int compare(java.lang.Object,java.lang.Object)>-><io.micrometer.core.instrument.Tag: int compareTo(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.util.LangUtil: java.lang.String unqualifiedClassName(java.lang.Object)>-><org.aspectj.util.LangUtil: java.lang.String unqualifiedClassName(java.lang.Class)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$InstantPrinterParser: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl$ClassIndexWrapper: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.RenderingHints$Key: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.String toString()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.map.JsonMappingException: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.ansi.Ansi8BitColor: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.Thread: java.lang.String toString()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.TypeVariableTypeInformation: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.codehaus.jackson.map.type.MapLikeType: boolean equals(java.lang.Object)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.stream.SpinedBuffer: java.lang.String toString()>
<org.codehaus.jackson.map.JsonMappingException: void _appendPathDesc(java.lang.StringBuilder)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<sun.reflect.UnsafeStaticBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.base.Joiner$3: int size()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.Object put(java.lang.String,java.lang.Object)>-><org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.temporal.WeekFields$ComputedDayOfField: java.lang.String toString()>
<java.time.format.DateTimeFormatterBuilder$ZoneTextPrinterParser: java.time.format.DateTimeFormatterBuilder$PrefixTree getTree(java.time.format.DateTimeParseContext)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getQueryString()>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getQueryString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: boolean hasNext()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.alibaba.fastjson.parser.ParseContext: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.UsernamePasswordAuthenticationToken: java.lang.Object getPrincipal()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.LocalDateTime: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.SubList: int size()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: java.lang.String toString()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.aspectj.weaver.patterns.ReferencePointcut: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.String toString()>
<org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnnotationTypePattern: boolean isForParameterAnnotationMatch()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.lettuce.core.masterslave.RedisMasterSlaveNode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.temporal.ChronoField: java.lang.String toString()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.math.BigInteger: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.config.DependencyDescriptor: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: boolean useWeakThreadLocals()>-><java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.mapping.model.Property: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.concurrent.CopyOnWriteArraySet: boolean remove(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Long: long longValue()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><com.zaxxer.hikari.pool.HikariPool: void closeConnection(com.zaxxer.hikari.pool.PoolEntry,java.lang.String)>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Date: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.alibaba.fastjson.util.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><ch.qos.logback.core.UnsynchronizedAppenderBase: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanOperationInfo: boolean equals(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.Hashtable$KeySet: boolean remove(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.format.DateTimeFormatterBuilder$WeekBasedFieldPrinterParser: java.lang.String toString()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: void serializeWithType(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeStaticShortFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.DateFormatSymbols: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.chrono.AbstractChronology: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.validation.FieldError: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<sun.reflect.UnsafeDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Float: float floatValue()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeLongFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeLongFieldAccessorImpl: long getLong(java.lang.Object)>
<org.apache.tomcat.util.http.parser.HttpParser: java.lang.String unquote(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<sun.reflect.UnsafeStaticLongFieldAccessorImpl: long getLong(java.lang.Object)>-><sun.misc.Unsafe: long getLong(java.lang.Object,long)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.bouncycastle.asn1.DERVisibleString: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.TimeUnit$5: long convert(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.TimeUnit$1: long toMinutes(long)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.data.mapping.model.Property: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyLeakTaskFactory: com.zaxxer.hikari.pool.ProxyLeakTask schedule(com.zaxxer.hikari.pool.PoolEntry)>-><com.zaxxer.hikari.pool.ProxyLeakTaskFactory: com.zaxxer.hikari.pool.ProxyLeakTask scheduleNewTask(com.zaxxer.hikari.pool.PoolEntry)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.aop.framework.JdkDynamicAopProxy: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.validation.FieldError: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.asm.ConstantDynamic: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.AnyGetterWriter: void getAndSerialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.Object: java.lang.Class getClass()>
<org.apache.catalina.connector.OutputBuffer: void flushByteBuffer()>-><org.apache.catalina.connector.OutputBuffer: void clear(java.nio.Buffer)>
<sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putIntVolatile(java.lang.Object,long,int)>
<sun.reflect.UnsafeShortFieldAccessorImpl: short getShort(java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<org.aspectj.weaver.JoinPointSignature: org.aspectj.weaver.UnresolvedType getReturnType()>-><org.aspectj.weaver.MemberImpl: org.aspectj.weaver.UnresolvedType getReturnType()>
<com.zaxxer.hikari.pool.HikariPool: java.util.concurrent.ScheduledExecutorService initializeHouseKeepingExecutorService()>-><com.zaxxer.hikari.HikariConfig: java.util.concurrent.ScheduledExecutorService getScheduledExecutor()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.String toString()>
<cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>-><java.util.Date: int hashCode()>
<com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.pool.PoolEntry createPoolEntry()>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.OptionalDouble: boolean equals(java.lang.Object)>
<java.util.Collections: void reverse(java.util.List)>-><com.alibaba.fastjson.JSONArray: int size()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.nio.ByteBuffer: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><java.lang.reflect.Field: java.lang.String toString()>
<com.zaxxer.hikari.util.UtilityElf: java.lang.Object createInstance(java.lang.String,java.lang.Class,java.lang.Object[])>-><java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean contains(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet: boolean contains(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeStaticIntegerFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: java.lang.String generatePoolName()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.web.util.pattern.SingleCharWildcardedPathElement: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putDoubleVolatile(java.lang.Object,long,double)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.reflect.Proxy$KeyX: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>-><org.apache.catalina.connector.Response$PrivilegedDoIsEncodable: java.lang.Object run()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.AbstractMap$SimpleEntry: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.awt.image.PackedColorModel: boolean equals(java.lang.Object)>
<java.util.Collections: void reverse(java.util.List)>-><java.util.Vector$ListItr: java.lang.Object previous()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.Collections$EmptyList: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.provider.PolicyParser$PermissionEntry: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<com.zaxxer.hikari.pool.PoolBase: void initializeDataSource()>-><com.zaxxer.hikari.HikariConfig: java.util.Properties getDataSourceProperties()>
<org.apache.catalina.connector.OutputBuffer: int transfer(byte[],int,int,java.nio.ByteBuffer)>-><java.nio.Buffer: int remaining()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.core.env.CompositePropertySource: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: java.lang.Object previous()>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: java.util.ListIterator getDelegateListIterator()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><com.zaxxer.hikari.pool.HikariPool: void logPoolState(java.lang.String[])>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.Boolean: java.lang.String toString()>
<org.springframework.security.web.authentication.WebAuthenticationDetails: boolean equals(java.lang.Object)>-><org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String getRemoteAddress()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeBooleanFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.bouncycastle.asn1.ASN1Integer: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.crypto.CryptoPermission: java.lang.String toString()>
<org.apache.catalina.connector.OutputBuffer: void clear(java.nio.Buffer)>-><java.nio.Buffer: java.nio.Buffer limit(int)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.awt.Font: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.ImmutableTag: int hashCode()>-><java.lang.String: int hashCode()>
<com.alibaba.fastjson.util.FieldInfo: void <init>(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Field,java.lang.Class,java.lang.reflect.Type,int,int,int,com.alibaba.fastjson.annotation.JSONField,com.alibaba.fastjson.annotation.JSONField,java.lang.String,java.util.Map)>-><java.lang.reflect.Field: int getModifiers()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.core.publisher.FluxCreate$LatestAsyncSink: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.beans.factory.BeanCreationException: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariProxyConnection: void rollback()>-><com.zaxxer.hikari.pool.ProxyConnection: void rollback()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.ChoiceFormat: boolean equals(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<org.hibernate.validator.internal.util.annotation.AnnotationProxy: boolean equals(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.WithincodePointcut: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void initializeDataSource()>-><com.zaxxer.hikari.HikariConfig: java.lang.String getPassword()>
<org.aspectj.util.LangUtil: java.lang.StringBuffer stackToString(java.lang.Throwable,boolean)>-><java.io.PrintWriter: void <init>(java.io.Writer)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: boolean hasNext()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.access.SecurityConfig: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.core.convert.support.GenericConversionService$ConvertersForPair: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.security.AllPermission: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void setHealthCheckRegistry(java.lang.Object)>-><com.zaxxer.hikari.metrics.dropwizard.CodahaleHealthChecker: void registerHealthChecks(com.zaxxer.hikari.pool.HikariPool,com.zaxxer.hikari.HikariConfig,com.codahale.metrics.health.HealthCheckRegistry)>
<org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setupConnection(java.sql.Connection)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void setReadOnly(boolean)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<sun.reflect.UnsafeStaticLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Long: long longValue()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object[])>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><io.netty.util.AbstractConstant: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean remove(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySetIterator: void remove()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FastDateFormat: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<org.apache.catalina.connector.OutputBuffer: int transfer(byte[],int,int,java.nio.ByteBuffer)>-><java.lang.Math: int min(int,int)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.buffer.SwappedByteBuf: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.context.support.AbstractApplicationContext: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$CompositePrinterParser: java.lang.String toString()>
<org.apache.catalina.connector.OutputBuffer: boolean isFull(java.nio.Buffer)>-><java.nio.Buffer: int capacity()>
<sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Integer: int intValue()>
<org.aspectj.weaver.JoinPointSignature: int compareTo(org.aspectj.weaver.Member)>-><org.aspectj.weaver.MemberImpl: int compareTo(org.aspectj.weaver.Member)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.web.context.support.ServletContextResource: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.aspectj.weaver.MemberImpl: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<java.sql.DriverManager: java.sql.Driver getDriver(java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: boolean hasNext()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedByteFieldAccessorImpl: byte getByte(java.lang.Object)>-><sun.misc.Unsafe: byte getByteVolatile(java.lang.Object,long)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<java.util.Collections: void reverse(java.util.List)>-><java.util.SubList: java.util.ListIterator listIterator(int)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><java.lang.reflect.Field: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<org.apache.tomcat.util.http.parser.HttpParser: java.lang.String readQuotedString(java.io.Reader,boolean)>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.ArrayType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serializeContents(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.WithincodePointcut: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.IterableSerializer: boolean hasSingleElement(java.lang.Iterable)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<org.springframework.web.context.request.ServletRequestAttributes: void registerSessionDestructionCallback(java.lang.String,java.lang.Runnable)>-><java.lang.StringBuilder: void <init>()>
<org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: float getFloat(java.lang.Object)>-><sun.misc.Unsafe: float getFloatVolatile(java.lang.Object,long)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.management.openmbean.CompositeType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Period: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.EmitUtils: void member_helper_type(org.springframework.cglib.core.CodeEmitter,java.util.List,org.springframework.cglib.core.ObjectSwitchCallback,org.springframework.cglib.core.EmitUtils$ParameterTyper,org.springframework.asm.Label,org.springframework.asm.Label,java.util.BitSet)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$EmptyList: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.invoke.MethodType: java.lang.String toString()>
<org.aspectj.util.LangUtil: boolean isEmpty(java.lang.String)>-><java.lang.String: int length()>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: int hashCode()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArraySet: boolean equals(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<sun.reflect.UnsafeStaticIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>-><java.lang.Boolean: int hashCode()>
<com.zaxxer.hikari.util.ClockSource$MillisecondClockSource: long elapsedNanos0(long,long)>-><java.util.concurrent.TimeUnit$3: long toNanos(long)>
<com.zaxxer.hikari.util.FastList: void <init>(java.lang.Class,int)>-><java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<java.util.Hashtable: java.lang.String toString()>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags and(java.lang.Iterable)>-><io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags of(java.lang.Iterable)>
<java.util.TreeMap: java.util.TreeMap$Entry getEntry(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: int compareTo(java.lang.Object)>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<sun.reflect.UnsafeStaticFloatFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><sun.reflect.UnsafeStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.scheduling.config.ScheduledTask: java.lang.String toString()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ClockSource: long elapsedNanos(long)>-><com.zaxxer.hikari.util.ClockSource$MillisecondClockSource: long elapsedNanos0(long)>
<org.aspectj.bridge.AbortException: void printStackTrace(java.io.PrintStream)>-><org.aspectj.bridge.AbortException: org.aspectj.bridge.IMessage getIMessage()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.management.MBeanParameterInfo: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.sql.Date: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.AVA: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Instant: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.JSON: java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<com.zaxxer.hikari.pool.PoolEntry: void resetConnectionState(com.zaxxer.hikari.pool.ProxyConnection,int)>-><com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanConstructorInfo: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.aop.framework.JdkDynamicAopProxy: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.AttributedString$AttributedStringIterator: boolean equals(java.lang.Object)>
<org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.catalina.connector.OutputBuffer: void append(byte[],int,int)>-><org.apache.catalina.connector.OutputBuffer: int transfer(byte[],int,int,java.nio.ByteBuffer)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.IterableSerializer: boolean hasSingleElement(java.lang.Iterable)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.concurrent.atomic.AtomicLongArray: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)>-><java.util.Hashtable: java.lang.Object clone()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.io.FilePermission: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onAfterCommit(com.p6spy.engine.common.ConnectionInformation,long,java.sql.SQLException)>-><java.util.ArrayList: java.util.Iterator iterator()>
<sun.reflect.UnsafeFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Long: long longValue()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.sun.beans.WildcardTypeImpl: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyLeakTask: void <init>(com.zaxxer.hikari.pool.PoolEntry)>-><java.lang.Exception: void <init>(java.lang.String)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<sun.security.util.DisabledAlgorithmConstraints$Constraints: boolean permits(java.security.Key)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.FloatNode: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.beans.factory.InjectionPoint: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<java.util.AbstractCollection: java.lang.Object[] toArray()>-><com.google.common.base.Joiner$3: int size()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: int size()>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<io.micrometer.core.instrument.distribution.DistributionStatisticConfig$Builder: io.micrometer.core.instrument.distribution.DistributionStatisticConfig$Builder maximumExpectedValue(java.lang.Long)>-><io.micrometer.core.instrument.distribution.DistributionStatisticConfig: java.lang.Long access$502(io.micrometer.core.instrument.distribution.DistributionStatisticConfig,java.lang.Long)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.Object: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.provider.client.BaseClientDetails: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariProxyConnection: boolean isReadOnly()>-><com.p6spy.engine.wrapper.ConnectionWrapper: boolean isReadOnly()>
<com.alibaba.fastjson.serializer.JavaBeanSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.imageio.ImageTypeSpecifier$Interleaved: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorImpl: java.lang.String getSetMessage(java.lang.String,java.lang.String)>-><sun.reflect.UnsafeFieldAccessorImpl: java.lang.String getQualifiedFieldName()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><java.nio.CharBuffer: int compareTo(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.TreeMap$EntrySet: java.util.Iterator iterator()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String toString()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.security.authentication.RememberMeAuthenticationToken: int hashCode()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Integer: int intValue()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.baomidou.dynamic.datasource.DynamicGroupDataSource: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ClockSource: java.lang.String elapsedDisplayString0(long,long)>-><java.lang.Math: long abs(long)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void recordBorrowStats(com.zaxxer.hikari.pool.PoolEntry,long)>-><com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker: void recordConnectionAcquiredNanos(long)>
<java.lang.reflect.Field: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>-><java.util.Collections$EmptyMap: java.lang.Object get(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setupConnection(java.sql.Connection)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void setCatalog(java.lang.String)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.util.locale.BaseLocale: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ConcreteCflowPointcut: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ModifiersPattern: java.lang.String toString()>-><java.lang.reflect.Modifier: java.lang.String toString(int)>
<com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker: void <init>(java.lang.String,com.zaxxer.hikari.metrics.PoolStats,com.codahale.metrics.MetricRegistry)>-><com.codahale.metrics.MetricRegistry: java.lang.String name(java.lang.String,java.lang.String[])>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.management.ObjectName: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.util.TokenBuffer: java.lang.String toString()>
<sun.reflect.UnsafeDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.core.publisher.FluxCreate$IgnoreSink: java.lang.String toString()>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeByteFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.BitSet: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.stream.ReferencePipeline$11$1: void accept(java.lang.Object)>-><java.util.stream.Nodes$SpinedNodeBuilder: void accept(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: java.lang.StringBuilder _appendSourceDesc(java.lang.StringBuilder)>-><java.nio.CharBuffer: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.WithinAnnotationPointcut: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void appendMap(java.lang.Object,java.lang.StringBuilder,java.util.Set)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.listener.PatternTopic: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.KeyFactory$Generator: void generateClass(org.springframework.asm.ClassVisitor)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.text.DateFormatSymbols: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Duration: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$SetFromMap: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.core.Scannable$Attr$1: java.lang.String toString()>
<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore$TokenExpiry: int compareTo(java.lang.Object)>-><org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore$TokenExpiry: int compareTo(java.util.concurrent.Delayed)>
<ch.qos.logback.core.helpers.ThrowableToStringArray: java.lang.String formatFirstLine(java.lang.Throwable,java.lang.StackTraceElement[])>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.sql.Timestamp: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy: void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor)>-><java.util.concurrent.ThreadPoolExecutor: boolean isShutdown()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.OffsetDateTime: java.lang.String toString()>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<io.netty.util.internal.logging.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.BCException: void printStackTrace()>
<org.aspectj.bridge.MessageUtil: java.lang.String renderMessage(org.aspectj.bridge.IMessage,boolean)>-><org.aspectj.util.LangUtil: java.lang.String renderExceptionShort(java.lang.Throwable)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><java.util.concurrent.TimeUnit$4: long toMillis(long)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotAnnotationTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.Package: java.lang.String toString()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<org.slf4j.helpers.Util: void report(java.lang.String,java.lang.Throwable)>-><org.aspectj.weaver.BCException: void printStackTrace()>
<java.sql.SQLException: void <init>(java.lang.String,java.lang.String)>-><java.lang.Exception: void <init>(java.lang.String)>
<cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.bouncycastle.asn1.DERPrintableString: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: boolean shouldCreateAnotherConnection()>-><com.zaxxer.hikari.util.ConcurrentBag: int getWaitingThreadCount()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.Collections$UnmodifiableCollection: java.lang.String toString()>
<org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.zaxxer.hikari.HikariConfig: java.lang.String generatePoolName()>-><java.lang.StringBuilder: void <init>(java.lang.String)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.security.pkcs.PKCS9Attribute: java.lang.String toString()>
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>-><org.apache.catalina.connector.OutputBuffer$PrivilegedCreateConverter: java.lang.Object run()>
<org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.fasterxml.classmate.ResolvedType: java.lang.String getBriefDescription()>-><java.lang.StringBuilder: void <init>()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.CompositeType: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.net.URL: boolean equals(java.lang.Object)>
<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><java.nio.CharBuffer: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.AllPermission: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.bridge.MessageUtil: java.lang.String addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)>-><java.io.PrintWriter: void println()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void checkDriverSupport(java.sql.Connection)>-><com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><reactor.util.function.Tuple4: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.jar.Manifest: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.HashMap$Node: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.security.oauth2.provider.client.BaseClientDetails: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.google.common.base.Predicates$ObjectPredicate$2: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.Collections$SingletonList: java.util.Iterator iterator()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.text.AttributeEntry: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.MonthDay: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.codehaus.jackson.node.BooleanNode: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>-><org.aspectj.weaver.patterns.NamePattern: int hashCode()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.MiscCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.aspectj.util.LangUtil: void elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)>-><java.util.StringTokenizer: java.lang.String nextToken()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.sun.jmx.mbeanserver.WeakIdentityHashMap$IdentityWeakReference: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.JumboEnumSet: int size()>
<org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.format.support.FormattingConversionService$ParserConverter: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><io.lettuce.core.internal.AbstractInvocationHandler: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.expression.spel.support.StandardTypeLocator: java.lang.Class findType(java.lang.String)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>
<java.sql.DriverManager: java.util.Enumeration getDrivers()>-><java.util.Vector: void addElement(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>-><reactor.util.concurrent.SpscArrayQueue: java.lang.Object[] toArray()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$CharLiteralPrinterParser: java.lang.String toString()>
<java.time.format.DateTimeFormatter: java.time.format.DateTimeParseException createError(java.lang.CharSequence,java.lang.RuntimeException)>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><java.nio.CharBuffer: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.IntNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$SetFromMap: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><java.nio.CharBuffer: java.lang.String toString()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.EventObject: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><java.nio.CharBuffer: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.ObjectName: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.IntNode: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.web.authentication.WebAuthenticationDetails: boolean equals(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><org.springframework.util.LinkedCaseInsensitiveMap$EntryIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.ObjectNode: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<org.springframework.cglib.core.CollectionUtils: java.util.Map bucket(java.util.Collection,org.springframework.cglib.core.Transformer)>-><java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap: java.util.Iterator iteratorOrListIterator(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyConnection: void rollback()>-><com.p6spy.engine.wrapper.ConnectionWrapper: void rollback()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.reflect.Parameter: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.Response: boolean doIsEncodeable(org.apache.catalina.Context,org.apache.catalina.connector.Request,org.apache.catalina.Session,java.lang.String)>-><java.net.URL: int getPort()>
<java.lang.ThreadLocal$SuppliedThreadLocal: java.lang.Object initialValue()>-><java.util.stream.ReduceOps$Box: java.lang.Object get()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariDataSource: void close()>-><org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<sun.reflect.UnsafeStaticFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Integer: int intValue()>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.management.ObjectInstance: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.time.Instant: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.net.URI: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.map.ser.BeanSerializer: java.lang.String toString()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object remove(int)>
<org.springframework.context.support.ApplicationContextAwareProcessor: void invokeAwareInterfaces(java.lang.Object)>-><org.springframework.web.servlet.HttpServletBean: void setEnvironment(org.springframework.core.env.Environment)>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><com.p6spy.engine.wrapper.StatementWrapper: void setQueryTimeout(int)>
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Field findField(java.lang.String,java.lang.Class,boolean)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.Collections: void reverse(java.util.List)>-><java.util.AbstractList: java.util.ListIterator listIterator(int)>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><java.nio.CharBuffer: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<org.aspectj.bridge.MessageUtil: java.lang.String addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)>-><java.io.StringWriter: void close()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.IntNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.time.zone.ZoneOffsetTransitionRule: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.nio.charset.Charset: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.lang.reflect.Field: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.alibaba.fastjson.JSONArray: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.AttributedCharacterIterator$Attribute: boolean equals(java.lang.Object)>
<io.netty.channel.nio.NioEventLoop: void processSelectedKeysOptimized()>-><java.nio.channels.SelectionKey: java.lang.Object attachment()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanParameterInfo: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><java.lang.StringBuilder: void <init>()>
<org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void recordBorrowTimeoutStats(long)>-><com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker: void recordConnectionAcquiredNanos(long)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.LambdaFormEditor$Transform: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.security.provider.PolicyFile$SelfPermission: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.web.method.ControllerAdviceBean: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.core.publisher.MonoOnAssembly: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.util.ClassUtil: java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean)>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<java.util.Collections$EmptyListIterator: java.lang.Object previous()>-><java.util.NoSuchElementException: void <init>()>
<com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>-><org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object[])>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.codehaus.jackson.node.TextNode: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object)>
<java.util.ComparableTimSort: int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int)>-><org.aspectj.bridge.IMessage$Kind: int compareTo(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.misc.Unsafe: java.lang.Object getObjectVolatile(java.lang.Object,long)>
<java.util.stream.ReferencePipeline$Head: boolean opIsStateful()>-><java.lang.UnsupportedOperationException: void <init>()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeStaticFloatFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<org.apache.tomcat.util.buf.C2BConverter: void convert(java.nio.CharBuffer,java.nio.ByteBuffer)>-><java.nio.CharBuffer: java.nio.CharBuffer wrap(char[],int,int)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariProxyConnection: void commit()>-><com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><java.lang.reflect.Field: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><java.nio.CharBuffer: int hashCode()>
<org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.Pair: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList: java.lang.Object get(int)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object get(int)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.time.ZonedDateTime: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.Byte: java.lang.String toString()>
<java.nio.CharBuffer: int compareTo(java.nio.CharBuffer)>-><java.nio.HeapCharBuffer: char get(int)>
<org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.SubList$1: boolean hasNext()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.HttpServletBean: void setEnvironment(org.springframework.core.env.Environment)>-><org.springframework.util.Assert: void isInstanceOf(java.lang.Class,java.lang.Object,java.lang.String)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><java.lang.reflect.Field: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.asm.Label: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<org.aspectj.weaver.patterns.HandlerPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.invoke.LambdaForm: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.DecimalNode: boolean equals(java.lang.Object)>
<org.springframework.util.CollectionUtils$MultiValueMapAdapter: boolean equals(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.BinaryNode: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<java.util.TreeMap$EntrySet: boolean contains(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.security.UnresolvedPermission: boolean equals(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.Object getValue(java.lang.Object)>-><java.lang.Throwable: java.lang.String getMessage()>
<com.zaxxer.hikari.pool.PoolBase: long getLoginTimeout()>-><java.util.concurrent.TimeUnit$4: long toSeconds(long)>
<org.springframework.util.ReflectionUtils: void makeAccessible(java.lang.reflect.Field)>-><java.lang.reflect.AccessibleObject: void setAccessible(boolean)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><reactor.util.function.Tuple4: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.buffer.SwappedByteBuf: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.EnumMap: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.ArgsPointcut: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.access.SecurityConfig: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeStaticLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.ClassInfo: boolean equals(java.lang.Object)>
<org.aspectj.weaver.UnresolvedType: java.lang.String signatureToName(java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ClockSource: java.lang.String elapsedDisplayString0(long,long)>-><java.util.concurrent.TimeUnit$7: long convert(long,java.util.concurrent.TimeUnit)>
<java.util.Hashtable: java.lang.String toString()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.Hashtable$Entry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: int hashCode()>
<com.zaxxer.hikari.HikariConfig: void logConfiguration()>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object)>
<org.springframework.security.oauth2.provider.BaseRequest: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.String,java.lang.String)>-><sun.reflect.UnsafeFieldAccessorImpl: java.lang.String getSetMessage(java.lang.String,java.lang.String)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.atomic.AtomicReference: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.SubList$1: java.lang.Object next()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.node.ObjectNode: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.util.Date getCreateTime()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.format.Parsed: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.security.x509.AVA: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.AVA: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: java.lang.Object previous()>-><java.util.ArrayList$SubList$1: java.lang.Object previous()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.ClockSource$MillisecondClockSource: long elapsedNanos0(long)>-><java.util.concurrent.TimeUnit$3: long toNanos(long)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: java.lang.Object next()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><io.netty.util.AbstractConstant: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cn.hutool.core.date.format.FormatCache$MultipartKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.AttributedString$AttributedStringIterator: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Short: short shortValue()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool$HouseKeeper: void <init>(com.zaxxer.hikari.pool.HikariPool)>-><com.zaxxer.hikari.util.ClockSource: long plusMillis(long,long)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.reflect.Proxy$Key2: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: int hashCode()>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.security.x509.GeneralName: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$LocalizedPrinterParser: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void logPoolState(java.lang.String[])>-><com.zaxxer.hikari.pool.HikariPool: int getActiveConnections()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String getMenuName()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.nio.CharBuffer: java.lang.String toString()>
<io.micrometer.core.instrument.Tags$ArrayIterator: void <init>(io.micrometer.core.instrument.Tags)>-><java.lang.Object: void <init>()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.buffer.SwappedByteBuf: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<org.springframework.web.context.request.ServletRequestAttributes: java.lang.Object getAttribute(java.lang.String,int)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Object[])>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.StackTraceElement: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String toString()>
<java.util.Collections$EmptySet: boolean containsAll(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<org.springframework.web.context.request.AbstractRequestAttributesScope: void registerDestructionCallback(java.lang.String,java.lang.Runnable)>-><org.springframework.web.context.request.ServletRequestAttributes: void registerDestructionCallback(java.lang.String,java.lang.Runnable,int)>
<java.lang.Object: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.image.ComponentColorModel: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.MediaTypeCache: java.lang.String[] parse(java.lang.String)>-><org.apache.tomcat.util.http.parser.MediaType: org.apache.tomcat.util.http.parser.MediaType parseMediaType(java.io.StringReader)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><java.lang.Thread: void interrupt()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Locale$LocaleKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanOperationInfo: boolean equals(java.lang.Object)>
<org.springframework.security.web.savedrequest.DefaultSavedRequest: java.lang.String toString()>-><org.springframework.security.web.savedrequest.DefaultSavedRequest: java.lang.String getRedirectUrl()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.metrics.dropwizard.CodahaleHealthChecker: void registerHealthChecks(com.zaxxer.hikari.pool.HikariPool,com.zaxxer.hikari.HikariConfig,com.codahale.metrics.health.HealthCheckRegistry)>-><com.zaxxer.hikari.metrics.dropwizard.CodahaleHealthChecker$Connection99Percent: void <init>(com.codahale.metrics.Timer,long)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.beans.factory.config.RuntimeBeanReference: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><java.nio.CharBuffer: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<com.zaxxer.hikari.pool.HikariProxyConnection: void setCatalog(java.lang.String)>-><com.zaxxer.hikari.pool.ProxyConnection: void setCatalog(java.lang.String)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><java.lang.Throwable: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.provider.PolicyParser$PermissionEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><com.zaxxer.hikari.pool.PoolBase: void setNetworkTimeout(java.sql.Connection,long)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><org.springframework.core.NestedIOException: java.lang.String getMessage()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.apache.tomcat.util.buf.StringCache$CharEntry: int hashCode()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><io.lettuce.core.masterslave.MasterSlaveConnectionProvider$ConnectionKey: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.node.FloatNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.Object: java.lang.Class getClass()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.StackTraceElement: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<io.netty.util.concurrent.SingleThreadEventExecutor: boolean runShutdownHooks()>-><io.netty.util.internal.ThreadExecutorMap$2: void run()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.RootBeanDefinition: boolean equals(java.lang.Object)>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.springframework.web.util.pattern.WildcardTheRestPathElement: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.temporal.ChronoField: java.lang.String toString()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.lettuce.core.masterslave.RedisMasterSlaveNode: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedShortFieldAccessorImpl: short getShort(java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<sun.reflect.UnsafeFieldAccessorImpl: java.lang.String getQualifiedFieldName()>-><java.lang.reflect.Field: java.lang.String getName()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.util.LinkedMultiValueMap: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: boolean hasNext()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<java.sql.SQLException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>-><java.sql.DriverManager: java.io.PrintWriter getLogWriter()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>
<org.hibernate.validator.internal.util.annotation.AnnotationDescriptor: boolean equals(java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.Point: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Map _orderEntries(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.connection.RedisNode: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.CharChunk: int subtract()>-><org.apache.tomcat.util.buf.CharChunk: boolean checkEof()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<io.micrometer.core.instrument.Gauge$Builder: io.micrometer.core.instrument.Gauge$Builder tags(java.lang.Iterable)>-><io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags and(java.lang.Iterable)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: int hashCode()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.ReferencePointcut: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: java.lang.Boolean call()>-><ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.sun.beans.WildcardTypeImpl: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.support.annotation.AnnotationMatchingPointcut: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean add(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: void add(int,java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.NotAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.LongNode: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<java.util.Collections$EmptyList: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.text.DigitList: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.JoinPointSignature: int hashCode()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.concurrent.CopyOnWriteArraySet: java.util.Iterator iterator()>
<org.springframework.web.util.pattern.CaptureVariablePathElement: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.util.pattern.CaptureVariablePathElement: java.lang.String toString()>-><java.util.regex.Pattern: java.lang.String pattern()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.data.util.ClassTypeInformation: boolean equals(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><com.google.common.collect.Maps$EntrySet: int size()>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Vector$Itr: java.lang.Object next()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.cglib.core.Signature: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Class: boolean isAssignableFrom(java.lang.Class)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.invoke.MemberName: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.temporal.IsoFields$Unit: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.EnumMap$1: java.lang.String toString()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.TreeMap$EntrySet: int size()>
<com.zaxxer.hikari.util.ConcurrentBag: void add(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.ZoneId: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Optional: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeShortFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><sun.reflect.UnsafeFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Locale$LocaleKey: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.provider.PolicyParser$PrincipalEntry: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.Hashtable$EntrySet: boolean remove(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap: java.util.Iterator iteratorOrListIterator(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.ListIterator listIterator()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.util.Map declaredAnnotations()>-><sun.misc.SharedSecrets: sun.misc.JavaLangAccess getJavaLangAccess()>
<sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl: boolean getBoolean(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>
<org.aspectj.weaver.UnresolvedType: java.lang.String signatureToName(java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<org.hibernate.validator.internal.util.annotation.AnnotationDescriptor: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<java.sql.DriverManager: java.util.Enumeration getDrivers()>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<java.lang.reflect.Field: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>-><java.lang.Class: java.lang.Object cast(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><ch.qos.logback.classic.spi.ClassPackagingData: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onBeforeCommit(com.p6spy.engine.common.ConnectionInformation)>-><java.util.ArrayList$Itr: boolean hasNext()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.data.util.ClassTypeInformation: java.lang.String toString()>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.util.LangUtil$StringChecker: boolean acceptString(java.lang.String)>-><org.aspectj.util.LangUtil: boolean isEmpty(java.lang.String)>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.pool.HikariPool: void setMetricRegistry(java.lang.Object)>
<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.cglib.core.MethodInfo: java.lang.String toString()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.AbstractMap$1$1: boolean hasNext()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.WeakHashMap$KeySet: int size()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: boolean add(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><javax.print.MimeType$ParameterMapEntry: int hashCode()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><org.apache.tomcat.util.buf.AbstractChunk: int getStart()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.asm.ConstantDynamic: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.SubList$1: java.lang.Object next()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.HikariConfig: void validateNumerics()>-><org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
<java.util.Collections: void reverse(java.util.List)>-><java.util.Vector: java.util.ListIterator listIterator()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: int size()>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.web.context.support.ServletContextResource: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><com.zaxxer.hikari.pool.PoolBase$IMetricsTrackerDelegate: void close()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.boot.ansi.Ansi8BitColor: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.ParentTypeAwareTypeInformation: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.security.oauth2.provider.client.BaseClientDetails: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.UtilityElf: int getTransactionIsolation(java.lang.String)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Clock$SystemClock: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.pool.PoolEntry createPoolEntry()>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.google.common.util.concurrent.MoreExecutors$ListeningDecorator: void execute(java.lang.Runnable)>-><io.netty.util.concurrent.SingleThreadEventExecutor: void execute(java.lang.Runnable)>
<org.aspectj.weaver.Shadow$Kind: java.lang.String getSimpleName()>-><org.aspectj.util.TypeSafeEnum: java.lang.String getName()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<java.util.HashSet: void <init>(java.util.Collection)>-><javax.print.MimeType$ParameterMapEntrySet: int size()>
<java.util.ComparableTimSort: int countRunAndMakeAscending(java.lang.Object[],int,int)>-><org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore$TokenExpiry: int compareTo(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.web.util.pattern.CaptureVariablePathElement: java.lang.String toString()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.apache.logging.log4j.spi.Provider: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.invoke.LambdaFormEditor$Transform: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: void add(int,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: void checkForComodification()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.HttpCookie: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.base.Predicates$AndPredicate: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.WildAnnotationTypePattern: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractSet: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.OutputBuffer: void realWriteBytes(java.nio.ByteBuffer)>-><java.nio.Buffer: int remaining()>
<com.zaxxer.hikari.pool.PoolBase: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.HikariConfig: boolean isAutoCommit()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void appendCollection(java.lang.Object,java.lang.StringBuilder,java.util.Set)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<io.netty.util.concurrent.AbstractEventExecutorGroup: void execute(java.lang.Runnable)>-><io.netty.util.concurrent.SingleThreadEventExecutor: void execute(java.lang.Runnable)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.lang.Object next()>
<org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.TypeBindings: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.p6spy.engine.common.CustomHashedHashSet$CustomHashedHashSetIterator: java.lang.Object next()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><java.lang.Runtime: int availableProcessors()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedList: java.lang.Object remove(int)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.ListIterator listIterator(int)>
<com.zaxxer.hikari.pool.ProxyStatement: void close()>-><com.zaxxer.hikari.pool.ProxyConnection: void untrackStatement(java.sql.Statement)>
<org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.Inet6Address: boolean equals(java.lang.Object)>
<org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>-><java.lang.StringBuffer: void <init>()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: int size()>-><com.google.common.base.Joiner$3: int size()>
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.aspectj.bridge.MessageUtil: java.lang.String renderMessage(org.aspectj.bridge.IMessage,boolean)>-><java.util.Collections$EmptyList: boolean isEmpty()>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.pool.HikariPool: java.util.concurrent.ScheduledExecutorService initializeHouseKeepingExecutorService()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<sun.reflect.UnsafeFieldAccessorImpl: java.lang.String getQualifiedFieldName()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Vector$1: boolean hasMoreElements()>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.Hashtable: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.util.context.Context1: java.lang.String toString()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.MapLikeType: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.OffsetTime: java.lang.String toString()>
<sun.reflect.UnsafeLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Long: long longValue()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<org.springframework.security.web.FilterInvocation: java.lang.String getRequestUrl()>-><org.springframework.security.web.util.UrlUtils: java.lang.String buildRequestUrl(javax.servlet.http.HttpServletRequest)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<org.aspectj.weaver.MemberImpl: int compareTo(org.aspectj.weaver.Member)>-><java.lang.String: int compareTo(java.lang.String)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Map _orderEntries(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.Byte: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.map.type.MapType: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<org.aspectj.weaver.patterns.HandlerPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags of(java.lang.String[])>-><io.micrometer.core.instrument.Tag: io.micrometer.core.instrument.Tag of(java.lang.String,java.lang.String)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFilteredFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.text.AttributeEntry: java.lang.Object getKey()>
<java.lang.reflect.Field: java.lang.String toString()>-><java.lang.reflect.Modifier: java.lang.String toString(int)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.node.DecimalNode: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: int hashCode()>
<sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.slf4j.event.Level: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.RegularEnumSet: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.zone.ZoneOffsetTransitionRule: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Integer: void <init>(int)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.TypeVariableTypeInformation: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.buffer.SwappedByteBuf: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<org.springframework.validation.DataBinder: org.springframework.beans.SimpleTypeConverter getSimpleTypeConverter()>-><org.springframework.beans.SimpleTypeConverter: void <init>()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.web.context.support.ServletContextResource: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.text.DecimalFormat: boolean equals(java.lang.Object)>
<reactor.core.Scannable: java.lang.Object scan(reactor.core.Scannable$Attr)>-><reactor.core.scheduler.ParallelScheduler: java.lang.Object scanUnsafe(reactor.core.Scannable$Attr)>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeFloatFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: int hashCode()>
<org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>-><java.lang.Object: int hashCode()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndAnnotationTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putLong(java.lang.Object,long,long)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.util.LinkedMultiValueMap: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.Timer$Builder: io.micrometer.core.instrument.Timer register(io.micrometer.core.instrument.MeterRegistry)>-><io.micrometer.core.instrument.Meter$Id: void <init>(java.lang.String,io.micrometer.core.instrument.Tags,java.lang.String,java.lang.String,io.micrometer.core.instrument.Meter$Type)>
<org.aspectj.weaver.patterns.HandlerPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: int hashCode()>
<java.util.TreeMap: void putAll(java.util.Map)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.aspectj.weaver.patterns.NamePattern: int hashCode()>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.map.type.MapType: java.lang.String toString()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.bridge.AbortException: void printStackTrace(java.io.PrintWriter)>-><org.aspectj.bridge.Message: java.lang.Throwable getThrown()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.util.locale.UnicodeLocaleExtension: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.AllPermission: boolean equals(java.lang.Object)>
<org.aspectj.bridge.context.CompilationAndWeavingContext: java.lang.String getCurrentContext()>-><java.lang.StringBuffer: java.lang.String toString()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><reactor.util.context.ContextN: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void abort(java.util.concurrent.Executor)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.ObjectNode: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.OutputBuffer: void write(java.lang.String,int,int)>-><org.apache.catalina.connector.OutputBuffer: boolean isFull(java.nio.Buffer)>
<cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String getIcon()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: int hashCode()>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.ObjectNode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: java.lang.String[] findEnumValues(java.lang.Class,java.lang.Enum[],java.lang.String[])>-><java.lang.reflect.Field: boolean isEnumConstant()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Proxy$Key1: boolean equals(java.lang.Object)>
<org.aspectj.weaver.BCException: void <init>(java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.expression.spel.ast.NullLiteral: java.lang.String toString()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.Meter$Id: void <init>(java.lang.String,io.micrometer.core.instrument.Tags,java.lang.String,java.lang.String,io.micrometer.core.instrument.Meter$Type)>-><io.micrometer.core.instrument.Meter$Id: void <init>(java.lang.String,io.micrometer.core.instrument.Tags,java.lang.String,java.lang.String,io.micrometer.core.instrument.Meter$Type,io.micrometer.core.instrument.Meter$Id)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<reactor.core.scheduler.ParallelScheduler: java.util.concurrent.ScheduledExecutorService get()>-><java.util.concurrent.ThreadPoolExecutor: void setMaximumPoolSize(int)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><org.springframework.core.io.buffer.LimitedDataBufferList: java.lang.Object remove(int)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.bouncycastle.asn1.DERPrintableString: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.Pair: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><javax.management.MBeanParameterInfo: java.lang.String toString()>
<org.apache.catalina.core.ContainerBase: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.Instant: java.lang.String toString()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.lettuce.core.masterslave.MasterSlaveConnectionProvider$ConnectionKey: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<org.springframework.util.ReflectionUtils: void handleReflectionException(java.lang.Exception)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.lang.ProcessEnvironment$StringKeySet: java.util.Iterator iterator()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.time.LocalTime: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap: int size()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Float: float floatValue()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.alibaba.fastjson.JSON: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.BitSet: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<org.aspectj.bridge.MessageUtil: java.lang.String renderMessage(org.aspectj.bridge.IMessage,boolean)>-><org.aspectj.bridge.Message: java.lang.Throwable getThrown()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.EnumMap$1: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.Collections$SynchronizedCollection: boolean add(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.stream.SpinedBuffer: java.lang.String toString()>
<org.springframework.security.web.FilterChainProxy$VirtualFilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<java.util.stream.AbstractShortCircuitTask: void compute()>-><java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: java.util.Spliterator trySplit()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.Font: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.BitSet: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Collections$UnmodifiableCollection: java.lang.String toString()>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildRequestUrl(javax.servlet.http.HttpServletRequest)>-><org.springframework.security.web.firewall.RequestWrapper: java.lang.String getPathInfo()>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.google.common.base.Joiner$3: int size()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.web.context.support.WebApplicationContextUtils$FacesDependencyRegistrar$2: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Instant: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.ZonedDateTime: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.OffsetTime: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getDependencyType()>-><com.alibaba.fastjson.util.ParameterizedTypeImpl: java.lang.reflect.Type getRawType()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.lettuce.core.masterslave.MasterSlaveConnectionProvider$ConnectionKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.codehaus.jackson.node.DecimalNode: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.time.Year: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<java.lang.Object: java.lang.String toString()>-><java.lang.reflect.Field: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.security.cert.Certificate: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<io.micrometer.core.instrument.Timer$Builder: io.micrometer.core.instrument.Timer register(io.micrometer.core.instrument.MeterRegistry)>-><io.micrometer.core.instrument.distribution.DistributionStatisticConfig$Builder: io.micrometer.core.instrument.distribution.DistributionStatisticConfig build()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.util.AbstractConstant: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.Object: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.management.MBeanConstructorInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.LambdaFormEditor$Transform: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.PropertyElf: java.lang.Object getProperty(java.lang.String,java.lang.Object)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.security.Provider: java.lang.String toString()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<org.springframework.core.convert.support.ObjectToOptionalConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><java.sql.SQLException: void <init>(java.lang.String,java.lang.Throwable)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><java.nio.CharBuffer: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.zone.ZoneOffsetTransitionRule: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><ch.qos.logback.classic.spi.ClassPackagingData: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariProxyConnection: int getNetworkTimeout()>-><com.p6spy.engine.wrapper.ConnectionWrapper: int getNetworkTimeout()>
<org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>-><java.lang.StringBuffer: void <init>()>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><com.zaxxer.hikari.util.ConcurrentBag: java.util.List values(int)>
<java.util.Collections: void reverse(java.util.List)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.crypto.CryptoAllPermission: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.p6spy.engine.spy.option.P6OptionsRepository$DelayedOptionChange: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.String,java.lang.String)>-><sun.reflect.UnsafeFieldAccessorImpl: java.lang.String getSetMessage(java.lang.String,java.lang.String)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.security.access.SecurityConfig: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.StringUtils: java.lang.String collectionToDelimitedString(java.util.Collection,java.lang.String,java.lang.String,java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticBooleanFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeStaticBooleanFieldAccessorImpl: boolean getBoolean(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.HashSet: java.util.Iterator iterator()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.map.jsontype.NamedType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Hashtable$Entry: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: void logConfiguration()>-><ch.qos.logback.classic.Logger: void debug(java.lang.String)>
<org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String toString()>-><org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String getSessionId()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeShortFieldAccessorImpl: short getShort(java.lang.Object)>-><sun.misc.Unsafe: short getShort(java.lang.Object,long)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.TreeMap: java.util.Set entrySet()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.beans.factory.InjectionPoint: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.WildAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.io.File: boolean equals(java.lang.Object)>
<java.util.Collections$SetFromMap: boolean add(java.lang.Object)>-><org.springframework.util.LinkedCaseInsensitiveMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><io.lettuce.core.RedisURI: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.HashMap$Node: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.ZoneOffset: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Integer: int intValue()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.format.DecimalStyle: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: boolean hasNext()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: void validate()>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.calendar.ZoneInfo: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.cglib.core.Signature: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.SimpleTimeZone: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.util.RawValue: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: boolean equals(java.lang.Object)>
<io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields: boolean casProducerLimit(long,long)>-><sun.misc.Unsafe: boolean compareAndSwapLong(java.lang.Object,long,long,long)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.HashMap$KeySet: int size()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.BigIntegerNode: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.management.MBeanAttributeInfo: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.UEncoder: org.apache.tomcat.util.buf.CharChunk encodeURL(java.lang.String,int,int)>-><org.apache.tomcat.util.buf.ByteChunk: void recycle()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.KindedPointcut: java.lang.String toString()>
<org.aspectj.weaver.patterns.CflowPointcut: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>-><org.aspectj.weaver.patterns.AndAnnotationTypePattern: int hashCode()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.DigitList: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.HandlerPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.String toString()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<org.springframework.web.context.request.ServletRequestAttributes: void registerDestructionCallback(java.lang.String,java.lang.Runnable,int)>-><org.springframework.web.context.request.ServletRequestAttributes: void registerSessionDestructionCallback(java.lang.String,java.lang.Runnable)>
<com.zaxxer.hikari.HikariDataSource: java.sql.Connection getConnection()>-><com.zaxxer.hikari.HikariConfig: java.lang.String getPoolName()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<org.springframework.core.convert.support.CollectionToObjectConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<org.springframework.core.DecoratingClassLoader: boolean isExcluded(java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap$KeySetIterator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.Rectangle: boolean equals(java.lang.Object)>
<java.nio.CharBuffer: int compareTo(java.lang.Object)>-><java.nio.CharBuffer: int compareTo(java.nio.CharBuffer)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.springframework.expression.spel.support.StandardTypeComparator: int compare(java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore$TokenExpiry: int compareTo(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider: com.fasterxml.jackson.databind.ser.PropertyFilter findPropertyFilter(java.lang.Object,java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.auth.entity.OauthClientDetails: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void abort(java.util.concurrent.Executor)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><org.springframework.http.HttpHeaders: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<java.util.concurrent.ThreadPoolExecutor: void reject(java.lang.Runnable)>-><java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy: void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>-><java.lang.String: int lastIndexOf(int)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.concurrent.atomic.AtomicInteger: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Character: char charValue()>
<sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<org.aspectj.bridge.MessageUtil: java.lang.String renderMessage(org.aspectj.bridge.IMessage,boolean)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Integer: int intValue()>
<sun.reflect.UnsafeByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<org.apache.tomcat.util.buf.CharChunk: void flushBuffer()>-><org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String,java.lang.Object[])>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<org.aspectj.weaver.UnresolvedType: int hashCode()>-><java.lang.String: int hashCode()>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><net.logstash.logback.encoder.com.lmax.disruptor.Sequence: java.lang.String toString()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><java.nio.CharBuffer: java.nio.CharBuffer wrap(char[],int,int)>
<com.zaxxer.hikari.HikariDataSource: java.sql.Connection getConnection()>-><ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.AttributedString$AttributedStringIterator: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.web.util.pattern.WildcardTheRestPathElement: java.lang.String toString()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.LongNode: boolean equals(java.lang.Object)>
<java.sql.DriverManager: java.sql.Driver getDriver(java.lang.String)>-><java.sql.DriverManager: boolean isDriverAllowed(java.sql.Driver,java.lang.Class)>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.KindedPointcut: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Proxy$KeyX: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.ArrayType: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.EmitUtils: void stringSwitchHelper(org.springframework.cglib.core.CodeEmitter,java.util.List,org.springframework.cglib.core.ObjectSwitchCallback,org.springframework.asm.Label,org.springframework.asm.Label,int)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<org.springframework.security.web.session.SessionManagementFilter: void doFilter_c38210bb412b155cba16a402faf1eb2e(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><synthetic.method.SingletonFactory: cc.mrbird.febs.common.security.starter.handler.FebsAuthExceptionEntryPoint getAuthenticationEntryPoint()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.management.MBeanNotificationInfo: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.p6spy.engine.common.CustomHashedHashSet$CustomHashedHashSetIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<java.util.AbstractList: java.util.ListIterator listIterator()>-><io.micrometer.shaded.org.pcollections.ConsPStack: java.util.ListIterator listIterator(int)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.alibaba.fastjson.util.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.AnnotationTypePattern: boolean isForParameterAnnotationMatch()>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><com.zaxxer.hikari.pool.HikariPool: void throwPoolInitializationException(java.lang.Throwable)>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: int hashCode()>-><java.lang.Object: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Hashtable$Entry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.nio.ch.SocketOptionRegistry$RegistryKey: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<org.hibernate.validator.internal.util.annotation.AnnotationDescriptor: boolean equals(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.google.common.base.Predicates$NotPredicate: java.lang.String toString()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.Character$Subset: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariProxyConnection: boolean isValid(int)>-><com.p6spy.engine.wrapper.ConnectionWrapper: boolean isValid(int)>
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getRemoteUser()>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpServletRequest _getHttpServletRequest()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeStaticObjectFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<org.aspectj.bridge.MessageUtil: java.lang.String renderMessage(org.aspectj.bridge.IMessage,boolean)>-><org.aspectj.bridge.Message: org.aspectj.bridge.ISourceLocation getSourceLocation()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.util.Map$Entry next()>-><java.util.concurrent.LinkedBlockingQueue$Itr: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><springfox.documentation.service.ResponseMessage: int hashCode()>
<org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>-><java.lang.String: java.lang.String substring(int,int)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.Extension: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><java.nio.CharBuffer: java.lang.String toString()>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: boolean equals(java.lang.Object)>
<java.util.concurrent.ThreadPoolExecutor: void setMaximumPoolSize(int)>-><java.util.concurrent.ThreadPoolExecutor: int workerCountOf(int)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.util.TokenBuffer: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.data.util.ParameterizedTypeInformation: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><java.lang.reflect.Field: int hashCode()>
<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.OffsetTime: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.util.calendar.ZoneInfo: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Proxy$Key1: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.Class: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.AbstractMap$1: boolean contains(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: int getKeyHash()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ClockSource$MillisecondClockSource: long elapsedNanos0(long)>-><java.lang.System: long currentTimeMillis()>
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<java.util.AbstractCollection: java.lang.Object[] toArray()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Request: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.data.mapping.model.Property: java.lang.String toString()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.DecimalNode: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.Long getDeptId()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.Collections$EmptyListIterator: void set(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.http.HttpHeaders: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.EmitUtils$6: void processCase(int,org.springframework.asm.Label)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl: long getLong(java.lang.Object)>-><sun.misc.Unsafe: long getLongVolatile(java.lang.Object,long)>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.ReferencePointcut: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.OptionalInt: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.beans.factory.config.BeanExpressionContext: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: int hashCode()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><java.util.concurrent.TimeUnit$3: long toMillis(long)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.imageio.ImageTypeSpecifier$Interleaved: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Duration: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.URL: boolean equals(java.lang.Object)>
<java.util.concurrent.ScheduledThreadPoolExecutor: long triggerTime(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.TimeUnit$6: long toNanos(long)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.SignaturePattern: org.aspectj.weaver.MemberKind getKind()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.net.URI: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: int hashCode()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: int hashCode()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.Character: java.lang.String toString()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.ArrayList$SubList: java.util.ListIterator listIterator(int)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><com.alibaba.fastjson.JSON: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.OutputBuffer$PrivilegedCreateConverter: java.lang.Object run()>-><org.apache.catalina.connector.OutputBuffer$PrivilegedCreateConverter: org.apache.tomcat.util.buf.C2BConverter run()>
<javax.print.MimeType$ParameterMapEntrySetIterator: void <init>(javax.print.MimeType,javax.print.MimeType$1)>-><javax.print.MimeType$ParameterMapEntrySetIterator: void <init>(javax.print.MimeType)>
<org.springframework.security.oauth2.provider.OAuth2Request: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.BaseRequest: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: void clear()>-><java.util.concurrent.CopyOnWriteArrayList: void removeRange(int,int)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.ProcessEnvironment$Value: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.base.Joiner$3: int size()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.LambdaFormEditor$Transform: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.util.BuddhistCalendar: java.lang.String toString()>
<sun.reflect.UnsafeObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<org.springframework.cglib.core.KeyFactory$Generator: void generateClass(org.springframework.asm.ClassVisitor)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: int hashCode()>
<io.micrometer.core.instrument.Timer$Builder: void <init>(java.lang.String)>-><java.time.Duration: java.time.Duration ofSeconds(long)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.p6spy.engine.spy.P6DataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)>-><com.p6spy.engine.common.ConnectionInformation: void setTimeToGetConnectionNs(long)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><java.nio.CharBuffer: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.math.BigDecimal: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: int hashCode()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.HttpParser: java.lang.String unquote(java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.core.ResolvableType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.YearMonth: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.AbstractList: java.lang.Object set(int,java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Collections$SetFromMap: java.lang.String toString()>
<java.util.Collections$UnmodifiableList$1: java.lang.Object previous()>-><java.util.Collections$UnmodifiableList$1: java.lang.Object previous()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet: int size()>
<reactor.core.scheduler.ReactorThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>-><java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$SetFromMap: int size()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<java.util.stream.ReferencePipeline$11$1: void accept(java.lang.Object)>-><java.util.stream.Nodes$SizedCollectorTask$OfRef: void accept(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Field: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.AbstractMap$1: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.beans.FeatureDescriptor: java.lang.String toString()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object previous()>-><io.micrometer.shaded.org.pcollections.ConsPStack: io.micrometer.shaded.org.pcollections.ConsPStack subList(int)>
<javax.servlet.http.HttpServletRequestWrapper: java.lang.String getRemoteUser()>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getRemoteUser()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticCharacterFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeStaticCharacterFieldAccessorImpl: char getChar(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.web.context.support.WebApplicationContextUtils$FacesDependencyRegistrar$1: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.ReferencePointcut: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<org.springframework.security.web.FilterInvocation: java.lang.String toString()>-><org.springframework.security.web.FilterInvocation: java.lang.String getRequestUrl()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.OptionalDouble: java.lang.String toString()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.beans.IndexedPropertyDescriptor: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.nio.charset.Charset: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.auth.entity.BindUser: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.Object getDetails()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.management.openmbean.TabularType: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.management.openmbean.TabularDataSupport: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>-><com.google.common.base.Joiner$3: int size()>
<sun.reflect.UnsafeShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Boolean: boolean booleanValue()>
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Field findField(java.lang.String,java.lang.Class,boolean)>-><java.lang.reflect.Field: int getModifiers()>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><java.util.AbstractList$Itr: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.HttpCookie: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: java.lang.String getName()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.EmitUtils$6: void processCase(int,org.springframework.asm.Label)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FastDateFormat: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveManagedArray(java.lang.Object,java.util.List,java.lang.Class)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Collections$SynchronizedCollection: int size()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><javax.management.openmbean.TabularDataSupport: java.lang.Object get(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.nio.CharBuffer: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.access.SecurityConfig: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Short: short shortValue()>
<com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.pool.PoolEntry createPoolEntry()>-><com.zaxxer.hikari.pool.PoolBase$ConnectionSetupException: void <init>(java.lang.Throwable)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.format.DateTimeFormatterBuilder$LocalizedPrinterParser: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>
<org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<com.alibaba.fastjson.util.FieldInfo: void <init>(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Field,java.lang.Class,java.lang.reflect.Type,int,int,int,com.alibaba.fastjson.annotation.JSONField,com.alibaba.fastjson.annotation.JSONField,java.lang.String,java.util.Map)>-><java.lang.reflect.Field: java.lang.String getName()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.net.Inet4Address: boolean equals(java.lang.Object)>
<org.springframework.security.web.session.SessionManagementFilter: void doFilter_722ec8308a5c71df86b9cb8cb057a8fc(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><synthetic.method.SingletonFactory: cc.mrbird.febs.common.security.starter.handler.FebsAuthExceptionEntryPoint getAuthenticationEntryPoint()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.Inet4Address: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: void serialize(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.nio.CharBuffer: java.lang.String toString()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.LinkedList$ListItr: void set(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.support.AbstractPointcutAdvisor: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<com.zaxxer.hikari.HikariConfig: void logConfiguration()>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<org.aspectj.weaver.BCException: void <init>(java.lang.String)>-><java.lang.RuntimeException: void <init>(java.lang.String)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.font.AttributeValues: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.provider.approval.Approval: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.metrics.dropwizard.CodahaleHealthChecker: void registerHealthChecks(com.zaxxer.hikari.pool.HikariPool,com.zaxxer.hikari.HikariConfig,com.codahale.metrics.health.HealthCheckRegistry)>-><com.zaxxer.hikari.HikariConfig: java.lang.Object getMetricRegistry()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.calendar.CalendarDate: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter: org.springframework.security.oauth2.common.OAuth2AccessToken enhance(org.springframework.security.oauth2.common.OAuth2AccessToken,org.springframework.security.oauth2.provider.OAuth2Authentication)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.temporal.WeekFields: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><java.util.Hashtable: int size()>
<sun.security.provider.PolicyFile: java.security.Permissions getPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[])>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<com.zaxxer.hikari.pool.PoolBase: void initializeDataSource()>-><com.zaxxer.hikari.util.UtilityElf: java.lang.Object createInstance(java.lang.String,java.lang.Class,java.lang.Object[])>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.apache.logging.log4j.Level: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnnotationPointcut: java.lang.String toString()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><java.nio.CharBuffer: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.bouncycastle.asn1.ASN1Sequence: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.hibernate.validator.internal.util.annotation.AnnotationProxy: boolean equals(java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanParameterInfo: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<org.aspectj.util.LangUtil: void elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)>-><java.util.LinkedList: java.lang.Object removeFirst()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><com.zaxxer.hikari.pool.PoolEntry: java.sql.Connection close()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.io.ObjectStreamClass$WeakClassKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.beans.factory.config.RuntimeBeanReference: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.base.Predicates$AndPredicate: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ClockSource: java.lang.String elapsedDisplayString0(long,long)>-><java.util.concurrent.TimeUnit$3: long convert(long,java.util.concurrent.TimeUnit)>
<com.zaxxer.hikari.pool.HikariPool: javax.sql.DataSource getUnwrappedDataSource()>-><com.zaxxer.hikari.pool.PoolBase: javax.sql.DataSource getUnwrappedDataSource()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><javax.management.MBeanConstructorInfo: java.lang.String toString()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.SimpleTimeZone: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.font.AttributeValues: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cn.hutool.core.date.format.FormatCache$MultipartKey: boolean equals(java.lang.Object)>
<java.util.ComparableTimSort: int countRunAndMakeAscending(java.lang.Object[],int,int)>-><io.micrometer.core.instrument.Tag: int compareTo(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: boolean equals(java.lang.Object)>
<org.springframework.web.util.pattern.SeparatorPathElement: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.zaxxer.hikari.HikariConfig: void logConfiguration()>-><com.zaxxer.hikari.util.PropertyElf: java.lang.Object getProperty(java.lang.String,java.lang.Object)>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>-><javax.print.MimeType$ParameterMapEntrySet: int size()>
<java.nio.CharBuffer: int hashCode()>-><java.nio.HeapCharBuffer: char get(int)>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><com.zaxxer.hikari.pool.ProxyConnection: boolean getAutoCommitState()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.InetSocketAddress: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: void validate()>-><org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object)>
<java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray(java.lang.Object[])>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] toArray(java.lang.Object[])>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void throwPoolInitializationException(java.lang.Throwable)>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.ArrayList: java.lang.Object remove(int)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.util.Date getModifyTime()>
<org.aspectj.bridge.SourceLocation: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$Value: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.Tags$ArrayIterator: boolean hasNext()>-><io.micrometer.core.instrument.Tags: int access$100(io.micrometer.core.instrument.Tags)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<com.fasterxml.classmate.util.ClassKey: int compareTo(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: int compareTo(com.fasterxml.classmate.util.ClassKey)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.management.MBeanOperationInfo: java.lang.String toString()>
<io.micrometer.shaded.org.pcollections.ConsPStack$1: void set(java.lang.Object)>-><java.lang.UnsupportedOperationException: void <init>()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: boolean equals(java.lang.Object)>
<java.util.Collections: void reverse(java.util.List)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<java.util.ComparableTimSort: int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int)>-><io.micrometer.core.instrument.Tag: int compareTo(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArraySet: boolean equals(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.HashMap$Node: java.lang.String toString()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.LinkedList$ListItr: java.lang.Object previous()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object[])>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<org.apache.tomcat.util.collections.ConcurrentCache: void put(java.lang.Object,java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: int size()>
<com.google.common.util.concurrent.MoreExecutors$ListeningDecorator: void execute(java.lang.Runnable)>-><org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor$1: void execute(java.lang.Runnable)>
<java.util.SubList$1: java.lang.Object previous()>-><java.util.SubList$1: boolean hasPrevious()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: boolean equals(java.lang.Object)>
<io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields: boolean casProducerIndex(long,long)>-><sun.misc.Unsafe: boolean compareAndSwapLong(java.lang.Object,long,long,long)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.stream.SpinedBuffer$OfInt: java.lang.String toString()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cn.hutool.core.date.format.FastDatePrinter$TimeZoneDisplayKey: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: int hashCode()>
<com.zaxxer.hikari.pool.HikariPool$HouseKeeper: void <init>(com.zaxxer.hikari.pool.HikariPool)>-><java.lang.Object: void <init>()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.apache.logging.log4j.Level: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanOperationInfo: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.MonthDay: java.lang.String toString()>
<com.zaxxer.hikari.util.FastList: boolean remove(java.lang.Object)>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<org.aspectj.weaver.patterns.TypePatternList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String getDeptName()>
<com.zaxxer.hikari.HikariConfig: java.lang.String generatePoolName()>-><java.lang.StringBuilder: void <init>()>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<org.apache.tomcat.util.http.parser.MediaType: void <init>(java.lang.String,java.lang.String,java.util.LinkedHashMap)>-><java.lang.String: int length()>
<com.google.common.collect.AbstractMapBasedMultimap: void removeValuesForKey(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySet: int size()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Collections$SynchronizedList: java.lang.Object set(int,java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void createNetworkTimeoutExecutor(javax.sql.DataSource,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<org.aspectj.bridge.context.CompilationAndWeavingContext: java.lang.String getCurrentContext()>-><org.aspectj.bridge.context.CompilationAndWeavingContext: org.aspectj.bridge.context.ContextFormatter getFormatter(org.aspectj.bridge.context.CompilationAndWeavingContext$ContextStackEntry)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.alibaba.fastjson.JSONObject: java.util.Set entrySet()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<org.springframework.security.web.savedrequest.DefaultSavedRequest: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><javax.print.MimeType$ParameterMapEntrySet: int size()>
<java.util.SubList: void <init>(java.util.AbstractList,int,int)>-><com.google.common.base.Joiner$3: int size()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<sun.util.locale.provider.LocaleProviderAdapter: java.util.Locale[] toLocaleArray(java.util.Set)>-><io.netty.channel.nio.SelectedSelectionKeySet: int size()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: int hashCode()>
<sun.reflect.UnsafeShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putShort(java.lang.Object,long,short)>
<sun.reflect.ReflectionFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.ReflectionFactory: void checkInitted()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.StringCharacterIterator: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.apache.commons.pool2.impl.BaseGenericObjectPool$IdentityWrapper: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Spliterator spliterator()>-><java.util.concurrent.LinkedBlockingQueue: java.util.Spliterator spliterator()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.web.context.support.ServletContextResource: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.HikariConfig: void logConfiguration()>-><java.lang.StringBuilder: void <init>()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><com.zaxxer.hikari.util.SuspendResumeLock: void acquire()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.springframework.util.LinkedCaseInsensitiveMap$KeySetIterator: java.lang.Object next()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.type.ClassKey: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.AbstractList: boolean add(java.lang.Object)>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<org.apache.catalina.connector.Response: void setContentType(java.lang.String)>-><org.apache.catalina.connector.Response: org.apache.coyote.Response getCoyoteResponse()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.lang.String stringFromResetBits(int)>-><java.lang.StringBuilder: void setLength(int)>
<sun.reflect.UnsafeFieldAccessorImpl: java.lang.String getSetMessage(java.lang.String,java.lang.String)>-><java.lang.Class: java.lang.String getName()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.SubList: int size()>
<java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>-><java.nio.CharBuffer: int compareTo(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.data.mapping.model.Property: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.alibaba.fastjson.util.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<java.util.stream.Nodes$SizedCollectorTask: void compute()>-><java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: long estimateSize()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><ch.qos.logback.core.subst.Node: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putInt(java.lang.Object,long,int)>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: void <init>(com.zaxxer.hikari.pool.HikariPool,java.lang.String)>-><java.lang.Object: void <init>()>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>
<sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Short: short shortValue()>
<org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements: char charAt(int,int)>-><java.nio.CharBuffer: char charAt(int)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><com.alibaba.fastjson.JSONArray: int size()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isDependent(java.lang.String,java.lang.String,java.util.Set)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.Character$Subset: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.data.util.ParentTypeAwareTypeInformation: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><javax.print.MimeType$ParameterMapEntrySet: int size()>
<org.aspectj.weaver.patterns.HandlerPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.ProcessEnvironment$StringValues: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><java.lang.Runtime: java.lang.Runtime getRuntime()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<org.aspectj.weaver.patterns.TypePatternList: int hashCode()>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.String toString()>
<org.aspectj.weaver.patterns.ConcreteCflowPointcut: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.ResourceBundle$RBClassLoader: java.lang.Class loadClass(java.lang.String)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.auth.entity.OauthClientDetails: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<org.aspectj.bridge.context.CompilationAndWeavingContext: java.lang.String getCurrentContext()>-><java.lang.StringBuffer: void <init>()>
<org.springframework.web.context.request.ServletRequestAttributes: void registerSessionDestructionCallback(java.lang.String,java.lang.Runnable)>-><org.springframework.web.context.request.DestructionCallbackBindingListener: void <init>(java.lang.Runnable)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><io.lettuce.core.RedisURI: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><javax.management.ImmutableDescriptor: java.lang.String toString()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><io.netty.channel.nio.SelectedSelectionKeySet: boolean contains(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: void logConfiguration()>-><ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object)>
<org.springframework.cglib.proxy.BridgeMethodResolver$BridgedFinder: org.springframework.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>-><io.netty.channel.nio.SelectedSelectionKeySet: boolean remove(java.lang.Object)>
<org.aspectj.bridge.context.CompilationAndWeavingContext: org.aspectj.bridge.context.ContextFormatter getFormatter(org.aspectj.bridge.context.CompilationAndWeavingContext$ContextStackEntry)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void initializeDataSource()>-><com.zaxxer.hikari.pool.PoolBase: void createNetworkTimeoutExecutor(javax.sql.DataSource,java.lang.String,java.lang.String)>
<org.springframework.security.web.access.ExceptionTranslationFilter: void sendStartAuthentication(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain,org.springframework.security.core.AuthenticationException)>-><cc.mrbird.febs.common.security.starter.handler.FebsAuthExceptionEntryPoint: void commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.ProcessEnvironment$Variable: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.core.scheduler.Schedulers$CachedScheduler: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.http.ResponseEntity: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>
<java.util.TimSort: void mergeHi(int,int,int,int)>-><java.time.format.DateTimeFormatterBuilder$2: int compare(java.lang.Object,java.lang.Object)>
<org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: void untrackStatement(java.sql.Statement)>-><com.zaxxer.hikari.util.FastList: boolean remove(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><com.alibaba.fastjson.JSONArray: java.util.Iterator iterator()>
<org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><reactor.core.publisher.FluxOnAssembly$OnAssemblyException: java.lang.String getMessage()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><java.nio.CharBuffer: int hashCode()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><com.p6spy.engine.common.CustomHashedHashSet$CustomHashedHashSetIterator: java.lang.Object next()>
<com.zaxxer.hikari.util.ConcurrentBag: boolean remove(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.RDN: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.LongNode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.lang.String stringFromResetBits(int)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.Collections: void reverse(java.util.List)>-><java.util.Collections$UnmodifiableList$1: java.lang.Object next()>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.DateFormatSymbols: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanInfo: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><org.springframework.context.expression.MapAccessor$MapAccessException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.lettuce.core.RedisURI: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.SimpleType: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><ch.qos.logback.classic.LoggerContext: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.core.context.SecurityContextImpl: int hashCode()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.IfPointcut$IfFalsePointcut: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.TreeMap$KeySet: java.util.Iterator iterator()>
<com.zaxxer.hikari.util.UtilityElf: java.util.concurrent.ThreadPoolExecutor createThreadPoolExecutor(int,java.lang.String,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)>-><java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.core.io.AbstractResource: java.lang.String toString()>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean canEqual(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><java.nio.CharBuffer: java.lang.String toString()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.springframework.data.redis.connection.RedisPassword: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.util.AbstractConstant: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>
<com.fasterxml.classmate.ResolvedType: int hashCode()>-><java.lang.Class: java.lang.String getName()>
<org.springframework.security.oauth2.provider.OAuth2Authentication: java.lang.Object getPrincipal()>-><org.springframework.security.authentication.RememberMeAuthenticationToken: java.lang.Object getPrincipal()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.CollectionCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<com.p6spy.engine.spy.P6DataSource: void setLoginTimeout(int)>-><com.p6spy.engine.spy.P6DataSource: void bindDataSource()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Optional: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<org.springframework.web.util.NestedServletException: java.lang.String getMessage()>-><java.lang.Throwable: java.lang.Throwable getCause()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.map.jsontype.NamedType: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<java.sql.DriverManager: java.util.Enumeration getDrivers()>-><java.util.Vector: void <init>()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void handleMBeans(com.zaxxer.hikari.pool.HikariPool,boolean)>-><org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object[])>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyConnection: void closeStatements()>-><org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><java.lang.reflect.Field: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariProxyConnection: void abort(java.util.concurrent.Executor)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void abort(java.util.concurrent.Executor)>
<java.util.concurrent.LinkedBlockingQueue: java.util.Iterator iterator()>-><java.util.concurrent.LinkedBlockingQueue$Itr: void <init>(java.util.concurrent.LinkedBlockingQueue)>
<sun.reflect.UnsafeFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><java.lang.reflect.Modifier: boolean isStatic(int)>
<com.zaxxer.hikari.pool.PoolBase: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.pool.PoolBase: void initializeDataSource()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.util.calendar.CalendarDate: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.security.core.userdetails.User: int hashCode()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.JapaneseImperialCalendar: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callEndAction(java.util.List,java.lang.String)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.math.BigInteger: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$Variable: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putByte(java.lang.Object,long,byte)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.awt.Color: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.IdentityHashMap: java.util.Set entrySet()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.util.calendar.Era: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<org.springframework.security.web.session.SessionManagementFilter: void doFilter_7e427430d59f21370beedc7ed102764c(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><synthetic.method.SingletonFactory: cc.mrbird.febs.common.security.starter.handler.FebsAuthExceptionEntryPoint getAuthenticationEntryPoint()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><org.springframework.cglib.core.CodeGenerationException: java.lang.Throwable getCause()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<org.springframework.web.util.pattern.SeparatorPathElement: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.AbstractMap$1: java.util.Iterator iterator()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getValue()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.security.CodeSigner: boolean equals(java.lang.Object)>
<org.aspectj.weaver.MemberImpl: java.lang.String toString()>-><java.lang.StringBuffer: void <init>()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.connection.RedisNode: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.nio.ch.ExtendedSocketOption$1: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeStaticFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<org.apache.catalina.util.ToStringUtil: java.lang.String containedToString(java.lang.Object,java.lang.Object,java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><org.springframework.core.annotation.AnnotationAttributes: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.fasterxml.classmate.ResolvedType: java.lang.String getBriefDescription()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.data.util.ParameterizedTypeInformation: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<java.util.SubList: java.lang.Object get(int)>-><com.google.common.base.Joiner$3: java.lang.Object get(int)>
<java.util.HashMap: int hash(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.ParameterizedTypeInformation: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: java.lang.Object previous()>-><java.util.Collections$EmptyListIterator: java.lang.Object previous()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><com.fasterxml.jackson.databind.deser.UnresolvedForwardReference: java.lang.String getMessage()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<org.aspectj.util.LangUtil: void elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)>-><java.util.LinkedList: boolean add(java.lang.Object)>
<com.sun.jmx.mbeanserver.JmxMBeanServer$1: javax.management.loading.ClassLoaderRepository run()>-><com.sun.jmx.mbeanserver.MBeanInstantiator: com.sun.jmx.mbeanserver.ModifiableClassLoaderRepository getClassLoaderRepository()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void recordConnectionTimeout()>-><com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker: void recordConnectionTimeout()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>-><java.lang.reflect.Field: java.lang.String getGenericSignature()>
<org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><java.nio.CharBuffer: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Long: long longValue()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.OffsetTime: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.WildAnnotationTypePattern: int hashCode()>
<io.micrometer.core.instrument.ImmutableTag: void <init>(java.lang.String,java.lang.String)>-><java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.security.x509.RDN: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.ParentTypeAwareTypeInformation: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.codehaus.jackson.node.DoubleNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: double getDouble(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String value()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><ch.qos.logback.core.joran.action.Action: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.support.annotation.AnnotationMatchingPointcut: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.Collections$UnmodifiableCollection: int size()>
<com.zaxxer.hikari.pool.HikariPool: java.lang.String toString()>-><com.zaxxer.hikari.pool.PoolBase: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.core.io.support.EncodedResource: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void beforePrototypeCreation(java.lang.String)>-><java.util.RegularEnumSet: boolean add(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: java.lang.Object getPrincipal()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$SettingsParser: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.UUID: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.misc.Signal: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.beans.factory.support.RootBeanDefinition: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.Signature: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.AnyGetterWriter: void getAndFilter(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter)>-><java.lang.Object: java.lang.Class getClass()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.aop.support.DefaultPointcutAdvisor: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<java.lang.ThreadLocal$SuppliedThreadLocal: java.lang.Object initialValue()>-><java.util.stream.ForEachOps$ForEachOp$OfInt: java.lang.Object get()>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.UnresolvedPermission: boolean equals(java.lang.Object)>
<reactor.core.scheduler.ReactorThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>-><reactor.core.scheduler.ReactorThreadFactory$NonBlockingThread: void <init>(java.lang.Runnable,java.lang.String)>
<java.util.Hashtable: void putAll(java.util.Map)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<com.google.common.util.concurrent.MoreExecutors$ListeningDecorator: void execute(java.lang.Runnable)>-><java.util.concurrent.Executors$DelegatedExecutorService: void execute(java.lang.Runnable)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.LocalTime: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.awt.AppContext: java.lang.String toString()>
<org.springframework.security.web.FilterChainProxy$VirtualFilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.http.HttpHeaders: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.beans.FeatureDescriptor: java.lang.String toString()>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.introspect.AnnotatedField: int getModifiers()>-><java.lang.reflect.Field: int getModifiers()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String getPoolName()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<sun.reflect.UnsafeObjectFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.util.locale.BaseLocale$Key: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<org.apache.tomcat.util.buf.ByteChunk: void allocate(int,int)>-><org.apache.tomcat.util.buf.AbstractChunk: void setLimit(int)>
<java.util.concurrent.CopyOnWriteArrayList: java.util.ListIterator listIterator()>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: void <init>(java.lang.Object[],int,java.util.concurrent.CopyOnWriteArrayList$1)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Map _orderEntries(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void <init>(java.util.concurrent.LinkedBlockingQueue)>-><java.lang.Object: void <init>()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeStaticShortFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<java.lang.Object: java.lang.String toString()>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<org.springframework.web.util.WebUtils: java.lang.Object getSessionMutex(javax.servlet.http.HttpSession)>-><org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.jar.Attributes: java.lang.Object get(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.Collections$EmptyList: int size()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><ch.qos.logback.classic.spi.ClassPackagingData: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: java.lang.String getName()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.ArrayNode: boolean equals(java.lang.Object)>
<org.springframework.web.context.request.ServletRequestAttributes: void registerSessionDestructionCallback(java.lang.String,java.lang.Runnable)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<java.io.PrintWriter: void newLine()>-><org.apache.catalina.connector.OutputBuffer: void flush()>
<io.netty.util.concurrent.ScheduledFutureTask: long getDelay(java.util.concurrent.TimeUnit)>-><java.util.concurrent.TimeUnit$3: long convert(long,java.util.concurrent.TimeUnit)>
<org.springframework.cglib.core.EmitUtils$6: void processCase(int,org.springframework.asm.Label)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<org.springframework.web.context.request.ServletRequestAttributes: javax.servlet.http.HttpSession obtainSession()>-><org.springframework.util.Assert: void state(boolean,java.lang.String)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: java.lang.Object next()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: int hashCode()>
<org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<java.lang.reflect.Field: void setFieldAccessor(sun.reflect.FieldAccessor,boolean)>-><java.lang.reflect.Field: void setFieldAccessor(sun.reflect.FieldAccessor,boolean)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.format.DateTimeFormatterBuilder$TextPrinterParser: java.lang.String toString()>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: void refreshIfEmpty()>-><java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.text.AttributeEntry: java.lang.Object getValue()>
<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: int compareTo(java.lang.Object)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<sun.reflect.UnsafeFieldAccessorImpl: java.lang.String getSetMessage(java.lang.String,java.lang.String)>-><java.lang.reflect.Modifier: boolean isStatic(int)>
<org.springframework.web.context.request.ServletRequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.OffsetTime: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.BooleanNode: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.node.FloatNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.NullNode: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.apache.tomcat.util.buf.StringCache$CharEntry: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.reflect.Proxy$KeyX: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object)>
<java.nio.InvalidMarkException: void <init>()>-><java.lang.IllegalStateException: void <init>()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArraySet: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<org.hibernate.validator.internal.util.annotation.AnnotationDescriptor: boolean equals(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object previous()>-><java.util.NoSuchElementException: void <init>()>
<com.zaxxer.hikari.util.PropertyElf: java.util.Set getPropertyNames(java.lang.Class)>-><java.lang.String: java.lang.String substring(int)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.Object: java.lang.Class getClass()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(java.nio.CharBuffer,java.nio.ByteBuffer)>-><java.nio.Buffer: java.nio.Buffer flip()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.deser.impl.CreatorCandidate: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<com.zaxxer.hikari.pool.HikariProxyConnection: void <init>(com.zaxxer.hikari.pool.PoolEntry,java.sql.Connection,com.zaxxer.hikari.util.FastList,com.zaxxer.hikari.pool.ProxyLeakTask,long,boolean,boolean)>-><com.zaxxer.hikari.pool.ProxyConnection: void <init>(com.zaxxer.hikari.pool.PoolEntry,java.sql.Connection,com.zaxxer.hikari.util.FastList,com.zaxxer.hikari.pool.ProxyLeakTask,long,boolean,boolean)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.SubList$1: java.lang.Object next()>
<org.apache.tomcat.util.http.parser.HttpParser: java.lang.String readTokenOrQuotedString(java.io.Reader,boolean)>-><org.apache.tomcat.util.http.parser.HttpParser: java.lang.String readQuotedString(java.io.Reader,boolean)>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: int size()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.concurrent.atomic.AtomicReference: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeByteFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void initializeDataSource()>-><com.zaxxer.hikari.HikariConfig: java.lang.String getJdbcUrl()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<javax.print.MimeType$ParameterMapEntrySet: int size()>-><javax.print.MimeType: java.lang.String[] access$000(javax.print.MimeType)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: void logConfiguration()>-><java.lang.String: java.lang.String substring(int,int)>
<org.apache.catalina.connector.OutputBuffer: void flushCharBuffer()>-><org.apache.catalina.connector.OutputBuffer: void clear(java.nio.Buffer)>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.MediaType: void <init>(java.lang.String,java.lang.String,java.util.LinkedHashMap)>-><java.lang.String: char charAt(int)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.time.LocalDate: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.C2BConverter: void convert(java.nio.CharBuffer,java.nio.ByteBuffer)>-><java.nio.HeapCharBuffer: java.nio.CharBuffer put(char)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.Vector: boolean add(java.lang.Object)>
<java.util.Collections: void reverse(java.util.List)>-><java.util.ArrayList$SubList$1: java.lang.Object previous()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<ch.qos.logback.core.helpers.ThrowableToStringArray: java.lang.String formatFirstLine(java.lang.Throwable,java.lang.StackTraceElement[])>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<sun.reflect.UnsafeStaticBooleanFieldAccessorImpl: boolean getBoolean(java.lang.Object)>-><sun.misc.Unsafe: boolean getBoolean(java.lang.Object,long)>
<com.zaxxer.hikari.pool.ProxyConnection: void setSchema(java.lang.String)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void setSchema(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.ansi.Ansi8BitColor: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.provider.RuleBasedBreakIterator: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.zone.TzdbZoneRulesProvider: java.lang.String toString()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><com.zaxxer.hikari.util.UtilityElf: java.util.concurrent.ThreadPoolExecutor createThreadPoolExecutor(int,java.lang.String,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)>
<java.util.concurrent.Executors$DelegatedExecutorService: void execute(java.lang.Runnable)>-><java.util.concurrent.ScheduledThreadPoolExecutor: void execute(java.lang.Runnable)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object clone()>-><java.lang.InternalError: void <init>()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.apache.logging.log4j.Level: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.status.StatusBase: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><io.netty.util.concurrent.DefaultPromise$LeanCancellationException: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Integer: int intValue()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.Class: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.Optional: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.SubList: java.lang.Object get(int)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><java.nio.charset.CoderResult: boolean isUnderflow()>
<org.aspectj.bridge.AbortException: void printStackTrace(java.io.PrintStream)>-><java.lang.StringBuilder: void <init>()>
<sun.reflect.UnsafeStaticByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.asm.Handle: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<java.util.Collections$UnmodifiableList$1: java.lang.Object previous()>-><java.util.LinkedList$ListItr: java.lang.Object previous()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.util.locale.provider.RuleBasedBreakIterator: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Short: short shortValue()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><java.nio.Buffer: java.nio.Buffer limit(int)>
<sun.reflect.UnsafeDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Short: short shortValue()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.core.convert.TypeDescriptor: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: int hashCode()>
<com.zaxxer.hikari.HikariDataSource: java.sql.Connection getConnection()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<com.zaxxer.hikari.metrics.dropwizard.CodahaleHealthChecker: void registerHealthChecks(com.zaxxer.hikari.pool.HikariPool,com.zaxxer.hikari.HikariConfig,com.codahale.metrics.health.HealthCheckRegistry)>-><com.zaxxer.hikari.HikariConfig: long getConnectionTimeout()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: java.sql.SQLException createTimeoutException(long)>-><java.sql.SQLTransientConnectionException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.MediaType: java.lang.String toStringNoCharset()>-><java.util.LinkedHashMap: java.util.Set entrySet()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.Hashtable$Entry: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setupConnection(java.sql.Connection)>-><com.zaxxer.hikari.pool.PoolBase: void checkDriverSupport(java.sql.Connection)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: java.lang.Object next()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean isAuthenticated()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.ChoiceFormat: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.ObjectInstance: boolean equals(java.lang.Object)>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onBeforeCommit(com.p6spy.engine.common.ConnectionInformation)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.introspect.MemberKey: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.WeakHashMap$Entry: java.lang.Object getKey()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.util.DerValue: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.aspectj.bridge.AbortException: void printStackTrace(java.io.PrintWriter)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.RenderingHints$Key: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.UtilityElf: int getTransactionIsolation(java.lang.String)>-><com.zaxxer.hikari.util.IsolationLevel: com.zaxxer.hikari.util.IsolationLevel valueOf(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.util.UtilityElf: void quietlySleep(long)>
<org.springframework.web.util.pattern.LiteralPathElement: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<java.util.concurrent.ThreadLocalRandom: long nextLong(long)>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.status.StatusBase: boolean equals(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedByteFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.BasicPermission: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.RegularEnumSet: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.KindedPointcut: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.codehaus.jackson.node.ObjectNode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: java.util.concurrent.ScheduledExecutorService initializeHouseKeepingExecutorService()>-><java.util.concurrent.ScheduledThreadPoolExecutor: void setRemoveOnCancelPolicy(boolean)>
<org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: boolean containsAll(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList: boolean containsAll(java.util.Collection)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: void setSchema(java.lang.String)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void setSchema(java.lang.String)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.Object put(java.lang.String,java.lang.Object)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.zaxxer.hikari.HikariDataSource: java.sql.Connection getConnection()>-><com.zaxxer.hikari.HikariConfig: void seal()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.security.provider.PolicyParser$PrincipalEntry: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.beans.IndexedPropertyDescriptor: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: int hashCode()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.codehaus.jackson.node.DoubleNode: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String getPerms()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.core.convert.support.GenericConversionService: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<org.aspectj.weaver.BCException: void <init>(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.hibernate.validator.internal.util.annotation.AnnotationDescriptor: boolean equals(java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.SubList$1: java.lang.Object previous()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.core.AttributeAccessorSupport: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.MethodParameter: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.SubList: java.lang.Object remove(int)>
<com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: boolean shouldCreateAnotherConnection()>-><com.zaxxer.hikari.HikariConfig: int getMaximumPoolSize()>
<com.alibaba.fastjson.JSON: java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.io.FilePermission: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.concurrent.atomic.AtomicInteger: int get()>
<ch.qos.logback.core.joran.spi.SimpleRuleStore: void addRule(ch.qos.logback.core.joran.spi.ElementSelector,ch.qos.logback.core.joran.action.Action)>-><java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: java.lang.String toString()>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.WithinPointcut: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.image.ComponentColorModel: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: int hashCode()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><java.nio.CharBuffer: int hashCode()>
<org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.POJONode: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.http.parser.MediaType: java.lang.String toStringNoCharset()>-><java.util.HashMap$Node: java.lang.Object getKey()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<org.springframework.validation.DataBinder: org.springframework.validation.AbstractPropertyBindingResult createBeanPropertyBindingResult()>-><org.springframework.validation.BeanPropertyBindingResult: void <init>(java.lang.Object,java.lang.String,boolean,int)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.sun.jmx.mbeanserver.WeakIdentityHashMap$IdentityWeakReference: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariProxyConnection: void setAutoCommit(boolean)>-><com.zaxxer.hikari.pool.ProxyConnection: void setAutoCommit(boolean)>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: java.util.Spliterator trySplit()>-><java.util.Spliterators: java.util.Spliterator spliterator(java.lang.Object[],int,int,int)>
<org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.ZonedDateTime: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.zone.ZoneRules: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorImpl: java.lang.String getQualifiedFieldName()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap: java.lang.Object get(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.GenericBeanDefinition: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Locale$LocaleKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.ArrayListMultimap: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<com.zaxxer.hikari.util.ClockSource: long currentTime()>-><com.zaxxer.hikari.util.ClockSource$NanosecondClockSource: long currentTime0()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><com.alibaba.fastjson.JSONArray: java.lang.Object set(int,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariProxyConnection: void setSchema(java.lang.String)>-><com.zaxxer.hikari.pool.ProxyConnection: void setSchema(java.lang.String)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<io.netty.util.internal.shaded.org.jctools.util.UnsafeRefArrayAccess: void soElement(java.lang.Object[],long,java.lang.Object)>-><sun.misc.Unsafe: void putOrderedObject(java.lang.Object,long,java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.core.publisher.MonoCallableOnAssembly: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.lettuce.core.masterslave.MasterSlaveConnectionProvider$ConnectionKey: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Hashtable: boolean equals(java.lang.Object)>
<org.hibernate.validator.internal.util.annotation.AnnotationDescriptor: boolean equals(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.springframework.util.CollectionUtils$MultiValueMapAdapter: java.util.List put(java.lang.Object,java.util.List)>-><java.util.Collections$UnmodifiableMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedList: java.lang.Object remove(int)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object remove(int)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><javax.security.auth.Subject$SecureSet: int size()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.security.x509.UnparseableExtension: java.lang.String toString()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.Thread$WeakClassKey: boolean equals(java.lang.Object)>
<com.google.common.collect.TransformedIterator: java.lang.Object next()>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<org.springframework.security.web.util.UrlUtils: java.lang.String buildFullRequestUrl(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: int hashCode()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeFloatFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.support.DefaultIntroductionAdvisor: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.MethodInfo: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><com.p6spy.engine.spy.P6DataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableMap: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder: com.fasterxml.jackson.databind.introspect.AnnotatedField getField()>-><java.lang.Class: boolean isAssignableFrom(java.lang.Class)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Proxy$Key2: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.bouncycastle.asn1.DERGeneralString: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.connection.util.ByteArrayWrapper: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<io.micrometer.core.instrument.Gauge$Builder: io.micrometer.core.instrument.Gauge register(io.micrometer.core.instrument.MeterRegistry)>-><io.micrometer.core.instrument.StrongReferenceGaugeFunction: void <init>(java.lang.Object,java.util.function.ToDoubleFunction)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.core.publisher.FluxCallableOnAssembly: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.aspectj.weaver.MemberImpl: int hashCode()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.tree.TypeVariableSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.atomic.AtomicLongArray: java.lang.String toString()>
<java.util.Collections$UnmodifiableCollection: boolean contains(java.lang.Object)>-><java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.bouncycastle.asn1.ASN1Set: java.lang.String toString()>
<org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>-><java.lang.StringBuffer: void <init>()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.calendar.ZoneInfo: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.text.ParsePosition: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.Date: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.time.format.DecimalStyle: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void checkDefaultIsolation(java.sql.Connection)>-><com.zaxxer.hikari.pool.HikariProxyConnection: int getTransactionIsolation()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeBooleanFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeBooleanFieldAccessorImpl: boolean getBoolean(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.util.unit.DataSize: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<java.lang.ThreadLocal$SuppliedThreadLocal: java.lang.Object initialValue()>-><java.util.stream.FindOps$FindSink$OfRef: java.lang.Object get()>
<sun.reflect.UnsafeDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<org.aspectj.weaver.patterns.ReferencePointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.TypePatternList: java.lang.String toString()>
<org.aspectj.weaver.MemberImpl: java.lang.String toString()>-><org.aspectj.weaver.ResolvedType$Missing: java.lang.String getName()>
<com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: void serialize(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.base.Joiner$3: int size()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.codehaus.jackson.map.ser.BeanSerializer: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<cc.mrbird.febs.auth.filter.ValidateCodeFilter: void doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.springframework.security.web.FilterChainProxy$VirtualFilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.BinaryNode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.LongNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Long: long longValue()>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object set(int,java.lang.Object)>-><java.util.concurrent.locks.ReentrantLock: void lock()>
<java.util.ComparableTimSort: void mergeHi(int,int,int,int)>-><org.aspectj.weaver.MemberImpl: int compareTo(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.CharChunk: int subtract(char[],int,int)>-><org.apache.tomcat.util.buf.CharChunk: boolean checkEof()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: int hashCode()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: int hashCode()>-><org.aspectj.weaver.MemberImpl: int hashCode()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.http.HttpHeaders: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.DependencyDescriptor: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<org.springframework.validation.DataBinder: org.springframework.beans.TypeConverter getTypeConverter()>-><org.springframework.validation.DataBinder: org.springframework.validation.AbstractPropertyBindingResult getInternalBindingResult()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: void close()>-><com.zaxxer.hikari.pool.HikariProxyConnection: void rollback()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.springframework.aop.framework.AdvisedSupport: java.lang.String toString()>-><java.util.ArrayList: int size()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><java.lang.reflect.Field: java.lang.String toString()>
<org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.QueryRequest: boolean equals(java.lang.Object)>
<java.util.TreeMap: void putAll(java.util.Map)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><java.util.concurrent.TimeUnit$4: long toMillis(long)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setupConnection(java.sql.Connection)>-><com.p6spy.engine.wrapper.ConnectionWrapper: boolean getAutoCommit()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.text.AttributeEntry: java.lang.Object getKey()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.misc.Signal: java.lang.String toString()>
<org.aspectj.weaver.patterns.TypePatternList: java.lang.String toString()>-><java.lang.StringBuffer: void <init>()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.EmitUtils$6: void processCase(int,org.springframework.asm.Label)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.CollectionLikeType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.TreeMap$Entry: java.lang.Object getValue()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.String: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.http.HttpHeaders: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.ObjectNode: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.FastList: void <init>(java.lang.Class,int)>-><java.lang.Object: void <init>()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Map _orderEntries(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><ch.qos.logback.core.spi.ScanException: java.lang.Throwable getCause()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.format.support.FormattingConversionService$AnnotationPrinterConverter: java.lang.String toString()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.Long: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.data.util.TypeVariableTypeInformation: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.TypeVariableTypeInformation: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<com.fasterxml.classmate.ResolvedType: int hashCode()>-><com.fasterxml.classmate.TypeBindings: int hashCode()>
<com.zaxxer.hikari.util.PropertyElf: java.util.Set getPropertyNames(java.lang.Class)>-><java.lang.reflect.Method: java.lang.Class getReturnType()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.alibaba.fastjson.parser.ParseContext: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.asm.ConstantDynamic: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.sun.jmx.mbeanserver.WeakIdentityHashMap$IdentityWeakReference: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySet: int size()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.MethodType: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.net.InetSocketAddress: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ListSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<com.alibaba.fastjson.serializer.MapSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><java.nio.CharBuffer: java.lang.String toString()>
<com.zaxxer.hikari.HikariDataSource: java.sql.Connection getConnection()>-><com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.web.context.support.ServletContextResource: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: com.zaxxer.hikari.pool.PoolEntry newPoolEntry()>-><com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>
<sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFieldsUsing(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.Object: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: java.lang.String toString()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.ThisOrTargetAnnotationPointcut: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.HashMap$Node: java.lang.Object getKey()>
<java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>-><org.aspectj.weaver.MemberImpl: int compareTo(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: void <init>(com.zaxxer.hikari.util.ConcurrentBag$IBagStateListener)>-><java.lang.Object: void <init>()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.util.CollectionUtils$MultiValueMapAdapter: java.util.Set entrySet()>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.Collections$SynchronizedList: java.lang.Object remove(int)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><java.nio.CharBuffer: java.lang.String toString()>
<io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields: void soConsumerIndex(long)>-><sun.misc.Unsafe: void putOrderedLong(java.lang.Object,long,long)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.ObjectInstance: boolean equals(java.lang.Object)>
<java.util.AbstractList$ListItr: java.lang.Object previous()>-><java.util.Collections$SingletonList: java.lang.Object get(int)>
<org.aspectj.weaver.patterns.KindedPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>
<org.apache.catalina.connector.OutputBuffer: void doFlush(boolean)>-><org.apache.catalina.connector.OutputBuffer: void flushByteBuffer()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.TreeMap$Entry: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><java.lang.reflect.Field: int hashCode()>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl$ClassIndexWrapper: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.HikariConfig: void logConfiguration()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.AndAnnotationTypePattern: int hashCode()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void appendCollection(java.lang.Object,java.lang.StringBuilder,java.util.Set)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<com.zaxxer.hikari.pool.PoolBase: void quietlyCloseConnection(java.sql.Connection,java.lang.String)>-><ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object[])>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.management.openmbean.TabularDataSupport: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.BooleanNode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.expression.spel.ast.NullLiteral: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.KeyFactory$Generator: void generateClass(org.springframework.asm.ClassVisitor)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><org.apache.tomcat.util.buf.CharChunk: int subtract(char[],int,int)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<org.springframework.http.ReadOnlyHttpHeaders: java.util.Set entrySet()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.stream.Stream stream()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.reflect.Constructor: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags and(java.lang.Iterable)>-><io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags and(io.micrometer.core.instrument.Tag[])>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>-><java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String toString()>
<java.lang.Iterable: java.util.Spliterator spliterator()>-><io.micrometer.core.instrument.Tags: java.util.Iterator iterator()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.lang.ProcessEnvironment$StringEntrySet: int size()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.text.DecimalFormat: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void appendMap(java.lang.Object,java.lang.StringBuilder,java.util.Set)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: int hashCode()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.provider.RuleBasedBreakIterator: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.MemberKey: java.lang.String toString()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><jdk.internal.org.xml.sax.SAXException: java.lang.Throwable getCause()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putByteVolatile(java.lang.Object,long,byte)>
<org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypePatternList: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.SubList$1: java.lang.Object next()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.management.MBeanNotificationInfo: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>-><java.util.AbstractMap: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Object getPrincipal()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.format.DecimalStyle: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags of(java.lang.Iterable)>-><java.lang.Iterable: java.util.Spliterator spliterator()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: int hashCode()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.bouncycastle.asn1.ASN1Primitive: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.KindedPointcut: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ListSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<org.apache.tomcat.util.collections.ConcurrentCache: java.lang.Object get(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeBooleanFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Boolean: void <init>(boolean)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.CollectionUtils: java.util.Map bucket(java.util.Collection,org.springframework.cglib.core.Transformer)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.IntNode: boolean equals(java.lang.Object)>
<java.time.format.DateTimeTextProvider$LocaleStore: void <init>(java.util.Map)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><com.zaxxer.hikari.util.SuspendResumeLock$1: void release()>
<sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.springframework.security.oauth2.provider.OAuth2Authentication: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FormatCache$MultipartKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker: void <init>(java.lang.String,com.zaxxer.hikari.metrics.PoolStats,io.micrometer.core.instrument.MeterRegistry)>-><io.micrometer.core.instrument.Gauge$Builder: io.micrometer.core.instrument.Gauge$Builder tags(java.lang.String[])>
<com.zaxxer.hikari.HikariConfig: void validate()>-><com.zaxxer.hikari.HikariConfig: void logConfiguration()>
<ch.qos.logback.core.joran.spi.Interpreter: void callBeginAction(java.util.List,java.lang.String,org.xml.sax.Attributes)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.codehaus.jackson.node.BinaryNode: boolean equals(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.TreeMap$KeySet: boolean remove(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>-><java.lang.reflect.Field: java.util.Map declaredAnnotations()>
<com.zaxxer.hikari.HikariDataSource: void close()>-><org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>
<org.aspectj.util.LangUtil: void elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)>-><java.util.AbstractCollection: boolean isEmpty()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: org.springframework.beans.AbstractNestablePropertyAccessor getNestedPropertyAccessor(java.lang.String)>-><java.util.Optional: boolean isPresent()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.google.common.base.Predicates$AndPredicate: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ListSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object get(int)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.util.Map$Entry next()>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><org.springframework.util.LinkedMultiValueMap: java.lang.String toString()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.beans.factory.BeanCreationException: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariProxyConnection: boolean getAutoCommit()>-><com.p6spy.engine.wrapper.ConnectionWrapper: boolean getAutoCommit()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><java.lang.reflect.AccessibleObject: void checkAccess(java.lang.Class,java.lang.Class,java.lang.Object,int)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.Character$Subset: boolean equals(java.lang.Object)>
<java.net.InetAddress: java.lang.String getHostFromNameService(java.net.InetAddress,boolean)>-><java.net.InetAddress: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<java.util.Map: void forEach(java.util.function.BiConsumer)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.math.BigInteger: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.classic.spi.ClassPackagingData: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.alibaba.fastjson.serializer.SerialContext: java.lang.String toString()>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onAfterSetAutoCommit(com.p6spy.engine.common.ConnectionInformation,boolean,boolean,java.sql.SQLException)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: java.lang.Object getCredentials()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<org.springframework.aop.framework.ProxyConfig: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.alibaba.fastjson.serializer.CollectionCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: com.zaxxer.hikari.pool.PoolEntry createPoolEntry()>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>
<java.util.stream.ReferencePipeline$11: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>-><java.util.stream.ReferencePipeline$11$1: void <init>(java.util.stream.ReferencePipeline$11,java.util.stream.Sink)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.UUID: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.C2BConverter: void convert(java.nio.CharBuffer,java.nio.ByteBuffer)>-><java.nio.CharBuffer: char[] array()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.AbstractMap$1: int size()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.text.DateFormatSymbols: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<java.text.AttributeEntry: java.lang.String toString()>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><javax.xml.parsers.FactoryConfigurationError: java.lang.String getMessage()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Instant: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.text.ParsePosition: java.lang.String toString()>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isDependent(java.lang.String,java.lang.String,java.util.Set)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.security.x509.RDN: java.lang.String toString()>
<java.util.TreeSet: boolean addAll(java.util.Collection)>-><javax.print.MimeType$ParameterMapEntrySet: int size()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.node.NullNode: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.DecimalNode: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.aop.TruePointcut: java.lang.String toString()>
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.Object doResolveDependency(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String,java.util.Set,org.springframework.beans.TypeConverter)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider$3: java.lang.Object resolveNotUnique(org.springframework.core.ResolvableType,java.util.Map)>
<org.aspectj.bridge.SourceLocation: java.lang.String toString()>-><java.lang.StringBuffer: void <init>()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.support.annotation.AnnotationMatchingPointcut: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.util.Map$Entry next()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<java.util.Hashtable: void putAll(java.util.Map)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.type.SimpleType: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.OptionalDouble: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.OptionalInt: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.HashMap$Node: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.IdentityHashMap$KeySet: java.util.Iterator iterator()>
<com.zaxxer.hikari.pool.PoolBase: void handleMBeans(com.zaxxer.hikari.pool.HikariPool,boolean)>-><org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object[])>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.util.DerValue: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.node.BinaryNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArraySet: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.text.AttributedCharacterIterator$Attribute: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<java.util.concurrent.LinkedBlockingQueue$Itr: java.lang.Object next()>-><java.util.NoSuchElementException: void <init>()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.validation.ObjectError: boolean equals(java.lang.Object)>
<java.sql.DriverManager: java.util.Enumeration getDrivers()>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: boolean hasNext()>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<io.micrometer.core.instrument.Counter$Builder: void <init>(java.lang.String,io.micrometer.core.instrument.Counter$1)>-><io.micrometer.core.instrument.Counter$Builder: void <init>(java.lang.String)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<sun.reflect.UnsafeLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Character: char charValue()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorImpl: java.lang.String getQualifiedFieldName()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: int size()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.reflect.Method: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void beforePrototypeCreation(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean add(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: java.lang.String generatePoolName()>-><java.lang.Integer: int intValue()>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.cert.Certificate: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)>-><java.util.Hashtable: boolean containsKey(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.base.Predicates$AndPredicate: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void initializeDataSource()>-><com.zaxxer.hikari.util.PropertyElf: void setTargetFromProperties(java.lang.Object,java.util.Properties)>
<sun.reflect.UnsafeFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<java.util.EnumMap$EntrySet: boolean contains(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$1: java.lang.Object next()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.time.MonthDay: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.AttributedString$AttributedStringIterator: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: java.util.Iterator iterator()>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.BCException: void printStackTrace(java.io.PrintWriter)>-><java.io.PrintWriter: void println()>
<sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.nio.charset.CoderResult: java.lang.String toString()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.provider.PolicyParser$PermissionEntry: boolean equals(java.lang.Object)>
<sun.reflect.generics.repository.FieldRepository: sun.reflect.generics.tree.TypeSignature parse(java.lang.String)>-><sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.TypeSignature parseTypeSig(java.lang.String)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Collections$SetFromMap: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JavaBeanSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Vector: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.pool.ProxyLeakTaskFactory: void <init>(long,java.util.concurrent.ScheduledExecutorService)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<io.micrometer.core.instrument.Tag: io.micrometer.core.instrument.Tag of(java.lang.String,java.lang.String)>-><io.micrometer.core.instrument.ImmutableTag: void <init>(java.lang.String,java.lang.String)>
<org.apache.tomcat.util.collections.ConcurrentCache: java.lang.Object get(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<java.util.AbstractCollection: boolean remove(java.lang.Object)>-><org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.AbstractList$ListItr: java.lang.Object previous()>-><java.util.NoSuchElementException: void <init>()>
<org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>-><org.springframework.data.redis.connection.RedisPassword: boolean isPresent()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.Collections$SynchronizedCollection: int size()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.bouncycastle.asn1.DERUniversalString: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Character: void <init>(char)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void logPoolState(java.lang.String[])>-><ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object[])>
<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.lang.Object findFilterId(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)>-><org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint$ConfigurationPropertiesAnnotationIntrospector: java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.Annotated)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.commons.pool2.impl.BaseGenericObjectPool$IdentityWrapper: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String toString()>
<org.apache.tomcat.util.http.parser.MediaTypeCache: java.lang.String[] parse(java.lang.String)>-><org.apache.tomcat.util.http.parser.MediaType: java.lang.String getCharset()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: boolean hasNext()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<org.aspectj.weaver.MemberImpl: int compareTo(org.aspectj.weaver.Member)>-><org.aspectj.weaver.MemberImpl: java.lang.String getName()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.core.MethodParameter: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>-><reactor.core.scheduler.ReactorThreadFactory: java.lang.String get()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.node.DoubleNode: boolean equals(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.JumboEnumSet: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.DecimalNode: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>-><java.util.IdentityHashMap$Values: java.lang.Object[] toArray()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeLongFieldAccessorImpl: long getLong(java.lang.Object)>-><sun.misc.Unsafe: long getLong(java.lang.Object,long)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.lang.Thread: void yield()>
<java.util.concurrent.TimeUnit$6: long convert(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.TimeUnit$1: long toHours(long)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.BigIntegerNode: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: int hashCode()>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.Set resolveManagedSet(java.lang.Object,java.util.Set)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.ZonedDateTime: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.ArgsAnnotationPointcut: java.lang.String toString()>
<java.util.AbstractCollection: java.lang.Object[] toArray()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.cglib.core.VisibilityPredicate: boolean evaluate(java.lang.Object)>-><java.lang.reflect.Field: int getModifiers()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.CodeSource: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.C2BConverter: void convert(java.nio.CharBuffer,java.nio.ByteBuffer)>-><java.nio.charset.CoderResult: boolean isOverflow()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.OptionalInt: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.BeanExpressionContext: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<java.util.concurrent.Executors$DelegatedExecutorService: void execute(java.lang.Runnable)>-><java.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<java.util.AbstractList$ListItr: java.lang.Object previous()>-><java.util.Collections$CopiesList: java.lang.Object get(int)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><org.springframework.http.ReadOnlyHttpHeaders: java.lang.Object get(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.io.FilePermission: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.FieldPosition: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void recycle(com.zaxxer.hikari.pool.PoolEntry)>-><com.zaxxer.hikari.pool.PoolBase$IMetricsTrackerDelegate: void recordConnectionUsage(com.zaxxer.hikari.pool.PoolEntry)>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.core.ResolvableType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.management.ObjectName: boolean equals(java.lang.Object)>
<org.apache.catalina.util.ToStringUtil: java.lang.String toString(org.apache.catalina.Contained)>-><org.apache.catalina.util.ToStringUtil: java.lang.String toString(java.lang.Object,org.apache.catalina.Container)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.jar.Manifest: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.bouncycastle.asn1.ASN1Boolean: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.alibaba.fastjson.util.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet$1: java.lang.Object next()>
<org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.TabularType: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<sun.reflect.UnsafeLongFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><sun.reflect.UnsafeFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.beans.MutablePropertyValues: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Integer: int intValue()>
<org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>-><java.lang.StringBuffer: void <init>()>
<sun.reflect.UnsafeFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Float: float floatValue()>
<com.zaxxer.hikari.HikariDataSource: void close()>-><com.zaxxer.hikari.pool.HikariPool: void shutdown()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><com.zaxxer.hikari.pool.HikariPool: void softEvictConnections()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.SimpleType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WithincodePointcut: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.zaxxer.hikari.HikariDataSource: void setLoginTimeout(int)>-><com.p6spy.engine.spy.P6DataSource: void setLoginTimeout(int)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.jar.Attributes: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Proxy$KeyX: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: boolean remove(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.Color: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.SimpleDateFormat: boolean equals(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.TreeSet: int size()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.Collections$SetFromMap: boolean remove(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: void closeStatements()>-><ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<java.util.HashMap: void putMapEntries(java.util.Map,boolean)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.MemberImpl: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object remove(int)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: void rangeCheck(int)>
<java.util.Collections$UnmodifiableCollection$1: void <init>(java.util.Collections$UnmodifiableCollection)>-><java.util.concurrent.LinkedBlockingQueue: java.util.Iterator iterator()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.lang.reflect.Field: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<java.util.AbstractCollection: java.lang.Object[] toArray()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.hibernate.validator.internal.util.annotation.AnnotationProxy: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object set(int,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] getArray()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<sun.reflect.UnsafeStaticByteFieldAccessorImpl: byte getByte(java.lang.Object)>-><sun.misc.Unsafe: byte getByte(java.lang.Object,long)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: int hashCode()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><java.lang.reflect.Field: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void quietlyCloseConnection(java.sql.Connection,java.lang.String)>-><com.zaxxer.hikari.pool.ProxyConnection: void close()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$EmptyList: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArraySet: boolean equals(java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.aspectj.util.LangUtil: java.lang.String renderException(java.lang.Throwable,boolean)>-><org.aspectj.util.LangUtil: java.lang.StringBuffer stackToString(java.lang.Throwable,boolean)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<org.springframework.aop.framework.AdvisedSupport: java.lang.String toString()>-><java.lang.Object: java.lang.Class getClass()>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><java.util.Arrays$ArrayList: int size()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.ArrayType: boolean equals(java.lang.Object)>
<java.util.Collections: void reverse(java.util.List)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedList: java.util.ListIterator listIterator()>
<io.netty.util.concurrent.AbstractEventExecutorGroup: void execute(java.lang.Runnable)>-><io.netty.channel.MultithreadEventLoopGroup: io.netty.util.concurrent.EventExecutor next()>
<com.zaxxer.hikari.pool.PoolEntry: boolean compareAndSet(int,int)>-><java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl: boolean compareAndSet(java.lang.Object,int,int)>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><org.springframework.http.HttpHeaders: int size()>
<org.apache.catalina.connector.OutputBuffer: void toWriteMode(java.nio.Buffer)>-><java.nio.Buffer: java.nio.Buffer mark()>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.security.web.util.matcher.RequestHeaderRequestMatcher: java.lang.String toString()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyStatement: java.sql.SQLException checkException(java.sql.SQLException)>-><com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: boolean equals(java.lang.Object)>
<org.springframework.web.context.request.ServletRequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)>-><javax.servlet.ServletRequestWrapper: void setAttribute(java.lang.String,java.lang.Object)>
<com.zaxxer.hikari.util.UtilityElf: java.util.concurrent.ThreadPoolExecutor createThreadPoolExecutor(java.util.concurrent.BlockingQueue,java.lang.String,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)>-><java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: int hashCode()>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><com.zaxxer.hikari.pool.HikariProxyConnection: boolean isValid(int)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.JumboEnumSet: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<sun.reflect.UnsafeDoubleFieldAccessorImpl: double getDouble(java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.management.MBeanOperationInfo: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.ZoneId: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean remove(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.LambdaFormEditor$Transform: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.sun.beans.WildcardTypeImpl: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyConnection: void closeStatements()>-><com.zaxxer.hikari.util.FastList: int size()>
<com.alibaba.fastjson.serializer.JavaBeanSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.alibaba.fastjson.util.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<java.util.SubList$1: java.lang.Object previous()>-><java.util.AbstractList$ListItr: java.lang.Object previous()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.deser.SettableBeanProperty: java.lang.String toString()>
<org.aspectj.bridge.context.CompilationAndWeavingContext: java.lang.String getCurrentContext()>-><java.util.Vector: java.util.Iterator iterator()>
<org.springframework.expression.spel.ast.Indexer$CollectionIndexingValueRef: org.springframework.expression.TypedValue getValue()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<com.zaxxer.hikari.HikariConfig: void logConfiguration()>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object)>
<javax.servlet.ServletRequestWrapper: java.lang.String getRemoteAddr()>-><javax.servlet.ServletRequestWrapper: java.lang.String getRemoteAddr()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><java.nio.CharBuffer: int hashCode()>
<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>-><java.time.Duration: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<java.util.concurrent.LinkedBlockingQueue: java.lang.String toString()>-><java.util.concurrent.LinkedBlockingQueue: void fullyLock()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.chrono.AbstractChronology: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>
<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object get(int)>
<org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>-><org.springframework.expression.common.LiteralExpression: java.lang.String getExpressionString()>
<javax.print.MimeType$ParameterMapEntrySetIterator: void <init>(javax.print.MimeType)>-><java.lang.Object: void <init>()>
<org.aspectj.weaver.patterns.TypePatternList: java.lang.String toString()>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.visitor.Reifier: java.lang.reflect.Type getResult()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.core.ResolvableType: boolean equals(java.lang.Object)>
<java.util.stream.AbstractTask: void compute()>-><java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: java.util.Spliterator trySplit()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.TreeMap$EntrySet: boolean remove(java.lang.Object)>
<org.aspectj.weaver.UnresolvedType: java.lang.String signatureToName(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: long getLoginTimeout()>-><com.zaxxer.hikari.HikariDataSource: int getLoginTimeout()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.util.locale.Extension: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>
<org.springframework.validation.DataBinder: org.springframework.validation.AbstractPropertyBindingResult getInternalBindingResult()>-><org.springframework.validation.DataBinder: void initBeanPropertyAccess()>
<java.util.Collections$SynchronizedCollection: boolean add(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><ch.qos.logback.core.status.StatusBase: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Hashtable: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><java.util.TreeMap: int size()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.codehaus.jackson.map.type.SimpleType: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.EmitUtils: void member_helper_type(org.springframework.cglib.core.CodeEmitter,java.util.List,org.springframework.cglib.core.ObjectSwitchCallback,org.springframework.cglib.core.EmitUtils$ParameterTyper,org.springframework.asm.Label,org.springframework.asm.Label,java.util.BitSet)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.EnumMap$KeySet: boolean contains(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.NotAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.image.ColorModel: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.introspect.MemberKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<java.util.AbstractSet: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.sql.Timestamp: boolean equals(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.Collections$UnmodifiableMap: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<sun.reflect.UnsafeStaticFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Short: short shortValue()>
<com.sun.jmx.mbeanserver.MBeanAnalyzer: void visit(com.sun.jmx.mbeanserver.MBeanAnalyzer$MBeanVisitor)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.http.HttpHeaders: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: void <init>(io.netty.channel.nio.SelectedSelectionKeySet)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<java.util.stream.ForEachOps$ForEachOrderedTask: void <init>(java.util.stream.PipelineHelper,java.util.Spliterator,java.util.stream.Sink)>-><java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: long estimateSize()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><ch.qos.logback.classic.Logger: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.BinaryNode: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.NullNode: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<java.sql.SQLException: void <init>(java.lang.String,java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.cglib.core.MethodInfo: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.apache.http.pool.RouteSpecificPool: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.IntNode: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.core.env.CompositePropertySource: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.TypePatternList: java.lang.String toString()>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<io.micrometer.core.instrument.Counter$Builder: void <init>(java.lang.String)>-><java.lang.Object: void <init>()>
<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.String getName()>-><java.lang.reflect.Field: java.lang.String getName()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.beans.factory.support.NullBean: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: boolean equals(java.lang.Object)>
<sun.util.locale.provider.LocaleServiceProviderPool: java.lang.Object getLocalizedObjectImpl(sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,java.lang.Object[])>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><javax.xml.bind.JAXBException: java.lang.Throwable getCause()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<com.zaxxer.hikari.util.ConcurrentBag: int getCount(int)>-><com.zaxxer.hikari.pool.PoolEntry: int getState()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.TabularType: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><java.nio.CharBuffer: java.lang.String toString()>
<com.alibaba.fastjson.serializer.MapSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.TreeMap$Entry: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.CollectionCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FastDateFormat: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.UUID: java.lang.String toString()>
<org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.cglib.core.EmitUtils$6: void processCase(int,org.springframework.asm.Label)>-><com.google.common.base.Joiner$3: int size()>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<java.util.ComparableTimSort: int countRunAndMakeAscending(java.lang.Object[],int,int)>-><org.aspectj.weaver.JoinPointSignature: int compareTo(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<org.aspectj.bridge.MessageUtil: java.lang.String addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<com.zaxxer.hikari.pool.ProxyConnection: void close()>-><com.zaxxer.hikari.pool.PoolEntry: void resetConnectionState(com.zaxxer.hikari.pool.ProxyConnection,int)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<com.zaxxer.hikari.HikariConfig: void validate()>-><org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<reactor.core.publisher.FluxOnAssembly$OnAssemblyException: java.lang.String getMessage()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.crypto.CryptoPermission: boolean equals(java.lang.Object)>
<sun.reflect.ReflectionFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.security.provider.PolicyFile$SelfPermission: java.lang.String toString()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.HandlerPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><java.util.EnumMap: int size()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeOptionalFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.AndAnnotationTypePattern: int hashCode()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<org.apache.catalina.connector.OutputBuffer: void append(byte[],int,int)>-><org.apache.catalina.connector.OutputBuffer: boolean isFull(java.nio.Buffer)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.RegularEnumSet: boolean remove(java.lang.Object)>
<org.aspectj.util.LangUtil: void elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.IdentityHashMap$EntrySet: java.util.Iterator iterator()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Collections$SingletonList: java.lang.Object get(int)>
<org.aspectj.weaver.UnresolvedType: java.lang.String getName()>-><org.aspectj.weaver.UnresolvedType: java.lang.String signatureToName(java.lang.String)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><io.netty.util.concurrent.DefaultPromise: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: int hashCode()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.sql.Timestamp: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.core.annotation.AnnotationAttributes: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.base.Predicates$NotPredicate: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Map _orderEntries(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<org.aspectj.bridge.SourceLocation: java.lang.String toString()>-><java.io.File: java.lang.String getPath()>
<java.util.Collections$UnmodifiableList: java.lang.Object get(int)>-><com.google.common.base.Joiner$3: java.lang.Object get(int)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.sql.Time: java.lang.String toString()>
<org.aspectj.weaver.patterns.WithincodePointcut: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.common.collect.AbstractMapBasedMultimap: java.util.Iterator iteratorOrListIterator(java.util.Collection)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.imageio.ImageTypeSpecifier: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.UtilityElf$DefaultThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>-><java.lang.Thread: void setDaemon(boolean)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.BinaryNode: boolean equals(java.lang.Object)>
<com.sun.beans.WildcardTypeImpl: java.lang.String toString()>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: boolean equals(java.lang.Object)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.time.MonthDay: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.ArrayList$SubList: int size()>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><javax.naming.NamingException: java.lang.Throwable getCause()>
<javax.management.MBeanServerDelegate: javax.management.MBeanNotificationInfo[] getNotificationInfo()>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.alibaba.fastjson.JSON: java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.util.Iterator iterator()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.jar.Manifest: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Object getCredentials()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.ArrayListMultimap: boolean equals(java.lang.Object)>
<org.aspectj.util.LangUtil: void elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.SubList$1: boolean hasPrevious()>-><java.util.SubList$1: int previousIndex()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.bouncycastle.asn1.ASN1BitString: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.TreeMap$Entry: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<java.util.Collections$UnmodifiableList$1: java.lang.Object previous()>-><java.util.AbstractList$ListItr: java.lang.Object previous()>
<java.util.TimSort: int gallopRight(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator)>-><java.time.format.DateTimeFormatterBuilder$2: int compare(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<javax.servlet.ServletRequestWrapper: void setAttribute(java.lang.String,java.lang.Object)>-><javax.servlet.ServletRequestWrapper: void setAttribute(java.lang.String,java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: int hashCode()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.asm.ConstantDynamic: java.lang.String toString()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.DateFormatSymbols: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: void removeRange(int,int)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object[] getArray()>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void setNetworkTimeout(java.util.concurrent.Executor,int)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.springframework.core.convert.support.CollectionToArrayConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<com.zaxxer.hikari.HikariDataSource: void close()>-><org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyLeakTaskFactory: com.zaxxer.hikari.pool.ProxyLeakTask scheduleNewTask(com.zaxxer.hikari.pool.PoolEntry)>-><com.zaxxer.hikari.pool.ProxyLeakTask: void schedule(java.util.concurrent.ScheduledExecutorService,long)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.RegularEnumSet: boolean contains(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><java.lang.ClassNotFoundException: java.lang.Throwable getCause()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Collections$UnmodifiableList: java.lang.Object get(int)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>-><java.util.HashSet: boolean contains(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.AbstractCollection: boolean isEmpty()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WithinPointcut: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><javax.management.openmbean.TabularDataSupport: int size()>
<org.aspectj.weaver.patterns.ExactTypePattern: int hashCode()>-><java.lang.Object: int hashCode()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><javax.crypto.CryptoPermission: java.lang.String toString()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: int hashCode()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.time.chrono.AbstractChronology: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<org.aspectj.bridge.MessageUtil: java.lang.String addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><java.util.Collections$SynchronizedMap: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.io.File: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.springframework.util.CollectionUtils$MultiValueMapAdapter: boolean containsKey(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: java.sql.SQLException createTimeoutException(long)>-><com.zaxxer.hikari.pool.PoolBase$IMetricsTrackerDelegate: void recordConnectionTimeout()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.security.jca.ProviderConfig: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.ClassUtil: void closeOnFailAndThrowAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.io.Closeable,java.lang.Exception)>-><com.zaxxer.hikari.HikariDataSource: void close()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.Character$Subset: java.lang.String toString()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<java.util.ComparableTimSort: void binarySort(java.lang.Object[],int,int,int)>-><com.fasterxml.classmate.util.ClassKey: int compareTo(java.lang.Object)>
<org.apache.catalina.util.ToStringUtil: java.lang.String containedToString(java.lang.Object,java.lang.Object,java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.beans.factory.support.MethodOverrides: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.LambdaFormEditor$Transform: boolean equals(java.lang.Object)>
<java.util.HashMap$Node: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.zaxxer.hikari.pool.PoolBase: int getAndSetNetworkTimeout(java.sql.Connection,long)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.AttributedCharacterIterator$Attribute: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.ObjectName: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.jar.Manifest: boolean equals(java.lang.Object)>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Map)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.net.InetSocketAddress: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.ThreadGroup: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.text.FieldPosition: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void executeSql(java.sql.Connection,java.lang.String,boolean)>-><com.p6spy.engine.wrapper.StatementWrapper: void close()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: int compareComparables(java.lang.Class,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: int compareTo(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.jca.ProviderConfig: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.CollectionCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.apache.tomcat.util.collections.ConcurrentCache: void put(java.lang.Object,java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Instant: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: com.fasterxml.jackson.databind.JavaType refineSerializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: int hashCode()>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><java.lang.Throwable: java.lang.String getMessage()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.web.method.ControllerAdviceBean: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFieldsUsing(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.alibaba.fastjson.JSONPObject: java.lang.String toString()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.subst.Token: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.util.LinkedMultiValueMap: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<org.hibernate.validator.internal.util.annotation.AnnotationProxy: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<com.zaxxer.hikari.pool.PoolBase: void handleMBeans(com.zaxxer.hikari.pool.HikariPool,boolean)>-><java.lang.management.ManagementFactory: javax.management.MBeanServer getPlatformMBeanServer()>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: void <init>(com.zaxxer.hikari.pool.HikariPool,java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$EmptyMap: java.util.Set entrySet()>
<sun.reflect.generics.repository.FieldRepository: java.lang.reflect.Type getGenericType()>-><sun.reflect.generics.tree.BooleanSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
<com.zaxxer.hikari.pool.PoolBase: void checkValidationSupport(java.sql.Connection)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.io.ObjectStreamClass$FieldReflectorKey: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><com.google.common.collect.ImmutableEntry: java.lang.Object getKey()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: int hashCode()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.BaseLocale: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: boolean isConnectionAlive(java.sql.Connection)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.Timer$Builder: io.micrometer.core.instrument.Timer$Builder minimumExpectedValue(java.time.Duration)>-><io.micrometer.core.instrument.distribution.DistributionStatisticConfig$Builder: io.micrometer.core.instrument.distribution.DistributionStatisticConfig$Builder minimumExpectedValue(java.lang.Long)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.FloatNode: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: int hashCode()>
<java.util.AbstractCollection: java.lang.String toString()>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<org.springframework.cglib.core.EmitUtils: void member_helper_type(org.springframework.cglib.core.CodeEmitter,java.util.List,org.springframework.cglib.core.ObjectSwitchCallback,org.springframework.cglib.core.EmitUtils$ParameterTyper,org.springframework.asm.Label,org.springframework.asm.Label,java.util.BitSet)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object get(int)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: boolean equals(java.lang.Object)>
<java.time.format.DateTimeFormatterBuilder$ZoneTextPrinterParser: java.time.format.DateTimeFormatterBuilder$PrefixTree getTree(java.time.format.DateTimeParseContext)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.Inet6Address: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.alibaba.fastjson.JSONArray: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.matcher.OrRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.CharChunk: void allocate(int,int)>-><org.apache.tomcat.util.buf.AbstractChunk: void setLimit(int)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void serializeDynamic(java.util.Map$Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<com.fasterxml.classmate.ResolvedType: java.lang.StringBuilder _appendClassDescription(java.lang.StringBuilder)>-><com.fasterxml.classmate.TypeBindings: com.fasterxml.classmate.ResolvedType getBoundType(int)>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: java.lang.String generatePoolName()>-><java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.crypto.CryptoAllPermission: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.TypePatternList: org.aspectj.weaver.patterns.TypePattern get(int)>
<java.util.Hashtable: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object previous()>-><io.micrometer.shaded.org.pcollections.ConsPStack: java.lang.Object access$100(io.micrometer.shaded.org.pcollections.ConsPStack)>
<org.aspectj.weaver.JoinPointSignature: org.aspectj.weaver.MemberKind getKind()>-><org.aspectj.weaver.MemberImpl: org.aspectj.weaver.MemberKind getKind()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.core.JsonProcessingException: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.google.common.collect.Maps$KeySet: boolean contains(java.lang.Object)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.aop.framework.AdvisedSupport: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: boolean equals(java.lang.Object)>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<java.util.concurrent.TimeUnit$1: long convert(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.TimeUnit$2: long toNanos(long)>
<org.springframework.validation.DataBinder: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class)>-><org.springframework.beans.TypeConverterSupport: java.lang.Object convertIfNecessary(java.lang.Object,java.lang.Class)>
<org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.util.AbstractConstant: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void serialize(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.format.DecimalStyle: boolean equals(java.lang.Object)>
<java.util.TreeSet: boolean addAll(java.util.Collection)>-><com.google.common.base.Joiner$3: int size()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$Value: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.MapToMapConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>
<com.zaxxer.hikari.pool.ProxyConnection: void setTransactionIsolation(int)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void setTransactionIsolation(int)>
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.zip.ZipEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableMap: boolean equals(java.lang.Object)>
<sun.reflect.generics.repository.AbstractRepository: void <init>(java.lang.String,sun.reflect.generics.factory.GenericsFactory)>-><sun.reflect.generics.repository.FieldRepository: sun.reflect.generics.tree.Tree parse(java.lang.String)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.MutablePropertyValues: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFieldsUsing(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.zaxxer.hikari.pool.ProxyConnection: void closeStatements()>-><com.zaxxer.hikari.pool.ProxyLeakTask$1: void cancel()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: void <init>()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.scheduling.config.ScheduledTask: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setupConnection(java.sql.Connection)>-><com.zaxxer.hikari.pool.PoolBase$ConnectionSetupException: void <init>(java.lang.Throwable)>
<org.aspectj.weaver.patterns.AndPointcut: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.AbstractCollection: boolean remove(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.springframework.validation.AbstractPropertyBindingResult: void initConversion(org.springframework.core.convert.ConversionService)>-><org.springframework.beans.PropertyEditorRegistrySupport: void setConversionService(org.springframework.core.convert.ConversionService)>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: int size()>-><com.google.common.base.Joiner$3: int size()>
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getDependencyType()>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>
<org.aspectj.bridge.MessageUtil: java.lang.String renderMessage(org.aspectj.bridge.IMessage,boolean)>-><org.aspectj.bridge.Message: java.lang.String getMessage()>
<org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource: java.lang.String toString()>-><java.lang.StringBuilder: void <init>(java.lang.String)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.ResourceBundle$CacheKey: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.BigIntegerNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.calendar.CalendarDate: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.calendar.Era: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArraySet: boolean equals(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.NullNode: boolean equals(java.lang.Object)>
<org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<org.springframework.security.core.userdetails.User: java.lang.String toString()>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.io.File: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.core.publisher.FluxCreate$LatestAsyncSink: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<java.sql.SQLException: void <init>()>-><java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<reactor.core.scheduler.DelegateServiceScheduler$UnsupportedScheduledExecutorService: void execute(java.lang.Runnable)>-><io.netty.util.concurrent.AbstractEventExecutorGroup: void execute(java.lang.Runnable)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<com.sun.naming.internal.ResourceManager: void mergeTables(java.util.Hashtable,java.util.Hashtable)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<sun.reflect.UnsafeByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><sun.util.locale.BaseLocale: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><io.netty.util.ResourceLeakDetector$Record: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putFloatVolatile(java.lang.Object,long,float)>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><javax.print.MimeType$ParameterMapEntrySet: int size()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Proxy$KeyX: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><sun.reflect.UnsafeFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.logging.log4j.Level: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.CollectionUtils: java.util.Map bucket(java.util.Collection,org.springframework.cglib.core.Transformer)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.image.ComponentColorModel: boolean equals(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeIntegerFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.BooleanNode: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.CflowPointcut: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: int hashCode()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><net.logstash.logback.encoder.com.lmax.disruptor.Sequence: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.Vector$Itr: boolean hasNext()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<org.apache.catalina.connector.OutputBuffer$PrivilegedCreateConverter: org.apache.tomcat.util.buf.C2BConverter run()>-><org.apache.tomcat.util.buf.C2BConverter: void <init>(java.nio.charset.Charset)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.hibernate.validator.internal.util.annotation.AnnotationDescriptor: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.UtilityElf: int getTransactionIsolation(java.lang.String)>-><com.zaxxer.hikari.util.IsolationLevel: int getLevelId()>
<org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: void <init>()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<com.p6spy.engine.wrapper.ConnectionWrapper: void rollback()>-><com.p6spy.engine.event.CompoundJdbcEventListener: void onAfterRollback(com.p6spy.engine.common.ConnectionInformation,long,java.sql.SQLException)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<java.util.stream.AbstractShortCircuitTask: void compute()>-><java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: long estimateSize()>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.util.UtilityElf: java.util.concurrent.ThreadPoolExecutor createThreadPoolExecutor(java.util.concurrent.BlockingQueue,java.lang.String,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Vector: int size()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.text.ChoiceFormat: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeBooleanFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Boolean: boolean booleanValue()>
<cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.Long getUserId()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.font.EAttribute: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.core.env.PropertySource: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.text.ParsePosition: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.core.publisher.ConnectableFluxOnAssembly: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.nio.ch.SocketOptionRegistry$RegistryKey: boolean equals(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.google.common.base.Predicates$NotPredicate: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: void write(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String,java.lang.Object)>-><java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.String toString()>
<org.apache.tomcat.util.collections.ConcurrentCache: java.lang.Object get(java.lang.Object)>-><java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<org.springframework.security.crypto.password.NoOpPasswordEncoder: java.lang.String encode(java.lang.CharSequence)>-><java.lang.String: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.net.URL: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.UUID: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariProxyConnection: void setCatalog(java.lang.String)>-><com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.BaseLocale: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><io.netty.buffer.PoolChunk: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.node.TextNode: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>
<java.util.TimSort: int countRunAndMakeAscending(java.lang.Object[],int,int,java.util.Comparator)>-><java.time.format.DateTimeFormatterBuilder$2: int compare(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void closeConnection(com.zaxxer.hikari.pool.PoolEntry,java.lang.String)>-><com.zaxxer.hikari.pool.PoolEntry: java.sql.Connection close()>
<cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String getSex()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<javax.xml.parsers.FactoryConfigurationError: java.lang.String getMessage()>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.apache.catalina.connector.OutputBuffer: void doFlush(boolean)>-><org.apache.catalina.connector.ClientAbortException: void <init>(java.lang.Throwable)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.subst.Token: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><java.util.concurrent.ConcurrentHashMap: int size()>
<reactor.util.function.Tuple4: boolean equals(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.security.web.DefaultSecurityFilterChain: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.reflect.Proxy$Key1: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariProxyConnection: void setTransactionIsolation(int)>-><com.zaxxer.hikari.pool.ProxyConnection: void setTransactionIsolation(int)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Locale: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.lettuce.core.internal.AbstractInvocationHandler: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.bridge.AbortException: void printStackTrace(java.io.PrintWriter)>-><org.aspectj.bridge.AbortException: org.aspectj.bridge.IMessage getIMessage()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedByteFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwFinalFieldIllegalAccessException(java.lang.Object)>
<org.aspectj.weaver.patterns.HandlerPointcut: java.lang.String toString()>-><java.lang.StringBuffer: void <init>()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.util.unit.DataSize: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.UtilityElf: java.lang.Object createInstance(java.lang.String,java.lang.Class,java.lang.Object[])>-><java.lang.Class: java.lang.Object cast(java.lang.Object)>
<sun.reflect.UnsafeQualifiedLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Long: long longValue()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<org.springframework.util.ReflectionUtils: java.lang.reflect.Field findField(java.lang.Class,java.lang.String,java.lang.Class)>-><java.lang.reflect.Field: java.lang.String getName()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.Float: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><com.fasterxml.jackson.databind.JsonMappingException: java.lang.String getMessage()>
<com.zaxxer.hikari.util.ClockSource$NanosecondClockSource: long plusMillis0(long,long)>-><java.util.concurrent.TimeUnit$3: long toNanos(long)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<org.springframework.util.StringUtils: java.lang.String collectionToDelimitedString(java.util.Collection,java.lang.String,java.lang.String,java.lang.String)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.WeakCache$CacheValue: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.time.OffsetTime: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.MemberImpl: int compareTo(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object remove(int)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: void checkForComodification()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.reflect.Constructor: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.time.temporal.WeekFields: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticLongFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeStaticLongFieldAccessorImpl: long getLong(java.lang.Object)>
<org.aspectj.util.LangUtil: void elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.security.pkcs.SignerInfo: java.lang.String toString()>
<com.zaxxer.hikari.util.ConcurrentBag: boolean remove(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.WildAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: java.lang.Object[] toArray()>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.springframework.security.web.session.SessionManagementFilter: void doFilter_d83d81641d18700e209302624639026c(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><synthetic.method.SingletonFactory: cc.mrbird.febs.common.security.starter.handler.FebsAuthExceptionEntryPoint getAuthenticationEntryPoint()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.ResourceBundle$CacheKey: java.lang.String toString()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<org.apache.tomcat.util.buf.CharChunk: void flushBuffer()>-><java.io.IOException: void <init>(java.lang.String)>
<com.zaxxer.hikari.pool.HikariPool: void setMetricRegistry(java.lang.Object)>-><com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTrackerFactory: void <init>(io.micrometer.core.instrument.MeterRegistry)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.util.unit.DataSize: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.BitSet: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeOptionalFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.ResourceBundle$1: java.lang.String toString()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: int hashCode()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object remove(int)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object remove(int)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<java.util.stream.AbstractPipeline: java.util.stream.Sink wrapSink(java.util.stream.Sink)>-><java.util.stream.ReferencePipeline$11: java.util.stream.Sink opWrapSink(int,java.util.stream.Sink)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.misc.Signal: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.WeakCache$CacheKey: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: int compareComparables(java.lang.Class,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.MemberImpl: int compareTo(java.lang.Object)>
<org.springframework.core.DecoratingClassLoader: boolean isExcluded(java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap$EntryIterator: boolean hasNext()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.format.support.FormattingConversionService$PrinterConverter: java.lang.String toString()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: void <init>(java.lang.Class,java.lang.String,java.lang.Class,int,int,java.lang.String,byte[])>-><java.lang.reflect.AccessibleObject: void <init>()>
<com.zaxxer.hikari.util.ConcurrentBag: java.util.List values(int)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.PropertyElf: java.util.Set getPropertyNames(java.lang.Class)>-><java.util.regex.Matcher: java.util.regex.Matcher reset(java.lang.CharSequence)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Collections$SynchronizedCollection: boolean add(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: java.sql.SQLException createTimeoutException(long)>-><com.zaxxer.hikari.pool.HikariPool: void logPoolState(java.lang.String[])>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><com.zaxxer.hikari.util.ClockSource: long currentTime()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><io.netty.buffer.AbstractByteBuf: java.lang.String toString()>
<org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.calendar.Era: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><springfox.documentation.service.ResponseMessage: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.DoubleNode: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.zaxxer.hikari.pool.HikariProxyConnection: int getTransactionIsolation()>-><com.p6spy.engine.wrapper.ConnectionWrapper: int getTransactionIsolation()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<java.util.stream.AbstractTask: void compute()>-><java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: long estimateSize()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.image.PackedColorModel: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><javax.naming.NamingException: java.lang.String toString()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.Response: boolean access$000(org.apache.catalina.Context,org.apache.catalina.connector.Request,org.apache.catalina.Session,java.lang.String)>-><org.apache.catalina.connector.Response: boolean doIsEncodeable(org.apache.catalina.Context,org.apache.catalina.connector.Request,org.apache.catalina.Session,java.lang.String)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.Collections$SingletonList: int size()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.GmtTimeZone: boolean equals(java.lang.Object)>
<reactor.core.publisher.Traces: java.lang.String[] extractOperatorAssemblyInformationParts(java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object get(int)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.util.Locale$LocaleKey: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void setupConnection(java.sql.Connection)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void setAutoCommit(boolean)>
<org.springframework.web.util.pattern.CaptureVariablePathElement: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.management.MBeanConstructorInfo: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.management.MBeanNotificationInfo: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.lang.ProcessEnvironment$StringKeySet: boolean remove(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.awt.Point: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ListSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: int size()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.DoubleNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanInfo: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><io.lettuce.core.internal.AbstractInvocationHandler: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><java.nio.CharBuffer: java.lang.String toString()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: int hashCode()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanAttributeInfo: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: void close()>-><com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<org.apache.tomcat.util.http.parser.MediaTypeCache: java.lang.String[] parse(java.lang.String)>-><org.apache.tomcat.util.collections.ConcurrentCache: java.lang.Object get(java.lang.Object)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.RootBeanDefinition: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableCollection: java.lang.Object[] toArray(java.lang.Object[])>-><java.util.concurrent.LinkedBlockingQueue: java.lang.Object[] toArray(java.lang.Object[])>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<javax.print.MimeType$ParameterMapEntry: int hashCode()>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.management.openmbean.TabularDataSupport: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.BooleanNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.env.PropertySource: boolean equals(java.lang.Object)>
<org.springframework.validation.AbstractPropertyBindingResult: void initConversion(org.springframework.core.convert.ConversionService)>-><org.springframework.validation.BeanPropertyBindingResult: java.lang.Object getTarget()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.Color: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.Date: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Parameter: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.CollectionLikeType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.node.BooleanNode: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.lang.Object resolveManagedArray(java.lang.Object,java.util.List,java.lang.Class)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object get(int)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.ClassInfo: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.node.BooleanNode: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.util.HashMap$Node: java.lang.Object getKey()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.MemberImpl: int hashCode()>-><org.aspectj.weaver.TypeVariableReferenceType: int hashCode()>
<org.aspectj.bridge.MessageUtil: java.lang.String addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)>-><org.aspectj.bridge.Message: java.util.List getExtraSourceLocations()>
<java.util.IdentityHashMap: boolean equals(java.lang.Object)>-><org.springframework.util.CollectionUtils$MultiValueMapAdapter: java.util.Set entrySet()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.web.context.support.WebApplicationContextUtils$SessionObjectFactory: java.lang.String toString()>
<org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.sql.Timestamp: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.security.util.DerValue: java.lang.String toString()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.util.Collections$UnmodifiableMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.asm.Label: java.lang.String toString()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.AttributedCharacterIterator$Attribute: boolean equals(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><java.lang.reflect.Field: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.lettuce.core.RedisURI: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker: void <init>(java.lang.String,com.zaxxer.hikari.metrics.PoolStats,io.micrometer.core.instrument.MeterRegistry)>-><io.micrometer.core.instrument.Counter$Builder: io.micrometer.core.instrument.Counter register(io.micrometer.core.instrument.MeterRegistry)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<java.lang.reflect.Field: sun.reflect.generics.factory.GenericsFactory getFactory()>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<reactor.core.scheduler.ParallelScheduler: java.lang.Object scanUnsafe(reactor.core.Scannable$Attr)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.status.StatusBase: boolean equals(java.lang.Object)>
<java.util.stream.ForEachOps$ForEachOp$OfRef: void accept(java.lang.Object)>-><java.util.stream.ReferencePipeline$11$1: void accept(java.lang.Object)>
<sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl: double getDouble(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.GenericConversionService$ConvertersForPair: org.springframework.core.convert.converter.GenericConverter getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl: char getChar(java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void ensureObj(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.core.ResolvableType: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<sun.reflect.UnsafeStaticLongFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FormatCache$MultipartKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.aop.support.DefaultPointcutAdvisor: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.util.locale.Extension: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.DigitList: boolean equals(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: void <init>(java.lang.reflect.Field,boolean)>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.misc.Unsafe: void ensureClassInitialized(java.lang.Class)>
<sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Character: char charValue()>
<org.aspectj.weaver.patterns.IfPointcut: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.security.x509.RDN: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeOptionalFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.time.Instant: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.text.AttributedCharacterIterator$Attribute: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.baomidou.dynamic.datasource.DynamicGroupDataSource: java.lang.String toString()>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>
<javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>-><javax.print.MimeType: java.lang.String[] access$000(javax.print.MimeType)>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: int hashCode()>
<javax.print.MimeType$ParameterMapEntry: java.lang.Object getValue()>-><javax.print.MimeType: java.lang.String[] access$000(javax.print.MimeType)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: boolean hasNext()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.ZonedDateTime: java.lang.String toString()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void executeSql(java.sql.Connection,java.lang.String,boolean)>-><com.p6spy.engine.wrapper.ConnectionWrapper: void commit()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl$ClassIndexWrapper: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><java.util.WeakHashMap: int size()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.ZoneId: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeObjectFieldAccessorImpl: void <init>(java.lang.reflect.Field)>-><sun.reflect.UnsafeFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.google.common.collect.TransformedIterator: boolean hasNext()>-><io.micrometer.core.instrument.Tags$ArrayIterator: boolean hasNext()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.security.CodeSigner: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyConnection: java.sql.Statement createStatement()>-><com.zaxxer.hikari.pool.ProxyConnection: java.sql.Statement trackStatement(java.sql.Statement)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.imageio.ImageTypeSpecifier$Interleaved: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: void setCatalog(java.lang.String)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void setCatalog(java.lang.String)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.security.provider.PolicyParser$PrincipalEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean remove(java.lang.Object)>-><com.google.common.base.Joiner$3: int size()>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.lang.NullPointerException: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<reactor.core.Exceptions: java.lang.Throwable addSuppressed(java.lang.Throwable,java.lang.Throwable)>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: void logConfiguration()>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<com.fasterxml.classmate.ResolvedType: java.lang.StringBuilder _appendClassDescription(java.lang.StringBuilder)>-><java.lang.Class: java.lang.String getName()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<java.sql.SQLException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>-><java.sql.DriverManager: void println(java.lang.String)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.Response: boolean doIsEncodeable(org.apache.catalina.Context,org.apache.catalina.connector.Request,org.apache.catalina.Session,java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.springframework.util.StringUtils: java.lang.String collectionToDelimitedString(java.util.Collection,java.lang.String,java.lang.String,java.lang.String)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.SortedOps$RefSortingSink: void accept(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.security.AllPermission: boolean equals(java.lang.Object)>
<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<org.springframework.security.oauth2.common.exceptions.OAuth2Exception: java.lang.String getSummary()>-><org.springframework.security.oauth2.client.resource.OAuth2AccessDeniedException: java.lang.String getOAuth2ErrorCode()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.time.format.DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.crypto.CryptoPermission: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.JumboEnumSet: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.Gauge$Builder: io.micrometer.core.instrument.Gauge register(io.micrometer.core.instrument.MeterRegistry)>-><io.micrometer.core.instrument.Meter$Id: void <init>(java.lang.String,io.micrometer.core.instrument.Tags,java.lang.String,java.lang.String,io.micrometer.core.instrument.Meter$Type,io.micrometer.core.instrument.Meter$Id)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.lang.Enum: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.time.Clock$SystemClock: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: java.lang.String toString()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.security.AllPermission: boolean equals(java.lang.Object)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<java.sql.SQLException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>-><java.lang.StringBuilder: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.codehaus.jackson.map.type.ClassKey: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue$LBQSpliterator: void forEachRemaining(java.util.function.Consumer)>-><java.util.stream.SortedOps$SizedRefSortingSink: void accept(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap$EntryIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<org.springframework.web.util.NestedServletException: java.lang.String getMessage()>-><org.springframework.core.NestedExceptionUtils: java.lang.String buildMessage(java.lang.String,java.lang.Throwable)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.TabularType: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.NotAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.system.UserDataPermission: int hashCode()>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.Long getDeptId()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: int hashCode()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<java.sql.DriverManager: java.util.Enumeration getDrivers()>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object next()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.MapLikeType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><reactor.util.context.ContextN: java.lang.String toString()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>-><java.lang.Object: java.lang.String toString()>
<org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>-><org.springframework.expression.spel.standard.SpelExpression: java.lang.String getExpressionString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.CollectionLikeType: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Year: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.core.publisher.FluxCallableOnAssembly: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object next()>
<com.zaxxer.hikari.pool.PoolBase: java.sql.Connection newConnection()>-><com.zaxxer.hikari.pool.PoolBase: void setupConnection(java.sql.Connection)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.Duration: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><org.springframework.core.io.buffer.LimitedDataBufferList: java.lang.Object set(int,java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.io.ObjectStreamClass$FieldReflectorKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void appendMap(java.lang.Object,java.lang.StringBuilder,java.util.Set)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<com.fasterxml.classmate.types.ResolvedPrimitiveType: java.lang.StringBuilder appendBriefDescription(java.lang.StringBuilder)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.FloatNode: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.HikariConfig: long getValidationTimeout()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator: java.lang.Object next()>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<sun.reflect.UnsafeFieldAccessorImpl: java.lang.String getSetMessage(java.lang.String,java.lang.String)>-><java.lang.reflect.Field: java.lang.Class getType()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.OrPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.WithinCodeAnnotationPointcut: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.EnumMap$EntrySet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.OutputBuffer: void write(java.lang.String)>-><org.apache.catalina.connector.OutputBuffer: void write(java.lang.String,int,int)>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><java.lang.Object: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: sun.reflect.generics.factory.GenericsFactory getFactory()>-><sun.reflect.generics.factory.CoreReflectionFactory: sun.reflect.generics.factory.CoreReflectionFactory make(java.lang.reflect.GenericDeclaration,sun.reflect.generics.scope.Scope)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.ProcessEnvironment$StringEntry: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.util.LinkedCaseInsensitiveMap$EntrySetIterator: java.lang.Object next()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.management.MBeanParameterInfo: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<com.alibaba.fastjson.serializer.MiscCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.ImmutableDescriptor: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<io.micrometer.core.instrument.ImmutableTag: void <init>(java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><io.netty.channel.nio.SelectedSelectionKeySet: int size()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.codehaus.jackson.map.type.CollectionLikeType: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><java.nio.CharBuffer: java.lang.String toString()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: int hashCode()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.OutputBuffer: void flushByteBuffer()>-><java.nio.HeapByteBuffer: java.nio.ByteBuffer slice()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.invoke.LambdaForm$Name: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>
<java.util.Collections: void reverse(java.util.List)>-><java.util.SubList$1: void set(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(java.nio.CharBuffer,java.nio.ByteBuffer)>-><java.nio.ByteBuffer: byte[] array()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void initializeDataSource()>-><com.zaxxer.hikari.HikariConfig: javax.sql.DataSource getDataSource()>
<org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<org.apache.tomcat.util.http.parser.MediaType: org.apache.tomcat.util.http.parser.MediaType parseMediaType(java.io.StringReader)>-><org.apache.tomcat.util.http.parser.HttpParser: java.lang.String readToken(java.io.Reader)>
<org.springframework.web.context.support.WebApplicationContextUtils$SessionObjectFactory: javax.servlet.http.HttpSession getObject()>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.http.ResponseEntity: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.redis.listener.PatternTopic: boolean equals(java.lang.Object)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object get(int)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.BuddhistCalendar: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.util.ReflectionUtils: void makeAccessible(java.lang.reflect.Field)>-><java.lang.Class: int getModifiers()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><org.springframework.http.HttpHeaders: java.lang.Object get(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultimap: void removeValuesForKey(java.lang.Object)>-><io.netty.channel.nio.SelectedSelectionKeySet: int size()>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.util.LinkedMultiValueMap: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.core.publisher.Mono: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void handleMBeans(com.zaxxer.hikari.pool.HikariPool,boolean)>-><ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object[])>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.core.io.SerializedString: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.AbstractMapBasedMultimap$KeySet: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.core.Scannable$Attr$1: java.lang.String toString()>
<java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<org.springframework.core.convert.support.CollectionToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<sun.reflect.UnsafeFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Short: short shortValue()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.Clock$SystemClock: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariConfig: void logConfiguration()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.google.common.base.Predicates$ObjectPredicate$4: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void shutdown()>-><com.zaxxer.hikari.util.ConcurrentBag: void close()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.lang.ProcessEnvironment$StringValues: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.springframework.security.web.session.SessionManagementFilter: void doFilter_88c4eda3bc64cc30ea32e6b36e2bea31(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><synthetic.method.SingletonFactory: cc.mrbird.febs.common.security.starter.handler.FebsAuthExceptionEntryPoint getAuthenticationEntryPoint()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Short: void <init>(short)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.message.ParameterFormatter: void appendMap(java.lang.Object,java.lang.StringBuilder,java.util.Set)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.ConstructorArgumentValues: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.util.AbstractConstant: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.BigIntegerNode: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<com.alibaba.fastjson.serializer.MapSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<org.aspectj.weaver.patterns.TypePatternList: int hashCode()>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: java.lang.Object set(int,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)>
<org.apache.catalina.connector.OutputBuffer: int transfer(java.lang.String,int,int,java.nio.CharBuffer)>-><java.nio.CharBuffer: java.nio.CharBuffer put(java.lang.String,int,int)>
<org.aspectj.weaver.UnresolvedType: java.lang.String toString()>-><org.aspectj.weaver.ResolvedType$Missing: java.lang.String getName()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.WeakCache$CacheKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector: void _renameProperties(java.util.Map)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><java.nio.HeapCharBuffer: java.nio.CharBuffer put(char)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.p6spy.engine.spy.option.P6OptionsRepository$DelayedOptionChange: boolean equals(java.lang.Object)>
<reactor.core.scheduler.ReactorThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.BitSet: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.util.matcher.NegatedRequestMatcher: java.lang.String toString()>
<sun.reflect.UnsafeStaticFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Byte: byte byteValue()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanConstructorInfo: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serializeContents(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>
<org.aspectj.weaver.MemberImpl: int hashCode()>-><org.aspectj.weaver.MemberImpl: org.aspectj.weaver.UnresolvedType getDeclaringType()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<io.micrometer.core.instrument.Tags: io.micrometer.core.instrument.Tags and(io.micrometer.core.instrument.Tag[])>-><io.micrometer.core.instrument.Tags: void <init>(io.micrometer.core.instrument.Tag[])>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.OutputBuffer: void write(byte[],int,int)>-><org.apache.catalina.connector.OutputBuffer: void writeBytes(byte[],int,int)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.concurrent.ArrayBlockingQueue: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyLeakTask: void cancel()>-><java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask: boolean cancel(boolean)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<java.util.concurrent.Semaphore: boolean tryAcquire()>-><java.util.concurrent.Semaphore$Sync: int nonfairTryAcquireShared(int)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.text.ChoiceFormat: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><java.util.concurrent.ConcurrentHashMap: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.TreeSet: java.util.Iterator iterator()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>-><java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<org.springframework.web.context.request.ServletWebRequest: java.lang.String getDescription(boolean)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession(boolean)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.WeakHashMap$KeySet: boolean contains(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.lang.Byte: boolean equals(java.lang.Object)>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.util.TreeMap$Entry: java.lang.Object getKey()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.WeakCache$CacheValue: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.WildTypePattern: java.lang.String toString()>-><java.lang.StringBuffer: void <init>()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.util.TypeSafeEnum: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>
<java.sql.SQLException: void <init>()>-><java.sql.DriverManager: java.io.PrintWriter getLogWriter()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.HashMap$Node: boolean equals(java.lang.Object)>
<org.aspectj.weaver.JoinPointSignature: int hashCode()>-><org.aspectj.weaver.MemberImpl: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><sun.awt.SunHints$Key: java.lang.String toString()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.atomic.AtomicIntegerArray: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.type.ArrayType: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.ProxyConnection: void close()>-><com.zaxxer.hikari.pool.ProxyConnection: void closeStatements()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.UUID: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<org.aspectj.weaver.patterns.TypePatternList: java.lang.String toString()>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: java.util.concurrent.ScheduledExecutorService initializeHouseKeepingExecutorService()>-><java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.codehaus.jackson.map.type.ArrayType: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.p6spy.engine.spy.option.P6OptionsRepository$DelayedOptionChange: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.map.type.SimpleType: java.lang.String toString()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.MemberImpl: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.Font: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.beans.factory.config.BeanDefinitionHolder: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: java.lang.Object getKey()>
<com.zaxxer.hikari.util.ConcurrentBag: java.util.List values(int)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><cn.hutool.core.date.format.FastDateFormat: java.lang.String toString()>
<reactor.core.publisher.FluxIterable$IterableSubscriptionConditional: boolean isEmpty()>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.util.CollectionUtils$MultiValueMapAdapter: int size()>-><java.util.Collections$UnmodifiableMap: int size()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: java.lang.Object get(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.util.Optional: boolean equals(java.lang.Object)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.cglib.core.ClassInfo: java.lang.String toString()>
<com.zaxxer.hikari.pool.PoolBase: void initializeDataSource()>-><com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>
<org.apache.catalina.connector.Response: javax.servlet.ServletOutputStream getOutputStream()>-><org.apache.tomcat.util.res.StringManager: java.lang.String getString(java.lang.String)>
<com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker: void <init>(java.lang.String,com.zaxxer.hikari.metrics.PoolStats,io.micrometer.core.instrument.MeterRegistry)>-><io.micrometer.core.instrument.Timer$Builder: io.micrometer.core.instrument.Timer$Builder description(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: boolean equals(java.lang.Object)>
<javax.xml.transform.TransformerFactoryConfigurationError: java.lang.String getMessage()>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.aspectj.weaver.patterns.WildTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.NotAnnotationTypePattern: int hashCode()>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><com.zaxxer.hikari.pool.PoolBase$IMetricsTrackerDelegate: void recordBorrowStats(com.zaxxer.hikari.pool.PoolEntry,long)>
<com.alibaba.fastjson.serializer.JodaCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<org.aspectj.weaver.patterns.TypePatternList: int hashCode()>-><org.aspectj.weaver.patterns.HasMemberTypePattern: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.node.IntNode: boolean equals(java.lang.Object)>
<org.aspectj.bridge.context.CompilationAndWeavingContext$DefaultFormatter: java.lang.String formatEntry(int,java.lang.Object)>-><java.lang.StringBuffer: void <init>()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.util.RawValue: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.NotTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.joran.spi.ElementSelector: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><java.lang.reflect.UndeclaredThrowableException: java.lang.Throwable getCause()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.text.AttributeEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.util.MimeType: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<org.apache.tomcat.util.buf.C2BConverter: void convert(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.ByteChunk)>-><org.apache.tomcat.util.buf.AbstractChunk: int getEnd()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>
<sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>-><io.micrometer.shaded.org.pcollections.ConsPStack: int access$000(io.micrometer.shaded.org.pcollections.ConsPStack)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.util.locale.provider.RuleBasedBreakIterator: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>-><java.util.EnumMap$EntrySet: java.lang.Object[] toArray()>
<org.springframework.aop.framework.AdvisedSupport: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.alibaba.fastjson.serializer.MapSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<sun.reflect.UnsafeFieldAccessorFactory: sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field,boolean)>-><sun.reflect.UnsafeStaticFloatFieldAccessorImpl: void <init>(java.lang.reflect.Field)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.SimpleDateFormat: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<org.aspectj.util.LangUtil: java.lang.String renderException(java.lang.Throwable,boolean)>-><java.lang.StringBuffer: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.alibaba.fastjson.util.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.apache.commons.pool2.impl.BaseGenericObjectPool$IdentityWrapper: java.lang.String toString()>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyAnnotationTypePattern: java.lang.String toString()>
<org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore$TokenExpiry: int compareTo(java.util.concurrent.Delayed)>-><io.netty.util.concurrent.ScheduledFutureTask: long getDelay(java.util.concurrent.TimeUnit)>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.math.BigDecimal: java.lang.String toString()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String toString()>-><org.springframework.security.web.authentication.WebAuthenticationDetails: java.lang.String getRemoteAddress()>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: void add(int,java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: void add(int,java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.AllPermission: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><com.zaxxer.hikari.HikariDataSource: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.RegularEnumSet: boolean isEmpty()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator: boolean hasNext()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.alibaba.fastjson.JSONObject: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator: boolean shouldCreateAnotherConnection()>-><com.zaxxer.hikari.HikariConfig: int getMinimumIdle()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.validation.FieldError: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.security.MessageDigest: java.lang.String toString()>
<org.springframework.beans.factory.support.BeanDefinitionValueResolver: java.util.List resolveManagedList(java.lang.Object,java.util.List)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: java.lang.Object get(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><cc.mrbird.febs.common.core.entity.QueryRequest: boolean equals(java.lang.Object)>
<reactor.core.scheduler.ParallelScheduler: java.util.concurrent.ScheduledExecutorService get()>-><java.util.concurrent.ScheduledThreadPoolExecutor: void setRemoveOnCancelPolicy(boolean)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String getCreateTimeFrom()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.springframework.security.authentication.RememberMeAuthenticationToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.HikariDataSource: void close()>-><ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: int hashCode()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: int hashCode()>
<reactor.util.function.Tuple2: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotAnnotationTypePattern: boolean equals(java.lang.Object)>
<java.util.SubList$1: int previousIndex()>-><java.util.LinkedList$ListItr: int previousIndex()>
<org.aspectj.weaver.patterns.TypePatternList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.TypeCategoryTypePattern: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<sun.reflect.UnsafeLongFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Long: void <init>(long)>
<cc.mrbird.febs.common.core.entity.system.Menu: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: boolean canEqual(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.alibaba.fastjson.util.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<org.springframework.security.web.session.SessionManagementFilter: void doFilter_7af90d22fb0c6b912a4b04bcb28574b8(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><synthetic.method.SingletonFactory: cc.mrbird.febs.common.security.starter.handler.FebsAuthExceptionEntryPoint getAuthenticationEntryPoint()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: java.lang.String toString()>
<org.apache.tomcat.util.buf.C2BConverter: void convert(java.nio.CharBuffer,java.nio.ByteBuffer)>-><java.nio.charset.CoderResult: void throwException()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: boolean equals(java.lang.Object)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>
<ch.qos.logback.classic.spi.ThrowableProxy: void <init>(java.lang.Throwable)>-><org.springframework.web.util.NestedServletException: java.lang.String getMessage()>
<org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<java.util.Hashtable: java.lang.String toString()>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()>-><org.aspectj.bridge.context.PinpointingMessageHandler$MessageIssued: java.lang.String getMessage()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.Object getValue(java.lang.Object)>-><java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.apache.tomcat.util.buf.StringCache$CharEntry: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticByteFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeStaticByteFieldAccessorImpl: byte getByte(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><sun.util.calendar.Era: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<javax.xml.transform.TransformerFactoryConfigurationError: java.lang.String getMessage()>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.UnresolvedTypeVariableReferenceType: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><cn.hutool.core.map.MapProxy: java.lang.Object get(java.lang.Object)>
<java.util.Collections$SynchronizedCollection: int size()>-><javax.print.MimeType$ParameterMapEntrySet: int size()>
<org.springframework.core.PrioritizedParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<java.util.SubList$1: java.lang.Object previous()>-><java.util.LinkedList$ListItr: java.lang.Object previous()>
<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void serialize(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.base.Joiner$3: int size()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: java.lang.String toString()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setQueryTimeout(java.sql.Statement,int)>-><org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: int hashCode()>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.AllPermission: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.validation.ObjectError: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: java.lang.Object next()>
<org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<org.aspectj.weaver.patterns.ModifiersPattern: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Long: long longValue()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: int hashCode()>
<org.aspectj.weaver.patterns.HandlerPointcut: java.lang.String toString()>-><java.lang.StringBuffer: java.lang.String toString()>
<java.util.Collections$UnmodifiableCollection: int size()>-><javax.print.MimeType$ParameterMapEntrySet: int size()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.alibaba.fastjson.JSON: java.lang.String toString()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<org.apache.tomcat.util.buf.CharChunk: void makeSpace(int)>-><org.apache.tomcat.util.buf.AbstractChunk: int getLimitInternal()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.jsontype.NamedType: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><io.micrometer.core.instrument.ImmutableTag: int hashCode()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.SubList$1: java.lang.Object next()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.AttributeEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><javax.xml.transform.TransformerFactoryConfigurationError: java.lang.String getMessage()>
<reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>-><java.lang.StringBuilder: void <init>(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.Rectangle: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.hibernate.validator.internal.util.annotation.AnnotationProxy: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<java.time.format.DateTimeFormatterBuilder$TextPrinterParser: int parse(java.time.format.DateTimeParseContext,java.lang.CharSequence,int)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.HikariConfig: long getLeakDetectionThreshold()>
<com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>-><org.aspectj.util.GenericSignature$BaseTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyStatement: boolean execute(java.lang.String)>-><com.zaxxer.hikari.pool.HikariProxyStatement: boolean execute(java.lang.String)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><jdk.internal.org.xml.sax.SAXException: java.lang.String toString()>
<org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource: java.lang.String toString()>-><java.lang.Class: java.lang.String getName()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.image.ComponentColorModel: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.apache.catalina.valves.ValveBase: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><reactor.core.publisher.MonoCallableOnAssembly: java.lang.String toString()>
<com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTrackerFactory: com.zaxxer.hikari.metrics.IMetricsTracker create(java.lang.String,com.zaxxer.hikari.metrics.PoolStats)>-><com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker: void <init>(java.lang.String,com.zaxxer.hikari.metrics.PoolStats,io.micrometer.core.instrument.MeterRegistry)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.boot.web.server.MimeMappings$Mapping: int hashCode()>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getKey()>
<com.zaxxer.hikari.util.ConcurrentBag: com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry borrow(long,java.util.concurrent.TimeUnit)>-><java.util.concurrent.CopyOnWriteArrayList$COWIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.ZonedDateTime: boolean equals(java.lang.Object)>
<java.lang.reflect.Field: java.lang.annotation.Annotation[] getDeclaredAnnotations()>-><java.lang.reflect.Field: java.util.Map declaredAnnotations()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<org.aspectj.weaver.patterns.SignaturePattern: int hashCode()>-><org.aspectj.weaver.patterns.NotAnnotationTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.Inet4Address: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: int hashCode()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<java.lang.reflect.Field: int hashCode()>-><java.lang.Class: java.lang.String getName()>
<org.springframework.beans.AbstractNestablePropertyAccessor: void processKeyedProperty(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)>-><java.security.Provider: java.lang.Object get(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<sun.reflect.UnsafeIntegerFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeIntegerFieldAccessorImpl: int getInt(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.apache.logging.log4j.spi.Provider: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.CodeSigner: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>-><java.util.concurrent.LinkedBlockingQueue: int size()>
<com.alibaba.fastjson.serializer.AppendableSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.Float: java.lang.String toString()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<com.alibaba.fastjson.JSONArray: boolean isEmpty()>-><java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<org.aspectj.weaver.patterns.TypePatternList: java.lang.String toString()>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<io.netty.util.concurrent.DefaultEventExecutor: void run()>-><io.netty.util.internal.ThreadExecutorMap$2: void run()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean equals(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: boolean canEqual(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Map _orderEntries(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<java.util.TreeMap: java.util.TreeMap$Entry getEntry(java.lang.Object)>-><java.nio.CharBuffer: int compareTo(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><cn.hutool.core.map.MapProxy: java.util.Set entrySet()>
<com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: void <init>(java.lang.Throwable)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<java.util.AbstractCollection: java.lang.Object[] toArray()>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.support.RootBeanDefinition: boolean equals(java.lang.Object)>
<io.netty.util.concurrent.GlobalEventExecutor$TaskRunner: void run()>-><io.netty.util.internal.ThreadExecutorMap$2: void run()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<com.zaxxer.hikari.metrics.dropwizard.CodaHaleMetricsTracker: void <init>(java.lang.String,com.zaxxer.hikari.metrics.PoolStats,com.codahale.metrics.MetricRegistry)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.zaxxer.hikari.pool.ProxyConnection: java.sql.SQLException checkException(java.sql.SQLException)>-><com.zaxxer.hikari.pool.ProxyLeakTask$1: void cancel()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><reactor.util.context.Context1: java.lang.Object getValue()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.ArrayBlockingQueue: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.data.util.Pair: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JavaBeanSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<java.util.Collections: void reverse(java.util.List)>-><java.util.Collections$SynchronizedList: java.util.ListIterator listIterator(int)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><com.google.common.collect.Maps$KeySet: boolean isEmpty()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.aspectj.weaver.patterns.AndTypePattern: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.http.HttpHeaders: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.web.context.support.ServletContextResource: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getValue()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.WeakCache$CacheValue: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void quietlyCloseConnection(java.sql.Connection,java.lang.String)>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object[])>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.AndTypePattern: int hashCode()>
<java.util.Collections$UnmodifiableCollection$1: void <init>(java.util.Collections$UnmodifiableCollection)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.ConcreteCflowPointcut: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><com.fasterxml.jackson.databind.node.ArrayNode: boolean equals(java.lang.Object)>
<cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String getPerms()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.MapSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<org.aspectj.weaver.patterns.TypePatternList: java.lang.String toString()>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<org.apache.catalina.connector.CoyoteOutputStream: boolean checkNonBlockingWrite()>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.reflect.UnsafeFieldAccessorImpl: void throwSetIllegalArgumentException(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariProxyStatement: void setQueryTimeout(int)>-><com.zaxxer.hikari.pool.HikariProxyPreparedStatement: void setQueryTimeout(int)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.BinaryNode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.Object: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.springframework.security.oauth2.provider.OAuth2Authentication: int hashCode()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.deser.CreatorProperty: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: java.lang.String toString()>
<org.aspectj.weaver.patterns.OrTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.AnyTypePattern: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: boolean equals(java.lang.Object)>
<org.aspectj.util.LangUtil: void elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)>-><java.util.StringTokenizer: boolean hasMoreTokens()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<java.util.Collections: void reverse(java.util.List)>-><com.google.common.collect.AbstractMapBasedMultimap$WrappedList: java.util.ListIterator listIterator(int)>
<com.zaxxer.hikari.pool.HikariPool: java.sql.SQLException createTimeoutException(long)>-><com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void recordConnectionTimeout()>
<com.alibaba.fastjson.JSONObject: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.util.GenericSignature$ClassTypeSignature: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><springfox.documentation.service.ResponseMessage: int hashCode()>
<com.zaxxer.hikari.pool.ProxyStatement: void close()>-><com.zaxxer.hikari.pool.ProxyStatement: void close()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.springframework.aop.framework.ProxyFactoryBean$PrototypePlaceholderAdvisor: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><org.springframework.util.LinkedCaseInsensitiveMap$KeySet: java.util.Iterator iterator()>
<org.springframework.cglib.core.WeakCacheKey: java.lang.String toString()>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serializeContents(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFieldsUsing(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Float: float floatValue()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.awt.Rectangle: boolean equals(java.lang.Object)>
<cc.mrbird.febs.auth.service.impl.OauthClientDetailsServiceImpl: void createOauthClientDetails(cc.mrbird.febs.auth.entity.OauthClientDetails)>-><org.springframework.security.crypto.password.NoOpPasswordEncoder: java.lang.String encode(java.lang.CharSequence)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.net.InetAddress: java.lang.String toString()>
<io.micrometer.core.instrument.Gauge$Builder: void <init>(java.lang.String,java.lang.Object,java.util.function.ToDoubleFunction,io.micrometer.core.instrument.Gauge$1)>-><io.micrometer.core.instrument.Gauge$Builder: void <init>(java.lang.String,java.lang.Object,java.util.function.ToDoubleFunction)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.core.io.support.EncodedResource: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.DateFormatSymbols: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeStaticLongFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><java.lang.Long: void <init>(long)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<sun.reflect.UnsafeStaticDoubleFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Float: float floatValue()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><com.sun.jmx.mbeanserver.NamedObject: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><java.lang.StringBuilder: java.lang.String toString()>
<com.zaxxer.hikari.metrics.dropwizard.CodahaleHealthChecker: void registerHealthChecks(com.zaxxer.hikari.pool.HikariPool,com.zaxxer.hikari.HikariConfig,com.codahale.metrics.health.HealthCheckRegistry)>-><com.codahale.metrics.MetricRegistry: java.lang.String name(java.lang.String,java.lang.String[])>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.ProcessEnvironment$Value: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.aspectj.weaver.patterns.AndTypePattern: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.aspectj.weaver.patterns.HasMemberTypePattern: java.lang.String toString()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.springframework.security.access.SecurityConfig: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.BuddhistCalendar: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.apache.logging.log4j.spi.Provider: boolean equals(java.lang.Object)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><io.netty.buffer.SwappedByteBuf: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ConcurrentBag: void requite(com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry)>-><com.google.common.base.Joiner$3: int size()>
<com.zaxxer.hikari.util.PropertyElf: java.util.Set getPropertyNames(java.lang.Class)>-><java.util.HashSet: boolean add(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolEntry: java.sql.Connection close()>-><org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
<java.util.ResourceBundle$Control$CandidateListCache: java.util.List createObject(sun.util.locale.BaseLocale)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.lang.ThreadGroup: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.io.FilePermission: boolean equals(java.lang.Object)>
<org.springframework.core.annotation.AnnotationsScanner: boolean hasPlainJavaAnnotationsOnly(java.lang.Object)>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.lang.reflect.WeakCache$CacheValue: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><javax.management.ObjectName: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.util.locale.BaseLocale: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>-><io.netty.channel.nio.SelectedSelectionKeySet$1: boolean hasNext()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<java.util.concurrent.CopyOnWriteArrayList$COWSubList: void add(int,java.lang.Object)>-><java.util.concurrent.locks.ReentrantLock: void unlock()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<com.alibaba.fastjson.serializer.JavaBeanSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.bridge.IMessage$Kind: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><ch.qos.logback.core.joran.spi.ElementSelector: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.Object getDetails()>
<com.zaxxer.hikari.HikariConfig: void validate()>-><java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.util.GenericSignature$SimpleClassTypeSignature: java.lang.String toString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<org.aspectj.bridge.context.CompilationAndWeavingContext: java.util.Stack getContextStack()>-><java.util.Stack: void <init>()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.ObjectName: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>
<org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><cn.hutool.core.date.format.FastDateFormat: boolean equals(java.lang.Object)>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.IntNode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><javax.management.MBeanConstructorInfo: java.lang.String toString()>
<io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields: void soProducerIndex(long)>-><sun.misc.Unsafe: void putOrderedLong(java.lang.Object,long,long)>
<com.zaxxer.hikari.pool.HikariPool: java.sql.SQLException createTimeoutException(long)>-><java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.EnumMap: boolean equals(java.lang.Object)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.String toString()>-><java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<com.zaxxer.hikari.pool.HikariPool: void destroyHouseKeepingExecutorService()>-><com.zaxxer.hikari.HikariConfig: java.util.concurrent.ScheduledExecutorService getScheduledExecutor()>
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)>-><org.springframework.util.LinkedCaseInsensitiveMap$ValuesIterator: java.lang.Object next()>
<com.zaxxer.hikari.pool.HikariProxyConnection: boolean isValid(int)>-><com.zaxxer.hikari.pool.HikariProxyConnection: boolean isValid(int)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Map _orderEntries(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntrySetIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><org.springframework.expression.spel.InternalParseException: java.lang.Throwable getCause()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.data.redis.listener.PatternTopic: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.math.BigInteger: boolean equals(java.lang.Object)>
<org.springframework.security.web.util.matcher.MediaTypeRequestMatcher: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.web.util.matcher.AndRequestMatcher: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.codehaus.jackson.map.type.CollectionType: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><com.fasterxml.jackson.databind.node.DoubleNode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><com.zaxxer.hikari.pool.PoolBase$IMetricsTrackerDelegate: void recordBorrowTimeoutStats(long)>
<com.p6spy.engine.common.Value: java.lang.String convertToString(java.lang.Object)>-><java.util.concurrent.CopyOnWriteArrayList: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.JoinPointSignature: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: java.lang.String toString()>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.deser.impl.CreatorCandidate: java.lang.String toString()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.util.GenericSignature$TypeVariableSignature: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries: boolean remove(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: boolean equals(java.lang.Object)>
<org.springframework.web.context.request.AbstractRequestAttributesScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)>-><org.springframework.web.context.request.ServletRequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.CompositeType: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: int hashCode()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.codehaus.jackson.node.ArrayNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.time.chrono.AbstractChronology: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl: java.lang.Object get(java.lang.Object)>-><sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl: char getChar(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><springfox.documentation.service.ResponseMessage: boolean equals(java.lang.Object)>
<java.util.Collections$SetFromMap: boolean isEmpty()>-><org.springframework.util.LinkedCaseInsensitiveMap: boolean isEmpty()>
<com.alibaba.fastjson.JSONObject: boolean containsKey(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: java.lang.String toString()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><cc.mrbird.febs.common.core.entity.QueryRequest: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><javax.print.MimeType$ParameterMapEntry: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><java.nio.CharBuffer: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.Vector$Itr: java.lang.Object next()>
<org.aspectj.weaver.UnresolvedType: java.lang.String signatureToName(java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.OrTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.stream.StreamSpliterators$DelegatingSpliterator: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.time.chrono.AbstractChronology: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><cn.hutool.core.map.MapProxy: int size()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.math.BigInteger: boolean equals(java.lang.Object)>
<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean containsAll(java.util.Collection)>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.beans.factory.config.RuntimeBeanReference: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.patterns.NamePattern: java.lang.String toString()>
<java.util.AbstractList: int indexOf(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><io.netty.channel.nio.SelectedSelectionKeySet: boolean remove(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractBeanFactory: void afterPrototypeCreation(java.lang.String)>-><java.util.AbstractCollection: boolean remove(java.lang.Object)>
<com.p6spy.engine.event.CompoundJdbcEventListener: void onBeforeRollback(com.p6spy.engine.common.ConnectionInformation)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.scheduling.config.Task: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.weaver.patterns.BasicToken: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: int getIdleConnections()>-><com.zaxxer.hikari.util.ConcurrentBag: int getCount(int)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.data.util.Pair: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.weaver.patterns.NotTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.ResourceBundle$CacheKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.security.CodeSigner: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void checkFailFast()>-><com.zaxxer.hikari.pool.PoolBase: java.lang.Exception getLastConnectionFailure()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.aspectj.util.GenericSignature$ArrayTypeSignature: java.lang.String toString()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.aspectj.weaver.ResolvedPointcutDefinition: java.lang.String toString()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.aspectj.weaver.ResolvedType: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.AndAnnotationTypePattern: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingAnnotationFieldTypePattern: boolean equals(java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.aspectj.weaver.patterns.ThisOrTargetPointcut: java.lang.String toString()>
<ch.qos.logback.core.joran.spi.Interpreter: void callBodyAction(java.util.List,java.lang.String)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.springframework.web.context.support.WebApplicationContextUtils$WebRequestObjectFactory: java.lang.String toString()>
<org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.WildAnnotationTypePattern: int hashCode()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.management.openmbean.SimpleType: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><cc.mrbird.febs.common.core.entity.system.Menu: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.JsonMappingException$Reference: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.springframework.security.web.access.expression.WebExpressionConfigAttribute: java.lang.String toString()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Collections$UnmodifiableMap: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.ClockSource$NanosecondClockSource: long elapsedNanos0(long)>-><java.lang.System: long nanoTime()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.Collections$EmptyMap: int size()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.alibaba.fastjson.JSONArray: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.AbstractMap$1$1: boolean hasNext()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.ObjectName: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.beans.factory.config.RuntimeBeanReference: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.ArrayList$SubList: java.util.Iterator iterator()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><io.netty.buffer.AbstractByteBuf: boolean equals(java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.JsonMappingException: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.springframework.web.context.request.ServletRequestAttributes: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><net.logstash.logback.encoder.org.apache.commons.lang3.time.FormatCache$MultipartKey: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.util.regex.Pattern: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><java.util.concurrent.ThreadPoolExecutor: void setMaximumPoolSize(int)>
<org.springframework.security.oauth2.common.DefaultOAuth2AccessToken: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NoTypePattern: java.lang.String toString()>
<reactor.core.scheduler.ParallelScheduler: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.TreeMap: int size()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.net.URL: java.lang.String toString()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><java.net.Inet6Address: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.HikariPool: java.sql.Connection getConnection(long)>-><com.zaxxer.hikari.util.ClockSource: long elapsedMillis(long,long)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><cc.mrbird.febs.common.core.entity.FebsAuthUser: int hashCode()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.time.YearMonth: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.aspectj.weaver.TypeVariableReferenceType: java.lang.String toString()>
<java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>-><org.aspectj.weaver.JoinPointSignature: int compareTo(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.codehaus.jackson.node.ObjectNode: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.bouncycastle.asn1.DERT61String: java.lang.String toString()>
<org.springframework.expression.spel.ast.OperatorBetween: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><java.util.concurrent.CopyOnWriteArrayList: int size()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><cc.mrbird.febs.common.core.entity.system.UserDataPermission: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.springframework.beans.MutablePropertyValues: boolean equals(java.lang.Object)>
<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>-><java.util.Collections$SingletonMap: int size()>
<com.zaxxer.hikari.pool.HikariPool: java.util.concurrent.ScheduledExecutorService initializeHouseKeepingExecutorService()>-><java.util.Optional: java.lang.Object orElseGet(java.util.function.Supplier)>
<java.lang.Object: java.lang.String toString()>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: int hashCode()>
<sun.reflect.FieldAccessorImpl: void <init>()>-><sun.reflect.MagicAccessorImpl: void <init>()>
<java.sql.SQLException: void setNextException(java.sql.SQLException)>-><java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl: boolean compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)>
<org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.aspectj.weaver.patterns.WildAnnotationTypePattern: int hashCode()>-><org.aspectj.weaver.patterns.BindingTypePattern: int hashCode()>
<com.zaxxer.hikari.pool.HikariPool: void abortActiveConnections(java.util.concurrent.ExecutorService)>-><java.util.Vector$Itr: boolean hasNext()>
<org.aspectj.weaver.patterns.NotPointcut: java.lang.String toString()>-><org.aspectj.weaver.patterns.IfPointcut$IfFalsePointcut: java.lang.String toString()>
<org.aspectj.weaver.UnresolvedType: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.TreeMap$Entry: java.lang.Object getKey()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.aspectj.weaver.patterns.WildTypePattern: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.MemberImpl: boolean equals(java.lang.Object)>
<sun.reflect.UnsafeShortFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><java.lang.Short: short shortValue()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><org.codehaus.jackson.node.IntNode: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.openmbean.TabularType: boolean equals(java.lang.Object)>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><java.awt.image.ColorModel: boolean equals(java.lang.Object)>
<com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>-><java.lang.Object: java.lang.Class getClass()>
<sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl: void set(java.lang.Object,java.lang.Object)>-><sun.misc.Unsafe: void putCharVolatile(java.lang.Object,long,char)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.print.MimeType$ParameterMapEntrySet: java.util.Iterator iterator()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: boolean equals(java.lang.Object)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.text.MessageFormat: boolean equals(java.lang.Object)>
<java.util.ComparableTimSort: void mergeHi(int,int,int,int)>-><io.micrometer.core.instrument.Tag: int compareTo(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.aspectj.weaver.patterns.ExactAnnotationFieldTypePattern: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.aspectj.weaver.patterns.NoTypePattern: int hashCode()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><com.zaxxer.hikari.pool.PoolEntry: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.net.SocketPermission: boolean equals(java.lang.Object)>
<org.aspectj.weaver.patterns.SignaturePattern: java.lang.String toString()>-><org.aspectj.weaver.patterns.WildAnnotationTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getDependencyType()>-><java.lang.reflect.Field: java.lang.Class getType()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.aspectj.weaver.patterns.HasMemberTypePattern: boolean equals(java.lang.Object)>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><javax.management.openmbean.TabularDataSupport: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern: java.lang.String toString()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><java.lang.reflect.Field: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<com.zaxxer.hikari.pool.HikariPool: java.util.concurrent.ScheduledExecutorService initializeHouseKeepingExecutorService()>-><com.zaxxer.hikari.HikariConfig: java.util.concurrent.ThreadFactory getThreadFactory()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.NotTypePattern: boolean equals(java.lang.Object)>
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void invokeInitMethods(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)>-><org.springframework.web.filter.GenericFilterBean: void afterPropertiesSet()>
<org.springframework.beans.factory.support.AbstractBeanFactory: boolean isPrototypeCurrentlyInCreation(java.lang.String)>-><java.time.Instant: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase$MetricsTrackerDelegate: void recordConnectionCreated(long)>-><com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTracker: void recordConnectionCreatedMillis(long)>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.MBeanAttributeInfo: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.aspectj.weaver.patterns.NamePattern: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.time.Clock$SystemClock: java.lang.String toString()>
<org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>-><org.aspectj.weaver.JoinPointSignature: org.aspectj.weaver.UnresolvedType[] getParameterTypes()>
<com.zaxxer.hikari.pool.PoolBase: void <init>(com.zaxxer.hikari.HikariConfig)>-><com.zaxxer.hikari.HikariConfig: boolean isReadOnly()>
<java.util.AbstractCollection: java.lang.String toString()>-><javax.print.MimeType$ParameterMapEntrySetIterator: boolean hasNext()>
<com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.springframework.util.unit.DataSize: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.Collections$SynchronizedMap: java.lang.String toString()>
<com.alibaba.fastjson.serializer.SerialContext: void toString(java.lang.StringBuilder)>-><org.aspectj.weaver.patterns.ExactTypePattern: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.aspectj.weaver.patterns.ConcreteCflowPointcut$Slot: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><java.lang.Long: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><javax.management.ObjectInstance: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.util.GenericSignature$FormalTypeParameter: java.lang.String toString()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.aspectj.util.GenericSignature$TypeArgument: java.lang.String toString()>
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: boolean isDependent(java.lang.String,java.lang.String,java.util.Set)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<org.aspectj.weaver.patterns.TypePatternList: int hashCode()>-><org.aspectj.weaver.patterns.EllipsisTypePattern: int hashCode()>
<com.alibaba.fastjson.serializer.ToStringSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int)>-><org.aspectj.weaver.JoinPointSignature: java.lang.String toString()>
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)>-><io.micrometer.shaded.org.pcollections.ConsPStack$1: boolean hasNext()>
<org.springframework.security.authentication.AbstractAuthenticationToken: int hashCode()>-><cc.mrbird.febs.common.core.entity.system.Menu: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.springframework.data.redis.connection.RedisPassword: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><java.util.Locale: boolean equals(java.lang.Object)>
<org.apache.catalina.connector.OutputBuffer: void toWriteMode(java.nio.Buffer)>-><java.nio.Buffer: int capacity()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl$ClassIndexWrapper: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.pool.PoolBase: void setLoginTimeout(javax.sql.DataSource)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.springframework.core.style.DefaultValueStyler: java.lang.String style(java.util.Collection)>-><io.netty.channel.nio.SelectedSelectionKeySet: java.util.Iterator iterator()>
<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.aspectj.weaver.patterns.BindingTypePattern: java.lang.String toString()>
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.lang.String formatValue(java.lang.Object)>-><com.fasterxml.jackson.databind.type.CollectionType: java.lang.String toString()>
<java.util.WeakHashMap: void putAll(java.util.Map)>-><java.util.EnumMap: int size()>
<com.zaxxer.hikari.pool.ProxyConnection: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.util.concurrent.LinkedBlockingQueue: boolean contains(java.lang.Object)>-><org.codehaus.jackson.node.DecimalNode: boolean equals(java.lang.Object)>
<com.alibaba.fastjson.serializer.JavaBeanSerializer: void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type,int,boolean)>-><org.aspectj.bridge.AbortException: java.lang.String getMessage()>
<com.zaxxer.hikari.pool.PoolBase: void resetConnectionState(java.sql.Connection,com.zaxxer.hikari.pool.ProxyConnection,int)>-><com.zaxxer.hikari.pool.HikariProxyConnection: void setAutoCommit(boolean)>
<com.zaxxer.hikari.pool.HikariPool: void <init>(com.zaxxer.hikari.HikariConfig)>-><java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getValue()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.aspectj.weaver.patterns.AnyTypePattern: java.lang.String toString()>
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean equals(java.lang.Object)>-><org.springframework.boot.ansi.Ansi8BitColor: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.springframework.security.oauth2.common.DefaultOAuth2RefreshToken: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.PropertyElf: java.lang.Object getProperty(java.lang.String,java.lang.Object)>-><java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
