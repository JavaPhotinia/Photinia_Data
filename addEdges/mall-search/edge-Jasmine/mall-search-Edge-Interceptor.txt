<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult recommend(java.lang.Long,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult recommend(java.lang.Long,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult create(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult recommend(java.lang.Long,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$SpringCGLIB: void <init>()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult delete(java.util.List,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$InterceptorProxy: java.lang.String getString()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult searchRelatedInfo(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$SpringCGLIB: com.macro.mall.common.api.CommonResult searchRelatedInfo(java.lang.String)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: com.macro.mall.search.controller.EsProductController getEsProductController()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult delete(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult delete(java.util.List,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult delete(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult importAllList(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult searchRelatedInfo(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult recommend(java.lang.Long,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$SpringCGLIB: com.macro.mall.common.api.CommonResult recommend(java.lang.Long,java.lang.Integer,java.lang.Integer)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult create(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: void <init>()>-><com.macro.mall.search.controller.EsProductController: void <init>()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult recommend(java.lang.Long,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult delete(java.util.List,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult searchRelatedInfo(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult delete(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult create(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult importAllList(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$SpringCGLIB: com.macro.mall.common.api.CommonResult importAllList()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult delete(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult searchRelatedInfo(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$SpringCGLIB: void <init>()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$SpringCGLIB: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.Integer)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult searchRelatedInfo(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult delete(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult delete(java.util.List,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult searchRelatedInfo(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$SpringCGLIB: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Integer,java.lang.Integer)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult importAllList(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult delete(java.util.List,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$InterceptorProxy: java.lang.String getString()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult recommend(java.lang.Long,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult importAllList(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$SpringCGLIB: void <init>()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult searchRelatedInfo(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$InterceptorProxy: java.lang.String getString()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult searchRelatedInfo(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult importAllList(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult searchRelatedInfo(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult delete(java.util.List,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$SpringCGLIB: void <init>()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult recommend(java.lang.Long,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult searchRelatedInfo(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult delete(java.util.List,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$SpringCGLIB: com.macro.mall.common.api.CommonResult delete(java.util.List)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult importAllList(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult delete(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$SpringCGLIB: com.macro.mall.common.api.CommonResult delete(java.lang.Long)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult delete(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$SpringCGLIB: void <init>()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult delete(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult create(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult delete(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult recommend(java.lang.Long,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult importAllList(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult delete(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult searchRelatedInfo(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult delete(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult importAllList(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult delete(java.util.List,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult delete(java.util.List,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult delete(java.util.List,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult create(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult create(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$SpringCGLIB: com.macro.mall.common.api.CommonResult create(java.lang.Long)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult create(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult importAllList(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult create(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult recommend(java.lang.Long,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult delete(java.util.List,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult recommend(java.lang.Long,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult recommend(java.lang.Long,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult importAllList(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult importAllList(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult search(java.lang.String,java.lang.Long,java.lang.Long,java.lang.Integer,java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$SpringCGLIB: void <init>()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult searchRelatedInfo(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$SpringCGLIB: void <init>()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult create(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult create(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><com.macro.mall.search.controller.EsProductController$$SpringCGLIB: void <init>()>
<com.macro.mall.search.controller.EsProductController$$InterceptorProxy: com.macro.mall.common.api.CommonResult create(java.lang.Long,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
