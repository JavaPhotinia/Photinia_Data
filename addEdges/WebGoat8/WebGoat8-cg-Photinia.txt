<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: void callEntry_synthetic_ok(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.ProcessEnvironment$ExternalData: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.TreeMap$Entry: java.lang.Object getKey()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: byte[] getJWTSignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_dd5964d6877d7ca026752ce1cbc094b6(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder lessonCompleted(boolean)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Lesson: java.util.List getAssignments()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.template.SampleAttack: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Bound: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.templateresolver.ITemplateResolver springThymeleafTemplateResolver(org.springframework.context.ApplicationContext)>-><org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver: void setApplicationContext(org.springframework.context.ApplicationContext)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.text.AttributeEntry: java.lang.Object getKey()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><java.util.Optional: void ifPresent(java.util.function.Consumer)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_1b89ff27c85176cf51b1c50fdcbf7d46(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void <init>(org.springframework.web.client.RestTemplate,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_1dd97e3e23d00372c3834b03cd93689d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$1: boolean hasNext()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_18362482a767f7de3d037588a097d79c(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.springframework.http.ResponseEntity ok(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.chrome_dev_tools.NetworkLesson: org.springframework.http.ResponseEntity ok(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_976af2cf4f5d800f4ecb08a18158e096(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DecimalStyle: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_579f1e70c92bac1dfa783f4d7cfd791b(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webgoat.users.UserForm getUserFormInstance()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.vulnerable_components.VulnerableComponents: java.lang.String getTitle()>
<org.owasp.webgoat.StartWebGoat: void main(java.lang.String[])>-><org.springframework.boot.SpringApplication: org.springframework.context.ConfigurableApplicationContext run(java.lang.Class,java.lang.String[])>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><java.util.Date: java.util.Date from(java.time.Instant)>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.session.UserSessionData: void setValue(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><org.hibernate.boot.registry.classloading.internal.AggregatedClassLoader: java.util.Enumeration getResources(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_76247a0f1eed4dc37c44e5cc8a0c984f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setLocale(java.util.Locale)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.service.LessonInfoService: void <init>(org.owasp.webgoat.session.WebSession)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.password_reset.TriedQuestions getTriedQuestions()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.xxe.Comments: java.util.Optional parseJson(java.lang.String)>-><com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object readValue(java.lang.String,java.lang.Class)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><org.springframework.web.servlet.ModelAndView: void <init>(org.springframework.web.servlet.View,java.util.Map)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.zone.TzdbZoneRulesProvider: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.StringJoiner: java.lang.String toString()>
<org.owasp.webgoat.password_reset.QuestionsAssignment: org.owasp.webgoat.assignments.AttackResult passwordReset(java.util.Map)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.beans.IndexedPropertyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.springframework.http.ResponseEntity resetPassword(java.lang.String)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder accepted()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_8d8d6a26b21e92bdb18615eee1a96d1f(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: java.util.List lessonOverview(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_9d60df7d46194200890c935d52b2279c(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hibernate.boot.model.relational.Namespace$Name: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.classic.LoggerContext: java.lang.String toString()>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder informationMessage(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder lessonCompleted(boolean)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.field.UnsupportedDurationField: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.http.HttpEntity: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.flywaydb.core.internal.resolver.ResolvedMigrationImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Object: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.flywaydb.core.internal.info.MigrationInfoImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Formatter$FixedString: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Object: java.lang.Class getClass()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: void <init>(java.lang.Class,java.lang.Class,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.task.TaskExecutionProperties getTaskExecutionPropertiesInstance()>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties: void <init>()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><com.google.common.collect.ImmutableEntry: java.lang.Object getKey()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean first()>
<org.owasp.webgoat.users.UserService: void addUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.users.WebGoatUser: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void createSecretFileWithRandomContents()>-><java.io.File: boolean exists()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyFixnum: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: boolean tableExists(java.sql.Connection)>-><java.io.PrintStream: void println(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.util.calendar.CalendarDate: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_812ed7f3dd95e2bf4a4cef93824d0c75(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.challenges.Email: void <init>(java.time.LocalDateTime,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.AbstractCollection: java.lang.String toString()>
<org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode: org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode interpret(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.csrf.CSRFLogin: void <init>()>
<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.html_tampering.HtmlTamperingTask: void <init>()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.springframework.util.LinkedMultiValueMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.challenges.Email: int hashCode()>-><java.lang.String: int hashCode()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.spring5.SpringTemplateEngine thymeleafTemplateEngine(org.thymeleaf.templateresolver.ITemplateResolver,org.owasp.webgoat.LessonTemplateResolver,org.owasp.webgoat.AsciiDoctorTemplateResolver)>-><org.thymeleaf.TemplateEngine: void addDialect(org.thymeleaf.dialect.IDialect)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.base.AbstractPartial: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><org.springframework.http.converter.json.MappingJacksonValue: void setSerializationView(java.lang.Class)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.flywaydb.core.internal.license.Edition: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.IntNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.reflect.annotation.TypeAnnotation: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_be6b144e5e5b7f6b9f5abd54525d6744(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController: void callEntry_synthetic_error(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.base.AbstractPeriod: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.tz.FixedDateTimeZone: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.http_proxies.HttpProxies: void <init>()>
<org.owasp.webgoat.users.LessonTracker: java.util.Optional getAssignment(java.lang.String)>-><java.util.stream.ReferencePipeline: java.util.Optional findFirst()>
<org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getRecipient()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><java.lang.Throwable: java.lang.String toString()>
<org.owasp.webgoat.assignments.AttackResult: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder builder(org.owasp.webgoat.i18n.PluginMessages)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: void <init>(org.owasp.webgoat.i18n.PluginMessages)>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_61c4547819c4ecf2ac6f8317186de093(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.HSQLDBDatabaseConfig: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView illegalCall(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.calendar.LocalGregorianCalendar$Date: java.lang.String toString()>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer formLogin()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webwolf.user.RegistrationController: void <init>(org.owasp.webwolf.user.UserValidator,org.owasp.webwolf.user.UserService,org.springframework.security.authentication.AuthenticationManager)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getMd5(javax.servlet.http.HttpServletRequest)>-><java.util.Random: void <init>()>
<org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(javax.servlet.http.HttpServletRequest)>-><java.util.Random: int nextInt(int)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><javax.management.openmbean.TabularDataSupport: int size()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.JsonMappingException$Reference: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.security.Provider: java.lang.Object get(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_1dd97e3e23d00372c3834b03cd93689d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.security.Provider$UString: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Optional: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5 getSqlInjectionLesson5()>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.jruby.ir.operands.ClosureLocalVariable: int compareTo(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.Provider: java.lang.String toString()>
<org.owasp.webgoat.challenges.Email: int hashCode()>-><org.owasp.webgoat.challenges.Email: java.time.LocalDateTime getTime()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_1653b1e28218ee817a056a828275a53a(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.org.objectweb.asm.Label: java.lang.String toString()>
<org.owasp.webwolf.mailbox.MailboxController: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.core.AppenderBase: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.users.Scoreboard: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.users.UserRepository,org.owasp.webgoat.session.Course,org.owasp.webgoat.i18n.PluginMessages)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.ChallengeIntro: java.lang.String getTitle()>
<org.owasp.webwolf.requests.Requests: void <init>(org.owasp.webwolf.requests.WebWolfTraceRepository,com.fasterxml.jackson.databind.ObjectMapper)>-><com.fasterxml.jackson.databind.ObjectMapper: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.ZoneOffset: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_3a69e340e97c8962d87360f622714fa2(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.xxe.Comments: java.util.Collection getComments()>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<org.owasp.webgoat.missing_ac.Users$4: void <init>(org.owasp.webgoat.missing_ac.Users,java.util.HashMap)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_bfcb7d8b9fd1d96da550b85d0dbdfd4b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.util.HierarchicalUriComponents$PathSegmentComponent: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.chrono.AbstractChronology: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.StandardError: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean first()>
<org.springframework.beans.factory.support.PropertiesBeanDefinitionReader: void registerBeanDefinition(java.lang.String,java.util.Map,java.lang.String,java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode: org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode interpret(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_52869a05ff96c549ee8aba5760ce227d(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView illegalCall(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.StringCharacterIterator: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring: boolean hasId(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.joran.action.Action: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String toLowerCase()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getHash(java.lang.String,java.lang.String)>-><java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webwolf.requests.Requests: boolean lambda$get$0(org.springframework.security.core.userdetails.UserDetails,org.springframework.boot.actuate.trace.http.HttpTrace)>-><org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: java.sql.Connection getConnection()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: void lambda$course$1(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_be155b857084705f2d8d86baebf1ea2a(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.owasp.webgoat.lessons.LessonMenuItem: void setComplete(boolean)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.RowType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.crypto.CryptoAllPermission: boolean equals(java.lang.Object)>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.challenges.challenge1.Assignment1: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.AttributeAccessorSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView start()>-><org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.deser.impl.CreatorCandidate: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult notUsed(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String)>-><org.springframework.security.core.token.Sha512DigestUtils: java.lang.String shaHex(java.lang.String)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setAutoIndexCreation(java.lang.Boolean)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)>-><java.util.ArrayList: boolean contains(java.lang.Object)>
<org.owasp.webgoat.xxe.Comments: void <clinit>()>-><org.joda.time.DateTime: org.joda.time.DateTime now()>
<org.owasp.webwolf.user.RegistrationController: void <init>(org.owasp.webwolf.user.UserValidator,org.owasp.webwolf.user.UserService,org.springframework.security.authentication.AuthenticationManager)>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.mailbox.MailboxController: org.springframework.web.servlet.ModelAndView mail()>-><org.springframework.security.core.context.SecurityContextImpl: org.springframework.security.core.Authentication getAuthentication()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity follow(java.util.Map)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>
<org.owasp.webgoat.users.UserValidator: void validate(java.lang.Object,org.springframework.validation.Errors)>-><org.springframework.validation.BindException: void rejectValue(java.lang.String,java.lang.String)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.xxe.CommentsEndpoint: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.provider.PolicyFile$SelfPermission: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.chrono.GJCacheKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.LessonMenuItem: void <init>()>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.net.Inet4Address: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_2237e0fa04090cf19623da8b6c46e327(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webwolf.mailbox.MailboxController: void <init>(org.owasp.webwolf.mailbox.MailboxRepository)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.ZonedDateTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.RestartLessonService: void callEntry_synthetic_restartLesson(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.service.RestartLessonService: void restartLesson()>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.HashMap: boolean containsKey(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getPath(java.lang.Class)>-><org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getMapping(java.lang.reflect.Method)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_e1d6310b2b32524ca8fcf5eb99dba5af(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.service.ReportCardService$LessonStatistics: void setNumberOfAttempts(int)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Assignment: java.lang.String getName()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_7400ef04a6c13162043aca0ede41cf3e(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.nulabinc.zxcvbn.Strength: com.nulabinc.zxcvbn.AttackTimes$CrackTimeSeconds getCrackTimeSeconds()>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.x509.Extension: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder lessonCompleted(boolean)>
<org.owasp.webgoat.service.LabelService: void callEntry_synthetic_fetchLabels(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.service.LabelService: java.lang.String getString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><java.lang.Throwable: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_aebb121ab3c1c7dd79d810b834f2134a(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.LocalDateTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$TextPrinterParser: java.lang.String toString()>
<org.owasp.webwolf.requests.WebWolfTraceRepository: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.Clock$SystemClock: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.LocalDate: java.lang.String toString()>
<org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.deser.UnresolvedId: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_ee61bb7b2af6ce22a6765e7643db350e(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUpload: org.springframework.http.ResponseEntity getProfilePicture()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><org.apache.commons.lang3.RandomStringUtils: java.lang.String randomAlphabetic(int)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.apache.logging.log4j.Level: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanParameterInfo: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String toString()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.jruby.RubyArray: boolean add(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.beans.IndexedPropertyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.api.Location: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.x509.X509CertImpl: java.lang.String toString()>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><java.lang.System: long currentTimeMillis()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.DatabaseInitialization: void <init>(javax.sql.DataSource,java.lang.String)>
<org.owasp.webgoat.session.WebSession: void <init>()>-><org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>
<org.owasp.webwolf.requests.Requests: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webgoat.users.UserForm getUserFormInstance()>-><org.owasp.webgoat.users.UserForm: void setMatchingPassword(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_ef4d4abcc3ff212f817a622676ac880f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_7bc4b9db1af49e3da788773ba5ccda09(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.RubyThread: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.idor.UserProfile: int getRole()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.format.support.FormattingConversionService$ParserConverter: java.lang.String toString()>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: java.lang.String getMd5(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getMd5(javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.util.locale.provider.RuleBasedBreakIterator: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: boolean check_text(java.lang.String,java.lang.String)>-><java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_dd5964d6877d7ca026752ce1cbc094b6(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: void <init>()>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.ModelAndView mail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.owasp.webgoat.users.UserValidator: void validate(java.lang.Object,org.springframework.validation.Errors)>-><org.owasp.webgoat.users.UserForm: java.lang.String getUsername()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_cc775263a7b145afb474e97d00f1f431(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.CompositeDataSupport: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult flag(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult flag(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.client_side_filtering.Salaries: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.org.objectweb.asm.Label: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.reflect.Proxy$Key2: boolean equals(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.nio.ByteBuffer: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><io.jsonwebtoken.Jwts: io.jsonwebtoken.JwtBuilder builder()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_14cfd44896ce1a39909e06c80b2db91f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void <init>()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.MD5$MD5State: void copy(org.owasp.webgoat.challenges.challenge7.MD5$MD5State)>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.net.URI: java.lang.String getScheme()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: void callEntry_synthetic_encode(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><synthetic.method.SingletonFactory: javax.sql.DataSource getDataSource()>
<org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getTitle()>
<org.hsqldb.types.CharacterType: java.lang.String convertJavaTimeObject(org.hsqldb.SessionInterface,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.UUID: boolean equals(java.lang.Object)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: java.util.List compileFromString(java.lang.String)>-><javax.tools.ToolProvider: javax.tools.JavaCompiler getSystemJavaCompiler()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.MBeanNotificationInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.slf4j.helpers.NOPLogger: void warn(java.lang.String)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>-><org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity postForEntity(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Object[])>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.chrono.LimitChronology$LimitException: java.lang.String toString()>
<org.owasp.webgoat.xxe.Comments: java.util.Optional parseJson(java.lang.String)>-><java.util.Optional: java.util.Optional of(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><jnr.constants.platform.RLIMIT: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity average(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.i18n.Messages messageSource(org.owasp.webgoat.i18n.Language)>-><org.owasp.webgoat.i18n.Messages: void <init>(org.owasp.webgoat.i18n.Language)>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult flag(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.core.io.ClassPathResource git(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><org.owasp.webgoat.session.Course: java.util.List getCategories()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer formLogin()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Float: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><org.springframework.core.env.ReadOnlySystemAttributesMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.service.ReportCardService$LessonStatistics: void <init>(org.owasp.webgoat.service.ReportCardService)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.http_basics.HttpBasicsQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity defaultImage()>-><org.springframework.util.FileCopyUtils: byte[] copyToByteArray(java.io.InputStream)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><org.springframework.util.LinkedMultiValueMap: void putAll(java.util.Map)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_d27318bc95817314e1d1220c4e781a5f(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjection: java.lang.String getTitle()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_d0b63345031b7fe3c3166e426fec6dae(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><net.bytebuddy.asm.MemberSubstitution: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.nio.file.InvalidPathException: java.lang.String getMessage()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_7e310cf1cf75bbbd3bf5f39ab5ba52cb(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.http.HttpEntity: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_b7a450ec56bb4ccee9e756c44c4eb3af(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.concurrent.ThreadPoolExecutor: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.io.File: boolean exists()>
<org.owasp.webgoat.service.LessonMenuService: int lambda$showLeftNav$1(org.owasp.webgoat.lessons.LessonMenuItem,org.owasp.webgoat.lessons.LessonMenuItem)>-><org.owasp.webgoat.lessons.LessonMenuItem: int getRanking()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties getRestClientPropertiesInstance()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void setUsername(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFLogin: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.util.DerValue: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setPassword(char[])>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><ch.qos.logback.classic.Logger: void debug(java.lang.String)>
<org.owasp.webgoat.session.UserSessionData: java.lang.Object getValue(java.lang.String)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: byte[] getJWTSignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><io.jsonwebtoken.impl.Base64Codec: byte[] decode(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.reflect.Method: java.lang.String toString()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.springframework.web.servlet.ModelAndView listUsers(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.users.UserService: java.util.List getAllUsers()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: boolean equals(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: org.owasp.webgoat.session.Course course()>-><java.util.stream.ReferencePipeline$Head: void forEach(java.util.function.Consumer)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: java.lang.Long getId()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_85ac0d0be8868a6d7f676d9d07dad084(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.DateTimeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.io.BufferedReader: java.lang.String readLine()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult notUsed(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.service.LessonMenuService: void <init>(org.owasp.webgoat.session.Course,org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository)>-><synthetic.method.SingletonFactory: synthetic.method.UserTrackerRepositoryImpl getUserTrackerRepositoryImpl()>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Currency: java.lang.String toString()>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_1653b1e28218ee817a056a828275a53a(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity getVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.challenges.Email: java.lang.String toString()>-><org.owasp.webgoat.challenges.Email: java.lang.String getSender()>
<org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Boolean,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.springframework.http.HttpMethod: boolean matches(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.core.joran.spi.ElementPath: java.lang.String toString()>
<org.owasp.webgoat.crypto.HashingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><java.util.Properties: void <init>()>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.ssrf.SSRFTask2 getSSRFTask2()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.service.LessonMenuService: void <init>(org.owasp.webgoat.session.Course,org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hibernate.metamodel.model.domain.NavigableRole: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_1edb7eeb876b265911846d48973d772b(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.Servers: void <init>(javax.sql.DataSource)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: void <init>(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory,javax.sql.DataSource)>
<org.owasp.webgoat.HSQLDBDatabaseConfig: javax.sql.DataSource dataSource(java.lang.String,java.lang.String)>-><org.springframework.jdbc.datasource.DriverManagerDataSource: void <init>(java.lang.String)>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Character: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<javax.management.modelmbean.DescriptorSupport: boolean isValid()>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.core.joran.action.Action: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><java.io.FileInputStream: void close()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.RubyObject: java.lang.String toString()>
<org.springframework.boot.context.properties.source.MapConfigurationPropertySource: void put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyThread: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.x509.AVA: boolean equals(java.lang.Object)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><io.undertow.servlet.util.IteratorEnumeration: java.lang.Object nextElement()>
<org.owasp.webgoat.idor.UserProfile: void <init>(java.lang.String)>-><org.owasp.webgoat.idor.UserProfile: void setProfileFromId(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.thoughtworks.xstream.core.util.FastField: java.lang.String toString()>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.ModelAndView mail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.html_tampering.HtmlTamperingTask getHtmlTamperingTask()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<io.jsonwebtoken.impl.DefaultJwtParser: void validateExpectedClaims(io.jsonwebtoken.Header,io.jsonwebtoken.Claims)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><com.thoughtworks.xstream.core.util.WeakCache: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webwolf.requests.LandingPage: org.springframework.http.ResponseEntity lambda$ok$0(javax.servlet.http.HttpServletRequest)>-><org.slf4j.helpers.SubstituteLogger: void trace(java.lang.String,java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.OffsetTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: void setViewName(java.lang.String)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.UserSessionData getUserSessionData()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Date: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.support.NullBean: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_db1a3fdaa3175dd457d794c865145dcb(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.annotation.AnnotationAttributes: java.lang.String toString()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_139ac0ad7d2adffb0207013aa97ee12(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: void <init>()>
<org.hibernate.tool.schema.Action: org.hibernate.tool.schema.Action interpretJpaSetting(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object readValue(byte[],java.lang.Class)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.session.LabelDebugger labelDebugger()>-><org.owasp.webgoat.session.LabelDebugger: void <init>()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.node.BaseJsonNode: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_18362482a767f7de3d037588a097d79c(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.SimpleDateFormat: boolean equals(java.lang.Object)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.stream.Collectors: java.util.stream.Collector counting()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: void <init>(org.springframework.web.client.RestTemplate,java.lang.String)>-><org.springframework.web.client.RestTemplate: void <init>()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><org.owasp.webgoat.csrf.CSRFFeedback: boolean hostOrRefererDifferentHost(javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: void callEntry_synthetic_start(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.lessons.CourseConfiguration: void <init>(java.util.List,java.util.List)>
<org.owasp.webgoat.path_traversal.ProfileUpload: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.javasupport.JavaArray: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJws: java.lang.Object getBody()>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.io.FileInputStream: void <init>(java.io.File)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.owasp.webgoat.assignments.AttackResult click(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Integer: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_7b511cd3fa59e592bbbb2dd30c66dd84(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.zone.ZoneOffsetTransition: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_f32ce4308d2bc922bfc8ed06b0680553(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.HammerHead: void callEntry_synthetic_attack(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.HammerHead: org.springframework.web.servlet.ModelAndView attack(org.springframework.security.core.Authentication,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.template.SampleAttack: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.auth_bypass.AuthBypass: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.openmbean.TabularDataSupport: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.env.PropertySource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.UTCDateTimeZone: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webgoat.users.UserForm getUserFormInstance()>-><org.owasp.webgoat.users.UserForm: void <init>()>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><java.util.Collections$UnmodifiableList: java.lang.Object get(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><io.jsonwebtoken.impl.JwtMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelService: org.springframework.http.ResponseEntity fetchLabels(java.lang.String)>-><java.util.Properties: void <init>()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.SubList$1: java.lang.Object next()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean)>-><org.owasp.webgoat.session.LabelDebugger: boolean isEnabled()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Character$Subset: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.beans.factory.config.RuntimeBeanReference: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><org.springframework.util.LinkedMultiValueMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.type.ReferenceType: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult notUsed(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayList$SubList: java.util.Iterator iterator()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_1eb9794f62cd15dcf20a59e8d3502337(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult checkArguments(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$SingletonMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><org.owasp.webgoat.session.UserSessionData: void setValue(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>
<org.owasp.webgoat.deserialization.InsecureDeserialization: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.DateTimeZone: java.lang.String toString()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.DOMCrossSiteScripting: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.xxe.Comments: java.util.Optional parseJson(java.lang.String)>-><java.util.Optional: java.util.Optional empty()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.service.ReportCardService: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.Course,org.owasp.webgoat.i18n.PluginMessages)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.x509.GeneralName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: boolean containsAll(java.util.Collection)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.ThreadPoolExecutor: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.NamedInheritableThreadLocal: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webwolf.FileServer$UploadedFile: void <init>(org.owasp.webwolf.FileServer,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String[] split(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.asm.MemberSubstitution$Replacement$Factory$Compound: boolean equals(java.lang.Object)>
<org.owasp.webgoat.session.UserSessionData: void <init>()>-><java.util.HashMap: void <init>()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_6ad5f22232aeb1919be555cbea526997(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier getStoredCrossSiteScriptingVerifier()>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><io.undertow.servlet.spec.HttpSessionImpl: java.lang.Object getAttribute(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><net.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.WebGoat: void <init>()>
<org.springframework.web.util.UriUtils: void lambda$encodeUriVariables$0(java.util.Map,java.lang.String,java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getMethod()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_dc7ca2c6295d2288190f4c7a0a33a9f5(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webgoat.users.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.PatternEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.nio.ByteBuffer: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult notUsed(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.chrono.LimitChronology$LimitException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.field.BaseDateTimeField: java.lang.String toString()>
<org.hibernate.internal.util.config.ConfigurationHelper: java.lang.Integer getInteger(java.lang.String,java.util.Map)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.core.io.ClassPathResource git(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.YearMonth: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractSequentialList: java.util.Iterator iterator()>
<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><org.springframework.security.core.context.SecurityContextImpl: org.springframework.security.core.Authentication getAuthentication()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge5.Challenge5: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_c4d94587585d8403c6a6c40cdc70c8ea(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Locale: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><java.util.Vector: boolean add(java.lang.Object)>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><java.util.AbstractList$Itr: java.lang.Object next()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_3f69be87be6d3a7d505a9be7abad01dc(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: void setViewName(java.lang.String)>
<org.owasp.webgoat.missing_ac.Users$3: void <init>(org.owasp.webgoat.missing_ac.Users,java.lang.Exception)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_fb6db2e926eca4bdcd97c0ea5f2eb780(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity average(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><org.springframework.util.LinkedMultiValueMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.io.File: java.io.File getParentFile()>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_8c33c544e62ee8d79d7acb541a00a401(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: void <init>()>
<register-finalize <org.owasp.webgoat.lessons.LessonMenuItemType: void <clinit>()>-><java.lang.ref.Finalizer: void register(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_cd8cc591f6f01daa2103e0018d5b7cdd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webwolf.requests.Requests: org.owasp.webwolf.requests.Requests$Tracert lambda$get$1(org.springframework.boot.actuate.trace.http.HttpTrace)>-><org.owasp.webwolf.requests.Requests: java.lang.String path(org.springframework.boot.actuate.trace.http.HttpTrace)>
<register-finalize <org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.lang.ref.Finalizer: void register(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.imageio.ImageTypeSpecifier$Interleaved: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.http_basics.HttpBasics: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.service.ReportCardService$LessonStatistics: void setName(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.locks.ReentrantLock: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: int size()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.database.base.Function: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void <init>()>
<org.owasp.webgoat.xxe.Comments: java.util.Collection getComments()>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_79ca4bb52a10094b00bd65a04a91484c(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.challenges.challenge7.Challenge7: void <init>()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.cia.CIA: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.config.RuntimeBeanReference: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.util.collections.WeakHashSet: java.lang.String toString()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.headius.invokebinder.transform.FilterReturn: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.session.Course: java.util.List getCategories()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream distinct()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.jca.ProviderConfig: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.chrono.GJChronology: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean)>-><ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getHash(java.lang.String,java.lang.String)>-><java.security.MessageDigest: void update(byte[])>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.stream.SpinedBuffer: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: java.util.List invoke(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.lang.String: byte[] getBytes()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableCollection: int size()>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><java.util.SubList: java.lang.Object get(int)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.owasp.webgoat.WebGoat: org.springframework.web.client.RestTemplate restTemplate()>-><org.springframework.web.client.RestTemplate: void <init>()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setAddress(java.net.InetAddress)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><io.jsonwebtoken.Jwts: io.jsonwebtoken.JwtParser parser()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.javasupport.JavaConstructor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.PreparedStatement prepareStatement(java.lang.String)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity follow(java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFLogin: void <init>()>-><synthetic.method.SingletonFactory: synthetic.method.UserTrackerRepositoryImpl getUserTrackerRepositoryImpl()>
<org.owasp.webgoat.i18n.PluginMessages: java.util.Properties getMessages()>-><org.owasp.webgoat.i18n.Language: java.util.Locale getLocale()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.AppenderBase: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: java.lang.String toString()>
<org.owasp.webgoat.template.SampleAttack: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.session.UserSessionData: java.lang.Object getValue(java.lang.String)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.ImmutableDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.Users$3: void <init>(org.owasp.webgoat.missing_ac.Users,java.lang.Exception)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictions: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$Record: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.beans.factory.support.GenericBeanDefinition: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setSchemaPassword(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.expression.TypedValue: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.session.UserSessionData: java.lang.Object getValue(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_b34580ef7b394d2502bde736d73450d0(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.DurationFieldType$StandardDurationFieldType: boolean equals(java.lang.Object)>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$CacheControlConfig: org.springframework.security.config.annotation.web.configurers.HeadersConfigurer disable()>
<org.owasp.webgoat.users.UserService: void addUser(java.lang.String,java.lang.String,java.lang.String)>-><synthetic.method.UserRepositoryImpl: java.lang.Object save(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.auth_bypass.VerifyAccount: java.util.HashMap parseSecQuestions(javax.servlet.http.HttpServletRequest)>-><javax.servlet.ServletRequestWrapper: java.util.Enumeration getParameterNames()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_c65fb43415916d2677f2b39408237a92(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_c063b5632af5d6d9d86e7ef5df48f921(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.util.TreeMap$Entry: java.lang.Object getValue()>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<register-finalize <org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.lang.ref.Finalizer: void register(java.lang.Object)>
<org.owasp.webgoat.users.UserService: void addUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.users.UserTracker: void <init>(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: void callEntry_synthetic_getBasicAuth(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_4f960d36b12725acb5d1b9b9ba58dbaa(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: boolean checkSolution(org.owasp.webgoat.xxe.Comment)>-><org.apache.commons.exec.OS: boolean isFamilyUnix()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.ForgedReviews: void <clinit>()>-><org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.JavaObjectData: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer: org.springframework.security.config.annotation.web.HttpSecurityBuilder disable()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: int length()>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setSuffix(java.lang.String)>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.io.ObjectStreamClass$FieldReflectorKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: void <init>()>-><net.bytebuddy.description.type.TypeList$Generic$Empty: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: boolean tableExists(java.sql.Connection)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.io.ObjectStreamClass$WeakClassKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.jsonwebtoken.Jwts: io.jsonwebtoken.JwtBuilder builder()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: java.lang.String getString()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_2369ea1345cdb370343dabf930476df1(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.xxe.Comments: org.owasp.webgoat.xxe.Comment parseXml(java.lang.String)>-><javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLInputFactory newInstance()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jcodings.Encoding: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.AbstractCollection: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.flywaydb.core.internal.database.base.Schema: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_313f210aa4240085446eeb645a0a02a5(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_b33e57864a04690bf201627cc24257d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a: void <init>()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionMitigations: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_6fb641f411c6a6792f22a3d2f2c9db06(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Throwable: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>
<org.owasp.webwolf.requests.Requests: org.springframework.web.servlet.ModelAndView get()>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.io.ByteArrayResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder title(java.lang.String)>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.missing_ac.DisplayUser: java.lang.String getUserHash()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><java.util.Collections$UnmodifiableCollection: boolean add(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><java.util.HashMap: java.util.Collection values()>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean first()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.text.ParsePosition: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity defaultImage()>-><org.springframework.http.MediaType: org.springframework.http.MediaType parseMediaType(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder informationMessage(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder builder(org.owasp.webgoat.i18n.PluginMessages)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.Email: java.lang.String toString()>-><org.owasp.webgoat.challenges.Email: java.lang.String getContents()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: org.owasp.webgoat.session.Course course()>-><java.util.Collection: java.util.stream.Stream stream()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_5552cdbce95570615318ce424bff11b0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: void callEntry_synthetic_ok(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.chrome_dev_tools.NetworkLesson: org.springframework.http.ResponseEntity ok(java.lang.String)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.service.LabelDebugService: void <init>(org.owasp.webgoat.session.LabelDebugger)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String getHashString(java.lang.String)>-><org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String getHashString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$TextPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer permitAll()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_ba45c6c08a5e366283c00c81887beaa3(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>-><java.lang.String: int hashCode()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.password_reset.ResetLinkAssignment: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webwolf.WebSecurityConfig: void <init>(org.owasp.webwolf.user.UserService)>-><synthetic.method.SingletonFactory: org.owasp.webwolf.user.UserService getUserService()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_7bc033d1d93a495881441ddddbe3c4d8(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.MBeanNotificationInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOR: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.idor.UserProfile getUserProfileInstance()>-><org.owasp.webgoat.idor.UserProfile: void <init>()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.DecimalFormat: void setMaximumFractionDigits(int)>
<org.jruby.ir.operands.ClosureLocalVariable: int compareTo(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.method.ParameterDescription$AbstractBase: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.Hint: int hashCode()>-><org.owasp.webgoat.lessons.Hint: java.lang.String getAssignmentPath()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.UserSessionData getUserSessionData()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.cia.CIAQuiz: void <init>()>
<org.owasp.webgoat.service.RestartLessonService: void restartLesson()>-><org.owasp.webgoat.session.WebSession: org.owasp.webgoat.lessons.Lesson getCurrentLesson()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.temporal.WeekFields$ComputedDayOfField: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.UserProfile: java.lang.String getUserId()>
<org.hsqldb.persist.Cache$CachedObjectComparator: int hashCode(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.util.RawValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_fc4110b6dabdbbde329fcd9f74befd38(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webwolf.WebWolf: void initBean_synthetic()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.controller.StartLesson: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.session.Course)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.misc.Signal: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.WebGoatUser: void <init>(java.lang.String,java.lang.String)>-><org.owasp.webgoat.users.WebGoatUser: void createUser()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity defaultImage()>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity$BodyBuilder contentType(org.springframework.http.MediaType)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.sql.Timestamp: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_b2b5e0e97eb81e194238306f8891fb62(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.database.base.SchemaObject: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_81bcd09ce51ed1bc40d6013cf3f8e4ab(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: java.util.List invoke(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Locale: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><com.thoughtworks.xstream.core.util.WeakCache: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.Hashtable$Entry: java.lang.Object getKey()>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.html_tampering.HtmlTampering: void <init>()>
<org.owasp.webwolf.MvcConfiguration: void addResourceHandlers(org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry)>-><org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration: org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration addResourceLocations(java.lang.String[])>
<org.owasp.webwolf.mailbox.Email: boolean equals(java.lang.Object)>-><org.owasp.webwolf.mailbox.Email: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.LocalTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult checkArguments(java.lang.String,java.lang.String,java.lang.String)>-><org.springframework.util.StringUtils: boolean isEmpty(java.lang.Object)>
<org.owasp.webwolf.mailbox.MailboxController: org.springframework.http.ResponseEntity lambda$sendEmail$0(org.owasp.webwolf.mailbox.Email)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity build()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: void <init>()>
<org.owasp.webwolf.mailbox.Email: int hashCode()>-><org.owasp.webwolf.mailbox.Email: java.lang.String getTitle()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult notUsed(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.x509.RDN: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.crypto.CryptoUtil: java.lang.String getPrivateKeyInPEM(java.security.KeyPair)>-><java.lang.String: void <init>(byte[],java.nio.charset.Charset)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_eeffdbe9aca912455bd062ccdc5f3bae(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.concurrent.locks.AbstractQueuedSynchronizer: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: void <init>(org.owasp.webgoat.session.Course,org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository)>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.Course getCourse()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>-><java.text.DateFormat: java.lang.String format(java.util.Date)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.owasp.webgoat.webwolf_introduction.WebWolfIntroduction: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.owasp.webgoat.assignments.AttackResult click(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.annotation.web.configurers.CsrfConfigurer csrf()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.Email$EmailBuilder: org.owasp.webgoat.challenges.Email build()>-><org.owasp.webgoat.challenges.Email: void <init>(java.time.LocalDateTime,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: void <init>(javax.sql.DataSource)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: void <init>(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory,javax.sql.DataSource)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_e0ee87cc4ab25f27b0ff81218dfe8e51(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: void <init>()>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.field.BaseDurationField: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.JwtParser setSigningKey(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.net.SocketImpl: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.nio.charset.Charset: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_1d75855a45e8db3073286c7f5a5efa0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity follow(java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.font.AttributeValues: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.jruby.javasupport.JavaArray: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.Boolean: boolean booleanValue()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_559b392021c73085cfaf8dd2652ec8d0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><jnr.constants.ConstantSet$ConstantIterator: java.lang.Object next()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_8ce7a9b57f61045d3b5e988fef5d3188(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.Instant: java.time.Instant plus(java.time.temporal.TemporalAmount)>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: void <init>()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><org.jruby.RubyHash: int size()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Date: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.RubyFloat: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments: void <clinit>()>-><org.joda.time.DateTime: org.joda.time.DateTime now()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.annotation.AnnotationValue$ForMismatchedType: java.lang.String toString()>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><java.lang.Throwable: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.BuddhistCalendar: java.lang.String toString()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionMitigations: void <init>()>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.math.BigInteger: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.reflect.WeakCache$CacheKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.representations.ExceptionRegion: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.challenges.Email: org.owasp.webgoat.challenges.Email$EmailBuilder builder()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.field.MillisDurationField: java.lang.String toString()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><javax.management.openmbean.TabularDataSupport: java.util.Collection values()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.URL: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.validation.ObjectError: java.lang.String toString()>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.RegistrationController: void <init>(org.owasp.webgoat.users.UserValidator,org.owasp.webgoat.users.UserService,org.springframework.security.authentication.AuthenticationManager)>-><synthetic.method.SingletonFactory: org.owasp.webgoat.users.UserValidator getUserValidator()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_61c4547819c4ecf2ac6f8317186de093(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.OffsetDateTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.QuestionsAssignment: void callEntry_synthetic_passwordReset(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.password_reset.QuestionsAssignment: org.owasp.webgoat.assignments.AttackResult passwordReset(java.util.Map)>
<org.owasp.webgoat.csrf.ForgedReviews: void <clinit>()>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController: void <init>(org.springframework.boot.web.servlet.error.ErrorAttributes,org.springframework.boot.autoconfigure.web.ErrorProperties)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictions: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.openmbean.CompositeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_b255d7ae89f34c188fd16afa53812fe6(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: java.util.List invoke(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode: org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode interpret(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.calendar.ZoneInfo: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_64ea1b81bbe5c8ec8b5d706097377ae6(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.auth_bypass.VerifyAccount: java.util.HashMap parseSecQuestions(javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DecimalStyle: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.chrono.BasicChronology: java.lang.String toString()>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><java.util.Collections$SynchronizedList: java.lang.Object get(int)>
<org.owasp.webwolf.mailbox.MailboxController: org.springframework.web.servlet.ModelAndView mail()>-><org.springframework.web.servlet.ModelAndView: void setViewName(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.util.ObjectIdentifier: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.xxe.BlindSendFileAssignment: void callEntry_synthetic_addComment(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<java.text.AttributeEntry: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webwolf.requests.Requests: void callEntry_synthetic_get(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webwolf.requests.Requests: org.springframework.web.servlet.ModelAndView get()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.jwt.JWT: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.HsqlException: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.csrf.CSRFLogin: void markAssignmentSolvedWithRealUser(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: void <clinit>()>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_bad3e2879504886998a5a5f41fabf15c(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Self: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.joda.time.chrono.LimitChronology$LimitException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: java.lang.String toString()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: java.sql.Connection getConnection()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.jruby.RubyArray: boolean add(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: int size()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void createSecretFileWithRandomContents()>-><java.nio.file.Files: java.nio.file.Path writeString(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,java.nio.file.OpenOption[])>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.pkcs.SignerInfo: java.lang.String toString()>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.chrome_dev_tools.NetworkDummy: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$SettingsParser: java.lang.String toString()>
<org.owasp.webgoat.service.ReportCardService$LessonStatistics: void <init>(org.owasp.webgoat.service.ReportCardService)>-><java.lang.Object: void <init>()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.webwolf_introduction.MailAssignment: void <init>(org.springframework.web.client.RestTemplate,java.lang.String)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.RestartLessonService: void callEntry_synthetic_restartLesson(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.Users$1: void <init>(org.owasp.webgoat.missing_ac.Users,java.sql.SQLException)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.StackTraceElement: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getKey()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_dd9fa8e8fbac70be00d8ef91a03c1f4c(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: boolean add(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: void callEntry_synthetic_login(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><synthetic.method.SingletonFactory: void setRestTemplate(org.springframework.web.client.RestTemplate)>
<org.owasp.webgoat.crypto.HashingAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: void callEntry_synthetic_start(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.WebGoat: org.owasp.webgoat.session.WebSession webSession()>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.UnboxedFloat: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.net.httpserver.HttpConnection: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.joda.time.chrono.LimitChronology$LimitException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFFeedback: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.UserSessionData getUserSessionData()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.introduction.WebGoatIntroduction: java.lang.String getTitle()>
<org.owasp.webgoat.missing_ac.DisplayUser: void <init>(org.owasp.webgoat.users.WebGoatUser)>-><org.owasp.webgoat.missing_ac.DisplayUser: java.lang.String genUserHash(java.lang.String,java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.Fixnum: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.asm.Handle: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: java.lang.String toString()>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean)>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Date: java.util.Date from(java.time.Instant)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.owasp.webgoat.missing_ac.Users$1: void <init>(org.owasp.webgoat.missing_ac.Users,java.sql.SQLException)>-><java.util.HashMap: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_23f53bafd710ffb92c2c5178c6200b1(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xss.mitigation.CrossSiteScriptingMitigation: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: java.util.List lessonOverview(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties getRestClientPropertiesInstance()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void setConnectionTimeout(java.time.Duration)>
<org.owasp.webgoat.template.LessonTemplate: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.SymbolProc: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyHash$ConvertingEntry: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String lambda$new$0(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_26046cd854d4fd5d5da51c2dd316744d(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.calendar.Era: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.SymbolProc: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.users.Scoreboard: java.util.List challengesSolved(org.owasp.webgoat.users.UserTracker)>-><java.util.List: java.util.List of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><java.io.File: java.io.File getAbsoluteFile()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.LocalDate: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.net.SocketPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.IntervalSecondData: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.MD5: void transform(org.owasp.webgoat.challenges.challenge7.MD5$MD5State,int[])>-><org.owasp.webgoat.challenges.challenge7.MD5: int HH(int,int,int,int,int,int,int)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_461d99cc9609bbcb500602027d5ac607(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_61c4547819c4ecf2ac6f8317186de093(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer defaultSuccessUrl(java.lang.String,boolean)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.BitSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.deser.CreatorProperty: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.sql.Timestamp: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.ProcessEnvironment$Variable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.session.UserSessionData: void <init>(java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.crypto.CryptoAllPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.flywaydb.core.internal.schemahistory.AppliedMigration: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.TimeData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder: org.owasp.webgoat.webwolf_introduction.Email build()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.awt.image.DirectColorModel: java.lang.String toString()>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.util.DerValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.misc.Signal: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: byte[] getJWTSignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><javax.crypto.Mac: void init(java.security.Key)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.CompositeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.cia.CIAQuiz: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_baa8a78a0f0703be452069385bf6bf5(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.file.InvalidPathException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: java.lang.String getString()>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.annotation.web.configurers.LogoutConfigurer logout()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream sorted(java.util.Comparator)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.util.Hashtable$Entry: java.lang.Object getValue()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.jar.Attributes: int size()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.validation.ObjectError: java.lang.String toString()>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadFix: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_34080df81c287d81865c95103b138e2f(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.client_side_filtering.Salaries: void copyFiles()>-><java.io.File: boolean exists()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<java.util.Hashtable: java.lang.String toString()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_898694d6cb1d3d85d4ed2f2f119b1e40(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_3beca8261641a50a677770ef041ead2b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.core.io.ClassPathResource git(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.MD5: byte[] getHash()>-><org.owasp.webgoat.challenges.challenge7.MD5$MD5State: void copy(org.owasp.webgoat.challenges.challenge7.MD5$MD5State)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge8.Challenge8: java.lang.String getTitle()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.idor.UserProfile: java.lang.String getColor()>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: java.lang.String getSha256(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getSha256(javax.servlet.http.HttpServletRequest)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_942af8461005b44270bdea32a5911bee(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.awt.Color: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.util.locale.BaseLocale: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_9d75ad58763ada3298d93581886aad7d(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.xxe.SimpleXXE: boolean checkSolution(org.owasp.webgoat.xxe.Comment)>-><org.apache.commons.lang3.StringUtils: boolean contains(java.lang.CharSequence,java.lang.CharSequence)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.chrome_dev_tools.ChromeDevTools: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_a5d4cabcacfa40b9def75dd7aa35c79b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webwolf.MvcConfiguration: void createDirectory()>-><java.io.File: boolean exists()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.idor.IDOREditOtherProfiile: void <init>()>
<org.owasp.webgoat.LessonTemplateResolver: void <init>(org.springframework.core.io.ResourceLoader)>-><java.util.HashMap: void <init>()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.UnboxedBoolean: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.DateFormatSymbols: boolean equals(java.lang.Object)>
<org.owasp.webgoat.AjaxAuthenticationEntryPoint: void commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)>-><io.undertow.servlet.spec.HttpServletResponseImpl: void sendError(int,java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.users.LessonTracker: java.lang.Boolean lambda$getLessonOverview$4(org.owasp.webgoat.lessons.Assignment)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_baa8a78a0f0703be452069385bf6bf5(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.api.callback.Event: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFLogin: void markAssignmentSolvedWithRealUser(java.lang.String)>-><synthetic.method.UserTrackerRepositoryImpl: java.lang.Object save(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.invoke.LambdaForm: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.StringBuffer: void <init>(java.lang.String)>
<com.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFLogin: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.Year: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge7.Assignment7: org.springframework.http.ResponseEntity resetPassword(java.lang.String)>
<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.io.InputStreamResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webwolf.mailbox.Email getEmailInstance()>-><org.owasp.webwolf.mailbox.Email: void setId(java.lang.Long)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><org.hsqldb.server.Server: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.field.MillisDurationField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><org.apache.commons.lang.exception.ExceptionUtils: java.lang.String getFullStackTrace(java.lang.Throwable)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String follow(java.lang.String)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.SpringApplication: org.springframework.context.ConfigurableApplicationContext run(java.lang.Class,java.lang.String[])>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.Row: boolean equals(java.lang.Object)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionAdvanced: java.lang.String getTitle()>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_79ca4bb52a10094b00bd65a04a91484c(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><io.jsonwebtoken.impl.DefaultJwtBuilder: java.lang.String compact()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties getRestClientPropertiesInstance()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void setReadTimeout(java.time.Duration)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.FieldPosition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: int getRow()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: java.lang.String getString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_b724581020ea9b622f8b51f7b23908ec(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.util.Pair: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.NamedThreadLocal: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity postForEntity(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Object[])>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getQueryString()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.ObjectName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.ProcessEnvironment$StringValues: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><org.springframework.core.env.ReadOnlySystemAttributesMap: void putAll(java.util.Map)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.Provider$Service: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webgoat.users.UserForm getUserFormInstance()>-><org.owasp.webgoat.users.UserForm: void setPassword(java.lang.String)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: boolean tableExists(java.sql.Connection)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.SimpleType: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: java.lang.String getPassword()>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><org.jruby.RubyArray: boolean add(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><io.jsonwebtoken.Jwts: io.jsonwebtoken.JwtParser parser()>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.crypto.CryptoPermission: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.util.RegexpOptions: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.Collections$UnmodifiableCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.URI: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webwolf.requests.Requests: java.lang.String toJsonString(org.springframework.boot.actuate.trace.http.HttpTrace)>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getContents()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: void callEntry_synthetic_checkDebuggingStatus(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><synthetic.method.SingletonFactory: void setLabelDebugger(org.owasp.webgoat.session.LabelDebugger)>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.AsciiDoctorTemplateResolver asciiDoctorTemplateResolver(org.owasp.webgoat.i18n.Language)>-><org.owasp.webgoat.AsciiDoctorTemplateResolver: void <init>(org.owasp.webgoat.i18n.Language)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.challenges.Flag: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.nio.charset.Charset: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.chrono.GJCacheKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.cglib.core.Signature: java.lang.String toString()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.WebSecurityConfig: void <init>(org.owasp.webgoat.users.UserService)>-><synthetic.method.SingletonFactory: org.owasp.webgoat.users.UserService getUserService()>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.user.RegistrationController: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.service.ReportCardService$ReportCard: void setNumberOfLessonsSolved(int)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanNotificationInfo: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: java.lang.String getString()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_a24fa18a7d5b45cef36ba6a570c5cbd0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.Instant: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_b3bf4f52e408e160c4f14c2f07957203(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$SingletonList: java.util.Iterator iterator()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Character$Subset: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.text.PatternEntry: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_df53fb4d12f29790332f08e175b7fc8d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.openmbean.SimpleType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_2237e0fa04090cf19623da8b6c46e327(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.field.ScaledDurationField: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webwolf.WebWolf: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_d6a08e1ebdc7d9efbbff67514b6c67b0(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.idor.UserProfile getUserProfileInstance()>-><org.owasp.webgoat.idor.UserProfile: void setColor(java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getMapping(java.lang.reflect.Method)>-><java.lang.reflect.Method: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_96c030b69efa1472588908bbc6f03e0e(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.lessons.Hint: int hashCode()>-><java.lang.String: int hashCode()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_a49f644dd94eb3528b01695500695849(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_2f9d131756139227a58526d86a475976(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.NullNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_bcaf8a7c00389b6ed6a754c3dddc453d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: void <init>()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setMode(java.lang.String)>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.List: java.util.List of()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.ansi.Ansi8BitColor: java.lang.String toString()>
<org.owasp.webgoat.xxe.Comments: void <clinit>()>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String encode(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint: byte[] getJWTSignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity checkDebuggingStatus()>-><org.owasp.webgoat.service.LabelDebugService: java.util.Map createResponse(java.lang.Boolean)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.BeanMetadataAttribute: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.session.Course: int getTotalOfAssignments()>-><java.util.stream.ReferencePipeline: java.lang.Object reduce(java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.chrono.ZonedChronology$ZonedDurationField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)>-><java.security.SecureRandom: void <init>()>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView illegalCall(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.security.Provider$ServiceKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.security.CodeSource: java.lang.String toString()>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><org.jruby.ir.runtime.IRReturnJump: java.lang.String toString()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webwolf.mailbox.Email getEmailInstance()>-><org.owasp.webwolf.mailbox.Email: void setTime(java.time.LocalDateTime)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.challenges.challenge5.Assignment5: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List getHints(java.lang.Class)>-><java.lang.Class: java.lang.annotation.Annotation[] getAnnotationsByType(java.lang.Class)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><net.bytebuddy.description.type.TypeDescription$AbstractBase: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.MonthDay: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.IRScope: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_d88928050f9927098a56d488cdbda599(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_34d1bfa4cf3fb6ea2ec476f17c99e3cd(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_731c1ba80d15d8b99d04e9b1276c8aa6(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List lessonOverview()>-><synthetic.method.UserTrackerRepositoryImpl: org.owasp.webgoat.users.UserTracker findByUser(java.lang.String)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_c4f7ae7198e5dd2563e2adda40123d1(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_b96b713d469ad010f286da3bd71f28d7(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><java.util.Collections$EmptyList: java.lang.Object get(int)>
<org.owasp.webwolf.user.UserValidator: void validate(java.lang.Object,org.springframework.validation.Errors)>-><org.owasp.webwolf.user.UserForm: java.lang.String getUsername()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.IRScriptBody: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.field.MillisDurationField: java.lang.String toString()>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: void callEntry_synthetic_checkDebuggingStatus(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity checkDebuggingStatus()>
<org.owasp.webgoat.xxe.SimpleXXE: boolean checkSolution(org.owasp.webgoat.xxe.Comment)>-><org.apache.commons.exec.OS: boolean isFamilyMac()>
<java.util.AbstractSet: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getKey()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.util.DerValue: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder status(org.springframework.http.HttpStatus)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.session.Course: java.util.List getCategories()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream sorted()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.missing_ac.MissingFunctionAC: java.lang.String getTitle()>
<org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.hibernate.internal.util.config.ConfigurationHelper: java.lang.String getString(java.lang.String,java.util.Map)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: void <clinit>()>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.users.UserValidator: void validate(java.lang.Object,org.springframework.validation.Errors)>-><org.owasp.webgoat.users.UserForm: java.lang.String getMatchingPassword()>
<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.HashMap: int size()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><org.jsoup.helper.ChangeNotifyingArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.challenges.challenge7.PasswordResetLink: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_c4c04a0abadb54531b22c76a166b07d1(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><java.util.LinkedList: java.lang.Object get(int)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_2369ea1345cdb370343dabf930476df1(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionMitigations: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.PropertyName: java.lang.String toString()>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$CharLiteralPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>
<org.owasp.webwolf.user.UserService: void <init>(org.owasp.webwolf.user.UserRepository)>-><synthetic.method.SingletonFactory: synthetic.method.UserRepositoryImpl getUserRepositoryImpl()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.AbstractMap: void putAll(java.util.Map)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.invoke.BoundMethodHandle$SpeciesData: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.jwt.JWTRefreshEndpoint getJWTRefreshEndpoint()>
<org.owasp.webgoat.insecure_login.InsecureLoginTask: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.jruby.ir.operands.LocalVariable: int compareTo(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><net.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.cglib.core.EmitUtils$5: java.lang.Object transform(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_fb6db2e926eca4bdcd97c0ea5f2eb780(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.idor.UserProfile getUserProfileInstance()>-><org.owasp.webgoat.idor.UserProfile: void setUserId(java.lang.String)>
<org.owasp.webgoat.service.SessionService: void callEntry_synthetic_showSession(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_e6f31f32607015168d5e18c8e30cffd2(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><java.util.Collections$SingletonList: java.lang.Object get(int)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setUri(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_cd8e68fce75a9004c5ca8f262e6c693d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.TreeMap$Entry: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_b0f6a8ef171aa411c3a3f21a70b52597(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: void <init>()>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.AbstractRequestMatcherRegistry: java.lang.Object anyRequest()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.jruby.RubyArray$RubyArrayConversionIterator: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.chrono.BuddhistChronology: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanOperationInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: boolean checkSolution(org.owasp.webgoat.xxe.Comment)>-><org.apache.commons.exec.OS: boolean isFamilyMac()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hibernate.metamodel.model.domain.internal.EntityTypeImpl: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.IntervalSecondData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.UserSessionData getUserSessionData()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.CryptoUtil: java.lang.String getPrivateKeyInPEM(java.security.KeyPair)>-><java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
<org.owasp.webgoat.csrf.ForgedReviews: java.util.Collection retrieveReviews()>-><com.beust.jcommander.internal.Lists: java.util.List newArrayList()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: void <init>()>-><com.beust.jcommander.internal.Lists: java.util.List newArrayList()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.SimpleTimeZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>-><java.io.File: java.lang.String getCanonicalPath()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.FieldPosition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.LessonInfoModel: void <init>(java.lang.String,boolean,boolean,boolean)>-><java.lang.Object: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_1731f925d73a36bf012d16b268fae04b(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: void <init>()>
<org.owasp.webwolf.user.RegistrationController: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><org.owasp.webwolf.user.UserForm: java.lang.String getPassword()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.jca.ProviderConfig: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.users.UserTracker: int numberOfLessonsSolved()>-><org.owasp.webgoat.users.LessonTracker: boolean isLessonSolved()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_39567d3b9fd20c575385e5280fa9d1b2(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.CodeSigner: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyHash: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.reflect.Proxy$Key1: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.reflect.WeakCache$CacheValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: void <init>(javax.sql.DataSource)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: void <init>(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory,javax.sql.DataSource)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void <init>(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webwolf.mailbox.Email getEmailInstance()>-><org.owasp.webwolf.mailbox.Email: void setTitle(java.lang.String)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.TreeMap: int size()>
<org.owasp.webgoat.users.UserService: void addUser(java.lang.String,java.lang.String)>-><org.owasp.webgoat.users.UserTracker: void <init>(java.lang.String)>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.springframework.web.servlet.ModelAndView listUsers(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.idor.UserProfile getUserProfileInstance()>-><org.owasp.webgoat.idor.UserProfile: void setAdmin(boolean)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder signWith(io.jsonwebtoken.SignatureAlgorithm,java.lang.String)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.web.context.support.WebApplicationContextUtils$FacesDependencyRegistrar$2: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.StandardSocketOptions$StdSocketOption: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.template.LessonTemplate: java.lang.String getTitle()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void initVotes()>-><org.owasp.webgoat.jwt.votes.Vote: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.ArrayNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>
<org.hibernate.MultiTenancyStrategy: org.hibernate.MultiTenancyStrategy determineMultiTenancyStrategy(java.util.Map)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_60f682d018efc9659798d72b328d1fab(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.invoke.LambdaForm$Name: boolean equals(java.lang.Object)>
<org.owasp.webwolf.requests.Requests: java.lang.String path(org.springframework.boot.actuate.trace.http.HttpTrace)>-><org.springframework.boot.actuate.trace.http.HttpTrace: org.springframework.boot.actuate.trace.http.HttpTrace$Request getRequest()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setSsl(org.springframework.boot.web.server.Ssl)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.springframework.http.MediaType: org.springframework.http.MediaType parseMediaType(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.hsqldb.jdbc.JDBCResultSet: boolean first()>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_2b5f98c3c975e9cefb796b7b27861cb5(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.io.ObjectStreamClass$FieldReflectorKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity follow(java.util.Map)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity ok(java.lang.Object)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.ClobDataID: boolean equals(java.lang.Object)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions getBypassRestrictionsFieldRestrictions()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: java.util.HashMap parseSecQuestions(javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.expression.TypedValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.HashMap: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_ec714e7a6cd002e01c65eec239822a9b(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_a35b339d1932fa2c14b7dc46c9a82c17(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.concurrent.ConcurrentHashMap: void putAll(java.util.Map)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_c9a80c347f63f59cbda1f120f308fa7a(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webwolf.user.UserForm getUserFormInstance()>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean last()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: void callEntry_synthetic_encode(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String encode(java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.runtime.Block: boolean equals(java.lang.Object)>
<org.owasp.webgoat.session.UserSessionData: void setValue(java.lang.String,java.lang.Object)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.users.RegistrationController getRegistrationController()>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_81bcd09ce51ed1bc40d6013cf3f8e4ab(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.lessons.LessonMenuItemType: void <init>(java.lang.String,int)>-><java.lang.Enum: void <init>(java.lang.String,int)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_9dc3f30b98c751837c0f8ba9fa0acdc7(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_7b4ba2a6c21e1a51e3a7ea44570f3eff(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_a3da66f27cfd47baaaed8885971d28f3(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: void <init>()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.cia.CIA: void <init>()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.hibernate.QueryException: java.lang.String getMessage()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String substring(int,int)>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: void close()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: java.util.List usersService(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.users.UserService: java.util.List getAllUsers()>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webwolf.user.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.nio.file.InvalidPathException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_59fb32f6acb84df323f079e4ece9ab7d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: void <init>()>
<org.owasp.webwolf.user.UserValidator: void <init>(org.owasp.webwolf.user.UserRepository)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Collections$UnmodifiableMap: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity getVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.zone.ZoneOffsetTransitionRule: java.lang.String toString()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.client_side_filtering.ClientSideFiltering: void <init>()>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><javax.management.openmbean.TabularDataSupport: void putAll(java.util.Map)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: void <init>(javax.sql.DataSource)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: void <init>(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory,javax.sql.DataSource)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><com.google.common.collect.Maps$10: java.lang.Object getKey()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.cglib.core.MethodInfo: java.lang.String toString()>
<org.owasp.webgoat.service.LabelService: org.springframework.http.ResponseEntity fetchLabels(java.lang.String)>-><org.springframework.http.ResponseEntity: void <init>(java.lang.Object,org.springframework.http.HttpStatus)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.CharacterType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.assignments.AttackResult: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String,boolean)>-><org.apache.commons.lang3.StringEscapeUtils: java.lang.String escapeJson(java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.context.support.AbstractApplicationContext: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_aebb121ab3c1c7dd79d810b834f2134a(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.session.UserSessionData: java.lang.Object getValue(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.TabularDataSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void <clinit>()>-><java.security.SecureRandom: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_27af345c61f1ec563d046cf1b013603a(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.insecure_login.InsecureLogin: void <init>()>
<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.Type: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.io.FilePermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.web.context.support.WebApplicationContextUtils$RequestObjectFactory: java.lang.String toString()>
<org.owasp.webwolf.requests.WebWolfTraceRepository: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_c8c1732ea9a5b75f73076ee7a0b80ce0(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webwolf.mailbox.MailboxController: org.springframework.web.servlet.ModelAndView mail()>-><org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hibernate.dialect.function.StandardSQLFunction: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setCheckTemplate(boolean)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.secure_password.SecurePasswords: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webwolf.WebSecurityConfig: org.springframework.security.crypto.password.NoOpPasswordEncoder passwordEncoder()>-><org.springframework.security.crypto.password.NoOpPasswordEncoder: org.springframework.security.crypto.password.PasswordEncoder getInstance()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.beans.factory.support.GenericBeanDefinition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.Users$5: void <init>(org.owasp.webgoat.missing_ac.Users,java.lang.Exception)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String nextFieldName()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.springframework.web.util.UriUtils: java.lang.String lambda$encodeUriVariables$1(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.AllPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><org.owasp.webgoat.session.UserSessionData: java.lang.Object getValue(java.lang.String)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.concurrent.ConcurrentHashMap: int size()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.FrozenString: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8 getSqlInjectionLesson8()>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.RegularEnumSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.UUID: java.lang.String toString()>
<org.owasp.webgoat.service.ReportCardService: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.Course,org.owasp.webgoat.i18n.PluginMessages)>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><org.springframework.boot.actuate.trace.http.HttpTrace: org.springframework.boot.actuate.trace.http.HttpTrace$Request getRequest()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.Type: boolean equals(java.lang.Object)>
<org.hibernate.tool.schema.Action: org.hibernate.tool.schema.Action interpretJpaSetting(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.ReportCardService: void callEntry_synthetic_reportCard(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_4f1046997c22d0e2ff9da20ea436a854(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_be41e32e4e6663a1e6dcd67bab2ce6f4(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$SingletonList: java.util.Iterator iterator()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.i18n.PluginMessages pluginMessages(org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.Language)>-><org.springframework.context.support.AbstractResourceBasedMessageSource: void setFallbackToSystemLocale(boolean)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object)>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.xxe.ContentTypeAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: java.util.List invoke(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_eb2b6a6bd1fa8a1648c4310392fed6e8(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: java.util.List compileFromString(java.lang.String)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: javax.tools.SimpleJavaFileObject getJavaFileContentsAsString(java.lang.String)>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.JsonMappingException$Reference: java.lang.String toString()>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.StackTraceElement: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.RuleBasedCollator: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.base.AbstractInstant: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.logging.Level: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.asm.Label: java.lang.String toString()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.owasp.webgoat.users.WebGoatUser addUser(org.owasp.webgoat.users.WebGoatUser)>-><org.owasp.webgoat.users.UserService: void addUser(java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.TimestampData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.YearMonth: java.lang.String toString()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.xss.CrossSiteScriptingQuiz: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.ser.BeanSerializer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.DurationFieldType$StandardDurationFieldType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.nio.charset.CoderResult: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.missing_ac.Users$2: void <init>(org.owasp.webgoat.missing_ac.Users,java.util.HashMap)>-><java.util.HashMap: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_4070d9997a61a1720965dc6843b50885(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword getResetLinkAssignmentForgotPassword()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity postForEntity(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Object[])>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String toHex(byte[])>-><java.lang.StringBuffer: void <init>(int)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><ch.qos.logback.core.joran.spi.HostClassAndPropertyDouble: boolean equals(java.lang.Object)>
<org.hibernate.engine.config.spi.StandardConverters$1: java.lang.Boolean convert(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.hibernate.ConnectionAcquisitionMode: org.hibernate.ConnectionAcquisitionMode interpret(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: void callEntry_synthetic_getMd5(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getMd5(javax.servlet.http.HttpServletRequest)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.IntervalSecondData: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.crypto.SigningAssignment: void <init>()>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.reflect.Method: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.beans.factory.support.NullBean: boolean equals(java.lang.Object)>
<org.owasp.webgoat.i18n.PluginMessages: java.lang.String getMessage(java.lang.String,java.lang.Object[])>-><org.springframework.context.support.AbstractMessageSource: java.lang.String getMessage(java.lang.String,java.lang.Object[],java.util.Locale)>
<org.hibernate.tool.schema.Action: org.hibernate.tool.schema.Action interpretHbm2ddlSetting(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getValue()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.owasp.webgoat.assignments.AttackResult click(java.lang.String)>
<org.hibernate.tool.schema.Action: org.hibernate.tool.schema.Action interpretHbm2ddlSetting(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.users.RegistrationController: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.stream.SpinedBuffer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyFloat: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><org.owasp.webgoat.csrf.CSRFFeedback: boolean requestContainsWebGoatCookie(javax.servlet.http.Cookie[])>
<com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: void <init>(javax.sql.DataSource)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: void <init>(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory,javax.sql.DataSource)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Character: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.context.support.AbstractApplicationContext: java.lang.String toString()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.Salaries: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.text.AttributeEntry: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity follow(java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.hibernate.tool.schema.internal.Helper: org.hibernate.tool.schema.spi.ScriptSourceInput interpretScriptSourceSetting(java.lang.Object,org.hibernate.boot.registry.classloading.spi.ClassLoaderService,java.lang.String)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.LinkedHashMap: java.util.Collection values()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><net.bytebuddy.description.method.MethodDescription$AbstractBase: java.lang.String toString()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.font.AttributeValues: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.aop.support.DefaultIntroductionAdvisor: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.DecimalFormat: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.config.BeanExpressionContext: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.UTCDateTimeZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.ProcessEnvironment$Value: boolean equals(java.lang.Object)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.http_basics.HttpBasics: java.lang.String getTitle()>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.LocalTime: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_1ed88fb4829ed5c2555ea51ac17cec64(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.service.LabelDebugService: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getKey()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_731c1ba80d15d8b99d04e9b1276c8aa6(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Nil: java.lang.String toString()>
<org.owasp.webwolf.requests.Requests: org.springframework.web.servlet.ModelAndView get()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<java.util.TreeMap$Entry: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><java.io.File: boolean exists()>
<org.owasp.webgoat.challenges.Email: int hashCode()>-><java.time.LocalDateTime: int hashCode()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.UserSessionData getUserSessionData()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><net.bytebuddy.description.annotation.AnnotationValue$ForConstant: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_72cb7e3e6d59b6c617bac5772aceb12a(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.UserProfile: java.util.Map profileToMap()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: void printStackTrace()>
<org.owasp.webgoat.lessons.Assignment: void <init>(java.lang.String,java.lang.String,java.util.List)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webwolf.mailbox.MailboxController: org.springframework.web.servlet.ModelAndView mail()>-><org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Object getPrincipal()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.idor.IDOR: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><java.io.File: java.io.File[] listFiles()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webwolf.requests.Requests: java.lang.String path(org.springframework.boot.actuate.trace.http.HttpTrace)>-><org.springframework.boot.actuate.trace.http.HttpTrace$Request: java.net.URI getUri()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.idor.IDOREditOtherProfiile: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.apache.logging.log4j.Level: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_b255d7ae89f34c188fd16afa53812fe6(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: void <init>()>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: void <init>()>
<org.springframework.cglib.core.EmitUtils$5: java.lang.Object transform(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.Year: boolean equals(java.lang.Object)>
<org.owasp.webgoat.i18n.PluginMessages: void <init>(org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.Language)>-><org.springframework.context.support.AbstractResourceBasedMessageSource: void setBasename(java.lang.String)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.auth_bypass.VerifyAccount: void <init>()>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.SigningAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.temporal.IsoFields$Field$2: java.lang.String toString()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><ch.qos.logback.core.subst.Node: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Bound: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getHeader(java.lang.String)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_2975fae2504559e63b7039cecde4ac12(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.chrono.GJChronology: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.String lambda$getVotes$0(java.util.Map$Entry)>-><com.google.common.collect.ImmutableEntry: java.lang.Object getKey()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><sun.misc.CompoundEnumeration: boolean hasMoreElements()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_9d75ad58763ada3298d93581886aad7d(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Double: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_480ad9b8e2b965de7b428571c66c5383(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.ChallengeIntro: java.lang.String getTitle()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity$BodyBuilder contentType(org.springframework.http.MediaType)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.joda.time.chrono.LimitChronology$LimitException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_c4d94587585d8403c6a6c40cdc70c8ea(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>
<org.owasp.webgoat.auth_bypass.VerifyAccount: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.auth_bypass.VerifyAccount: java.util.HashMap parseSecQuestions(javax.servlet.http.HttpServletRequest)>
<org.hibernate.loader.BatchFetchStyle: org.hibernate.loader.BatchFetchStyle interpret(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Label: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: void <init>(org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: void <init>()>
<org.jruby.ir.operands.LocalVariable: int compareTo(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.validation.FieldError: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.csrf.CSRF: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><ch.qos.logback.core.joran.spi.ElementSelector: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.service.HintService: void callEntry_synthetic_getHints(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.service.HintService: java.util.List getHints()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.awt.image.PackedColorModel: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Date: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.support.GenericBeanDefinition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity build()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.javasupport.binding.AssignedName: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>-><java.io.File: java.io.File getCanonicalFile()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_6f6959aa4b645fa8460dfa4ef8464205(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.core.io.ClassPathResource git(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.annotation.web.configurers.ExceptionHandlingConfigurer exceptionHandling()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.util.RegexpOptions: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.field.MillisDurationField: boolean equals(java.lang.Object)>
<synthetic.method.UserTrackerRepositoryImpl: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.users.UserTracker: int numberOfLessonsSolved()>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.UUID: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_a7a0ccc1a0e7ef21c5d5765c798e2676(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.springframework.cglib.core.EmitUtils$5: java.lang.Object transform(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_579f1e70c92bac1dfa783f4d7cfd791b(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><jnr.constants.platform.Signal: java.lang.String toString()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.HashSet: java.util.Iterator iterator()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<synthetic.method.SecurityWebFilterChainImpl: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_7b511cd3fa59e592bbbb2dd30c66dd84(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: org.owasp.webgoat.users.LessonTracker getLessonTracker(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.users.LessonTracker: void <init>(org.owasp.webgoat.lessons.Lesson)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity follow(java.util.Map)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity build()>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><java.lang.String: byte[] getBytes(java.lang.String)>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.lessons.Assignment: void <init>(java.lang.String,java.lang.String,java.util.List)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setDatabase(java.lang.String)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.BlobDataID: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_a6f1a647bec074dc45b8f4c43e3724b4(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Formatter$FormatSpecifier: java.lang.String toString()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webwolf.mailbox.MailboxController: void <init>(org.owasp.webwolf.mailbox.MailboxRepository)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: void callEntry_synthetic_start(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView start()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_bc65949fdb792c0043d6c690b1ece1b1(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_83d698e8f6d09bbe1d0f133ba4f09763(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.crypto.HashingAssignment: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.jar.Manifest: boolean equals(java.lang.Object)>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: void callEntry_synthetic_decode(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String decode(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Enum: boolean equals(java.lang.Object)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><synthetic.method.UserTrackerRepositoryImpl: org.owasp.webgoat.users.UserTracker findByUser(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: java.util.List usersService(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.missing_ac.DisplayUser: void <init>(org.owasp.webgoat.users.WebGoatUser)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_b96b713d469ad010f286da3bd71f28d7(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.joda.time.chrono.LimitChronology$LimitException: java.lang.String getMessage()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.xxe.Comments: java.util.Collection getComments()>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.type.MapType: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Boolean: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_61c4547819c4ecf2ac6f8317186de093(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.nio.ch.ExtendedSocketOption$1: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_18362482a767f7de3d037588a097d79c(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String nextFieldName()>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.env.PropertySource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponents: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webwolf.mailbox.Email: boolean equals(java.lang.Object)>-><java.lang.Long: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.introduction.WebGoatIntroduction: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.UnboxedBoolean: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.OffsetTime: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><jnr.ffi.Platform$CPU: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.io.File: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_e89bf2204dc61296ece810e537a88d52(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: void <init>()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.zone.ZoneOffsetTransitionRule: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.StringLiteral: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Rational: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask1: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.SimpleDateFormat: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjection: void <init>()>
<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_e6d1d0225cc44c016d1bab4d099b821a(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.JwtParser setSigningKey(java.lang.String)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.crypto.SecureDefaultsAssignment: void <init>()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.TreeMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_1d75855a45e8db3073286c7f5a5efa0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><java.util.Calendar: java.util.Date getTime()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.password_reset.QuestionsAssignment: org.owasp.webgoat.assignments.AttackResult passwordReset(java.util.Map)>-><java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.util.locale.BaseLocale: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_140e60de5f8394cf9e500c5cfb7ff2bf(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.missing_ac.DisplayUser: java.lang.String genUserHash(java.lang.String,java.lang.String)>-><java.lang.String: byte[] getBytes(java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: boolean lambda$getMapping$3(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.classic.joran.ReconfigureOnChangeTask: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: java.lang.String getPassword()>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.MemberName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setUsername(java.lang.String)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.temporal.WeekFields$ComputedDayOfField: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.HashMap: java.util.Set entrySet()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_a304b23bb5f6d0733abf280964e998f6(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Vector$Itr: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.LocalDate: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_b37dd4209e27591e2cbabbf7f14216f5(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: java.lang.Object get(java.lang.Object)>
<org.hibernate.ConnectionAcquisitionMode: org.hibernate.ConnectionAcquisitionMode interpret(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.Parsed: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getPath(java.lang.Class)>-><org.owasp.webgoat.lessons.CourseConfiguration: boolean methodReturnTypeIsOfTypeAttackResult(java.lang.reflect.Method)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_dc7ca2c6295d2288190f4c7a0a33a9f5(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: void <init>()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.users.RegistrationController: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.users.UserService: void addUser(java.lang.String,java.lang.String)>
<org.owasp.webgoat.csrf.CSRFLogin: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest)>-><java.lang.String: int length()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<java.text.AttributeEntry: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.util.ObjectIdentifier: java.lang.String toString()>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.session.WebSession: void setCurrentLesson(org.owasp.webgoat.lessons.Lesson)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.text.DigitList: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String nextFieldName()>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_abf9bdf6f04c88285a1ff5e9f9d74077(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.AsciiDoctorTemplateResolver asciiDoctorTemplateResolver(org.owasp.webgoat.i18n.Language)>-><org.thymeleaf.templateresolver.AbstractTemplateResolver: void setOrder(java.lang.Integer)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.util.RegexpOptions: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription$WithUnknownConstant: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder sender(java.lang.String)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.csrf.ForgedReviews: void <clinit>()>-><java.util.HashMap: void <init>()>
<org.hsqldb.persist.Cache$CachedObjectComparator: int hashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.javasupport.JavaClass: boolean equals(java.lang.Object)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><java.io.File: boolean exists()>
<org.hibernate.tool.schema.Action: org.hibernate.tool.schema.Action interpretHbm2ddlSetting(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.flywaydb.core.internal.database.base.SchemaObject: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<org.hsqldb.types.CharacterType: java.lang.String convertJavaTimeObject(org.hsqldb.SessionInterface,java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.PreparedStatement prepareStatement(java.lang.String)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><synthetic.method.FilterChainImpl: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.context.support.ApplicationListenerDetector: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webwolf.user.WebGoatUser: boolean isAccountNonLocked()>-><org.springframework.security.core.userdetails.User: boolean isAccountNonLocked()>
<org.owasp.webwolf.requests.Requests: org.springframework.web.servlet.ModelAndView get()>-><org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.idor.UserProfile: java.util.Map profileToMap()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.zone.ZoneRules: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.service.LabelDebugService: void <init>(org.owasp.webgoat.session.LabelDebugger)>
<org.owasp.webgoat.crypto.Crypto: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getHash(java.lang.String,java.lang.String)>-><java.lang.String: byte[] getBytes()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_a49f644dd94eb3528b01695500695849(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringKeySet$1: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_aaaa06d6f57ec3716366865197439c4a(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_24329ea220282535753950f08c5c8b40(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hibernate.QueryException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: boolean check_text(java.lang.String,java.lang.String)>-><java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity getVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$EmptyList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.core.util.WeakCache: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_1dd97e3e23d00372c3834b03cd93689d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Hash: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.asm.ConstantDynamic: boolean equals(java.lang.Object)>
<org.hibernate.ConnectionReleaseMode: org.hibernate.ConnectionReleaseMode interpret(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.xss.stored.StoredXssComments: java.util.Collection retrieveComments()>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.ZoneId: java.lang.String toString()>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.DigitList: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_3d9fa3f5407bb4983db201b95ffe3825(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: void <init>()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_579f1e70c92bac1dfa783f4d7cfd791b(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean first()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_3854d6bbdad8afb65519deb711581fb1(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.xxe.ContentTypeAssignment: boolean checkSolution(org.owasp.webgoat.xxe.Comment)>-><org.owasp.webgoat.xxe.Comment: java.lang.String getText()>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.client_side_filtering.Salaries: void copyFiles()>-><org.springframework.core.io.ClassPathResource: void <init>(java.lang.String)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xss.stored.CrossSiteScriptingStored: java.lang.String getTitle()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.springframework.web.servlet.ModelAndView listUsers(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: void setViewName(java.lang.String)>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.logging.Level: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.session.Course: java.lang.Integer lambda$getTotalOfAssignments$2(java.lang.Integer,org.owasp.webgoat.lessons.Lesson)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><org.springframework.util.LinkedMultiValueMap: int size()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: void <init>(org.springframework.web.client.RestTemplate,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.representations.ExceptionRegion: java.lang.String toString()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.ssrf.SSRFTask1: void <init>()>
<org.owasp.webwolf.user.WebGoatUser: boolean isAccountNonExpired()>-><org.springframework.security.core.userdetails.User: boolean isAccountNonExpired()>
<java.util.concurrent.CopyOnWriteArraySet: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties getConfigurationPropertiesReportEndpointPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties: void <init>()>
<org.owasp.webgoat.MvcConfiguration: org.springframework.web.servlet.LocaleResolver localeResolver()>-><org.springframework.web.servlet.i18n.SessionLocaleResolver: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_894a288f909d7918f87514b31925da29(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webwolf.mailbox.Email getEmailInstance()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hibernate.tool.schema.Action: java.lang.String toString()>
<org.owasp.webgoat.service.LabelService: org.springframework.http.ResponseEntity fetchLabels(java.lang.String)>-><org.owasp.webgoat.i18n.Messages: java.util.Properties getMessages()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.LessonInfoService: void callEntry_synthetic_getLessonInfo(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.DecimalNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.Expression: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: void callEntry_synthetic_getSha256(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_df92e54a962c15e10791d2e79d154fb6(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: void <init>()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.csrf.CSRFGetFlag: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.YearMonth: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder setExpiration(java.util.Date)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.session.Course: void <init>(java.util.List)>-><java.lang.Object: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_b2b5e0e97eb81e194238306f8891fb62(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webwolf.user.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity defaultImage()>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.sun.jmx.mbeanserver.WeakIdentityHashMap$IdentityWeakReference: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getContents()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder title(java.lang.String)>
<org.owasp.webwolf.mailbox.Email: java.lang.String toString()>-><org.owasp.webwolf.mailbox.Email: java.lang.String getContents()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.assignments.LessonTrackerInterceptor: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.WebSession)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyHash$BaseIterator: java.lang.Object next()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><java.util.Base64$Encoder: byte[] encode(byte[])>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.OffsetDateTime: boolean equals(java.lang.Object)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.ModelAndView mail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.StringBuffer getRequestURL()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_72eee1733808c2edbcf079cc759548(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.util.LinkedMultiValueMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.chrome_dev_tools.NetworkDummy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><java.io.File: void <init>(java.lang.String,java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_de81d487ddedc60c3c2155505051fca9(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Boolean: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.SimpleXXE: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>-><java.text.SimpleDateFormat: void <init>(java.lang.String)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.Scoreboard: java.util.List getRankings()>-><synthetic.method.UserRepositoryImpl: java.util.List findAll()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.DateFormatSymbols: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<org.hibernate.loader.BatchFetchStyle: org.hibernate.loader.BatchFetchStyle interpret(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.UnboxedFloat: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.HashMap$Node: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.password_reset.QuestionsAssignment: void callEntry_synthetic_passwordReset(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.missing_ac.MissingFunctionACUsers: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.locks.AbstractQueuedSynchronizer: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.insecure_login.InsecureLoginTask: void <init>()>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.AsString: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.challenges.Email$EmailBuilder: org.owasp.webgoat.challenges.Email$EmailBuilder time(java.time.LocalDateTime)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.MBeanAttributeInfo: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_23d4d32a045c04a12395dfd3b773a88f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: boolean add(java.lang.Object)>
<org.hibernate.ConnectionAcquisitionMode: org.hibernate.ConnectionAcquisitionMode interpret(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_76247a0f1eed4dc37c44e5cc8a0c984f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: void callEntry_synthetic_retrieveReviews(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.csrf.ForgedReviews: java.util.Collection retrieveReviews()>
<org.owasp.webwolf.mailbox.Email: java.lang.String toString()>-><org.owasp.webwolf.mailbox.Email: java.lang.Long getId()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.PropertyPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean canEqual(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity ok(java.lang.Object)>
<org.owasp.webgoat.i18n.Language: void <init>(org.springframework.web.servlet.LocaleResolver)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.NullNode: boolean equals(java.lang.Object)>
<org.owasp.webwolf.MvcConfiguration: void createDirectory()>-><java.io.File: void <init>(java.lang.String)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.templateresolver.ITemplateResolver springThymeleafTemplateResolver(org.springframework.context.ApplicationContext)>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setCacheable(boolean)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl getIDORViewOwnProfileAltUrl()>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: java.util.List invoke(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_4f1046997c22d0e2ff9da20ea436a854(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.HashMap: boolean containsKey(java.lang.Object)>
<org.owasp.webgoat.template.SampleAttack: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.xss.Comment: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: void callEntry_synthetic_retrieveReviews(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.service.HintService: org.owasp.webgoat.lessons.Hint lambda$createHint$2(org.owasp.webgoat.lessons.Assignment,java.lang.String)>-><org.owasp.webgoat.lessons.Assignment: java.lang.String getPath()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean add(java.lang.Object)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hibernate.dialect.function.StandardSQLFunction: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<org.springframework.beans.factory.support.PropertiesBeanDefinitionReader: void registerBeanDefinition(java.lang.String,java.util.Map,java.lang.String,java.lang.String)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.hibernate.QueryException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<java.lang.Object: java.lang.String toString()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a getSqlInjectionLesson6a()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: java.lang.String getPassword(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: java.lang.String getPassword()>
<org.owasp.webgoat.challenges.Flag: void lambda$initFlags$0(int)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Hashtable$Entry: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nullOrToString(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.xxe.SimpleXXE: void callEntry_synthetic_createNewComment(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.controller.StartLesson: boolean lambda$lessonPage$0(java.lang.String,org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Lesson: java.lang.String getId()>
<org.owasp.webgoat.session.Course: java.lang.Integer lambda$getTotalOfAssignments$2(java.lang.Integer,org.owasp.webgoat.lessons.Lesson)>-><java.lang.Integer: int intValue()>
<org.owasp.webwolf.requests.Requests: void <init>(org.owasp.webwolf.requests.WebWolfTraceRepository,com.fasterxml.jackson.databind.ObjectMapper)>-><java.lang.Object: void <init>()>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webwolf.mailbox.Email: java.lang.String getTime()>-><java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.DecimalFormat: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.MethodType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><org.owasp.webgoat.xxe.Comment: void setDateTime(java.lang.String)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: org.springframework.security.config.annotation.web.configurers.LogoutConfigurer permitAll()>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean)>-><org.springframework.http.ResponseEntity: void <init>(java.lang.Object,org.springframework.http.HttpStatus)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.awt.image.IndexColorModel: java.lang.String toString()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.crypto.CryptoAllPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.license.Edition: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_83e580e5d3d4b26ac5731e50fb017174(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.MessageFormat: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_b34580ef7b394d2502bde736d73450d0(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.service.ReportCardService: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.Course,org.owasp.webgoat.i18n.PluginMessages)>-><synthetic.method.SingletonFactory: synthetic.method.UserTrackerRepositoryImpl getUserTrackerRepositoryImpl()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.chrono.LimitChronology$LimitException: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.i18n.PluginMessages: java.lang.String getMessage(java.lang.String,java.lang.Object[])>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(java.lang.String,java.lang.String)>-><java.util.Base64: java.util.Base64$Encoder getEncoder()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.format.InternalParserDateTimeParser: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.sun.jmx.mbeanserver.WeakIdentityHashMap$IdentityWeakReference: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult: java.lang.String getOutput()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webwolf.MvcConfiguration: void addResourceHandlers(org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry)>-><org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry: org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration addResourceHandler(java.lang.String[])>
<org.owasp.webgoat.session.WebSession: void <init>()>-><org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Object getPrincipal()>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getHash(java.lang.String,java.lang.String)>-><javax.xml.bind.DatatypeConverter: java.lang.String printHexBinary(byte[])>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.challenges.Email: org.owasp.webgoat.challenges.Email$EmailBuilder builder()>-><org.owasp.webgoat.challenges.Email$EmailBuilder: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Hashtable: java.lang.String toString()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity follow(java.util.Map)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: java.util.Optional getLessonTracker(java.lang.String)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.StringCharacterIterator: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.io.support.EncodedResource: java.lang.String toString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder setAudience(java.lang.String)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView illegalCall(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.ZoneOffset: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.io.BufferedReader: void <init>(java.io.Reader)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.invoke.LambdaFormEditor$Transform: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.MessageDigest: java.lang.String toString()>
<org.owasp.webgoat.service.ReportCardService$ReportCard: void <init>(org.owasp.webgoat.service.ReportCardService)>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties getHttpTracePropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties: void setInclude(java.util.Set)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><io.jsonwebtoken.impl.JwtMap: int size()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.joda.time.chrono.LimitChronology$LimitException: java.lang.String getMessage()>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView start(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView start()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String decode(java.lang.String)>-><java.lang.String: java.lang.String substring(int,int)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.reflect.Parameter: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void initVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint: void initVotes()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.util.RawValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: void <init>()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_691c5c164663f9aacd52488571cdeaf3(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.reflect.WeakCache$CacheKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.ZonedDateTime: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.xxe.XXE: void <init>()>
<org.owasp.webgoat.users.RegistrationController: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Self: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.javasupport.JavaAccessibleObject: java.lang.String toString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.EnumMap$1: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.beans.factory.support.RootBeanDefinition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: int executeUpdate(java.lang.String)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.path_traversal.ProfileUploadFix: void <init>(java.lang.String,org.owasp.webgoat.session.WebSession)>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.util.locale.BaseLocale: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<org.owasp.webgoat.MvcConfiguration: void addResourceHandlers(org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry)>-><org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration: org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration addResourceLocations(java.lang.String[])>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.runtime.ivars.VariableAccessor: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_cd8e68fce75a9004c5ca8f262e6c693d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: void callEntry_synthetic_createNewUser(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.xxe.ContentTypeAssignment: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.template.SampleAttack: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.beans.factory.config.BeanDefinitionHolder: boolean equals(java.lang.Object)>
<org.owasp.webgoat.AsciiDoctorTemplateResolver: void <clinit>()>-><org.asciidoctor.Asciidoctor$Factory: org.asciidoctor.Asciidoctor create()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><io.jsonwebtoken.impl.JwtMap: int size()>
<org.owasp.webwolf.WebSecurityConfig: void configureGlobal(org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder)>-><org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder: org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer userDetailsService(org.springframework.security.core.userdetails.UserDetailsService)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.FrozenString: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.IntervalMonthData: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.RubyFile: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_d259dde63e1d8d2b102e21ceaee4e993(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String toHex(byte[])>-><java.lang.Integer: java.lang.String toHexString(int)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_fff6eea96df930dd3cc727c4d656ab94(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$LocalizedPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: void <clinit>()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.java.proxies.ArrayJavaProxy: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hibernate.QueryException: java.lang.String getMessage()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<java.util.AbstractList: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.MBeanOperationInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.users.WebGoatUser: void createUser()>-><org.owasp.webgoat.users.WebGoatUser: java.util.Collection getAuthorities()>
<org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: java.lang.String getName()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<org.springframework.web.util.HierarchicalUriComponents: void lambda$getQuery$0(java.lang.StringBuilder,java.lang.String,java.util.List)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_89505e4ce2842fff5889bc72c7df5077(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.annotation.AnnotationDescription$AbstractBase: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.zip.ZipEntry: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.Servers: void <init>(javax.sql.DataSource)>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_7bc033d1d93a495881441ddddbe3c4d8(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.users.UserTracker: java.util.Optional getLessonTracker(java.lang.String)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.lang.Float: float parseFloat(java.lang.String)>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.springframework.web.servlet.ModelAndView listUsers(javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.reflect.Proxy$Key1: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.awt.Color: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><jnr.constants.platform.RLIMIT: java.lang.String toString()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><java.util.AbstractList$Itr: boolean hasNext()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: javax.tools.SimpleJavaFileObject getJavaFileContentsAsString(java.lang.String)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$JavaObjectFromString: void <init>(org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b,java.lang.String,java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.hibernate.internal.util.config.ConfigurationHelper: java.lang.String getString(java.lang.String,java.util.Map)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><jdk.net.ExtendedSocketOptions$ExtSocketOption: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.xss.stored.StoredXssComments: void <clinit>()>-><java.util.HashMap: void <init>()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.LessonTemplateResolver lessonTemplateResolver(org.springframework.core.io.ResourceLoader)>-><org.owasp.webgoat.LessonTemplateResolver: void <init>(org.springframework.core.io.ResourceLoader)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_663585424430d58306b65b77dc91a082(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.AbstractRequestMatcherRegistry: java.lang.Object antMatchers(java.lang.String[])>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><io.undertow.servlet.spec.HttpSessionImpl: long getCreationTime()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.Collections$SynchronizedCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.apache.logging.log4j.spi.Provider: boolean equals(java.lang.Object)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xxe.XXE: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.openmbean.ArrayType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.springframework.web.util.UriUtils: java.lang.String lambda$encodeUriVariables$1(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.hibernate.engine.config.spi.StandardConverters$1: java.lang.Boolean convert(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: void callEntry_synthetic_getPrivateKey(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.crypto.SigningAssignment: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.io.InputStreamResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.status.StatusBase: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.idor.IDORDiffAttributes: void <init>()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.path_traversal.PathTraversal: void <init>()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.tz.CachedDateTimeZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.ssrf.SSRFTask1: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Thread$WeakClassKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity checkDebuggingStatus(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity checkDebuggingStatus()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_32754814b6ccfb7639f5bcef67bea412(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.cglib.core.ClassInfo: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Hashtable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.jar.Attributes: java.lang.Object get(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_9b92bb8d921e00b82bea38dd3be5d010(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Boolean,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.Boolean: boolean booleanValue()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.io.xml.DomDriver: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.ImmutableDescriptor: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_a24fa18a7d5b45cef36ba6a570c5cbd0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><java.net.URI: java.lang.String getQuery()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.awt.Color: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.ProcessEnvironment$StringEntrySet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: java.util.List getRankings(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.beans.factory.support.NullBean: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$1: void <init>(org.owasp.webgoat.jwt.JWTFinalEndpoint,java.lang.String[])>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.locale.BaseLocale: boolean equals(java.lang.Object)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.io.ObjectStreamClass: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.annotation.AnnotationValue$ForConstant: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><com.google.common.collect.ImmutableEntry: java.lang.Object getValue()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.HashMap$Node: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_fa92c0cce8ba32dbac5cead17c2ed19d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: int getRow()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.javasupport.JavaArray: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><java.io.File: void <init>(java.lang.String,java.lang.String)>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<java.util.EnumMap: int entryHashCode(int)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.xxe.Comments: java.util.Collection getComments()>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity checkDebuggingStatus()>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity defaultImage()>-><java.util.Base64$Encoder: byte[] encode(byte[])>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_1edb7eeb876b265911846d48973d772b(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: void <clinit>()>-><java.util.Random: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><io.micrometer.core.instrument.ImmutableTag: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.JumboEnumSet: boolean equals(java.lang.Object)>
<javax.management.modelmbean.DescriptorSupport: java.lang.String[] getFields()>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_833957c1bcddba76f8f8123a68c08f9d(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.stream.StreamSpliterators$AbstractWrappingSpliterator: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.atomic.AtomicReference: java.lang.String toString()>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.idor.UserProfile: int getRole()>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: java.util.Properties getProperties()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.HashMap: boolean containsKey(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.Period: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>-><java.io.File: java.io.File getParentFile()>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.xxe.Comments: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean last()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: boolean attemptWasMade(java.io.File,java.io.File)>-><java.io.File: java.lang.String getCanonicalPath()>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.JumboEnumSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: void <init>(org.owasp.webgoat.i18n.PluginMessages)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.DeserializationFeature)>
<org.owasp.webgoat.users.UserTracker: void reset(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.users.LessonTracker: void reset()>
<org.owasp.webgoat.lessons.CourseConfiguration: boolean methodReturnTypeIsOfTypeAttackResult(java.lang.reflect.Method)>-><java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.SimpleDateFormat: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonInfoService: org.owasp.webgoat.lessons.LessonInfoModel getLessonInfo()>-><org.owasp.webgoat.lessons.LessonInfoModel: void <init>(java.lang.String,boolean,boolean,boolean)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.sun.beans.WildcardTypeImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.format.InternalParserDateTimeParser: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity defaultImage()>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity body(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.template.LessonTemplate: java.lang.String getTitle()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<java.util.TreeMap$Entry: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: java.util.List lessonOverview(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORLogin: void <init>()>-><com.fasterxml.jackson.core.util.InternCache: void <init>()>
<org.owasp.webgoat.challenges.challenge7.MD5: void update(org.owasp.webgoat.challenges.challenge7.MD5$MD5State,byte[],int,int)>-><org.owasp.webgoat.challenges.challenge7.MD5: int[] decode(byte[],int,int)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><io.undertow.servlet.spec.HttpServletResponseImpl: void setContentType(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.RubyObject: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><org.owasp.webgoat.sql_injection.mitigation.Servers$Server: void <init>(org.owasp.webgoat.sql_injection.mitigation.Servers,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$StringLiteralPrinterParser: java.lang.String toString()>
<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getMd5(javax.servlet.http.HttpServletRequest)>-><java.security.MessageDigest: void update(byte[])>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.awt.image.ColorModel: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.UnsynchronizedAppenderBase: java.lang.String toString()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.service.SessionService: void <init>()>
<org.owasp.webwolf.requests.Requests: org.springframework.web.servlet.ModelAndView get()>-><org.springframework.security.core.context.SecurityContextImpl: org.springframework.security.core.Authentication getAuthentication()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_a4a31af948081dd94f966c8850d6b217(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$AuthorizedUrl: org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry permitAll()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.nio.file.InvalidPathException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>
<org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.service.LessonProgressService: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.WebSession)>-><synthetic.method.SingletonFactory: synthetic.method.UserTrackerRepositoryImpl getUserTrackerRepositoryImpl()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.MemberName: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.ReportCardService: void callEntry_synthetic_reportCard(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_aa11e7c0aec04acf2a7467531fb87182(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.temporal.IsoFields$Field$3: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: org.owasp.webgoat.session.Course course()>-><org.owasp.webgoat.session.Course: void <init>(java.util.List)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String decode(java.lang.String)>-><io.jsonwebtoken.impl.AbstractTextCodec: java.lang.String decodeToString(java.lang.String)>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.session.Course: java.util.List getLessons()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.net.URL: boolean equals(java.lang.Object)>
<org.hibernate.tool.schema.SourceType: org.hibernate.tool.schema.SourceType interpret(java.lang.Object,org.hibernate.tool.schema.SourceType)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries: void copyFiles()>-><java.io.File: boolean mkdir()>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: void callEntry_synthetic_retrieveReviews(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.csrf.ForgedReviews: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_8fba5ade5da2eeb00b2c2acc1c5705ed(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: void <init>()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.calendar.Era: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: java.sql.ResultSet executeQuery()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.joda.time.chrono.LimitChronology$LimitException: java.lang.String getMessage()>
<org.owasp.webgoat.client_side_filtering.ClientSideFiltering: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.springframework.web.util.UriUtils: void lambda$encodeUriVariables$0(java.util.Map,java.lang.String,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.xss.CrossSiteScripting: void <init>()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.security.Provider: java.util.Collection values()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: java.lang.String extractUsername(java.lang.String)>-><java.lang.String: int indexOf(java.lang.String)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.aop.support.AbstractPointcutAdvisor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.web.util.HierarchicalUriComponents$PathSegmentComponent: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.support.RootBeanDefinition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: org.springframework.web.servlet.ViewResolver viewResolver(org.thymeleaf.spring5.SpringTemplateEngine)>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: void setCharacterEncoding(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring: boolean hasId(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.util.DerValue: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.net.URI: java.lang.String toString()>
<org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode: org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode interpret(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.RowType: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webwolf.requests.LandingPage: void callEntry_synthetic_ok(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionMitigations: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_964f2dbc5eaab28a830f7fbc382b831a(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.ParsePosition: java.lang.String toString()>
<org.owasp.webwolf.user.UserService: void addUser(java.lang.String,java.lang.String)>-><org.owasp.webwolf.user.WebGoatUser: void <init>(java.lang.String,java.lang.String)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder signWith(io.jsonwebtoken.SignatureAlgorithm,java.lang.String)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.sql.DriverInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_6ad5f22232aeb1919be555cbea526997(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.AsciiDoctorTemplateResolver: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getHash(java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String toUpperCase()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder assignment(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.zip.ZipEntry: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LabelService: void <init>(org.springframework.web.servlet.LocaleResolver,org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.PluginMessages)>-><synthetic.method.SingletonFactory: org.owasp.webgoat.i18n.Messages getMessages()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.LambdaForm$Name: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.EnumMap: java.util.Collection values()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.LocalDate: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.headius.invokebinder.transform.Spread: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_b95f2bb76821b0a58592ce1c40454977(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_d5a462138314a9f965de8f2d7df48709(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.lessons.Assignment: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.HammerHead: void <init>(org.owasp.webgoat.session.Course)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: void <clinit>()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.TemporaryVariable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUpload: void <init>(java.lang.String,org.owasp.webgoat.session.WebSession)>-><org.owasp.webgoat.path_traversal.ProfileUploadBase: void <init>(java.lang.String,org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>-><java.lang.StringBuilder: void <init>()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: void <init>(java.lang.Class,java.lang.Class,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><java.lang.System: long currentTimeMillis()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity body(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.ScopeModule: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Locale: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xss.CrossSiteScripting: java.lang.String getTitle()>
<org.owasp.webgoat.template.SampleAttack: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.util.calendar.Era: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_1731f925d73a36bf012d16b268fae04b(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwt: java.lang.Object getBody()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.xss.Comment: void setUser(java.lang.String)>
<java.util.AbstractSet: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.springframework.util.LinkedMultiValueMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.joda.time.chrono.LimitChronology$LimitException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.boot.ansi.AnsiStyle: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.temporal.IsoFields$Field$1: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.util.collections.WeakHashSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity average(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.TemporaryVariable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Label: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_2ab0c30e3e3e62578632762f2b501148(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: void setString(int,java.lang.String)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.Collections$UnmodifiableCollection: boolean add(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: java.lang.String toString()>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void createSecretFileWithRandomContents()>-><java.io.File: void <init>(java.lang.String,java.lang.String)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webwolf.WebWolf: void <init>()>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getSender()>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><javax.xml.bind.DatatypeConverter: java.lang.String printHexBinary(byte[])>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_b0f6a8ef171aa411c3a3f21a70b52597(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.io.FileOutputStream: void <init>(java.io.File)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: void callEntry_synthetic_encode(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.MD5: void update(org.owasp.webgoat.challenges.challenge7.MD5$MD5State,byte[],int,int)>-><java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: java.sql.Connection getConnection()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder setIssuer(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.boot.ansi.Ansi8BitColor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.beans.factory.BeanCreationException: java.lang.String toString()>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.EnumMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.i18n.Messages messageSource(org.owasp.webgoat.i18n.Language)>-><org.springframework.context.support.AbstractResourceBasedMessageSource: void setFallbackToSystemLocale(boolean)>
<org.owasp.webwolf.requests.Requests: org.springframework.web.servlet.ModelAndView get()>-><org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.users.UserValidator: void <init>(org.owasp.webgoat.users.UserRepository)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.DatabaseInitialization: void <init>(javax.sql.DataSource,java.lang.String)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: void <init>(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory,javax.sql.DataSource)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.xss.CrossSiteScriptingLesson6a getCrossSiteScriptingLesson6a()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void <init>(org.springframework.web.client.RestTemplate,java.lang.String)>-><org.springframework.web.client.RestTemplate: void <init>()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.MBeanParameterInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_9dc3f30b98c751837c0f8ba9fa0acdc7(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: void callEntry_synthetic_checkDebuggingStatus(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_5552cdbce95570615318ce424bff11b0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.Clock$SystemClock: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_60582aca135edf7bf2076da4c4e14980(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><javax.management.openmbean.TabularDataSupport: int size()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.format.InternalParserDateTimeParser: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><java.util.ArrayList$SubList: java.lang.Object get(int)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson: org.springframework.http.ResponseEntity ok(java.lang.String)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder ok()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: java.lang.String getPrivateKey(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.SigningAssignment: java.lang.String getPrivateKey(javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.Symbol: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String)>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: java.util.Collection retrieveComments(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.stored.StoredXssComments: java.util.Collection retrieveComments()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_9e6e7d8a186ec19921f7fdc87357cfe1(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_9377707d9e75c9963b5774ab998c5060(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.IntervalMonthData: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_976af2cf4f5d800f4ecb08a18158e096(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.users.WebGoatUser: java.util.Collection getAuthorities()>-><org.springframework.security.core.authority.SimpleGrantedAuthority: void <init>(java.lang.String)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><com.google.common.collect.TransformedIterator: java.lang.Object next()>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionAdvanced: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.beans.factory.support.RootBeanDefinition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.client_side_filtering.ClientSideFiltering: java.lang.String getTitle()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.lessons.CourseConfiguration: void <init>(java.util.List,java.util.List)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.jwt.JWTFinalEndpoint: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.headius.invokebinder.transform.FilterReturn: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.JwtParser setSigningKey(java.lang.String)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_4be92e70749ee5d1b3292e721368976e(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webwolf.user.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.users.UserService: void <init>(org.owasp.webgoat.users.UserRepository,org.owasp.webgoat.users.UserTrackerRepository)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.SValue: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><io.jsonwebtoken.ClaimJwtException: io.jsonwebtoken.Claims getClaims()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_139ac0ad7d2adffb0207013aa97ee12(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView illegalCall(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_dc7ca2c6295d2288190f4c7a0a33a9f5(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webgoat.users.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.dirgra.Vertex: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.sql.DriverInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_428cda48f64fb16749307dc77d415ad3(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.method.ControllerAdviceBean: boolean equals(java.lang.Object)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.AsciiDoctorTemplateResolver asciiDoctorTemplateResolver(org.owasp.webgoat.i18n.Language)>
<org.owasp.webgoat.DatabaseInitialization: void <init>(javax.sql.DataSource,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.service.LabelService: org.springframework.http.ResponseEntity fetchLabels(java.lang.String)>-><org.owasp.webgoat.i18n.PluginMessages: java.util.Properties getMessages()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.UndefinedValue: java.lang.String toString()>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: java.util.List getRankings(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.lang.Throwable: void printStackTrace()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.ArrayBlockingQueue: java.lang.String toString()>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: java.lang.String getString()>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.reflect.Proxy$KeyX: boolean equals(java.lang.Object)>
<org.owasp.webwolf.mailbox.Email: void <init>()>-><java.lang.Object: void <init>()>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.path_traversal.PathTraversal: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.util.DerInputBuffer: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><synthetic.method.UserTrackerRepositoryImpl: java.lang.Object save(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.reflect.WeakCache$CacheKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.chrono.AbstractChronology: java.lang.String toString()>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.UserSessionData getUserSessionData()>
<org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>-><java.lang.String: int hashCode()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.jruby.runtime.ObjectSpace$ObjectGroup: boolean add(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.ResourceBundle$CacheKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.nio.file.Files: java.nio.file.Path writeString(java.nio.file.Path,java.lang.CharSequence,java.nio.file.OpenOption[])>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_71dca6b32a1d2f27fa917fe8b675cef1(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.HsqlNameManager$HsqlName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.String toString()>
<org.owasp.webwolf.mailbox.Email: java.lang.String getSummary()>-><java.lang.String: java.lang.String substring(int,int)>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.xxe.CommentsEndpoint: void callEntry_synthetic_retrieveComments(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder attemptWasMade()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.BinaryNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: void close()>
<org.owasp.webgoat.users.RegistrationController: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.users.UserForm: java.lang.String getUsername()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<javax.management.modelmbean.DescriptorSupport: boolean isValid()>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORDiffAttributes: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_af7cf551dba794a00d49284ff420f577(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Bound: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.owasp.webgoat.session.Course: java.util.List getLessons(org.owasp.webgoat.lessons.Category)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: void callEntry_synthetic_start(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.controller.StartLesson: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.session.Course)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.HSQLDBDatabaseConfig: void shutdown()>-><org.hsqldb.server.Server: void shutdownCatalogs(int)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><java.util.Optional: java.lang.Object orElse(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.insecure_login.InsecureLoginTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.hibernate.engine.config.spi.StandardConverters$1: java.lang.Boolean convert(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyLocalJumpError$Reason: java.lang.String toString()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.Cookie[] getCookies()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Formatter$FixedString: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: java.lang.String toString()>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><java.lang.String: char charAt(int)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.util.unit.DataSize: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.awt.Font: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.status.StatusBase: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.SocketPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void <init>()>-><javax.servlet.http.HttpServlet: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.naming.NamingException: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.base.AbstractInstant: java.lang.String toString()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge5.Challenge5: java.lang.String getTitle()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_5aa66f7e968868af887b46315f082c3f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.FileServer$$InterceptorProxy: void <init>()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_c9c0e8ff05f56fd5e165fc1c5579c985(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.templateresolver.ITemplateResolver springThymeleafTemplateResolver(org.springframework.context.ApplicationContext)>-><org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><java.lang.StringBuffer: java.lang.String toString()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.path_traversal.ProfileUpload: void <init>(java.lang.String,org.owasp.webgoat.session.WebSession)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: void callEntry_synthetic_getSecretToken(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry authorizeRequests()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.idor.UserProfile: java.lang.String getColor()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.Operation: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.MD5: void <init>()>-><org.owasp.webgoat.challenges.challenge7.MD5: void reset()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.web.util.HierarchicalUriComponents$PathSegmentComponent: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_be51c9aabe03147a10c76013df9b51d9(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity defaultImage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.headius.invokebinder.Signature: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.temporal.ChronoField: java.lang.String toString()>
<org.jruby.javasupport.JavaClass: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.LocalDate: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>
<org.hibernate.tool.schema.internal.Helper: org.hibernate.tool.schema.spi.ScriptSourceInput interpretScriptSourceSetting(java.lang.Object,org.hibernate.boot.registry.classloading.spi.ClassLoaderService,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.chrome_dev_tools.NetworkDummy: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_1d75855a45e8db3073286c7f5a5efa0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.IdentityHashMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.openmbean.TabularType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.LongNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.sql.Timestamp: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult: boolean isLessonCompleted()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.imageio.ImageTypeSpecifier: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hibernate.boot.model.relational.Namespace$Name: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><ch.qos.logback.classic.spi.ClassPackagingData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><com.thoughtworks.xstream.core.util.WeakCache: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult: java.lang.String getFeedback()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_7400ef04a6c13162043aca0ede41cf3e(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void createSecretFileWithRandomContents()>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$Node: java.lang.Object getKey()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_e6f31f32607015168d5e18c8e30cffd2(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.LocalDate: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<synthetic.method.MailboxRepositoryImpl: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hsqldb.lib.tar.RB: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: void <clinit>()>-><java.util.Random: int nextInt(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.CodeSource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><org.hibernate.boot.registry.classloading.internal.AggregatedClassLoader$4: boolean hasMoreElements()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Long: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><jnr.ffi.Platform$OS: java.lang.String toString()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder informationMessage(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder assignment(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.jruby.javasupport.JavaArray: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_3d9fa3f5407bb4983db201b95ffe3825(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.password_reset.QuestionsAssignment: org.owasp.webgoat.assignments.AttackResult passwordReset(java.util.Map)>-><java.lang.String: java.lang.String toLowerCase()>
<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.flywaydb.core.internal.database.base.Schema: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.util.KeyValuePair: java.lang.String toString()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)>-><java.lang.Integer: int intValue()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flyWayContainer()>-><org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.api.configuration.FluentConfiguration configuration(java.util.Map)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String decode(java.lang.String)>-><java.lang.String: int indexOf(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput getProfileUploadRemoveUserInput()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.EnumMap: int size()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.sql_injection.mitigation.Servers: void callEntry_synthetic_sort(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_ae1b7fb59e792f63bae5cb16936b36d5(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.javasupport.binding.AssignedName: java.lang.String toString()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.idor.UserProfile getUserProfileInstance()>-><org.owasp.webgoat.idor.UserProfile: void setName(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge7.Challenge7: java.lang.String getTitle()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.owasp.webgoat.users.WebGoatUser addUser(org.owasp.webgoat.users.WebGoatUser)>-><org.owasp.webgoat.users.UserService: org.owasp.webgoat.users.WebGoatUser loadUserByUsername(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.temporal.IsoFields$Unit: java.lang.String toString()>
<org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: java.lang.String toString()>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder assignment(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(javax.servlet.http.HttpServletRequest)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.security.Principal getUserPrincipal()>
<org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getTitle()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>
<org.owasp.webgoat.service.LabelService: org.springframework.http.ResponseEntity fetchLabels(java.lang.String)>-><ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.BlobDataID: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: void callEntry_synthetic_getSecretToken(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_ab2261934f992862c7780ef0cc6a643c(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webgoat.users.UserForm getUserFormInstance()>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><java.util.UUID: java.util.UUID randomUUID()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.session.Course: int getTotalOfLessons()>-><net.bytebuddy.matcher.FilterableList$Empty: int size()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.StringLiteral: boolean equals(java.lang.Object)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.xss.stored.StoredXssComments: java.util.Collection retrieveComments()>-><com.beust.jcommander.internal.Lists: java.util.List newArrayList()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_52869a05ff96c549ee8aba5760ce227d(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.util.HashMap: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_ef4d4abcc3ff212f817a622676ac880f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_c84163d02d01c4cfe14d65d56614e4c4(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><io.jsonwebtoken.impl.JwtMap: java.util.Set keySet()>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.WebGoat: org.owasp.webgoat.session.UserSessionData userSessionData()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.headius.invokebinder.transform.TryFinally: java.lang.String toString()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.font.EAttribute: java.lang.String toString()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.String toString()>
<org.owasp.webgoat.session.UserSessionData: void setValue(java.lang.String,java.lang.Object)>-><java.util.HashMap: boolean containsKey(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity average()>-><java.util.HashMap: java.util.Collection values()>
<java.util.EnumMap: int entryHashCode(int)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.imageio.ImageTypeSpecifier$Interleaved: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.font.EAttribute: java.lang.String toString()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.nulabinc.zxcvbn.Zxcvbn: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.field.PreciseDurationField: boolean equals(java.lang.Object)>
<org.springframework.boot.context.properties.source.MapConfigurationPropertySource: void put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.springframework.web.util.UriUtils: java.lang.String lambda$encodeUriVariables$1(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.io.InputStreamResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.servlet.http.Cookie: void <init>(java.lang.String,java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.type.TypeDescription$AbstractBase: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.AbstractMap$SimpleEntry: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.joda.time.chrono.LimitChronology$LimitException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.invoke.LambdaFormEditor$Transform: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: void lambda$createNewUser$0(org.owasp.webgoat.xxe.Comment)>-><org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><java.util.Collections$UnmodifiableCollection: boolean add(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>-><java.util.Collections$EmptyList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><jnr.constants.platform.windows.LastError: java.lang.String toString()>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.csrf.CSRF: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><net.bytebuddy.asm.MemberSubstitution: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.TreeMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.owasp.webgoat.assignments.AttackResult click(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean next()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjection: java.lang.String getTitle()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment getClientSideFilteringFreeAssignment()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_46a0bf89c6e4cfbb83efcd08df8d522c(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.mailbox.Email: int hashCode()>-><org.owasp.webwolf.mailbox.Email: java.lang.String getTime()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.beans.FeatureDescriptor: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.DecimalFormatSymbols: java.text.DecimalFormatSymbols getInstance(java.util.Locale)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.openmbean.CompositeDataSupport: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.HintService: java.util.stream.Stream lambda$createAssignmentHints$1(java.util.List)>-><java.util.Collections$SynchronizedCollection: java.util.stream.Stream stream()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_ac5ab215ffb76ef654b3ad9d4d4d5d78(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.core.status.StatusBase: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity getVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.mitigation.Servers: void callEntry_synthetic_sort(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.sql_injection.mitigation.Servers: java.lang.String getString()>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.openmbean.SimpleType: java.lang.String toString()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getHash(java.lang.String,java.lang.String)>-><java.security.MessageDigest: byte[] digest()>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webgoat.users.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b getSqlInjectionLesson10b()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.imageio.ImageTypeSpecifier: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.chrono.ISOChronology: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.asm.Type: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity checkDebuggingStatus()>-><org.springframework.http.ResponseEntity: void <init>(java.lang.Object,org.springframework.http.HttpStatus)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: boolean tableExists(java.sql.Connection)>-><org.hsqldb.jdbc.JDBCResultSet: java.sql.ResultSetMetaData getMetaData()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.file.InvalidPathException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.springframework.core.io.ClassPathResource git()>-><org.springframework.core.io.ClassPathResource: void <init>(java.lang.String)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring: boolean hasId(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.users.UserService getUserService()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.slf4j.event.Level: java.lang.String toString()>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.templateresolver.ITemplateResolver springThymeleafTemplateResolver(org.springframework.context.ApplicationContext)>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setSuffix(java.lang.String)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.service.LabelService: void <init>(org.springframework.web.servlet.LocaleResolver,org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.PluginMessages)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_e5e2f53673c9e5247d77e1727c1f8145(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Symbol: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_62f6ced37af76ef1725f37d375f627e0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><net.bytebuddy.asm.MemberSubstitution$Replacement$Factory$Compound: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Challenge8: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.expression.spel.standard.Token: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><org.jruby.RubyHash: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: java.sql.ResultSetMetaData getMetaData()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><java.util.ArrayList: void <init>()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: void callEntry_synthetic_decode(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.ObjectNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonInfoService: void <init>(org.owasp.webgoat.session.WebSession)>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.WebSession getWebSession()>
<org.hibernate.internal.util.config.ConfigurationHelper: java.lang.Integer getInteger(java.lang.String,java.util.Map)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.provider.PolicyFile$PolicyEntry: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_cec850ee65f89eb29d475d5a97569ffe(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelService: org.springframework.http.ResponseEntity fetchLabels(java.lang.String)>-><java.util.Locale: java.util.Locale forLanguageTag(java.lang.String)>
<org.owasp.webgoat.users.UserTracker: boolean lambda$getLessonTracker$1(java.lang.String,org.owasp.webgoat.users.LessonTracker)>-><org.owasp.webgoat.users.LessonTracker: java.lang.String getLessonName()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.apache.logging.log4j.spi.Provider: java.lang.String toString()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.net.InetAddress: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Enum: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.MvcConfiguration: void <init>()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_34607de1f83b67ce385a1119977ee830(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.service.LessonTitleService: void <init>(org.owasp.webgoat.session.WebSession)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.reflect.Parameter: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.config.DependencyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void fakeClickingLinkEmail(java.lang.String,java.lang.String)>-><org.springframework.http.HttpEntity: void <init>(org.springframework.util.MultiValueMap)>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.flywaydb.core.internal.database.base.Schema: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.RDN: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.sun.jmx.mbeanserver.NamedObject: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder claim(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_a83ddaaa2efe9676b1edaf5f342368ec(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: java.util.HashMap parseSecQuestions(javax.servlet.http.HttpServletRequest)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.session.Course: java.util.List getLessons(org.owasp.webgoat.lessons.Category)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><org.jruby.RubyHash: int size()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.runtime.Arity: java.lang.String toString()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webwolf.mailbox.Email: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.CommentsEndpoint: void callEntry_synthetic_retrieveComments(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.xxe.CommentsEndpoint: java.util.Collection retrieveComments()>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><io.undertow.servlet.util.IteratorEnumeration: boolean hasMoreElements()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes: boolean lambda$get$0(java.lang.String,org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.xxe.SimpleXXE: void callEntry_synthetic_getSampleDTDFile(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity average()>-><java.lang.Math: double ceil(double)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.expression.spel.standard.TokenKind: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.security.Provider$UString: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String concat(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>-><org.hsqldb.jdbc.JDBCResultSet: java.sql.ResultSetMetaData getMetaData()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><jnr.constants.platform.OpenFlags: java.lang.String toString()>
<org.springframework.web.util.HierarchicalUriComponents: void lambda$getQuery$0(java.lang.StringBuilder,java.lang.String,java.util.List)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_f4b58363b0c7896ed4769c31750393de(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.AbstractRequestMatcherRegistry: java.lang.Object antMatchers(java.lang.String[])>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.lang.Throwable: void printStackTrace()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void <init>(org.springframework.web.client.RestTemplate,java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_b1455d3d7d474c817707c974c9e0383e(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.StartWebGoat: void main(java.lang.String[])>-><org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: void callEntry_synthetic_start(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.WebGoat: void <init>()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.xss.CrossSiteScriptingLesson1 getCrossSiteScriptingLesson1()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_6539ef38abd6182a3a6d9c654068ace(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String getAssignmentPath()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.TreeMap: java.util.Collection values()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.google.common.collect.Multisets$AbstractEntry: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.Instant: boolean equals(java.lang.Object)>
<org.owasp.webgoat.i18n.Language: java.util.Locale getLocale()>-><org.springframework.web.servlet.i18n.SessionLocaleResolver: java.util.Locale resolveLocale(javax.servlet.http.HttpServletRequest)>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<org.owasp.webgoat.service.RestartLessonService: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository,org.flywaydb.core.Flyway)>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.ProtectionDomain: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.BoundMethodHandle$SpeciesData: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hibernate.engine.profile.Fetch: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>
<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.HashMap$Node: java.lang.Object getValue()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity build()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.ImmutableDescriptor: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><io.jsonwebtoken.Jwts: io.jsonwebtoken.JwtParser parser()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setMaxHttpHeaderSize(org.springframework.util.unit.DataSize)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.headius.invokebinder.transform.Insert: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_b33e57864a04690bf201627cc24257d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_34080df81c287d81865c95103b138e2f(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.service.LabelService: org.springframework.http.ResponseEntity fetchLabels(java.lang.String)>-><java.util.Hashtable: void putAll(java.util.Map)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: java.util.List lessonOverview(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.PreparedStatement prepareStatement(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.security.CodeSource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.ImmutableDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.web.context.support.ServletContextResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.RubyString: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.UnboxedFixnum: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.xxe.SimpleXXE: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.xxe.SimpleXXE: boolean checkSolution(org.owasp.webgoat.xxe.Comment)>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.users.Scoreboard getScoreboard()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.SimpleType: boolean equals(java.lang.Object)>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.method.MethodDescription$AbstractBase: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.deser.SettableBeanProperty: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_fab1c2a3f21d7e83eb5eb0c7e6d12d5f(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity average(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_dc7ca2c6295d2288190f4c7a0a33a9f5(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.jar.Attributes: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_461d99cc9609bbcb500602027d5ac607(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Boolean: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><synthetic.method.ServletRequestImpl: void <init>()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanConstructorInfo: java.lang.String toString()>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><java.net.URI: java.lang.String getPath()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Boolean: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.web.header.Header: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_c4c48ff1b647184a90e84818a83e349c(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.cglib.core.ClassInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Short: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_a3da66f27cfd47baaaed8885971d28f3(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.security.AllPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.JumboEnumSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.users.UserService: org.owasp.webgoat.users.WebGoatUser loadUserByUsername(java.lang.String)>-><org.springframework.security.core.userdetails.UsernameNotFoundException: void <init>(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge8.Challenge8: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean next()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getMapping(java.lang.reflect.Method)>-><org.apache.commons.lang3.ArrayUtils: java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[])>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_205e857d003282f7221ba3f45e68283(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.concurrent.locks.ReentrantLock: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.Comments: java.util.Collection getComments()>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.TabularDataSupport: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: java.util.List compileFromString(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.math.BigDecimal: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.nio.file.InvalidPathException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.security.ProtectionDomain$WeakProtectionDomainKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.session.LabelDebugger: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><javax.management.openmbean.TabularDataSupport: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><java.io.File: void <init>(java.io.File,java.lang.String)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_85ac0d0be8868a6d7f676d9d07dad084(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_e6d3fb552a8c74e09bb816507d3ee6bd(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.service.LessonMenuService: void <init>(org.owasp.webgoat.session.Course,org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository)>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.apache.logging.log4j.Level: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.jar.Attributes: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.templateresolver.ITemplateResolver springThymeleafTemplateResolver(org.springframework.context.ApplicationContext)>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setPrefix(java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><org.owasp.webgoat.users.WebGoatUser: java.lang.String getUsername()>
<org.owasp.webgoat.service.RestartLessonService: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository,org.flywaydb.core.Flyway)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.service.LessonTitleService: void <init>(org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><io.jsonwebtoken.impl.JwtMap: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.idor.IDORViewOwnProfile: void <init>()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.AsciiDoctorTemplateResolver asciiDoctorTemplateResolver(org.owasp.webgoat.i18n.Language)>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setCacheable(boolean)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.nio.ByteBuffer: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: boolean equals(java.lang.Object)>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.security.PermissionCollection: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.beans.factory.config.BeanDefinitionHolder: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getRecipient()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean next()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.ParsePosition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><org.apache.commons.logging.LogAdapter$Slf4jLog: void error(java.lang.Object,java.lang.Throwable)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_6f071706ee533e683e38f5eb8d73313(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.HSQLDBDatabaseConfig: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.SubList$1: java.lang.Object next()>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.ModelAndView mail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.users.UserService getUserService()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.aop.support.DefaultIntroductionAdvisor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.UserSessionData getUserSessionData()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment: void <init>()>
<org.jruby.javasupport.JavaClass: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.password_reset.QuestionsAssignment: void <init>()>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.Assignment: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: java.lang.Long getId()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_bcaf8a7c00389b6ed6a754c3dddc453d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.file.InvalidPathException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void lambda$vote$0(org.owasp.webgoat.jwt.votes.Vote)>-><org.owasp.webgoat.jwt.votes.Vote: void incrementNumberOfVotes(int)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.csrf.CSRFFeedback: void <init>()>-><com.fasterxml.jackson.databind.ObjectMapper: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.runtime.callsite.CacheEntry: java.lang.String toString()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: void <init>(org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.io.ClassPathResource: java.io.InputStream getInputStream()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_8fba5ade5da2eeb00b2c2acc1c5705ed(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.net.InetSocketAddress: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.security.Provider$Service: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.TreeMap$Entry: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_c3de7e86989c8d93371d8705d2db1f8c(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: void <init>()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_97d02bc200e2755c0e1dd716971a853d(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><java.security.Signature: void initVerify(java.security.PublicKey)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.chrono.ISOChronology: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.expression.spel.standard.TokenKind: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.xml.sax.SAXException: java.lang.String toString()>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$SettingsParser: java.lang.String toString()>
<org.owasp.webgoat.users.UserTracker: int numberOfLessonsSolved()>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.SessionService: void callEntry_synthetic_showSession(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.Row: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getValue()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity average(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.session.Course: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xss.mitigation.CrossSiteScriptingMitigation: java.lang.String getTitle()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setJndiName(java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.reflect.Constructor: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.InjectionPoint: java.lang.String toString()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Long: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.field.DelegatedDateTimeField: java.lang.String toString()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer reverse()>
<org.owasp.webgoat.HammerHead: org.springframework.web.servlet.ModelAndView attack(org.springframework.security.core.Authentication,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_4070d9997a61a1720965dc6843b50885(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.service.RestartLessonService: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.deser.SettableBeanProperty: java.lang.String toString()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.joda.time.DateTime: org.joda.time.DateTime now()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.xss.DOMCrossSiteScripting: void <init>()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setHost(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean first()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.dom4j.tree.BackedList: boolean add(java.lang.Object)>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.sun.beans.WildcardTypeImpl: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_79ca4bb52a10094b00bd65a04a91484c(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.password_reset.SimpleMailAssignment getSimpleMailAssignment()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_59fb32f6acb84df323f079e4ece9ab7d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.RubySymbol: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.TreeMap$Entry: java.lang.Object getValue()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.field.UnsupportedDateTimeField: java.lang.String toString()>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_e02c91d4fd4a667e67f2887acdd731e8(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_ff3e6e9d12445f50b42c7a91a016f8b0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: java.util.List getRankings(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><java.util.Comparator: java.util.Comparator comparingLong(java.util.function.ToLongFunction)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.net.URL: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer: org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer loginPage(java.lang.String)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.LocalVariable: java.lang.String toString()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Optional: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.ser.std.JsonValueSerializer: java.lang.String toString()>
<org.hibernate.tool.schema.internal.Helper: org.hibernate.tool.schema.spi.ScriptTargetOutput interpretScriptTargetSetting(java.lang.Object,org.hibernate.boot.registry.classloading.spi.ClassLoaderService,java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_8c33c544e62ee8d79d7acb541a00a401(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean first()>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: java.util.List getRankings(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_27af345c61f1ec563d046cf1b013603a(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm getPasswordChangeFormInstance()>
<org.owasp.webgoat.challenges.challenge5.Assignment5: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.RubyHash: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder recipient(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.invoke.MemberName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.asm.MemberSubstitution$Replacement$ForElementMatchers$Factory: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setCheckTemplateLocation(boolean)>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: java.util.List getRankings(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.users.Scoreboard: java.util.List getRankings()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.temporal.WeekFields: boolean equals(java.lang.Object)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.web.method.ControllerAdviceBean: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.HammerHead: void callEntry_synthetic_attack(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.service.LessonTitleService: java.lang.String showPlan()>-><org.owasp.webgoat.session.WebSession: org.owasp.webgoat.lessons.Lesson getCurrentLesson()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.beans.factory.config.RuntimeBeanReference: java.lang.String toString()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_559b392021c73085cfaf8dd2652ec8d0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity body(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_88301ed6dccd99db2f2a678d4de55735(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.lessons.CourseConfiguration: void lambda$course$1(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Lesson: void setAssignments(java.util.List)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.field.PreciseDurationField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9 getSqlInjectionLesson9()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.lang.Long: int intValue()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><java.util.Date: void <init>(long)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.base.AbstractInstant: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Boolean: java.lang.String toString()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.auth_bypass.VerifyAccount: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_c4c48ff1b647184a90e84818a83e349c(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: void <init>()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.webwolf_introduction.LandingAssignment getLandingAssignment()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_80eb5143a47f2e10c05121a8f2dd001f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><java.lang.Boolean: boolean booleanValue()>
<org.owasp.webwolf.user.UserValidator: void validate(java.lang.Object,org.springframework.validation.Errors)>-><org.owasp.webwolf.user.UserForm: java.lang.String getMatchingPassword()>
<org.owasp.webgoat.csrf.ForgedReviews: void <clinit>()>-><org.joda.time.base.AbstractInstant: java.lang.String toString(org.joda.time.format.DateTimeFormatter)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.beans.factory.config.BeanDefinitionHolder: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.challenges.challenge7.MD5: void update(byte[],int,int)>-><org.owasp.webgoat.challenges.challenge7.MD5: void update(org.owasp.webgoat.challenges.challenge7.MD5$MD5State,byte[],int,int)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.dataflow.DataFlowProblem: java.lang.String toString()>
<org.hibernate.tool.schema.Action: org.hibernate.tool.schema.Action interpretHbm2ddlSetting(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.dataflow.DataFlowProblem: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_a82de75bf5a36cea47a1cec52f467578(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: java.util.List lessonOverview(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.field.ScaledDurationField: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_2313de72b014138d187ddb86455cecfa(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: java.lang.String getString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_d630f923c7c39799ac9ae19ec6aaba0(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.core.JsonProcessingException: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.ProcessEnvironment$StringValues: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.LessonMenuItem: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.MonthDay: java.lang.String toString()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.AsciiDoctorTemplateResolver asciiDoctorTemplateResolver(org.owasp.webgoat.i18n.Language)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.HintService: void callEntry_synthetic_getHints(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.method.ParameterDescription$AbstractBase: java.lang.String toString()>
<java.util.EnumMap: int entryHashCode(int)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.nulabinc.zxcvbn.matchers.Keyboard$Position: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: void callEntry_synthetic_login(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>
<org.owasp.webgoat.missing_ac.DisplayUser: java.lang.String genUserHash(java.lang.String,java.lang.String)>-><java.util.Base64$Encoder: java.lang.String encodeToString(byte[])>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.springframework.boot.context.properties.source.MapConfigurationPropertySource: void put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_b255d7ae89f34c188fd16afa53812fe6(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: java.util.List invoke(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean last()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><io.jsonwebtoken.Jwts: io.jsonwebtoken.JwtBuilder builder()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.owasp.webgoat.users.WebGoatUser addUser(org.owasp.webgoat.users.WebGoatUser)>-><org.owasp.webgoat.users.WebGoatUser: java.lang.String getPassword()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity average()>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity ok(java.lang.Object)>
<org.owasp.webgoat.crypto.EncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><org.owasp.webgoat.xxe.Comment: void setUser(java.lang.String)>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.challenges.challenge7.Assignment7 getAssignment7()>
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.password_reset.SimpleMailAssignment: void <init>(org.springframework.web.client.RestTemplate,java.lang.String)>
<org.hibernate.internal.util.config.ConfigurationHelper: java.lang.String getString(java.lang.String,java.util.Map)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.crypto.HashingAssignment getHashingAssignment()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.web.method.ControllerAdviceBean: java.lang.String toString()>
<org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Boolean,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.headius.invokebinder.Signature: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.Collections$SynchronizedMap: void putAll(java.util.Map)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.String: boolean matches(java.lang.String)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.net.URI: void <init>(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult checkArguments(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model)>-><org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.UserProfile: void <init>(java.lang.String)>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><synthetic.method.UserTrackerRepositoryImpl: org.owasp.webgoat.users.UserTracker findByUser(java.lang.String)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.PropertyName: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.x509.AVA: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.io.File: void <init>(java.lang.String,java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_59c2787561b599bcef1fcc2a00b46cb7(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_559b392021c73085cfaf8dd2652ec8d0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List getHints(java.lang.Class)>-><java.util.Collections: java.util.List emptyList()>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingQuiz: boolean[] getResults()>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.representations.BasicBlock: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_62f6ced37af76ef1725f37d375f627e0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.SValue: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties getHealthIndicatorPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.security.Permission: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: java.lang.String getPassword()>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: java.sql.Connection getConnection()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Short: java.lang.String toString()>
<org.owasp.webgoat.missing_ac.DisplayUser: java.lang.String genUserHash(java.lang.String,java.lang.String)>-><java.security.MessageDigest: byte[] digest(byte[])>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.reflect.Parameter: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.chrono.ISOChronology: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.EnumMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.ObjectName: java.lang.String toString()>
<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: java.sql.Connection getConnection()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.type.SimpleType: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: void <clinit>()>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.asm.ConstantDynamic: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Short: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.runtime.Arity: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Long: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.stream.StreamSpliterators$AbstractWrappingSpliterator: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.HashMap$HashIterator: boolean hasNext()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput: void <init>(java.lang.String,org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_5552cdbce95570615318ce424bff11b0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hsqldb.types.IntervalMonthData: java.lang.String toString()>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.csrf.ForgedReviews: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.owasp.webgoat.missing_ac.Users$3: void <init>(org.owasp.webgoat.missing_ac.Users,java.lang.Exception)>-><java.lang.Throwable: java.lang.Throwable getCause()>
<org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getContents()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: void callEntry_synthetic_login(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.WebGoat: org.springframework.web.client.RestTemplate restTemplate()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.csrf.Review: void setDateTime(java.lang.String)>
<org.owasp.webgoat.ssrf.SSRF: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_e89bf2204dc61296ece810e537a88d52(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webgoat.users.UserForm getUserFormInstance()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.csrf.CSRFConfirmFlag1: void <init>()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.crypto.HashingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.util.calendar.CalendarDate: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.StandardError: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_7b511cd3fa59e592bbbb2dd30c66dd84(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.context.support.DelegatingMessageSource: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyHash: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.IdentityHashMap: int size()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><jnr.constants.platform.Signal: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.Collections$SynchronizedCollection: boolean containsAll(java.util.Collection)>
<org.owasp.webwolf.user.RegistrationController: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><org.owasp.webwolf.user.UserService: void addUser(java.lang.String,java.lang.String)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.WeakHashMap: java.util.Collection values()>
<org.hibernate.tool.schema.SourceType: org.hibernate.tool.schema.SourceType interpret(java.lang.Object,org.hibernate.tool.schema.SourceType)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Byte: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_d85620c250fc2f94842c24943176eac2(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<org.owasp.webgoat.users.UserTracker: org.owasp.webgoat.users.LessonTracker getLessonTracker(org.owasp.webgoat.lessons.Lesson)>-><java.util.HashSet: boolean add(java.lang.Object)>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setGenerateUniqueName(boolean)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.owasp.webgoat.path_traversal.ProfileUploadBase: boolean attemptWasMade(java.io.File,java.io.File)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.EnumMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.BinaryData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webwolf.requests.Requests: org.owasp.webwolf.requests.Requests$Tracert lambda$get$1(org.springframework.boot.actuate.trace.http.HttpTrace)>-><org.springframework.boot.actuate.trace.http.HttpTrace: java.time.Instant getTimestamp()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.DecimalNode: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.service.LessonInfoService: void <init>(org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><java.time.LocalDateTime: java.time.LocalDateTime now()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.Self: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hibernate.dialect.function.SQLFunctionTemplate: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.SimpleXXE: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: java.lang.String toString()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<java.util.Hashtable: java.lang.String toString()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Array: java.lang.String toString()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.deserialization.InsecureDeserializationTask: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_205e857d003282f7221ba3f45e68283(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_59c2787561b599bcef1fcc2a00b46cb7(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.javasupport.JavaConstructor: boolean equals(java.lang.Object)>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.core.io.ClassPathResource git(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Lesson: java.util.List getAssignments()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void <init>()>-><java.util.HashMap: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.concurrent.ConcurrentHashMap: int size()>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.jruby.RubyArray: java.util.Iterator iterator()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.DateTimeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.x509.X509CRLEntryImpl: java.lang.String toString()>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_c05feaefdd01212d9bc014b0c8afc947(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hibernate.metamodel.model.domain.NavigableRole: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: boolean methodReturnTypeIsOfTypeAttackResult(java.lang.reflect.Method)>-><java.lang.reflect.Method: java.lang.Class getReturnType()>
<org.hibernate.tool.schema.internal.Helper: org.hibernate.tool.schema.spi.ScriptTargetOutput interpretScriptTargetSetting(java.lang.Object,org.hibernate.boot.registry.classloading.spi.ClassLoaderService,java.lang.String)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.util.unit.DataSize: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.RubyMatchData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.apache.commons.lang3.StringUtils: java.lang.String reverse(java.lang.String)>
<org.hsqldb.types.CharacterType: java.lang.String convertJavaTimeObject(org.hsqldb.SessionInterface,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.MonthDay: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: java.lang.String getString()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: boolean checkIfLinkIsFromTom(java.lang.String)>-><java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.ProcessEnvironment$StringEntry: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_e0a5d535bad3dda6d60a247ad63a0ec0(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><org.springframework.http.MediaType: org.springframework.http.MediaType parseMediaType(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.util.RawValue: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.web.context.support.WebApplicationContextUtils$FacesDependencyRegistrar$1: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.ProcessEnvironment$Variable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.StartWebGoat: void <init>()>-><org.springframework.boot.web.servlet.support.SpringBootServletInitializer: void <init>()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: void callEntry_synthetic_getMd5(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.crypto.HashingAssignment: void <init>()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: void <clinit>()>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.csrf.CSRFGetFlag: void callEntry_synthetic_invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.Collections$UnmodifiableMap: java.util.Collection values()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$JavaObjectFromString: void <init>(org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b,java.lang.String,java.lang.String)>-><java.net.URI: void <init>(java.lang.String)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_b1455d3d7d474c817707c974c9e0383e(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.jwt.JWTVotesEndpoint: void <init>()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.locale.BaseLocale$Key: boolean equals(java.lang.Object)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.io.ObjectInputStream: void close()>
<org.owasp.webgoat.crypto.EncodingAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanAttributeInfo: boolean equals(java.lang.Object)>
<org.hsqldb.types.Type: int hashCode(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.hibernate.boot.internal.SessionFactoryOptionsBuilder: java.util.function.Supplier determineStatelessInterceptor(java.util.Map,org.hibernate.boot.registry.selector.spi.StrategySelector)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.awt.Point: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.jsonwebtoken.impl.DefaultClaims: io.jsonwebtoken.Claims setIssuedAt(java.util.Date)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.ParsePosition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.io.support.EncodedResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><io.undertow.util.HeaderValues: java.util.Iterator iterator()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder contents(java.lang.String)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model)>-><java.util.ArrayList: boolean contains(java.lang.Object)>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><java.util.Collections$SynchronizedCollection: boolean add(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setDateFormat(java.lang.String)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.UTCDateTimeZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.session.Course: int getTotalOfAssignments()>-><java.util.Collection: java.util.stream.Stream stream()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.zone.ZoneOffsetTransition: java.lang.String toString()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.challenges.challenge1.Assignment1: void <init>()>
<org.owasp.webgoat.users.RegistrationController: void <init>(org.owasp.webgoat.users.UserValidator,org.owasp.webgoat.users.UserService,org.springframework.security.authentication.AuthenticationManager)>-><org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator: void <init>(org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder,org.springframework.context.ApplicationContext)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$Node: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.beans.factory.config.BeanExpressionContext: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry: org.springframework.security.config.annotation.web.HttpSecurityBuilder and()>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.mailbox.MailboxController: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email)>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer: org.springframework.security.config.annotation.web.HttpSecurityBuilder disable()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.math.BigInteger: java.lang.String toString()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.invoke.MethodHandle: java.lang.String toString()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mustache.MustacheProperties getMustachePropertiesInstance()>-><org.springframework.boot.autoconfigure.mustache.MustacheProperties: void <init>()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.template.SampleAttack getSampleAttack()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.IRException: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.AttributeEntry: boolean equals(java.lang.Object)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_380d58a5a04e808e000b9e4e3f56e008(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.Year: java.lang.String toString()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.headius.invokebinder.transform.Fold: java.lang.String toString()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.jar.Attributes: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: org.owasp.webgoat.lessons.Assignment lambda$createAssignment$2(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.lessons.CourseConfiguration: java.util.List getHints(java.lang.Class)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_82adf1e257c3baf1195a60e4260950c0(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.format.support.FormattingConversionService$AnnotationParserConverter: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.Instant: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: void reset()>-><java.util.HashSet: void clear()>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: java.lang.String getString(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.reflect.Method: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_a5d4cabcacfa40b9def75dd7aa35c79b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_a8f70183f3f3139b6ec6adb59ad79cb0(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.RubySymbol: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType: java.lang.String toString()>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><org.hsqldb.server.Server: void setAddress(java.lang.String)>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_1a4f8fce0b49c67786d0b07b0f0b05dd(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: void <init>()>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getKey()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>
<org.owasp.webgoat.csrf.CSRFLogin: void markAssignmentSolvedWithRealUser(java.lang.String)>-><synthetic.method.UserTrackerRepositoryImpl: org.owasp.webgoat.users.UserTracker findByUser(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_ef4d4abcc3ff212f817a622676ac880f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.awt.image.PackedColorModel: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.GenericTypeAwarePropertyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.HashMap$Node: java.lang.Object getKey()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.SimpleTimeZone: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder: org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder sender(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_a09b4f478c185103f571e476a74aeb14(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webwolf.mailbox.Email: boolean equals(java.lang.Object)>-><org.owasp.webwolf.mailbox.Email: java.lang.Long getId()>
<org.owasp.webgoat.challenges.Flag: void lambda$initFlags$0(int)>-><java.util.UUID: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_8c33c544e62ee8d79d7acb541a00a401(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.UndefinedValue: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.javasupport.JavaUtil$JavaConverter: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: java.util.HashMap parseSecQuestions(javax.servlet.http.HttpServletRequest)>-><java.util.Collections: java.util.ArrayList list(java.util.Enumeration)>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_b3bf4f52e408e160c4f14c2f07957203(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.javasupport.JavaObject: boolean equals(java.lang.Object)>
<java.util.AbstractList: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_62f6ced37af76ef1725f37d375f627e0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.IntNode: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_e4c8de2d696eda8a02d43c0e40c6c84b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.core.io.ClassPathResource git(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<org.owasp.webgoat.service.HintService: void <init>(org.owasp.webgoat.session.WebSession)>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.WebSession getWebSession()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_76247a0f1eed4dc37c44e5cc8a0c984f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>
<java.text.AttributeEntry: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.reflect.Method: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><net.bytebuddy.description.annotation.AnnotationValue$ForConstant: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.owasp.webgoat.lessons.LessonMenuItem: void setLink(java.lang.String)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.runtime.Frame: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.asm.Label: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.persist.CachedObjectBase: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_efda952e6f9243e997051c17b9e7702d(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_1b89ff27c85176cf51b1c50fdcbf7d46(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson3: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.Expression: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.missing_ac.Users$4: void <init>(org.owasp.webgoat.missing_ac.Users,java.util.HashMap)>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Short: java.lang.String toString()>
<org.owasp.webgoat.WebSecurityConfig: org.springframework.security.authentication.AuthenticationManager authenticationManager()>-><org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter: org.springframework.security.authentication.AuthenticationManager authenticationManager()>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry authorizeRequests()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder setClaims(io.jsonwebtoken.Claims)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: java.sql.Statement getStatement()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.QuestionsAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson getVulnerableComponentsLesson()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_2db999467cf1f73e637e90e0f68dc6a6(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_7b4ba2a6c21e1a51e3a7ea44570f3eff(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.FileServer$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.MonthDay: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_df53fb4d12f29790332f08e175b7fc8d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: void <init>()>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.beans.IndexedPropertyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.cia.CIAQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><java.io.File: void <init>(java.io.File,java.lang.String)>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.i18n.Messages messageSource(org.owasp.webgoat.i18n.Language)>-><org.springframework.context.support.AbstractResourceBasedMessageSource: void setBasename(java.lang.String)>
<org.owasp.webwolf.mailbox.Email: boolean equals(java.lang.Object)>-><org.owasp.webwolf.mailbox.Email: java.lang.String getContents()>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><org.hsqldb.server.Server: void setDaemon(boolean)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: boolean checkIfLinkIsFromTom(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder status(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.EnumMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$EmptyIterator: boolean hasNext()>
<org.jruby.ir.operands.LocalVariable: int compareTo(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ast.SymbolNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.BasicPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.ExceptionHandlingConfigurer: org.springframework.security.config.annotation.web.configurers.ExceptionHandlingConfigurer authenticationEntryPoint(org.springframework.security.web.AuthenticationEntryPoint)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><ch.qos.logback.core.joran.spi.ElementSelector: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods$Entry: boolean equals(java.lang.Object)>
<java.util.HashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.Users: void <init>(org.owasp.webgoat.session.UserSessionData,javax.sql.DataSource)>-><java.lang.Object: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_4de620526edc92bee1382712e5082f24(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webwolf.user.UserForm getUserFormInstance()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.field.UnsupportedDurationField: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.service.RestartLessonService: void restartLesson()>-><org.flywaydb.core.Flyway: void clean()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.String toString()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.base.AbstractDuration: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.jsoup.helper.ChangeNotifyingArrayList: boolean add(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.idor.IDORLogin: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.asm.ConstantDynamic: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.math.BigDecimal: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_a251759fcea8f26289d46f8e28e1bf1(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: java.util.List getRankings(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.BinaryData: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_37a41289e7f84650ceba59b821b0c2c0(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.deserialization.InsecureDeserializationTask: void <init>()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.font.AttributeValues: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_2313de72b014138d187ddb86455cecfa(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: void <init>()>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_486023c634f1fc74d4d1d6439ef5be54(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><net.bytebuddy.matcher.FilterableList$Empty: java.lang.Object get(int)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webgoat.users.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: int size()>
<org.owasp.webgoat.csrf.ForgedReviews: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.WebSession getWebSession()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_e0ee87cc4ab25f27b0ff81218dfe8e51(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.XStream: java.lang.Object fromXML(java.lang.String)>
<org.owasp.webgoat.challenges.challenge7.Challenge7: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.org.objectweb.asm.Type: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.ssrf.SSRFTask1 getSSRFTask1()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson: org.springframework.http.ResponseEntity ok(java.lang.String)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity build()>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: void callEntry_synthetic_ok(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.chrome_dev_tools.NetworkLesson: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.invoke.MemberName: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.Email: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_64693a619c940eb52b7cec39b1076373(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_23d4d32a045c04a12395dfd3b773a88f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Thread: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: void setString(int,java.lang.String)>
<org.owasp.webgoat.users.LessonTracker: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><java.io.File: void <init>(java.lang.String,java.lang.String)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonProgressService: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.WebSession)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.base.AbstractDuration: boolean equals(java.lang.Object)>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><sun.misc.CompoundEnumeration: java.lang.Object nextElement()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.awt.image.ComponentColorModel: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.Scoreboard: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.users.UserRepository,org.owasp.webgoat.session.Course,org.owasp.webgoat.i18n.PluginMessages)>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.Course getCourse()>
<org.hibernate.ConnectionReleaseMode: org.hibernate.ConnectionReleaseMode interpret(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.users.UserTracker: boolean lambda$getLessonTracker$0(org.owasp.webgoat.lessons.Lesson,org.owasp.webgoat.users.LessonTracker)>-><org.owasp.webgoat.lessons.Lesson: java.lang.String getId()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.io.ObjectInputStream: void <init>(java.io.InputStream)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.Instant: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebSecurityConfig: void <init>(org.owasp.webwolf.user.UserService)>-><org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter: void <init>()>
<org.owasp.webgoat.crypto.EncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.challenges.Flag: void callEntry_synthetic_postFlag(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: void <init>(javax.sql.DataSource)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: void <init>(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory,javax.sql.DataSource)>
<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setSchema(java.util.List)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.nio.file.InvalidPathException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_6f6959aa4b645fa8460dfa4ef8464205(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.WeakHashMap$Entry: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_139ac0ad7d2adffb0207013aa97ee12(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView illegalCall(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.session.Course: java.util.List getLessons(org.owasp.webgoat.lessons.Category)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.users.UserService: void <init>(org.owasp.webgoat.users.UserRepository,org.owasp.webgoat.users.UserTrackerRepository)>-><synthetic.method.SingletonFactory: synthetic.method.UserTrackerRepositoryImpl getUserTrackerRepositoryImpl()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.beans.factory.config.DependencyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.WebSecurityConfig: org.springframework.security.crypto.password.NoOpPasswordEncoder passwordEncoder()>-><org.springframework.security.crypto.password.NoOpPasswordEncoder: org.springframework.security.crypto.password.PasswordEncoder getInstance()>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: void callEntry_synthetic_getBasicAuth(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><org.apache.commons.io.FileUtils: java.lang.String byteCountToDisplaySize(long)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_3a380a751618ad3a9132e9a53e3cd91e(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.MD5: void reset()>-><org.owasp.webgoat.challenges.challenge7.MD5$MD5State: void reset()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: void <init>(java.lang.String,org.owasp.webgoat.session.WebSession)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.base.AbstractPeriod: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>-><org.hsqldb.jdbc.JDBCResultSet: void beforeFirst()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<synthetic.method.ServletResponseImpl: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.challenges.challenge1.Assignment1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.lang.String: boolean matches(java.lang.String)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: void <init>()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.csrf.CSRFLogin: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjection: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void fakeClickingLinkEmail(java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_8fcadf71bf492e1afe8ba5f43021cd3c(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_a49f644dd94eb3528b01695500695849(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_bcaf8a7c00389b6ed6a754c3dddc453d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webwolf.user.WebGoatUser: void <init>(java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.DecimalFormat: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hibernate.boot.model.relational.Namespace$Name: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.apache.commons.lang3.StringUtils: java.lang.String reverse(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.controller.Welcome: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.idor.UserProfile: void <init>(java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$EntrySet: java.util.Iterator iterator()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.LocalDateTime: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$SynchronizedList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.jruby.javasupport.JavaClass: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webwolf.requests.WebWolfTraceRepository: void <init>()>-><com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.BinaryNode: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_eb2ad5732c8669db07511e8178c67b04(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: void <init>()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.hibernate.MultiTenancyStrategy: org.hibernate.MultiTenancyStrategy determineMultiTenancyStrategy(java.util.Map)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.CurrentScope: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: void callEntry_synthetic_encode(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment: void <init>()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.HashMap$Node: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: java.lang.String getString()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.deserialization.InsecureDeserializationTask getInsecureDeserializationTask()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_3f69be87be6d3a7d505a9be7abad01dc(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.util.KCode: java.lang.String toString()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_76bc8570510e84c3b553ae068a5c6d6e(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String encode(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String toLowerCase()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)>
<org.owasp.webwolf.FileServer: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.Period: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.springframework.http.ResponseEntity resetPassword(java.lang.String)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webwolf.user.UserForm getUserFormInstance()>-><org.owasp.webwolf.user.UserForm: void setPassword(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.util.unit.DataSize: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.core.subst.Token: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.Collections$EmptyMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.nulabinc.zxcvbn.AttackTimes$CrackTimeSeconds: double getOnlineNoThrottling10perSecond()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.challenges.Email$EmailBuilder: org.owasp.webgoat.challenges.Email build()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_579f1e70c92bac1dfa783f4d7cfd791b(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><java.nio.file.Files: java.nio.file.Path createFile(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webgoat.users.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: java.lang.String toString()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.lessons.Assignment: void <init>(java.lang.String)>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_8fba5ade5da2eeb00b2c2acc1c5705ed(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: java.lang.String getString(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.chrono.BuddhistChronology: boolean equals(java.lang.Object)>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>-><java.lang.StringBuilder: void <init>()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.EnumMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.LocalDate: java.lang.String toString()>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity getVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.util.RawValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries: void copyFiles()>-><java.io.FileOutputStream: void <init>(java.io.File)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List getHints(java.lang.Class)>-><java.util.List: java.util.List of(java.lang.Object[])>
<org.owasp.webwolf.requests.Requests: org.springframework.web.servlet.ModelAndView get()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_ad8e696bb3af66e8a16c36583ef16054(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.lessons.Hint: void <init>(java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.users.UserService: org.owasp.webgoat.users.WebGoatUser loadUserByUsername(java.lang.String)>-><synthetic.method.UserRepositoryImpl: org.owasp.webgoat.users.WebGoatUser findByUsername(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$Record: java.lang.String toString()>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><javax.servlet.http.HttpServletRequestWrapper: boolean isRequestedSessionIdFromURL()>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean next()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.zone.ZoneRules: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult flag(java.lang.String)>-><org.owasp.webgoat.session.UserSessionData: java.lang.Object getValue(java.lang.String)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Class: java.lang.ClassLoader getClassLoader()>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.UserSessionData getUserSessionData()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.StackTraceElement: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties getMetricsPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties: void setUseGlobalRegistry(boolean)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_baa8a78a0f0703be452069385bf6bf5(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Float: java.lang.String toString()>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.field.DelegatedDateTimeField: java.lang.String toString()>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.i18n.PluginMessages: java.util.Properties getMessages()>-><org.springframework.context.support.ReloadableResourceBundleMessageSource: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder getMergedProperties(java.util.Locale)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: java.util.List invoke(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_4d6d7b6b89bc08f961e9f7278dab95d3(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: void callEntry_synthetic_decode(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint: void <init>(javax.sql.DataSource)>
<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonProgressService$LessonOverview: void <init>(org.owasp.webgoat.lessons.Assignment,java.lang.Boolean)>-><java.lang.Object: void <init>()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity average()>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setPlatform(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_7b511cd3fa59e592bbbb2dd30c66dd84(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.sql_injection.mitigation.Servers: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.joran.spi.ElementPath: java.lang.String toString()>
<org.hibernate.tool.schema.SourceType: org.hibernate.tool.schema.SourceType interpret(java.lang.Object,org.hibernate.tool.schema.SourceType)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity getVotes()>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: java.sql.Statement getStatement()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.springframework.web.util.UriUtils: void lambda$encodeUriVariables$0(java.util.Map,java.lang.String,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity$BodyBuilder contentType(org.springframework.http.MediaType)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.ser.BeanSerializer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>-><org.hsqldb.jdbc.JDBCResultSet: boolean next()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.users.UserService: void addUser(java.lang.String,java.lang.String,java.lang.String)>-><synthetic.method.UserRepositoryImpl: org.owasp.webgoat.users.WebGoatUser findByUsername(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.DurationFieldType: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.CodeSigner: java.lang.String toString()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.springframework.core.io.buffer.LimitedDataBufferList: boolean add(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.provider.PolicyParser$PermissionEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.controller.StartLesson: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.session.Course)>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.Course getCourse()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_7081affa3339030a9886305994d7394b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: void <init>()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.DigitList: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Symbol: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<javax.management.modelmbean.DescriptorSupport: java.lang.String[] getFields()>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.chrome_dev_tools.ChromeDevTools: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_e02c91d4fd4a667e67f2887acdd731e8(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity average()>-><java.util.HashMap: java.util.Set entrySet()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_ec714e7a6cd002e01c65eec239822a9b(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><org.springframework.util.FileCopyUtils: byte[] copyToByteArray(java.io.InputStream)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_59c2787561b599bcef1fcc2a00b46cb7(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Vector: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><java.util.Random: int nextInt(int)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Collections$SynchronizedCollection: java.lang.String toString()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Optional: java.lang.String toString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_c4d94587585d8403c6a6c40cdc70c8ea(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: void <init>()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)>-><org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm: java.lang.String getResetLink()>
<org.owasp.webgoat.xxe.SimpleXXE: boolean checkSolution(org.owasp.webgoat.xxe.Comment)>-><org.owasp.webgoat.xxe.Comment: java.lang.String getText()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Splat: java.lang.String toString()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.idor.IDORDiffAttributes: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.IRScope: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.AbstractSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: java.lang.String toString()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.password_reset.ResetLinkAssignment: void <init>()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flywayLessons()>-><org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.Flyway load()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$PadPrinterParserDecorator: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_bcaf8a7c00389b6ed6a754c3dddc453d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><java.util.concurrent.ForkJoinWorkerThread$InnocuousForkJoinWorkerThread: java.lang.ClassLoader getContextClassLoader()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.resolver.ResolvedMigrationImpl: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: java.sql.ResultSetMetaData getMetaData()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.StartWebGoat: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>-><org.hsqldb.jdbc.JDBCResultSet: java.lang.String getString(int)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.security.access.SecurityConfig: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.TimeData: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_b33e57864a04690bf201627cc24257d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_8978a794fe53613cb41ab40b9152e6ff(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: void <init>()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.ProcessEnvironment$Value: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.util.DerValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.csrf.ForgedReviews getForgedReviews()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_8c33c544e62ee8d79d7acb541a00a401(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.util.RecursiveComparator$Pair: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_d3ca1c159a5df4a62df8d5af9cfff75d(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>
<org.owasp.webgoat.password_reset.QuestionsAssignment: org.owasp.webgoat.assignments.AttackResult passwordReset(java.util.Map)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: void <init>(org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><com.google.common.collect.ImmutableEntry: java.lang.Object getValue()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_eb2ad5732c8669db07511e8178c67b04(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.lessons.Assignment: void <init>(java.lang.String)>-><org.owasp.webgoat.lessons.Assignment: void <init>(java.lang.String,java.lang.String,java.util.List)>
<org.jruby.ir.operands.ClosureLocalVariable: int compareTo(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_8978a794fe53613cb41ab40b9152e6ff(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.controller.Welcome: void callEntry_synthetic_welcome(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.controller.Welcome: org.springframework.web.servlet.ModelAndView welcome(javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.Provider$UString: java.lang.String toString()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: void callEntry_synthetic_listUsers(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.springframework.web.servlet.ModelAndView listUsers(javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.jruby.javasupport.JavaArray: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.WeakHashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.users.LessonTracker: void <init>(org.owasp.webgoat.lessons.Lesson)>-><java.lang.Object: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_62f6ced37af76ef1725f37d375f627e0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.JavaObjectData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelService: void <init>(org.springframework.web.servlet.LocaleResolver,org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.PluginMessages)>-><synthetic.method.SingletonFactory: org.owasp.webgoat.i18n.PluginMessages getPluginMessages()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.springframework.beans.factory.support.PropertiesBeanDefinitionReader: void registerBeanDefinition(java.lang.String,java.util.Map,java.lang.String,java.lang.String)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Optional: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.FrozenString: boolean equals(java.lang.Object)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.XStream: void <init>(com.thoughtworks.xstream.io.HierarchicalStreamDriver)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.type.ArrayType: java.lang.String toString()>
<org.owasp.webgoat.xxe.SimpleXXE: void callEntry_synthetic_createNewComment(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.xxe.SimpleXXE: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.LocalTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity build()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: java.lang.String getString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_976af2cf4f5d800f4ecb08a18158e096(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.temporal.ChronoUnit: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_95c18175489f88a1a958fb34db2054b9(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.StartWebGoat: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_976af2cf4f5d800f4ecb08a18158e096(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webwolf.user.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String)>-><java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void commit()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getTitle()>
<org.owasp.webgoat.users.UserTracker: void reset(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.users.UserTracker: org.owasp.webgoat.users.LessonTracker getLessonTracker(org.owasp.webgoat.lessons.Lesson)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.annotation.AnnotationValue$ForMissingType: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.subst.Token: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: java.sql.Connection getConnection()>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hibernate.boot.model.relational.Namespace$Name: boolean equals(java.lang.Object)>
<org.owasp.webgoat.asciidoc.EnvironmentExposure: void <init>()>-><java.lang.Object: void <init>()>
<org.hsqldb.persist.Cache$CachedObjectComparator: int hashCode(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: boolean equals(java.lang.Object)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Vector: java.util.Iterator iterator()>
<org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>-><java.lang.Object: java.lang.Class getClass()>
<org.springframework.web.util.HierarchicalUriComponents: void lambda$getQuery$0(java.lang.StringBuilder,java.lang.String,java.util.List)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hibernate.engine.profile.Fetch: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><io.undertow.util.SimpleAttachmentKey: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.RubyString: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_7bc033d1d93a495881441ddddbe3c4d8(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.security.Provider: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List lessonOverview()>-><java.util.ArrayList: void <init>()>
<org.hibernate.tool.schema.internal.Helper: org.hibernate.tool.schema.spi.ScriptTargetOutput interpretScriptTargetSetting(java.lang.Object,org.hibernate.boot.registry.classloading.spi.ClassLoaderService,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.provider.PolicyParser$DomainEntry: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_8ce7a9b57f61045d3b5e988fef5d3188(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_7e4d0445e6bfc928f903501b5bc2d2e9(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.stream.Stream stream()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><java.io.FileInputStream: void <init>(java.io.File)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: int length()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getMd5(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setPrefix(java.lang.String)>
<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult checkArguments(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods$Entry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><java.util.UUID: java.lang.String toString()>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><java.time.Instant: java.time.Instant plusSeconds(long)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer: org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer usernameParameter(java.lang.String)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><io.jsonwebtoken.Jwts: io.jsonwebtoken.JwtParser parser()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_eccd3d47684d2f19c248fd89a37bb2e8(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.xxe.Comment: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.RubyString: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.javasupport.JavaUtil$JavaConverter: java.lang.String toString()>
<org.owasp.webwolf.mailbox.Email: org.owasp.webwolf.mailbox.Email$EmailBuilder builder()>-><org.owasp.webwolf.mailbox.Email$EmailBuilder: void <init>()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView illegalCall()>-><org.springframework.web.servlet.ModelAndView: void setViewName(java.lang.String)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.jruby.org.objectweb.asm.tree.MethodNode$1: boolean add(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier: void <init>()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: void lambda$assignmentSolved$1(org.owasp.webgoat.lessons.Assignment)>-><java.util.HashSet: boolean add(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Hashtable$Entry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge1.Assignment1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_e4ad5c930097cc40f5fbb24351cf1ff8(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: int getRow()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Fixnum: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.util.TypeKey: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email: org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder builder()>
<org.owasp.webgoat.password_reset.QuestionsAssignment: org.owasp.webgoat.assignments.AttackResult passwordReset(java.util.Map)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.WeakHashMap: int size()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_b96b713d469ad010f286da3bd71f28d7(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.nio.file.InvalidPathException: java.lang.String getMessage()>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<javax.management.modelmbean.DescriptorSupport: java.lang.String[] getFields()>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_898694d6cb1d3d85d4ed2f2f119b1e40(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: void <init>()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.csrf.CSRF: void <init>()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.slf4j.event.Level: java.lang.String toString()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult notUsed(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_480ad9b8e2b965de7b428571c66c5383(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix: org.springframework.http.ResponseEntity getProfilePicture()>-><org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_3f69be87be6d3a7d505a9be7abad01dc(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity average()>-><java.util.stream.IntPipeline: int sum()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.calendar.CalendarDate: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.Email: java.lang.String toString()>-><org.owasp.webgoat.challenges.Email: java.lang.String getRecipient()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.CompositeType: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: java.util.List invoke(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<java.util.EnumMap$Values: boolean remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>
<org.hsqldb.types.CharacterType: java.lang.String convertJavaTimeObject(org.hsqldb.SessionInterface,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.MBeanConstructorInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: java.lang.String getPassword()>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.util.WeakHashMap$Entry: java.lang.Object getValue()>
<org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_b32719593ea0e9384ae8f3133a0e1e1e(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: java.lang.String getPassword()>-><java.lang.Throwable: void printStackTrace()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz getSqlInjectionQuiz()>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.JwtParser setSigningKey(java.lang.String)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.RestartLessonService: void restartLesson()>-><synthetic.method.UserTrackerRepositoryImpl: org.owasp.webgoat.users.UserTracker findByUser(java.lang.String)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.chrome_dev_tools.NetworkLesson: void <init>()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder ok()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.owasp.webgoat.users.WebGoatUser addUser(org.owasp.webgoat.users.WebGoatUser)>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(java.lang.String,java.lang.String)>-><java.lang.String: byte[] getBytes()>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><net.bytebuddy.description.annotation.AnnotationValue$ForMissingType: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_559b392021c73085cfaf8dd2652ec8d0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.beans.FeatureDescriptor: java.lang.String toString()>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder attemptWasMade()>
<org.owasp.webgoat.challenges.Email: int hashCode()>-><org.owasp.webgoat.challenges.Email: java.lang.String getRecipient()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>-><org.hsqldb.jdbc.JDBCResultSet: java.lang.String getString(int)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.xss.Comment: void setDateTime(java.lang.String)>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.crypto.HashingAssignment: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.Inet4Address: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.x509.RDN: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.csrf.ForgedReviews: void <init>()>-><net.bytebuddy.description.type.TypeList$Generic$Empty: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.net.ssl.SNIHostName: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Optional: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.stream.Nodes$FixedNodeBuilder: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.annotation.web.configurers.HeadersConfigurer headers()>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><java.security.Signature: boolean verify(byte[])>
<org.owasp.webgoat.missing_ac.Users$2: void <init>(org.owasp.webgoat.missing_ac.Users,java.util.HashMap)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><java.util.Arrays$ArrayList: java.lang.Object get(int)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanInfo: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_7081affa3339030a9886305994d7394b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: void close()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.IRScope: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.asm.Type: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.provider.PolicyParser$PermissionEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.Period: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedList$ListItr: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_96bb654151416b6511e7caf944554ca9(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.missing_ac.Users$6: void <init>(org.owasp.webgoat.missing_ac.Users,java.util.HashMap)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$SynchronizedCollection: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.ZoneId: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.ssrf.SSRF: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.http_basics.HttpBasics: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.BooleanNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.joda.time.base.AbstractInstant: java.lang.String toString(org.joda.time.format.DateTimeFormatter)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder setSubject(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.invoke.MemberName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Boolean,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean)>-><org.owasp.webgoat.service.LabelDebugService: java.util.Map createResponse(java.lang.Boolean)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_ec481567d66f245258da7c89623a5d1b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.GregorianCalendar: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Hashtable$Entry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.ObjectInstance: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><org.springframework.beans.factory.BeanCreationException: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.users.WebGoatUser: boolean isAccountNonLocked()>-><org.springframework.security.core.userdetails.User: boolean isAccountNonLocked()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.csrf.Review: void setStars(java.lang.Integer)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity follow(java.util.Map)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder status(org.springframework.http.HttpStatus)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity follow(java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Calendar: java.lang.String toString()>
<org.owasp.webgoat.service.LabelService: void callEntry_synthetic_fetchLabels(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.service.LabelService: org.springframework.http.ResponseEntity fetchLabels(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_34d1bfa4cf3fb6ea2ec476f17c99e3cd(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: void <init>()>
<org.owasp.webwolf.requests.WebWolfTraceRepository: void <init>()>-><com.google.common.collect.EvictingQueue: com.google.common.collect.EvictingQueue create(int)>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String getHashString()>-><org.owasp.webgoat.challenges.challenge7.MD5: byte[] getHash()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyMatchData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.method.MethodDescription$AbstractBase: java.lang.String toString()>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.convert.support.GenericConversionService: java.lang.String toString()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.XStream: void setClassLoader(java.lang.ClassLoader)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><synthetic.method.ServletResponseImpl: void <init>()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$EnumMapIterator: boolean hasNext()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$CompositePrinterParser: java.lang.String toString()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: void callEntry_synthetic_flag(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult flag(java.lang.String)>
<org.owasp.webgoat.password_reset.TriedQuestions: void incr(java.lang.String)>-><java.util.HashSet: boolean add(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.headius.invokebinder.transform.Spread: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_6f6959aa4b645fa8460dfa4ef8464205(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.core.io.ClassPathResource git(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.Extension: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Character: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.base.AbstractPeriod: java.lang.String toString()>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.ArrayType: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_b33e57864a04690bf201627cc24257d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.RubyModule: boolean equals(java.lang.Object)>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><org.joda.time.chrono.LimitChronology$LimitException: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flywayLessons()>-><org.flywaydb.core.Flyway: org.flywaydb.core.api.configuration.FluentConfiguration configure()>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.xss.Comment parseJson(java.lang.String)>-><org.owasp.webgoat.xss.Comment: void <init>()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.security.BasicPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.Servers$Server: void <init>(org.owasp.webgoat.sql_injection.mitigation.Servers,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.temporal.IsoFields$Field$3: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.LocalTime: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_3c4208f6228320a3d2d4ec26cbff32bd(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.ModelAndView mail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.AttributedCharacterIterator$Attribute: boolean equals(java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.chrome_dev_tools.NetworkLesson getNetworkLesson()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: java.lang.String getPassword()>-><org.hsqldb.jdbc.JDBCResultSet: java.lang.String getString(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_e6f31f32607015168d5e18c8e30cffd2(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.path_traversal.ProfileUploadRetrieval getProfileUploadRetrieval()>
<org.owasp.webgoat.users.RegistrationController: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.users.UserValidator: void validate(java.lang.Object,org.springframework.validation.Errors)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.chrome_dev_tools.NetworkDummy getNetworkDummy()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.validation.ObjectError: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.Users$3: void <init>(org.owasp.webgoat.missing_ac.Users,java.lang.Exception)>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.reflect.Constructor: java.lang.String toString()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: java.util.List usersService(javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_738e259b2ffe51f674b7974511e87864(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webwolf.mailbox.Email getEmailInstance()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_89f6cd6f15dd8121ec4b0f954595598b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.users.UserTracker: org.owasp.webgoat.users.LessonTracker getLessonTracker(org.owasp.webgoat.lessons.Lesson)>-><java.util.Optional: java.lang.Object get()>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_f3e66f61555492b062d1a3f786e8a23e(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.joran.spi.ConsoleTarget: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.flywaydb.core.api.Location: boolean equals(java.lang.Object)>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: org.springframework.security.config.annotation.web.configurers.LogoutConfigurer deleteCookies(java.lang.String[])>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_b32719593ea0e9384ae8f3133a0e1e1e(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_a24fa18a7d5b45cef36ba6a570c5cbd0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getMd5(javax.servlet.http.HttpServletRequest)>-><java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><org.jruby.RubyHash: void putAll(java.util.Map)>
<org.owasp.webwolf.user.WebGoatUser: boolean isCredentialsNonExpired()>-><org.springframework.security.core.userdetails.User: boolean isCredentialsNonExpired()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><ch.qos.logback.classic.spi.ClassPackagingData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.client_side_filtering.ClientSideFiltering: java.lang.String getTitle()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: void <clinit>()>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.X509CRLEntryImpl: java.lang.String toString()>
<org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail build()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: void <init>(java.time.LocalDateTime,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void fakeClickingLinkEmail(java.lang.String,java.lang.String)>-><org.springframework.web.client.RestTemplate: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.base.AbstractDateTime: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: java.sql.ResultSet executeQuery()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.ansi.Ansi8BitColor: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_6c84f84862bcfd301fe57cbac86d63d7(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.spring5.SpringTemplateEngine thymeleafTemplateEngine(org.thymeleaf.templateresolver.ITemplateResolver,org.owasp.webgoat.LessonTemplateResolver,org.owasp.webgoat.AsciiDoctorTemplateResolver)>-><org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect: void <init>()>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><java.net.URI: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>-><java.time.LocalDateTime: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.provider.PolicyFile$SelfPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String getHashString(java.lang.String)>-><org.owasp.webgoat.challenges.challenge7.MD5: void <init>()>
<java.util.Hashtable: java.lang.String toString()>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void <init>(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webwolf.requests.Requests: org.springframework.web.servlet.ModelAndView get()>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.LambdaForm: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_be6b144e5e5b7f6b9f5abd54525d6744(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webwolf.user.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.service.RestartLessonService: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository,org.flywaydb.core.Flyway)>-><synthetic.method.SingletonFactory: synthetic.method.UserTrackerRepositoryImpl getUserTrackerRepositoryImpl()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.invoke.MethodType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation: void <init>()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_4260c36abacd13309943359491caf94f(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUpload: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String)>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flywayLessons()>-><java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String getContents()>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: java.lang.String getBasicAuth(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(javax.servlet.http.HttpServletRequest)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.Users$6: void <init>(org.owasp.webgoat.missing_ac.Users,java.util.HashMap)>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><org.jruby.runtime.ObjectSpace$ObjectGroup: boolean add(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.javasupport.JavaObject: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.OffsetTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.task.TaskSchedulingProperties getTaskSchedulingPropertiesInstance()>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: void <init>()>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_aa75ad1bfdd8e8989c7dc6bcd11977ee(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile)>-><org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: java.lang.String toString()>
<org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getSender()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setUseForwardHeaders(java.lang.Boolean)>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>-><java.util.Optional: java.lang.Object get()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.HeadersConfigurer: org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$CacheControlConfig cacheControl()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation: void <init>()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><java.util.AbstractList: boolean add(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><javax.management.openmbean.TabularDataSupport: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.Provider$UString: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_d85620c250fc2f94842c24943176eac2(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView illegalCall(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView illegalCall()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.users.Scoreboard: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.users.UserRepository,org.owasp.webgoat.session.Course,org.owasp.webgoat.i18n.PluginMessages)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.OperandType: java.lang.String toString()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.users.UserValidator: void <init>(org.owasp.webgoat.users.UserRepository)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.service.LessonProgressService: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.WebSession)>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.nio.charset.CoderResult: java.lang.String toString()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><java.util.LinkedList: boolean add(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Float: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.idor.UserProfile getUserProfileInstance()>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput: void <init>(java.lang.String,org.owasp.webgoat.session.WebSession)>
<org.owasp.webwolf.mailbox.Email: boolean equals(java.lang.Object)>-><org.owasp.webwolf.mailbox.Email: java.lang.String getRecipient()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.asm.Handle: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.idor.UserProfile: java.lang.String getUserId()>
<org.owasp.webgoat.crypto.XOREncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: org.owasp.webgoat.users.LessonTracker getLessonTracker(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: boolean equals(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<java.util.Hashtable: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.Comment: void <init>(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.classmate.util.ClassKey: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.String: java.lang.String toLowerCase()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray: java.lang.String toString()>
<io.jsonwebtoken.impl.DefaultJwtParser: void validateExpectedClaims(io.jsonwebtoken.Header,io.jsonwebtoken.Claims)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_5aa66f7e968868af887b46315f082c3f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.format.support.FormattingConversionService$AnnotationConverterKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.challenges.challenge5.Challenge5: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.flywaydb.core.internal.resolver.ResolvedMigrationImpl: java.lang.String toString()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictions: void <init>()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.EnumMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.BigIntegerNode: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_c4c48ff1b647184a90e84818a83e349c(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge7.Challenge7: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.util.locale.BaseLocale$Key: boolean equals(java.lang.Object)>
<org.springframework.web.util.UriUtils: java.lang.String lambda$encodeUriVariables$1(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Vector: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_eb2b6a6bd1fa8a1648c4310392fed6e8(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.asm.Type: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge1.Assignment1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_a2866f179349b66c62448b4465c6feba(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_a304b23bb5f6d0733abf280964e998f6(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: void <init>()>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.calendar.CalendarDate: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.auth_bypass.VerifyAccount: java.lang.String getString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.lessons.CourseConfiguration: org.owasp.webgoat.session.Course course()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.PatternEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.zone.ZoneOffsetTransitionRule: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_be41e32e4e6663a1e6dcd67bab2ce6f4(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.owasp.webgoat.service.SessionService: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.javasupport.JavaClass: boolean equals(java.lang.Object)>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.UnboxedBoolean: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><java.time.Instant: java.time.Instant now()>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><java.util.HashMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.StringLiteral: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.tz.FixedDateTimeZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.session.UserSessionData: java.lang.Object getValue(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Boolean: boolean equals(java.lang.Object)>
<org.hibernate.engine.config.spi.StandardConverters$1: java.lang.Boolean convert(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.Row: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.MBeanOperationInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>
<org.owasp.webwolf.user.UserForm: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_26046cd854d4fd5d5da51c2dd316744d(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.controller.StartLesson: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.session.Course)>-><java.lang.Object: void <init>()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_3c2deab665fdff68dbdbec1f1aa47c18(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><org.jruby.RubyHash: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_9e48297f1122c6da9b777b8a5351f3b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_faa3f49bc1ea4d036ef76181ce4ac04(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.HashMap: int size()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint: void <init>()>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.mailbox.Email: java.lang.String getShortSender()>-><java.lang.String: int indexOf(java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: void <init>(java.util.List,java.util.List)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.runtime.backtrace.RubyStackTraceElement: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_b1455d3d7d474c817707c974c9e0383e(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.ScopeModule: boolean equals(java.lang.Object)>
<org.owasp.webgoat.session.WebSession: void <init>()>-><java.lang.Object: void <init>()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setViewNames(java.lang.String[])>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Float: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge1.Assignment1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.lessons.LessonMenuItem: void addChild(org.owasp.webgoat.lessons.LessonMenuItem)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap: java.lang.String toString()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.flywaydb.core.api.callback.Event: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_c65fb43415916d2677f2b39408237a92(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Character$Subset: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><net.bytebuddy.asm.AsmVisitorWrapper$ForDeclaredMethods$Entry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput: void <init>(java.lang.String,org.owasp.webgoat.session.WebSession)>-><org.owasp.webgoat.path_traversal.ProfileUploadBase: void <init>(java.lang.String,org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jcodings.Encoding: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.dirgra.Vertex: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_45579221de5fb78d4fc0b6b259ca0d17(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.DecimalFormatSymbols: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.validation.FieldError: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ast.Node: java.lang.String toString()>
<org.owasp.webgoat.i18n.Messages: java.util.Properties getMessages()>-><org.springframework.context.support.ReloadableResourceBundleMessageSource: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder getMergedProperties(java.util.Locale)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes: void <init>(org.owasp.webgoat.client_side_filtering.ShopEndpoint,java.util.List)>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><org.springframework.web.servlet.view.RedirectView: void <init>(java.lang.String,boolean)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.beans.factory.support.GenericBeanDefinition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><java.util.AbstractList: boolean add(java.lang.Object)>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.ArrayType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.env.CompositePropertySource: java.lang.String toString()>
<org.owasp.webgoat.template.SampleAttack$Item: void <init>(org.owasp.webgoat.template.SampleAttack,java.lang.String,java.lang.String,double)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Vector: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_47d3273e0b7a3190ec5fd7aa8aa6cafe(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_83d698e8f6d09bbe1d0f133ba4f09763(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.crypto.XOREncodingAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.owasp.webgoat.password_reset.QuestionsAssignment: org.owasp.webgoat.assignments.AttackResult passwordReset(java.util.Map)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_9377707d9e75c9963b5774ab998c5060(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity postForEntity(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Object[])>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_85a9d35c12dbaea8c5729aad26b55cde(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.runtime.IRReturnJump: java.lang.String toString()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.thoughtworks.xstream.io.path.Path: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.xxe.Comments: org.owasp.webgoat.xxe.Comment parseXml(java.lang.String)>-><javax.xml.bind.JAXBContext: javax.xml.bind.JAXBContext newInstance(java.lang.Class[])>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_ff7eaed2ff5e8f4fa0f24d1d24e91ff5(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation getBypassRestrictionsFrontendValidation()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.nio.ch.ExtendedSocketOption$1: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.Period: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.reflect.Constructor: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_7400ef04a6c13162043aca0ede41cf3e(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: java.lang.Object get(int)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webwolf.mailbox.Email: boolean equals(java.lang.Object)>-><org.owasp.webwolf.mailbox.Email: java.lang.String getTime()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: int executeUpdate(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_f503a6064ee433f0346552abe29d0bae(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity getVotes()>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.ProcessEnvironment$StringValues: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Thread: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<java.util.Hashtable: java.lang.String toString()>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.owasp.webgoat.AjaxAuthenticationEntryPoint: void commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)>-><org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint: void commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.openmbean.CompositeType: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_21e3070c340940633c24ae27c70f9f1c(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_97a5fc4b73ac08aff4f1b6d5345ffe6b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_faa3f49bc1ea4d036ef76181ce4ac04(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: java.lang.String getString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.boot.actuate.endpoint.invoke.reflect.OperationMethodParameter: java.lang.String toString()>
<org.owasp.webgoat.users.UserValidator: void <init>(org.owasp.webgoat.users.UserRepository)>-><synthetic.method.SingletonFactory: synthetic.method.UserRepositoryImpl getUserRepositoryImpl()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_f503a6064ee433f0346552abe29d0bae(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_6636aaa6959abf02e66fe93c6f15b929(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<java.util.EnumMap$Values: boolean remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.Assignment: void <init>(java.lang.String,java.lang.String,java.util.List)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.Duration: java.time.Duration ofDays(long)>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson6a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFFeedback: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.springframework.http.ResponseEntity resetPassword(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.base.AbstractPeriod: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$SynchronizedCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><java.lang.String: byte[] getBytes()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><jdk.internal.org.xml.sax.SAXException: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_b779ab33154cbf6c2f378af15abbc539(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.jwt.JWT: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestHash(java.util.jar.Manifest,sun.security.util.ManifestDigester,java.util.List)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1: java.lang.Object get(int)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.springframework.http.ResponseEntity resetPassword(java.lang.String)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.access.SecurityConfig: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.ResourceBundle$1: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.UUID: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.nio.ch.SocketOptionRegistry$RegistryKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getMd5(javax.servlet.http.HttpServletRequest)>-><javax.xml.bind.DatatypeConverter: java.lang.String printHexBinary(byte[])>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.org.objectweb.asm.Type: boolean equals(java.lang.Object)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.ModelAndView mail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.lessons.Assignment: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: java.lang.String getPath()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.Collections$UnmodifiableMap: int size()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.io.File: void <init>(java.io.File,java.lang.String)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.challenges.Email$EmailBuilder: org.owasp.webgoat.challenges.Email$EmailBuilder contents(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.util.locale.provider.RuleBasedBreakIterator: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.CurrentScope: boolean equals(java.lang.Object)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.util.calendar.ZoneInfo: java.lang.String toString()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: void callEntry_synthetic_login(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.password_reset.SimpleMailAssignment: void <init>(org.springframework.web.client.RestTemplate,java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_89505e4ce2842fff5889bc72c7df5077(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: void <init>()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webwolf.requests.LandingPage: org.springframework.http.ResponseEntity lambda$ok$0(javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder ok()>
<org.owasp.webwolf.FileServer$$InterceptorProxy: void callEntry_synthetic_getFileLocation(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webwolf.FileServer: java.lang.String getFileLocation()>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webwolf.user.UserService: void <init>(org.owasp.webwolf.user.UserRepository)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.database.base.Schema: boolean equals(java.lang.Object)>
<org.hibernate.boot.registry.selector.internal.StrategySelectorImpl: java.lang.Object resolveStrategy(java.lang.Class,java.lang.Object,java.util.concurrent.Callable,org.hibernate.boot.registry.selector.spi.StrategyCreator)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder: org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder title(java.lang.String)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getValue()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.regex.Pattern: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.resolver.ResolvedMigrationImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hibernate.internal.util.collections.BoundedConcurrentHashMap$LIRSHashEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.MBeanNotificationInfo: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.idor.IDORViewOtherProfile: void <init>()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.secure_password.SecurePasswords: void <init>()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><jnr.constants.ConstantSet$ConstantIterator: boolean hasNext()>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.session.Course: int getTotalOfAssignments()>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$PadPrinterParserDecorator: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: void <init>(javax.sql.DataSource)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: void <init>(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory,javax.sql.DataSource)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.RubySymbol: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.file.InvalidPathException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.validation.FieldError: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.math.BigInteger: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setXa(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa)>
<org.owasp.webgoat.i18n.PluginMessages: void <init>(org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.Language)>-><org.springframework.context.support.AbstractMessageSource: void setParentMessageSource(org.springframework.context.MessageSource)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.awt.Point: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.OffsetDateTime: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonTitleService: void callEntry_synthetic_showPlan(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.service.LessonTitleService: java.lang.String showPlan()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.hibernate.tool.schema.Action: org.hibernate.tool.schema.Action interpretJpaSetting(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.security.CodeSigner: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.HashMap: java.util.Collection values()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.PermissionCollection: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Vector$Itr: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean)>-><org.owasp.webgoat.session.LabelDebugger: void setEnabled(boolean)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult notUsed(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.google.common.collect.Multisets$AbstractEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.POJONode: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_8d8d6a26b21e92bdb18615eee1a96d1f(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.hibernate.tool.schema.Action: org.hibernate.tool.schema.Action interpretJpaSetting(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_ad12b1126fdedae8a4c352a3e02d0717(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_ee61bb7b2af6ce22a6765e7643db350e(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: void callEntry_synthetic_checkDebuggingStatus(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.MvcConfiguration: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.sun.jmx.mbeanserver.NamedObject: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.x509.RDN: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.util.HashMap$Node: java.lang.Object getValue()>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer permitAll()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.reflect.Proxy$Key2: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_eff0128b633cb7ec87edc6f304018295(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_b2b5e0e97eb81e194238306f8891fb62(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getSha256(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getHash(java.lang.String,java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.deserialization.InsecureDeserialization: java.lang.String getTitle()>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.StringBuffer getRequestURL()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.core.io.ClassPathResource git(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webwolf.FileServer getFileServer()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.undertow.servlet.spec.HttpServletResponseImpl: void addCookie(javax.servlet.http.Cookie)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webwolf.FileServer$$InterceptorProxy: java.lang.String getFileLocation(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.FileServer: java.lang.String getFileLocation()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.springframework.util.FileSystemUtils: boolean deleteRecursively(java.io.File)>
<org.owasp.webwolf.user.WebGoatUser: void <init>(java.lang.String,java.lang.String)>-><org.owasp.webwolf.user.WebGoatUser: void createUser()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.UserProfile: void setProfileFromId(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String)>
<org.owasp.webgoat.xss.mitigation.CrossSiteScriptingMitigation: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.ObjectName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.web.context.support.WebApplicationContextUtils$RequestObjectFactory: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: void <init>()>-><org.springframework.web.client.RestTemplate: void <init>()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webwolf.requests.Requests: org.owasp.webwolf.requests.Requests$Tracert lambda$get$1(org.springframework.boot.actuate.trace.http.HttpTrace)>-><org.owasp.webwolf.requests.Requests$Tracert: void <init>(org.owasp.webwolf.requests.Requests,java.time.Instant,java.lang.String,java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_a9f72f6845c11841c1699598f3b37f7(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: javax.tools.SimpleJavaFileObject getJavaFileContentsAsString(java.lang.String)>-><java.lang.StringBuilder: void <init>(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a getSqlInjectionLesson10a()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.math.BigDecimal: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_4de620526edc92bee1382712e5082f24(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webwolf.user.UserForm getUserFormInstance()>-><org.owasp.webwolf.user.UserForm: void setAgree(java.lang.String)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_79029c69c86fe08c71d6bbb98489fffe(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.web.context.support.WebApplicationContextUtils$WebRequestObjectFactory: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: boolean tableExists(java.sql.Connection)>
<org.owasp.webgoat.users.Scoreboard: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.users.UserRepository,org.owasp.webgoat.session.Course,org.owasp.webgoat.i18n.PluginMessages)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.SymbolProc: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.IntervalMonthData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_2313de72b014138d187ddb86455cecfa(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: void callEntry_synthetic_addUser(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.owasp.webgoat.users.WebGoatUser addUser(org.owasp.webgoat.users.WebGoatUser)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.x509.AVA: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: void putAll(java.util.Map)>
<org.owasp.webwolf.user.RegistrationController: void <init>(org.owasp.webwolf.user.UserValidator,org.owasp.webwolf.user.UserService,org.springframework.security.authentication.AuthenticationManager)>-><synthetic.method.SingletonFactory: org.owasp.webwolf.user.UserValidator getUserValidator()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_5d8abc336058b757213118c2c852e08f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.service.RestartLessonService: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository,org.flywaydb.core.Flyway)>-><org.flywaydb.core.Flyway: void <init>(org.flywaydb.core.api.configuration.Configuration)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Label: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Hashtable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.AttributeEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.java.proxies.ArrayJavaProxy: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.cia.CIAQuiz: void <init>()>
<com.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean first()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.crypto.CryptoPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Thread$WeakClassKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.users.LessonTracker: boolean isLessonSolved()>-><java.util.HashSet: int size()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.core.util.FastField: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.util.collections.WeakHashSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.StringJoiner: java.lang.String toString()>
<java.util.EnumMap: boolean equals(java.util.EnumMap)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.io.File: java.lang.String toString()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.csrf.Review: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.aop.support.DefaultIntroductionAdvisor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayDeque$DeqIterator: boolean hasNext()>
<org.owasp.webgoat.idor.UserProfile: java.util.Map profileToMap()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge1.Assignment1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.users.Scoreboard: java.util.List getRankings()>-><org.owasp.webgoat.users.Scoreboard$Ranking: void <init>(org.owasp.webgoat.users.Scoreboard,java.lang.String,java.util.List)>
<org.owasp.webgoat.users.UserTracker: org.owasp.webgoat.users.LessonTracker getLessonTracker(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setForwardHeadersStrategy(org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy)>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.i18n.PluginMessages: java.lang.String getMessage(java.lang.String,java.lang.Object[])>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_6fb641f411c6a6792f22a3d2f2c9db06(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><org.springframework.util.LinkedMultiValueMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_2bbeb95f3cf9aaa9a283a6721b260fe5(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.springframework.util.StringUtils: boolean isEmpty(java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.web.servlet.AbstractFilterRegistrationBean: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.missing_ac.MissingFunctionACUsers: void <init>()>
<org.jruby.ir.operands.LocalVariable: int compareTo(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>-><org.hsqldb.jdbc.JDBCResultSetMetaData: java.lang.String getColumnName(int)>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$SynchronizedMap: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.nio.file.InvalidPathException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwt: java.lang.Object getBody()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.atomic.AtomicBoolean: java.lang.String toString()>
<org.owasp.webgoat.jwt.votes.Vote: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)>-><java.lang.Object: void <init>()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.util.Collection values()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.owasp.webgoat.lessons.LessonMenuItem: void setName(java.lang.String)>
<org.owasp.webgoat.crypto.CryptoUtil: java.security.KeyPair generateKeyPair()>-><java.security.SecureRandom: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><ch.qos.logback.classic.Logger: void error(java.lang.String)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.expression.spel.standard.Token: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.locale.provider.RuleBasedBreakIterator: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.HintService: java.util.stream.Stream lambda$createAssignmentHints$1(java.util.List)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_f8418370a7514de433ded77b122d8da2(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.LocalDateTime: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_3c59a3de587189d05dc3f383b23c424d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: void <init>()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.format.DecimalStyle: boolean equals(java.lang.Object)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.io.ByteArrayResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.io.ByteArrayInputStream: void <init>(byte[])>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: java.sql.ResultSet executeQuery()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: java.lang.String getPassword()>-><org.hsqldb.jdbc.JDBCResultSet: boolean first()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: void <init>(javax.sql.DataSource)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: void <init>(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory,javax.sql.DataSource)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.password_reset.TriedQuestions: boolean isComplete()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.apache.logging.log4j.Level: boolean equals(java.lang.Object)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: void close()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: void callEntry_synthetic_start(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><synthetic.method.SingletonFactory: void setCourse(org.owasp.webgoat.session.Course)>
<org.owasp.webgoat.users.UserTracker: boolean lambda$numberOfAssignmentsSolved$2(java.lang.Boolean)>-><java.lang.Boolean: boolean booleanValue()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.awt.image.ComponentColorModel: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.Users$4: void <init>(org.owasp.webgoat.missing_ac.Users,java.util.HashMap)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.springframework.core.io.ClassPathResource: java.io.InputStream getInputStream()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_a82de75bf5a36cea47a1cec52f467578(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: java.util.List lessonOverview(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><java.util.Vector: java.lang.Object get(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.ObjectNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.vulnerable_components.VulnerableComponents: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<java.text.AttributeEntry: java.lang.String toString()>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.schemahistory.AppliedMigration: boolean equals(java.lang.Object)>
<org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Boolean,java.lang.String,javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getMethod()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: void <clinit>()>-><com.beust.jcommander.internal.Maps: java.util.Map newHashMap()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_2b5f98c3c975e9cefb796b7b27861cb5(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.api.Location: java.lang.String toString()>
<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring: boolean hasId(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.StringLiteral: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.HsqlNameManager$HsqlName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><javax.xml.xpath.XPathFactory: javax.xml.xpath.XPathFactory newInstance()>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.OffsetTime: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments: void <init>()>-><net.bytebuddy.description.type.TypeList$Generic$Empty: void <init>()>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.invoke.LambdaForm: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.MBeanConstructorInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.core.io.ClassPathResource git(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$HeaderEntry: java.lang.Object getValue()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.http.HttpStatus: int value()>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.lessons.CourseConfiguration: org.owasp.webgoat.lessons.Assignment lambda$createAssignment$2(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getPath(java.lang.Class)>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_2c48a215bf6800328689ba02a2ba264c(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.challenges.challenge1.Assignment1: boolean containsHeader(javax.servlet.http.HttpServletRequest)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setUsername(java.lang.String)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.challenges.challenge7.MD5$MD5State: void <init>(org.owasp.webgoat.challenges.challenge7.MD5)>-><org.owasp.webgoat.challenges.challenge7.MD5$MD5State: void reset()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.asm.Type: java.lang.String toString()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.NumberFormat: java.lang.String format(double)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Formatter$FormatSpecifier: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><java.util.Calendar: java.util.Calendar getInstance()>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.http.HttpStatus: java.lang.String toString()>
<org.owasp.webgoat.MvcConfiguration: void addViewControllers(org.springframework.web.servlet.config.annotation.ViewControllerRegistry)>-><org.springframework.web.servlet.config.annotation.ViewControllerRegistration: void setViewName(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_baa8a78a0f0703be452069385bf6bf5(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.x509.Extension: java.lang.String toString()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: int numberOfLessonsSolved()>-><java.util.HashSet: java.util.Iterator iterator()>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flyWayContainer()>-><org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.Flyway load()>
<org.hibernate.tool.schema.Action: org.hibernate.tool.schema.Action interpretHbm2ddlSetting(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.service.LabelService: void <init>(org.springframework.web.servlet.LocaleResolver,org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.PluginMessages)>-><org.springframework.web.servlet.i18n.SessionLocaleResolver: void <init>()>
<org.owasp.webwolf.mailbox.Email: int hashCode()>-><org.owasp.webwolf.mailbox.Email: java.lang.Long getId()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><net.bytebuddy.description.annotation.AnnotationDescription$AbstractBase: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setEnabled(boolean)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes: java.util.Optional get(java.lang.String)>-><java.util.stream.ReferencePipeline: java.util.Optional findFirst()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_6fb641f411c6a6792f22a3d2f2c9db06(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.provider.PolicyFile$SelfPermission: java.lang.String toString()>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setContinueOnError(boolean)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.chrono.AbstractChronology: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.RegularEnumSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.secure_password.SecurePasswords: java.lang.String getTitle()>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void <init>()>-><java.util.HashMap: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_fb6db2e926eca4bdcd97c0ea5f2eb780(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_ff7eaed2ff5e8f4fa0f24d1d24e91ff5(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_1b89ff27c85176cf51b1c50fdcbf7d46(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.xxe.SimpleXXE: void callEntry_synthetic_getSampleDTDFile(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.xxe.SimpleXXE: java.lang.String getSampleDTDFile()>
<org.owasp.webgoat.i18n.PluginMessages: java.lang.String getMessage(java.lang.String,java.lang.Object[])>-><org.owasp.webgoat.i18n.Language: java.util.Locale getLocale()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.validation.FieldError: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.ImmutableDescriptor: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_2ab0c30e3e3e62578632762f2b501148(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.crypto.HashingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.chrono.BuddhistChronology: java.lang.String toString()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: java.lang.String toString()>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.util.collections.WeakHashSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webwolf.mailbox.MailboxController: org.springframework.http.ResponseEntity lambda$sendEmail$0(org.owasp.webwolf.mailbox.Email)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder status(org.springframework.http.HttpStatus)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setType(java.lang.Class)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<javax.management.modelmbean.DescriptorSupport: boolean isValid()>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flyWayContainer()>-><org.flywaydb.core.Flyway: org.flywaydb.core.api.configuration.FluentConfiguration configure()>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean)>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.tz.CachedDateTimeZone: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><org.jruby.org.objectweb.asm.tree.MethodNode$1: boolean add(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_aaaa06d6f57ec3716366865197439c4a(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.YearMonth: java.lang.String toString()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.sql.Date: java.lang.String toString()>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.awt.image.IndexColorModel: java.lang.String toString()>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.HSQLDBDatabaseConfig: void <init>()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><org.springframework.http.converter.json.MappingJacksonValue: void <init>(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><javax.management.openmbean.TabularDataSupport: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.hibernate.tool.schema.Action: org.hibernate.tool.schema.Action interpretJpaSetting(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.xss.stored.StoredXssComments: void <clinit>()>-><org.joda.time.base.AbstractInstant: java.lang.String toString(org.joda.time.format.DateTimeFormatter)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_aa03f7b4f89f69bc6bca0bf12716ab49(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$EmptyMap: java.lang.Object get(java.lang.Object)>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.invoke.LambdaForm$Name: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getSender()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.AttributeAccessorSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.ArrayType: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_2ca04cd114e8a754ac2f7d64471538ec(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.util.calendar.ZoneInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.Email: int hashCode()>-><org.owasp.webgoat.challenges.Email: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.reflect.Method: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.util.calendar.LocalGregorianCalendar$Date: java.lang.String toString()>
<org.springframework.web.util.UriComponents: java.lang.String getVariableValueAsString(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.flywaydb.core.internal.util.Pair: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webwolf.requests.Requests: void <init>(org.owasp.webwolf.requests.WebWolfTraceRepository,com.fasterxml.jackson.databind.ObjectMapper)>
<org.owasp.webgoat.xss.stored.StoredXssComments: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webwolf.requests.LandingPage: org.springframework.http.ResponseEntity lambda$ok$0(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.StringBuffer getRequestURL()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_27af345c61f1ec563d046cf1b013603a(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.crypto.CryptoUtil: java.security.KeyPair generateKeyPair()>-><java.security.spec.RSAKeyGenParameterSpec: void <init>(int,java.math.BigInteger)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webwolf.mailbox.MailboxController: org.springframework.web.servlet.ModelAndView mail()>-><synthetic.method.MailboxRepositoryImpl: java.util.List findByRecipientOrderByTimeDesc(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<org.owasp.webwolf.user.WebGoatUser: java.util.Collection getAuthorities()>-><org.owasp.webwolf.user.WebGoatUser: java.lang.String getRole()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all()>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_ec6299b69f53477332226419e50d6054(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_1e3d9c740f8eaa1671792095367ac998(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.flywaydb.core.api.Location: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractList: java.util.Iterator iterator()>
<org.owasp.webgoat.users.RegistrationController: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><org.springframework.validation.BindException: boolean hasErrors()>
<org.owasp.webgoat.users.Scoreboard: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.users.UserRepository,org.owasp.webgoat.session.Course,org.owasp.webgoat.i18n.PluginMessages)>-><synthetic.method.SingletonFactory: org.owasp.webgoat.i18n.PluginMessages getPluginMessages()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Hashtable$Entry: java.lang.String toString()>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.crypto.EncodingAssignment: void <init>()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.jsoup.helper.ChangeNotifyingArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><io.jsonwebtoken.impl.JwtMap: void putAll(java.util.Map)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.challenges.Email$EmailBuilder: org.owasp.webgoat.challenges.Email$EmailBuilder title(java.lang.String)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.instructions.Instr: java.lang.String toString()>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: void callEntry_synthetic_checkDebuggingStatus(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.service.LabelDebugService: void <init>(org.owasp.webgoat.session.LabelDebugger)>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArraySet: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flywayLessons()>-><org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.api.configuration.FluentConfiguration dataSource(javax.sql.DataSource)>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.hsqldb.types.Type: int hashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.idor.IDOREditOtherProfiile: java.lang.String getString()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_72cb7e3e6d59b6c617bac5772aceb12a(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.util.ByteList: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm getPasswordChangeFormInstance()>-><org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm: void setPassword(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.LocalVariable: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.env.PropertySource: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><jnr.constants.ConstantSet$ConstantIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.format.support.FormattingConversionService$PrinterConverter: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: void callEntry_synthetic_invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: void <init>(java.lang.Class,java.lang.Class,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.String: int indexOf(java.lang.String)>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><java.util.ArrayList: java.lang.Object get(int)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_940e342d44e1297d03021a4d3ca22df3(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_e6d3fb552a8c74e09bb816507d3ee6bd(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: void <init>()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: void callEntry_synthetic_login(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.TabularType: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArraySet: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.NamedThreadLocal: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_ff7eaed2ff5e8f4fa0f24d1d24e91ff5(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<java.util.AbstractList: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: java.lang.String toString()>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><org.owasp.webgoat.session.Course: java.util.List getLessons(org.owasp.webgoat.lessons.Category)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: void <init>(org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hibernate.boot.model.relational.Namespace: java.lang.String toString()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.deserialization.InsecureDeserialization: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.security.web.DefaultSecurityFilterChain: java.lang.String toString()>
<org.owasp.webwolf.user.RegistrationController: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: void login(java.lang.String,java.lang.String)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.http_basics.HttpBasicsLesson getHttpBasicsLesson()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.provider.PolicyFile$PolicyEntry: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.http_basics.HttpBasicsQuiz: void <init>()>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: void callEntry_synthetic_start(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.lessons.CourseConfiguration: org.owasp.webgoat.session.Course course()>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.hibernate.boot.registry.selector.internal.StrategySelectorImpl: java.lang.Object resolveStrategy(java.lang.Class,java.lang.Object,java.util.concurrent.Callable,org.hibernate.boot.registry.selector.spi.StrategyCreator)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$NumberPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.ResolvableType$SyntheticParameterizedType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.AbstractMap: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.chrome_dev_tools.ChromeDevTools: java.lang.String getTitle()>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.template.SampleAttack: java.util.List getItemsInBasket(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_a2866f179349b66c62448b4465c6feba(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_39567d3b9fd20c575385e5280fa9d1b2(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity follow(java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><java.io.File: boolean mkdirs()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>
<org.owasp.webgoat.service.LabelDebugService: void <init>(org.owasp.webgoat.session.LabelDebugger)>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.LabelDebugger getLabelDebugger()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_47d0ea9c0f4b1266c61403ab65d611b6(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.util.TokenBuffer: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.nio.ByteBuffer: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.session.Course: int getTotalOfAssignments()>-><java.lang.Integer: int intValue()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.io.AbstractResource: java.lang.String toString()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.xss.Comment: java.lang.String getText()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setUrl(java.lang.String)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_13903fe07d3d368c6110aec38fa0f507(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.jruby.javasupport.JavaObject: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.HsqlException: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.asciidoc.EnvironmentExposure: void <init>()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String)>-><org.owasp.webgoat.password_reset.SimpleMailAssignment: java.lang.String extractUsername(java.lang.String)>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Bignum: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.core.JsonProcessingException: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.OffsetTime: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.UnparseableExtension: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.RuleBasedCollator: boolean equals(java.lang.Object)>
<org.owasp.webwolf.requests.Requests: java.lang.String toJsonString(org.springframework.boot.actuate.trace.http.HttpTrace)>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_5d8abc336058b757213118c2c852e08f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubySymbol: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.tools.SimpleJavaFileObject: java.lang.String toString()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.springframework.web.servlet.ModelAndView listUsers(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.String,java.lang.Object)>
<org.owasp.webwolf.user.UserValidator: void <init>(org.owasp.webwolf.user.UserRepository)>-><synthetic.method.SingletonFactory: synthetic.method.UserRepositoryImpl getUserRepositoryImpl()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.provider.PolicyParser$PermissionEntry: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.joran.spi.ElementSelector: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.service.RestartLessonService: void restartLesson()>-><org.flywaydb.core.Flyway: int migrate()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson6a: void <init>()>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.i18n.PluginMessages pluginMessages(org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.Language)>-><org.springframework.context.support.AbstractResourceBasedMessageSource: void setBasenames(java.lang.String[])>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><java.util.Collections$SynchronizedCollection: boolean add(java.lang.Object)>
<org.owasp.webgoat.crypto.SigningAssignment: java.lang.String getPrivateKey(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.crypto.CryptoUtil: java.lang.String getPrivateKeyInPEM(java.security.KeyPair)>
<org.owasp.webgoat.csrf.CSRFLogin: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.csrf.CSRFLogin: void markAssignmentSolvedWithRealUser(java.lang.String)>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><org.owasp.webgoat.xxe.Comments: org.owasp.webgoat.xxe.Comment parseXml(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.service.LabelDebugService: void <init>(org.owasp.webgoat.session.LabelDebugger)>-><java.lang.Object: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_aebb121ab3c1c7dd79d810b834f2134a(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$InstantPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Boolean: java.lang.String toString()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.RegistrationController: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: void login(java.lang.String,java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_fb6db2e926eca4bdcd97c0ea5f2eb780(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.idor.IDORLogin getIDORLogin()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$JavaObjectFromString: void <init>(org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b,java.lang.String,java.lang.String)>-><javax.tools.SimpleJavaFileObject: void <init>(java.net.URI,javax.tools.JavaFileObject$Kind)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.password_reset.SecurityQuestionAssignment: void <init>()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.nulabinc.zxcvbn.matchers.Keyboard$Position: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.reflect.annotation.TypeAnnotation: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><net.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.LinkedList: boolean add(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.logging.Level: boolean equals(java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.AsciiDoctorTemplateResolver asciiDoctorTemplateResolver(org.owasp.webgoat.i18n.Language)>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setCharacterEncoding(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.jruby.RubyHash$BaseIterator: boolean hasNext()>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.ModelAndView mail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.lessons.Hint: int hashCode()>-><org.owasp.webgoat.lessons.Hint: java.lang.String getHint()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_4aec2f59e4f99f95406ddaad46d0973(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.io.BufferedReader: void close()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.util.Collections: void sort(java.util.List)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.i18n.Messages: java.util.Properties getMessages()>-><org.owasp.webgoat.i18n.Language: java.util.Locale getLocale()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_fc4110b6dabdbbde329fcd9f74befd38(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm getPasswordChangeFormInstance()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><java.io.File: void <init>(java.lang.String,java.lang.String)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.password_reset.PasswordReset: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.invoke.MethodType: java.lang.String toString()>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_3854d6bbdad8afb65519deb711581fb1(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: void <init>()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.format.support.FormattingConversionService$AnnotationParserConverter: java.lang.String toString()>
<org.owasp.webgoat.users.RegistrationController: void <init>(org.owasp.webgoat.users.UserValidator,org.owasp.webgoat.users.UserService,org.springframework.security.authentication.AuthenticationManager)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.WrappedIRClosure: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: void <init>()>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes: void <init>(org.owasp.webgoat.client_side_filtering.ShopEndpoint,java.util.List)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.challenges.Flag: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_85ac0d0be8868a6d7f676d9d07dad084(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.util.RawValue: java.lang.String toString()>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_6c84f84862bcfd301fe57cbac86d63d7(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>-><java.lang.String: boolean endsWith(java.lang.String)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.session.UserSessionData: java.lang.Object getValue(java.lang.String)>
<org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getRecipient()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.UnboxedFixnum: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.ScopeModule: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.RubyHash$ConvertingEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Calendar: java.lang.String toString()>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.Comment: void <init>(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.hibernate.loader.BatchFetchStyle: org.hibernate.loader.BatchFetchStyle interpret(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.missing_ac.Users$1: void <init>(org.owasp.webgoat.missing_ac.Users,java.sql.SQLException)>-><java.sql.SQLException: int getErrorCode()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity getVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_ac5ab215ffb76ef654b3ad9d4d4d5d78(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.BooleanNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.lib.RefCapablePropertyResourceBundle: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.ObjectClass: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_a49f644dd94eb3528b01695500695849(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><org.jruby.runtime.ObjectSpace$ObjectGroup: java.lang.Object get(int)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyObject: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String)>
<org.owasp.webgoat.cia.CIAQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: java.sql.Connection getConnection()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.web.context.request.ServletWebRequest: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.cglib.core.MethodInfo: boolean equals(java.lang.Object)>
<java.util.EnumMap$Values: boolean remove(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.password_reset.PasswordResetEmail: void <init>(java.time.LocalDateTime,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.MBeanInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_c0b4f8cf429fe255e8269ae378a5a917(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.challenges.Flag: void <init>()>-><synthetic.method.SingletonFactory: synthetic.method.UserTrackerRepositoryImpl getUserTrackerRepositoryImpl()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(javax.servlet.http.HttpServletRequest)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_cd8e68fce75a9004c5ca8f262e6c693d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm getPasswordChangeFormInstance()>-><org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm: void setResetLink(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.Collections$SynchronizedMap: java.util.Collection values()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.security.BasicPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.http_basics.HttpBasicsQuiz: void <init>()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_d80511b687c235e9e32d5412f7273d45(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer defaultSuccessUrl(java.lang.String,boolean)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String encode(java.lang.String,java.lang.String,java.lang.String)>-><io.jsonwebtoken.impl.Base64UrlCodec: java.lang.String encode(byte[])>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_89505e4ce2842fff5889bc72c7df5077(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Byte: java.lang.String toString()>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: void callEntry_synthetic_getSha256(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.crypto.HashingAssignment: void <init>()>
<org.hibernate.internal.util.config.ConfigurationHelper: java.lang.Integer getInteger(java.lang.String,java.util.Map)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.template.SampleAttack: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_eb0b78aca152e62f64158741efbe841c(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_668380633c21ec5005489b3b9b6b0468(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.challenges.challenge8.Assignment8: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.DoubleNode: boolean equals(java.lang.Object)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.BlobDataID: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: java.sql.Statement getStatement()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.util.calendar.Era: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder: org.owasp.webgoat.webwolf_introduction.Email build()>-><org.owasp.webgoat.webwolf_introduction.Email: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.java.proxies.ArrayJavaProxy: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: java.util.List getRankings(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: java.util.List lessonOverview(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.service.LessonProgressService: java.util.List lessonOverview()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.env.CompositePropertySource: java.lang.String toString()>
<org.owasp.webwolf.user.RegistrationController: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><org.owasp.webwolf.user.UserForm: java.lang.String getUsername()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.ZonedDateTime: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Integer: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Collections$UnmodifiableMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.LessonTemplateResolver: void <init>(org.springframework.core.io.ResourceLoader)>-><java.util.Set: java.util.Set of(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.springframework.http.ResponseEntity resetPassword(java.lang.String)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity body(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getKey()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.http.HttpProperties getHttpPropertiesInstance()>-><org.springframework.boot.autoconfigure.http.HttpProperties: void setLogRequestDetails(boolean)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_dc7ca2c6295d2288190f4c7a0a33a9f5(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webgoat.users.UserForm getUserFormInstance()>
<org.owasp.webgoat.challenges.challenge7.MD5: byte[] getHash()>-><org.owasp.webgoat.challenges.challenge7.MD5: byte[] encode(long)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.cia.CIAQuiz getCIAQuiz()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.password_reset.QuestionsAssignment: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.util.calendar.Era: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwt: java.lang.Object getBody()>
<org.owasp.webgoat.challenges.challenge7.PasswordResetLink: java.lang.String createPasswordReset(java.lang.String,java.lang.String)>-><java.util.Random: void <init>()>
<org.owasp.webgoat.HammerHead: void <init>(org.owasp.webgoat.session.Course)>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.Course getCourse()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.csrf.CSRFLogin: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.spring5.SpringTemplateEngine thymeleafTemplateEngine(org.thymeleaf.templateresolver.ITemplateResolver,org.owasp.webgoat.LessonTemplateResolver,org.owasp.webgoat.AsciiDoctorTemplateResolver)>-><java.util.Set: java.util.Set of(java.lang.Object,java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.missing_ac.Users$5: void <init>(org.owasp.webgoat.missing_ac.Users,java.lang.Exception)>-><java.util.HashMap: void <init>()>
<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.validation.FieldError: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_3854d6bbdad8afb65519deb711581fb1(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void <init>()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_c4d94587585d8403c6a6c40cdc70c8ea(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Integer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Date: boolean equals(java.lang.Object)>
<org.hibernate.internal.util.config.ConfigurationHelper: java.lang.Integer getInteger(java.lang.String,java.util.Map)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webwolf.mailbox.Email: void <init>()>-><java.time.LocalDateTime: java.time.LocalDateTime now()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.format.support.FormattingConversionService$AnnotationConverterKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractMap$1$1: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.security.core.userdetails.User: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.String: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.Type: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.type.PlaceholderForType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.cglib.core.MethodInfo: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><net.bytebuddy.description.annotation.AnnotationValue$ForConstant: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.JsonMappingException: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.ZoneId: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_e81a6b5cd9d77461906af2e8eb4bf8b3(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionAdvanced: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.SimpleTimeZone: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_480ad9b8e2b965de7b428571c66c5383(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.assignments.LessonTrackerInterceptor: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.WebSession)>-><synthetic.method.SingletonFactory: synthetic.method.UserTrackerRepositoryImpl getUserTrackerRepositoryImpl()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_313f210aa4240085446eeb645a0a02a5(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.PropertyPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_69b6331f22330795398b35e8493c198d(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.expression.spel.ast.Literal: java.lang.String toString()>
<org.owasp.webwolf.mailbox.Email: java.lang.String getShortSender()>-><java.lang.String: java.lang.String substring(int,int)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.spring5.SpringTemplateEngine thymeleafTemplateEngine(org.thymeleaf.templateresolver.ITemplateResolver,org.owasp.webgoat.LessonTemplateResolver,org.owasp.webgoat.AsciiDoctorTemplateResolver)>-><org.thymeleaf.TemplateEngine: void setTemplateResolvers(java.util.Set)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setPassword(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.pkcs.PKCS9Attribute: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_738e259b2ffe51f674b7974511e87864(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: void <init>()>
<org.owasp.webwolf.mailbox.MailboxController: org.springframework.web.servlet.ModelAndView mail()>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.spring5.SpringTemplateEngine thymeleafTemplateEngine(org.thymeleaf.templateresolver.ITemplateResolver,org.owasp.webgoat.LessonTemplateResolver,org.owasp.webgoat.AsciiDoctorTemplateResolver)>-><org.thymeleaf.spring5.SpringTemplateEngine: void setEnableSpringELCompiler(boolean)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_be41e32e4e6663a1e6dcd67bab2ce6f4(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.util.locale.UnicodeLocaleExtension: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webwolf.user.UserForm getUserFormInstance()>-><org.owasp.webwolf.user.UserForm: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_71dca6b32a1d2f27fa917fe8b675cef1(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.IRScope: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.nulabinc.zxcvbn.matchers.Keyboard$Position: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.client_side_filtering.Salaries: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.openmbean.TabularType: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.net.InetSocketAddress: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.PasswordReset: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.idor.IDORViewOtherProfile: java.lang.String getString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_e9ae164d773c1741c796a8ab174e683b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: java.util.List getRankings(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.service.RestartLessonService: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository,org.flywaydb.core.Flyway)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity average()>-><java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getMapping(java.lang.reflect.Method)>-><java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.URI: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Class: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_fab1c2a3f21d7e83eb5eb0c7e6d12d5f(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.session.UserSessionData: java.lang.Object getValue(java.lang.String)>-><java.util.HashMap: boolean containsKey(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.jar.Attributes: java.util.Collection values()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.LocalTime: java.lang.String toString()>
<org.owasp.webgoat.StartWebGoat: void main(java.lang.String[])>-><ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_5552cdbce95570615318ce424bff11b0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.challenges.challenge1.Assignment1: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.security.CodeSigner: java.lang.String toString()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><java.io.File: java.io.File[] listFiles(java.io.FileFilter)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ast.Node: java.lang.String toString()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model)>-><org.springframework.web.servlet.ModelAndView: void setViewName(java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$Record: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><io.jsonwebtoken.impl.DefaultJws: java.lang.Object getBody()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_486023c634f1fc74d4d1d6439ef5be54(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: void <init>()>
<org.springframework.beans.factory.support.PropertiesBeanDefinitionReader: void registerBeanDefinition(java.lang.String,java.util.Map,java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_b3bf4f52e408e160c4f14c2f07957203(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.http_basics.HttpBasicsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.Collections$EmptyMap: int size()>
<org.owasp.webgoat.WebSecurityConfig: void configureGlobal(org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder)>-><org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder: org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer userDetailsService(org.springframework.security.core.userdetails.UserDetailsService)>
<org.owasp.webgoat.xss.stored.StoredXssComments: void <clinit>()>-><org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hibernate.metamodel.model.domain.internal.AbstractAttribute: java.lang.String toString()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.xss.Comment parseJson(java.lang.String)>-><com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object readValue(java.lang.String,java.lang.Class)>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.springframework.web.servlet.ModelAndView listUsers(javax.servlet.http.HttpServletRequest)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.temporal.ChronoUnit: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment: void <init>()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.Email: org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder builder()>-><org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.database.base.Schema: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Class: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.io.PrintStream: void println(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: java.lang.String getString()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_a24fa18a7d5b45cef36ba6a570c5cbd0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.insecure_login.InsecureLoginTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.javasupport.JavaMethod: boolean equals(java.lang.Object)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<com.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.AbstractList: boolean add(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.csrf.CSRFFeedback getCSRFFeedback()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.CurrentScope: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: java.sql.ResultSet executeQuery()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.lang.ProcessEnvironment$StringValues$1: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.flywaydb.core.internal.resolver.ResolvedMigrationImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>
<org.owasp.webgoat.challenges.challenge5.Assignment5: void <init>(javax.sql.DataSource)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: void <init>(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory,javax.sql.DataSource)>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><java.util.Vector: boolean add(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity follow(java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.users.Scoreboard: java.util.List challengesSolved(org.owasp.webgoat.users.UserTracker)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><net.bytebuddy.asm.MemberSubstitution$Replacement$ForElementMatchers$Factory: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.TextNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.util.BuddhistCalendar: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.x509.UnparseableExtension: java.lang.String toString()>
<org.owasp.webgoat.challenges.Flag: void initFlags()>-><java.util.stream.IntPipeline$Head: void forEach(java.util.function.IntConsumer)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_c4c04a0abadb54531b22c76a166b07d1(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_71dca6b32a1d2f27fa917fe8b675cef1(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: void <init>()>-><net.bytebuddy.description.type.TypeList$Generic$Empty: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.util.BuddhistCalendar: java.lang.String toString()>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_c81d7b0b4790e79328da14252cd0ceac(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.OffsetDateTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.flywaydb.core.internal.resource.classpath.ClassPathResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_1160a299684e15188967d11d1bab5f16(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.sun.jmx.mbeanserver.WeakIdentityHashMap$IdentityWeakReference: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: void callEntry_synthetic_checkDebuggingStatus(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.session.LabelDebugger labelDebugger()>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.jca.ProviderConfig: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.util.ByteList: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.nulabinc.zxcvbn.Zxcvbn: com.nulabinc.zxcvbn.Strength measure(java.lang.String)>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.provider.PolicyParser$PrincipalEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.xss.stored.StoredXssComments: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webwolf.requests.LandingPage: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.tz.FixedDateTimeZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$WeekBasedFieldPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.io.File: java.lang.String getName()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.SymbolProc: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.auth_bypass.AuthBypass: java.lang.String getTitle()>
<org.owasp.webgoat.MvcConfiguration: void addResourceHandlers(org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry)>-><org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry: org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration addResourceHandler(java.lang.String[])>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: java.util.List compileFromString(java.lang.String)>-><javax.tools.DiagnosticCollector: java.util.List getDiagnostics()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.jdbc.DatabaseType: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.users.Scoreboard: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.users.UserRepository,org.owasp.webgoat.session.Course,org.owasp.webgoat.i18n.PluginMessages)>-><synthetic.method.SingletonFactory: synthetic.method.UserTrackerRepositoryImpl getUserTrackerRepositoryImpl()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.ssl.SSLSessionImpl: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.EnumMap: void putAll(java.util.Map)>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: void copyFiles(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.Salaries: void copyFiles()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.client_side_filtering.ShopEndpoint getShopEndpoint()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile: java.lang.String getOriginalFilename()>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.xss.stored.StoredXssComments: java.util.Collection retrieveComments()>-><java.util.Collections: void reverse(java.util.List)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.reflect.Parameter: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.UserSessionData getUserSessionData()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.xxe.ContentTypeAssignment: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.password_reset.TriedQuestions: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: boolean attemptWasMade(java.io.File,java.io.File)>-><java.io.File: java.io.File getParentFile()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><java.io.File: void <init>(java.io.File,java.lang.String)>
<org.owasp.webgoat.service.HintService: java.util.stream.Stream lambda$createAssignmentHints$1(java.util.List)>-><java.util.Collections$UnmodifiableCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void fakeClickingLinkEmail(java.lang.String,java.lang.String)>-><org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object[])>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_9e6e7d8a186ec19921f7fdc87357cfe1(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.owasp.webgoat.challenges.Email: java.lang.String toString()>-><org.owasp.webgoat.challenges.Email: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.zone.ZoneOffsetTransitionRule: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.zone.ZoneRules: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.DurationFieldType$StandardDurationFieldType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.PreparedStatement prepareStatement(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.UserSessionData getUserSessionData()>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.jruby.runtime.ObjectSpace$ObjectGroup: boolean add(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Float: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.security.AllPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><java.io.File: java.nio.file.Path toPath()>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.jwt.JWT: java.lang.String getTitle()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.temporal.ChronoField: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_85ac0d0be8868a6d7f676d9d07dad084(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.hibernate.QueryException: java.lang.String getMessage()>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.lang.String toString()>
<org.owasp.webgoat.assignments.AttackResult: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String,boolean)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.base.AbstractPartial: boolean equals(java.lang.Object)>
<org.owasp.webwolf.mailbox.Email: int hashCode()>-><java.lang.String: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>-><org.hsqldb.jdbc.JDBCResultSetMetaData: int getColumnCount()>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.openmbean.SimpleType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.LongNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.sun.beans.WildcardTypeImpl: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: void <init>()>
<org.owasp.webgoat.users.WebGoatUser: java.util.Collection getAuthorities()>-><org.owasp.webgoat.users.WebGoatUser: java.lang.String getRole()>
<org.owasp.webwolf.user.WebGoatUser: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier: void <init>()>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.CryptoUtil: void <clinit>()>-><java.math.BigInteger: java.math.BigInteger valueOf(long)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.IdentityHashMap: void putAll(java.util.Map)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.support.NullBean: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_58277fd64d85a71381e5c81e85cfee22(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: void <init>()>-><com.fasterxml.jackson.core.util.InternCache: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Collections$EmptyList: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.beans.PropertyValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.csrf.ForgedReviews: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: java.sql.Connection getConnection()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_14cfd44896ce1a39909e06c80b2db91f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.io.FileInputStream: void close()>
<org.owasp.webgoat.crypto.CryptoUtil: java.security.KeyPair generateKeyPair()>-><java.util.Random: int nextInt(int)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.crypto.EncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(java.lang.String,java.lang.String)>
<org.owasp.webgoat.missing_ac.MissingFunctionAC: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.passes.CompilerPass: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity defaultImage()>-><java.util.Base64: java.util.Base64$Encoder getEncoder()>
<java.util.EnumMap$Values: boolean remove(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_4f1046997c22d0e2ff9da20ea436a854(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Object: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.csrf.CSRFLogin: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest)>-><org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.JavaObjectData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all()>-><com.beust.jcommander.internal.Lists: java.util.List newArrayList()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.ThreadGroup: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_f9d98c78a1f23cefea07c9e24b6c4682(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<org.owasp.webgoat.lessons.LessonMenuItemType: void <clinit>()>-><org.owasp.webgoat.lessons.LessonMenuItemType: void <init>(java.lang.String,int)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.DoubleNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity average(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.base.AbstractDateTime: java.lang.String toString()>
<org.owasp.webgoat.users.LessonTracker: boolean lambda$getAssignment$0(java.lang.String,org.owasp.webgoat.lessons.Assignment)>-><org.owasp.webgoat.lessons.Assignment: java.lang.String getName()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><jnr.constants.ConstantSet$ConstantIterator: boolean hasNext()>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_b0f6a8ef171aa411c3a3f21a70b52597(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Vector: java.lang.String toString()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Hash: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: java.lang.String toString()>
<org.owasp.webwolf.requests.Requests$Tracert: void <init>(org.owasp.webwolf.requests.Requests,java.time.Instant,java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.flywaydb.core.internal.schemahistory.AppliedMigration: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.PreparedStatement prepareStatement(java.lang.String,int,int)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.challenges.challenge7.Assignment7: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<org.owasp.webgoat.users.Scoreboard$Ranking: void <init>(org.owasp.webgoat.users.Scoreboard,java.lang.String,java.util.List)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<org.owasp.webgoat.service.HintService: java.util.List lambda$createAssignmentHints$0(org.owasp.webgoat.lessons.Assignment)>-><org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_b32719593ea0e9384ae8f3133a0e1e1e(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.IntervalSecondData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.field.BaseDurationField: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getContents()>
<org.jruby.ir.operands.ClosureLocalVariable: int compareTo(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.lessons.CourseConfiguration: void <init>(java.util.List,java.util.List)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.RubyMatchData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String)>-><org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.RegularEnumSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.AttributedCharacterIterator$Attribute: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.springframework.util.FileCopyUtils: int copy(java.io.InputStream,java.io.OutputStream)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.FrozenString: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.util.unit.DataSize: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_58277fd64d85a71381e5c81e85cfee22(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String getTitle()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_b95f2bb76821b0a58592ce1c40454977(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webwolf.mailbox.Email getEmailInstance()>-><org.owasp.webwolf.mailbox.Email: void setSender(java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatter: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: void <init>(javax.sql.DataSource)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: void <init>(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory,javax.sql.DataSource)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void createSecretFileWithRandomContents()>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.Email: int hashCode()>-><org.owasp.webgoat.challenges.Email: java.lang.String getContents()>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.EnumMap$1: java.lang.String toString()>
<org.hibernate.MultiTenancyStrategy: org.hibernate.MultiTenancyStrategy determineMultiTenancyStrategy(java.util.Map)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: void <init>()>
<org.owasp.webgoat.csrf.CSRFLogin: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webwolf.user.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.sql.Time: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.NullBlock: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.time.LocalDateTime: java.time.LocalDateTime now()>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><io.undertow.servlet.core.ManagedServlet: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.ProtectionDomain$WeakProtectionDomainKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.xss.DOMCrossSiteScripting: void <init>()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.Collections$SingletonMap: java.lang.Object get(java.lang.Object)>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity follow(java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.springframework.util.ObjectUtils: java.lang.String nullSafeToString(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_18362482a767f7de3d037588a097d79c(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFGetFlag: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.i18n.PluginMessages getPluginMessages()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Character$Subset: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xss.stored.CrossSiteScriptingStored: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.tools.SimpleJavaFileObject: java.lang.String toString()>
<org.owasp.webgoat.missing_ac.DisplayUser: java.lang.String genUserHash(java.lang.String,java.lang.String)>-><java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hibernate.engine.query.spi.sql.NativeSQLQuerySpecification: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.classic.Logger: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.Expression: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.awt.Font: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream flatMap(java.util.function.Function)>
<org.owasp.webgoat.users.WebGoatUser: boolean isEnabled()>-><org.springframework.security.core.userdetails.User: boolean isEnabled()>
<org.owasp.webgoat.users.LessonTracker: void assignmentSolved(java.lang.String)>-><org.owasp.webgoat.users.LessonTracker: java.util.Optional getAssignment(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_cd8e68fce75a9004c5ca8f262e6c693d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<java.util.AbstractSet: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserService: void <init>(org.owasp.webgoat.users.UserRepository,org.owasp.webgoat.users.UserTrackerRepository)>-><synthetic.method.SingletonFactory: synthetic.method.UserRepositoryImpl getUserRepositoryImpl()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.users.Scoreboard: java.util.List getRankings()>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.field.UnsupportedDateTimeField: java.lang.String toString()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_3f69be87be6d3a7d505a9be7abad01dc(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.web.method.ControllerAdviceBean: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_82adf1e257c3baf1195a60e4260950c0(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_efda952e6f9243e997051c17b9e7702d(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<java.util.EnumMap: boolean equals(java.util.EnumMap)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setRenderHiddenMarkersBeforeCheckboxes(boolean)>
<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.joda.time.chrono.LimitChronology$LimitException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Bignum: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.locale.provider.RuleBasedBreakIterator: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.controller.StartLesson: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.session.Course)>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: java.sql.ResultSetMetaData getMetaData()>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><io.undertow.servlet.spec.HttpSessionImpl: java.util.Enumeration getAttributeNames()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_9e6e7d8a186ec19921f7fdc87357cfe1(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: void callEntry_synthetic_usersService(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.missing_ac.MissingFunctionACUsers: java.util.List usersService(javax.servlet.http.HttpServletRequest)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_588d7f19bb501d3d5ed32cd2695ff3d8(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.auth_bypass.VerifyAccount: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.GregorianCalendar: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_64693a619c940eb52b7cec39b1076373(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.asm.Handle: java.lang.String toString()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: java.lang.String toString()>
<org.owasp.webgoat.crypto.EncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.locale.UnicodeLocaleExtension: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.POJONode: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webwolf.mailbox.Email getEmailInstance()>-><org.owasp.webwolf.mailbox.Email: void <init>()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<org.hsqldb.types.Type: int hashCode(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.hsqldb.types.Type: int hashCode(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.Operation: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String encode(java.lang.String,java.lang.String,java.lang.String)>-><io.jsonwebtoken.impl.AbstractTextCodec: java.lang.String encode(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.chrono.ZonedChronology$ZonedDurationField: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_c273a460c8c9dca1afba3049fe15cb06(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_6636aaa6959abf02e66fe93c6f15b929(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: java.lang.String getString()>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.FloatNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.hibernate.boot.internal.SessionFactoryOptionsBuilder: java.util.function.Supplier determineStatelessInterceptor(java.util.Map,org.hibernate.boot.registry.selector.spi.StrategySelector)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_1d75855a45e8db3073286c7f5a5efa0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity follow(java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.auth_bypass.VerifyAccount: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.session.UserSessionData: void setValue(java.lang.String,java.lang.Object)>
<org.springframework.beans.TypeConverterDelegate: java.lang.Object convertIfNecessary(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Vector$Itr: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: javax.tools.SimpleJavaFileObject getJavaFileContentsAsString(java.lang.String)>-><java.lang.Throwable: void printStackTrace()>
<com.fasterxml.jackson.databind.ser.std.ToStringSerializer: java.lang.String valueToString(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><org.hsqldb.jdbc.JDBCResultSet: boolean next()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.net.InetSocketAddress: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: void callEntry_synthetic_retrieveComments(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.cglib.core.Signature: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.PropertyValue: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.csrf.CSRFLogin: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.csrf.CSRFLogin: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setSchemaUsername(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Reference: java.lang.String toString()>
<java.util.TreeMap$Entry: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.session.UserSessionData: void setValue(java.lang.String,java.lang.Object)>-><java.util.HashMap: java.lang.Object replace(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.WrappedIRClosure: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.jca.ProviderConfig: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.headius.invokebinder.Signature: java.lang.String toString()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_e9ae164d773c1741c796a8ab174e683b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><net.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.LessonTemplateResolver lessonTemplateResolver(org.springframework.core.io.ResourceLoader)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.csrf.ForgedReviews: java.util.Collection retrieveReviews()>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries: void copyFiles()>-><org.springframework.core.io.ClassPathResource: java.io.InputStream getInputStream()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.ansi.AnsiBackground: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flyWayContainer()>-><java.util.Map: java.util.Map of(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.lessons.Assignment: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: java.util.List getHints()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.owasp.webgoat.users.WebGoatUser addUser(org.owasp.webgoat.users.WebGoatUser)>-><org.owasp.webgoat.users.WebGoatUser: java.lang.String getRole()>
<org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Boolean,java.lang.String,javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.xxe.XXE: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.html_tampering.HtmlTampering: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.javasupport.JavaArray: boolean equals(java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.WeakHashMap: int size()>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Boolean: java.lang.String toString()>
<org.owasp.webwolf.user.WebGoatUser: java.util.Collection getAuthorities()>-><java.util.Collections: java.util.Set singleton(java.lang.Object)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$EmptyIterator: java.lang.Object next()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_ed156bb38e237cc0dd27e5fc9a18d96c(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_60582aca135edf7bf2076da4c4e14980(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.ssrf.SSRF: void <init>()>
<org.springframework.web.util.UriComponents: java.lang.String getVariableValueAsString(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$CompositePrinterParser: java.lang.String toString()>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><java.util.HashMap: java.util.Collection values()>
<java.util.ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<register-finalize <org.owasp.webgoat.client_side_filtering.Salaries: void copyFiles()>-><java.lang.ref.Finalizer: void register(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: java.lang.String getString()>
<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_9e48297f1122c6da9b777b8a5351f3b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.FileServer$$InterceptorProxy: void <init>()>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.i18n.Messages messageSource(org.owasp.webgoat.i18n.Language)>-><org.springframework.context.support.AbstractResourceBasedMessageSource: void setDefaultEncoding(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.headius.invokebinder.transform.Drop: java.lang.String toString()>
<org.owasp.webgoat.users.WebGoatUser: void <init>(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.lessons.Hint: java.lang.String toString()>-><org.owasp.webgoat.lessons.Hint: java.lang.String getAssignmentPath()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType: java.lang.String toString()>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.hibernate.QueryException: java.lang.String getMessage()>
<org.owasp.webwolf.user.WebGoatUser: java.util.Collection getAuthorities()>-><org.springframework.security.core.authority.SimpleGrantedAuthority: void <init>(java.lang.String)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void fakeClickingLinkEmail(java.lang.String,java.lang.String)>-><org.springframework.http.HttpHeaders: void <init>()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.missing_ac.MissingFunctionACUsers: void callEntry_synthetic_usersService(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.session.Course: java.util.List getLessons()>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.templateresolver.ITemplateResolver springThymeleafTemplateResolver(org.springframework.context.ApplicationContext)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.io.path.Path: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.Collections$UnmodifiableMap: int size()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.DateFormatSymbols: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.expression.spel.ast.StringLiteral: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.LabelService: void callEntry_synthetic_fetchLabels(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.web.context.request.ServletWebRequest: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.AbstractMap: java.lang.String toString()>
<org.owasp.webgoat.WebGoat: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.aop.framework.JdkDynamicAopProxy: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.service.LabelService: org.springframework.http.ResponseEntity fetchLabels(java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.lang.StringBuilder: void <init>()>
<org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>-><org.owasp.webgoat.assignments.AttackResult: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String,boolean)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webgoat.users.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.users.UserForm: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.asm.ConstantDynamic: boolean equals(java.lang.Object)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><org.hibernate.boot.registry.classloading.internal.AggregatedClassLoader$4: java.lang.Object nextElement()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.text.FieldPosition: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyFile: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.cia.CIA: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.LocalDateTime: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.LocalTime: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.stream.SpinedBuffer$OfInt: java.lang.String toString()>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.idor.IDORLogin: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_d95c34167185dc3c589f788bc4f5347d(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.time.LocalDateTime getTime()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_de9f3a50ce8f47b14ba8b770c97c36e6(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.BigIntegerNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.config.BeanDefinitionHolder: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Collections$EmptyList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity$HeadersBuilder location(java.net.URI)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.util.RecursiveComparator$Pair: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews: void <init>()>-><com.fasterxml.jackson.core.util.InternCache: void <init>()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer: org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer passwordParameter(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.zone.TzdbZoneRulesProvider: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.security.access.SecurityConfig: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.QuestionsAssignment: org.owasp.webgoat.assignments.AttackResult passwordReset(java.util.Map)>-><java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_c273a460c8c9dca1afba3049fe15cb06(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: java.util.List invoke(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.Collections$UnmodifiableMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean canEqual(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.util.MimeType: java.lang.String toString()>
<org.owasp.webgoat.xxe.Comments: void <clinit>()>-><org.joda.time.base.AbstractInstant: java.lang.String toString(org.joda.time.format.DateTimeFormatter)>
<org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: java.util.List getHints()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<org.owasp.webgoat.challenges.Flag: void <clinit>()>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.pkcs.PKCS9Attribute: java.lang.String toString()>
<java.util.HashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.xxe.SimpleXXE: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.base.AbstractDuration: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge5.Challenge5: java.lang.String getTitle()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_680d283366844980e7a10953ef4851dc(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String getHint()>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.YearMonth: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity average(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.context.support.ServletContextResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.session.Course: java.util.List getLessons(org.owasp.webgoat.lessons.Category)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder informationMessage(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getValue()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.joda.time.DateTime: org.joda.time.DateTime now()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.path_traversal.PathTraversal: java.lang.String getTitle()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuilder: void <init>()>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webwolf.user.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.challenges.challenge1.Assignment1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.cia.CIAQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.util.Base64$Encoder: byte[] encode(byte[])>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webwolf.requests.Requests: void callEntry_synthetic_get(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.TreeMap$Entry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.Flag: void lambda$initFlags$0(int)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.boot.actuate.endpoint.annotation.AbstractDiscoveredEndpoint: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_b3bf4f52e408e160c4f14c2f07957203(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_ec714e7a6cd002e01c65eec239822a9b(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: void callEntry_synthetic_createNewUser(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>
<org.owasp.webgoat.users.UserService: void addUser(java.lang.String,java.lang.String)>-><synthetic.method.UserTrackerRepositoryImpl: java.lang.Object save(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.awt.Font: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_ee61bb7b2af6ce22a6765e7643db350e(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.String: boolean matches(java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.idor.IDOR: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model)>-><org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm: void setResetLink(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.Period: boolean equals(java.lang.Object)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Complex: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.util.HierarchicalUriComponents$FullPathComponent: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: java.lang.String toString()>
<org.owasp.webgoat.xxe.Comments: void <clinit>()>-><org.owasp.webgoat.xxe.Comment: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.users.UserTracker: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webwolf.FileServer$$InterceptorProxy: void callEntry_synthetic_getFileLocation(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.hsqldb.types.CharacterType: java.lang.String convertJavaTimeObject(org.hsqldb.SessionInterface,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.UnboxedBoolean: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.TreeMap: void putAll(java.util.Map)>
<org.owasp.webwolf.WebWolf: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.users.LessonTracker: void <init>(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Lesson: java.lang.String getId()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment: boolean checkIfLinkIsFromTom(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_ff3e6e9d12445f50b42c7a91a016f8b0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Long: boolean equals(java.lang.Object)>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><org.jruby.RubyArray: java.lang.Object get(int)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: void <init>(org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_6ef68e967cc416280079dd0c263916eb(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.nio.file.InvalidPathException: java.lang.String getMessage()>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.challenges.challenge1.Assignment1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.LessonTemplateResolver lessonTemplateResolver(org.springframework.core.io.ResourceLoader)>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setCharacterEncoding(java.lang.String)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_6d1c1838eb7e4400a71aa17357356a62(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.WeakHashMap$Entry: java.lang.Object getValue()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><java.util.AbstractList: java.util.Iterator iterator()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.field.BaseDateTimeField: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_5358008ad5d6cabcaaab3226198b66cc(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.csrf.ForgedReviews: void <clinit>()>-><org.owasp.webgoat.csrf.Review: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.net.URL: void <init>(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyThread: java.lang.String toString()>
<org.hibernate.tool.schema.internal.Helper: org.hibernate.tool.schema.spi.ScriptSourceInput interpretScriptSourceSetting(java.lang.Object,org.hibernate.boot.registry.classloading.spi.ClassLoaderService,java.lang.String)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictions: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>-><org.hsqldb.jdbc.JDBCResultSetMetaData: int getColumnCount()>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.service.LessonProgressService: java.util.List lessonOverview()>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webwolf.mailbox.Email: void <init>(java.lang.Long,java.time.LocalDateTime,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.xss.stored.StoredXssComments: void <clinit>()>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.RowType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.headius.invokebinder.transform.TryFinally: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.RubyHash$ConvertingEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.DateTimeFieldType: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.DynamicSymbol: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.users.UserService: org.owasp.webgoat.users.WebGoatUser loadUserByUsername(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hibernate.QueryException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.ObjectClass: java.lang.String toString()>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><ch.qos.logback.classic.Logger: void warn(java.lang.String)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: void <init>()>-><org.owasp.webwolf.FileServer: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.beans.factory.config.RuntimeBeanReference: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: void <init>(javax.sql.DataSource)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: void <init>(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory,javax.sql.DataSource)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><javax.management.openmbean.TabularDataSupport: java.lang.Object get(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.dirgra.Edge: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.chrono.GJChronology: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.LessonMenuService: void <init>(org.owasp.webgoat.session.Course,org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.Year: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: byte[] getJWTSignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.lessons.CourseConfiguration: org.owasp.webgoat.lessons.Assignment lambda$createAssignment$2(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.lessons.Assignment: void <init>(java.lang.String,java.lang.String,java.util.List)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String decode(java.lang.String)>-><java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.challenges.Email$EmailBuilder: org.owasp.webgoat.challenges.Email$EmailBuilder recipient(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz: boolean[] getResults()>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.missing_ac.DisplayUser: void <init>(org.owasp.webgoat.users.WebGoatUser)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.temporal.WeekFields: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.JwtParser setSigningKey(java.lang.String)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.jwt.JWTVotesEndpoint getJWTVotesEndpoint()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.sql_injection.mitigation.Servers: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.IdentityHashMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserService: java.util.List getAllUsers()>-><synthetic.method.UserRepositoryImpl: java.util.List findAll()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.classic.LoggerContext: java.lang.String toString()>
<org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getRecipient()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanOperationInfo: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_f3e66f61555492b062d1a3f786e8a23e(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Enum: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.xxe.SimpleXXE: void callEntry_synthetic_getWebGoatHomeDirectory(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><java.lang.Thread: java.lang.Thread currentThread()>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.IDORDiffAttributes: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Enum: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webgoat.users.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getTitle()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity body(java.lang.Object)>
<org.owasp.webwolf.user.UserValidator: void validate(java.lang.Object,org.springframework.validation.Errors)>-><org.springframework.validation.BindException: void rejectValue(java.lang.String,java.lang.String)>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.AsciiDoctorTemplateResolver: void <init>(org.owasp.webgoat.i18n.Language)>-><org.thymeleaf.templateresolver.AbstractTemplateResolver: void setResolvablePatterns(java.util.Set)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_3854d6bbdad8afb65519deb711581fb1(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.awt.Point: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.io.File: java.nio.file.Path toPath()>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webwolf.user.UserService: void <init>(org.owasp.webwolf.user.UserRepository)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.net.SocketPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hibernate.metamodel.model.domain.NavigableRole: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.base.AbstractPartial: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties getDiskSpaceHealthIndicatorPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties: void setPath(java.io.File)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><org.owasp.webgoat.xxe.Comments: org.owasp.webgoat.xxe.Comment parseXml(java.lang.String)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.Vector: boolean add(java.lang.Object)>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_6539ef38abd6182a3a6d9c654068ace(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.i18n.Messages messageSource(org.owasp.webgoat.i18n.Language)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.concurrent.ConcurrentHashMap$KeySetView: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult notUsed(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void <clinit>()>-><org.apache.commons.lang3.RandomStringUtils: java.lang.String randomAlphabetic(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$UnmodifiableCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.boot.ansi.AnsiColor: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.util.cli.Category: java.lang.String toString()>
<org.owasp.webgoat.controller.Welcome: org.springframework.web.servlet.ModelAndView welcome(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.AbstractMap$SimpleImmutableEntry: boolean equals(java.lang.Object)>
<java.util.concurrent.CopyOnWriteArraySet: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.ZoneOffset: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>-><java.io.File: java.lang.String getName()>
<org.owasp.webgoat.challenges.Email: int hashCode()>-><org.owasp.webgoat.challenges.Email: java.lang.String getSender()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hibernate.engine.profile.Fetch$Style: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_80eb5143a47f2e10c05121a8f2dd001f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><java.io.File: long length()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.format.support.FormattingConversionService$PrinterConverter: java.lang.String toString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson1: void <init>()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.IdentityHashMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_1731f925d73a36bf012d16b268fae04b(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.Collections$EmptyMap: java.lang.Object get(java.lang.Object)>
<com.fasterxml.jackson.databind.node.POJONode: boolean _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.MonthDay: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.web.context.support.WebApplicationContextUtils$ResponseObjectFactory: java.lang.String toString()>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: void callEntry_synthetic_getBasicAuth(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.crypto.EncodingAssignment: void <init>()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.sun.beans.WildcardTypeImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><io.undertow.servlet.api.ServletStackTraces: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.EnumMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.text.AttributedCharacterIterator$Attribute: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.xml.bind.JAXBException: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.IRScriptBody: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.chrono.BasicChronology: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean first()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List getHints(java.lang.Class)>-><java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hibernate.boot.model.relational.Namespace: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nullOrToString(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.ClobDataID: boolean equals(java.lang.Object)>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flyWayContainer()>-><org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.api.configuration.FluentConfiguration schemas(java.lang.String[])>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.runtime.Arity: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRF: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Fixnum: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_ba63740b242f7209e6939eaeab54f9bd(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.hibernate.boot.registry.selector.internal.StrategySelectorImpl: java.lang.Object resolveStrategy(java.lang.Class,java.lang.Object,java.util.concurrent.Callable,org.hibernate.boot.registry.selector.spi.StrategyCreator)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.temporal.IsoFields$Field$2: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.ObjectName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_c84163d02d01c4cfe14d65d56614e4c4(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webwolf.user.RegistrationController getRegistrationController()>
<org.hibernate.boot.registry.selector.internal.StrategySelectorImpl: java.lang.Object resolveStrategy(java.lang.Class,java.lang.Object,java.util.concurrent.Callable,org.hibernate.boot.registry.selector.spi.StrategyCreator)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all()>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode: void <init>(org.owasp.webgoat.client_side_filtering.ShopEndpoint,java.lang.String,int)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.apache.commons.lang3.StringUtils: java.lang.String reverse(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: void <init>(javax.sql.DataSource)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: void <init>(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory,javax.sql.DataSource)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.cglib.core.Signature: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_d92f8d4875ced4a130638cff2a5948f2(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$EmptyList: java.util.Iterator iterator()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webwolf.mailbox.Email getEmailInstance()>-><org.owasp.webwolf.mailbox.Email: void setContents(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$FractionPrinterParser: java.lang.String toString()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.EnumMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webwolf.mailbox.MailboxController getMailboxController()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: java.util.List usersService(javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyArray: java.util.Iterator iterator()>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: java.util.List invoke(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_2f5152c0c07b0ec774dcf26b621c5a65(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><io.jsonwebtoken.Jwts: io.jsonwebtoken.JwtParser parser()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setTemplateResolverOrder(java.lang.Integer)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hsqldb.types.JavaObjectDataInternal: java.lang.String toString()>
<java.util.AbstractSet: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_731c1ba80d15d8b99d04e9b1276c8aa6(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.RubyHash: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setAuthenticationDatabase(java.lang.String)>
<org.owasp.webgoat.xxe.Comments: java.util.Collection getComments()>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.ansi.Ansi8BitColor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_a82de75bf5a36cea47a1cec52f467578(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.users.UserValidator: void validate(java.lang.Object,org.springframework.validation.Errors)>-><org.owasp.webgoat.users.UserForm: java.lang.String getPassword()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_f32ce4308d2bc922bfc8ed06b0680553(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getKey()>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webwolf.user.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.user.RegistrationController: java.lang.String showForm(org.owasp.webwolf.user.UserForm)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: java.lang.String extractUsername(java.lang.String)>-><java.lang.String: int length()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.owasp.webwolf.requests.Requests: org.springframework.web.servlet.ModelAndView get()>-><org.owasp.webwolf.requests.WebWolfTraceRepository: java.util.List findAllTraces()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream sorted(java.util.Comparator)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.xss.CrossSiteScriptingQuiz: void <init>()>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry: org.springframework.security.config.annotation.web.HttpSecurityBuilder and()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.password_reset.QuestionsAssignment: void <clinit>()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.beans.PropertyValue: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.headius.invokebinder.transform.Drop: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.ssl.CipherSuite$KeyExchange: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.net.URI: void <init>(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: boolean equals(java.lang.Object)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.nulabinc.zxcvbn.Strength: com.nulabinc.zxcvbn.Feedback getFeedback()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.jar.Attributes$Name: java.lang.String toString()>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flyWayContainer()>-><org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.api.configuration.FluentConfiguration locations(java.lang.String[])>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.SimpleMailAssignment: java.lang.String extractUsername(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.util.RegexpOptions: java.lang.String toString()>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.AbstractRequestMatcherRegistry: java.lang.Object anyRequest()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.AbstractMap: boolean equals(java.lang.Object)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.Symbol: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: void <init>(org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractCollection: boolean addAll(java.util.Collection)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.cglib.core.Signature: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.javasupport.JavaMethod: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.net.URL: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.html_tampering.HtmlTamperingTask: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder setIssuedAt(java.util.Date)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.missing_ac.MissingFunctionACUsers: void callEntry_synthetic_addUser(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><io.jsonwebtoken.impl.Base64Codec: byte[] decode(java.lang.String)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><com.google.common.collect.Maps$10: java.lang.Object getValue()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><com.google.common.collect.TransformedIterator: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Currency: java.lang.String toString()>
<org.owasp.webgoat.crypto.CryptoUtil: java.security.KeyPair generateKeyPair()>-><java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.IdentityHashMap: int size()>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void lambda$resetVotes$1(org.owasp.webgoat.jwt.votes.Vote)>-><org.owasp.webgoat.jwt.votes.Vote: void reset()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_492383a3678325770a2500312c8ed370(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.template.SampleAttack: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.UserSessionData getUserSessionData()>
<org.owasp.webgoat.StartWebGoat: void main(java.lang.String[])>-><java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.text.AttributeEntry: java.lang.Object getValue()>
<org.owasp.webgoat.crypto.XOREncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder status(org.springframework.http.HttpStatus)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.chrono.ISOChronology: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.asm.Handle: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.ser.std.JsonValueSerializer: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.springframework.web.servlet.ModelAndView listUsers(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.missing_ac.DisplayUser: void <init>(org.owasp.webgoat.users.WebGoatUser)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.csrf.Review: void setUser(java.lang.String)>
<org.owasp.webgoat.jwt.votes.Vote: long calculateStars(int)>-><java.lang.Math: long round(double)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.LocalDate: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties getDiskSpaceHealthIndicatorPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_d88928050f9927098a56d488cdbda599(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.challenges.challenge7.PasswordResetLink: void <init>()>
<org.owasp.webgoat.service.LabelDebugService: java.util.Map createResponse(java.lang.Boolean)>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.hibernate.ConnectionReleaseMode: org.hibernate.ConnectionReleaseMode interpret(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_47d0ea9c0f4b1266c61403ab65d611b6(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.HsqlException: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.core.JsonLocation: java.lang.String toString()>
<com.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.hsqldb.types.CharacterType: java.lang.Object convertToDefaultType(org.hsqldb.SessionInterface,java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_e89bf2204dc61296ece810e537a88d52(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_59fb32f6acb84df323f079e4ece9ab7d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity getVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.i18n.Language language(org.springframework.web.servlet.LocaleResolver)>-><org.owasp.webgoat.i18n.Language: void <init>(org.springframework.web.servlet.LocaleResolver)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getMapping(java.lang.reflect.Method)>-><java.util.stream.ReferencePipeline: java.util.Optional findFirst()>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.WeakHashMap: void putAll(java.util.Map)>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.LambdaFormEditor$Transform: java.lang.String toString()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.hibernate.MultiTenancyStrategy: org.hibernate.MultiTenancyStrategy determineMultiTenancyStrategy(java.util.Map)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords getSqlOnlyInputValidationOnKeywords()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.idor.UserProfile: java.lang.String getSize()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.sql.DriverInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.context.support.ApplicationListenerDetector: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.DurationFieldType: java.lang.String toString()>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractList$Itr: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.WeakHashMap$HashIterator: boolean hasNext()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.stream.Nodes$IntFixedNodeBuilder: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.cache.CacheProperties getCachePropertiesInstance()>-><org.springframework.boot.autoconfigure.cache.CacheProperties: void setType(org.springframework.boot.autoconfigure.cache.CacheType)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.MonthDay: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_428cda48f64fb16749307dc77d415ad3(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: void <init>()>-><net.bytebuddy.description.type.TypeList$Generic$Empty: void <init>()>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String)>-><java.util.Optional: java.lang.Object orElse(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.i18n.PluginMessages: void <init>(org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.Language)>-><org.springframework.context.support.ReloadableResourceBundleMessageSource: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection: boolean equals(java.lang.Object)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(java.lang.String,java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_83d698e8f6d09bbe1d0f133ba4f09763(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webwolf.user.UserForm getUserFormInstance()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String decode(java.lang.String)>-><java.lang.String: int lastIndexOf(java.lang.String)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.AttributedString$AttributedStringIterator: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.web.context.support.WebApplicationContextUtils$SessionObjectFactory: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder contents(java.lang.String)>
<org.owasp.webwolf.mailbox.Email: boolean equals(java.lang.Object)>-><org.owasp.webwolf.mailbox.Email: java.lang.String getSender()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfWildcardType: java.lang.String toString()>
<org.owasp.webgoat.crypto.HashingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_59c2787561b599bcef1fcc2a00b46cb7(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<java.util.concurrent.CopyOnWriteArrayList: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.UserProfile: void <init>(java.lang.String)>-><java.lang.Object: void <init>()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.regex.Pattern: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.AbstractMap$1$1: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_ee61bb7b2af6ce22a6765e7643db350e(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.session.Course: java.util.List getCategories()>-><java.util.Collection: java.util.stream.Stream parallelStream()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments: void <init>()>-><com.fasterxml.jackson.core.util.InternCache: void <init>()>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_d71d8f471f64c3de0db2388799b8cf13(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webwolf.MvcConfiguration: void addViewControllers(org.springframework.web.servlet.config.annotation.ViewControllerRegistry)>-><org.springframework.web.servlet.config.annotation.ViewControllerRegistry: org.springframework.web.servlet.config.annotation.ViewControllerRegistration addViewController(java.lang.String)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.challenges.challenge8.Challenge8: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_fa92c0cce8ba32dbac5cead17c2ed19d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.core.JsonLocation: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.UserSessionData getUserSessionData()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyObject: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_60f682d018efc9659798d72b328d1fab(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: void <init>()>
<java.util.EnumMap: boolean equals(java.util.EnumMap)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.CurrentScope: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hibernate.cfg.MetadataSourceType: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.Duration: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.headius.invokebinder.transform.Fold: java.lang.String toString()>
<org.owasp.webgoat.xss.stored.StoredXssComments: java.util.Collection retrieveComments()>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.TemporaryVariable: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jcodings.Encoding: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.base.AbstractInstant: boolean equals(java.lang.Object)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_cd8cc591f6f01daa2103e0018d5b7cdd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity checkout(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_7400ef04a6c13162043aca0ede41cf3e(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.ArrayType: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.EnumMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.users.UserTracker: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.users.UserTracker: java.util.Optional getLessonTracker(java.lang.String)>-><java.util.stream.ReferencePipeline: java.util.Optional findFirst()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><org.hsqldb.server.Server: void setDatabaseName(int,java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_ec481567d66f245258da7c89623a5d1b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.resource.classpath.ClassPathResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1: boolean add(java.lang.Object)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier getDOMCrossSiteScriptingVerifier()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.TreeMap$Entry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.chrono.GJChronology: boolean equals(java.lang.Object)>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><org.owasp.webwolf.user.WebGoatUser: java.lang.String getUsername()>
<org.owasp.webgoat.challenges.challenge1.Assignment1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.RubyModule: boolean equals(java.lang.Object)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: void <init>()>-><org.owasp.webwolf.user.RegistrationController: void <init>(org.owasp.webwolf.user.UserValidator,org.owasp.webwolf.user.UserService,org.springframework.security.authentication.AuthenticationManager)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webwolf.WebWolf: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.TreeMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_a9d819c1f2308d6adf65ec04b64cdf97(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.classmate.ResolvedType: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.format.support.FormattingConversionService$AnnotationConverterKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.headius.options.Option: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_80eb5143a47f2e10c05121a8f2dd001f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><net.bytebuddy.description.method.ParameterDescription$AbstractBase: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.CommentsEndpoint: void <init>()>-><java.lang.Object: void <init>()>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: void callEntry_synthetic_getPrivateKey(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jws parseClaimsJws(java.lang.String)>
<org.owasp.webgoat.xss.CrossSiteScripting: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.headius.invokebinder.transform.Cast: java.lang.String toString()>
<org.owasp.webgoat.session.Course: java.util.List getLessons(org.owasp.webgoat.lessons.Category)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.IdentityHashMap: java.util.Collection values()>
<org.jruby.javasupport.JavaClass: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.owasp.webgoat.assignments.AttackResult click(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.ProcessEnvironment$Variable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$AuthorizedUrl: org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry authenticated()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_1a4f8fce0b49c67786d0b07b0f0b05dd(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hibernate.dialect.function.SQLFunctionTemplate: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: java.sql.Connection getConnection()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUpload: org.springframework.http.ResponseEntity getProfilePicture()>-><org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.expression.TypedValue: java.lang.String toString()>
<javax.management.modelmbean.DescriptorSupport: java.lang.String[] getFields()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.jar.Attributes: void putAll(java.util.Map)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.session.LabelDebugger labelDebugger()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.classic.spi.ClassPackagingData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.web.context.support.WebApplicationContextUtils$WebRequestObjectFactory: java.lang.String toString()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.io.FilePermission: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_a6f1a647bec074dc45b8f4c43e3724b4(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.ModelAndView mail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.AbstractSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.field.UnsupportedDurationField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><io.jsonwebtoken.impl.AndroidBase64Codec: byte[] decode(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_45579221de5fb78d4fc0b6b259ca0d17(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean add(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.nio.ByteBuffer: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.core.subst.Node: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.SubList$1: boolean hasNext()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.headius.options.Option: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.javasupport.JavaConstructor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractMap$1$1: boolean hasNext()>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.xxe.BlindSendFileAssignment: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.WebGoat: org.owasp.webgoat.session.WebSession webSession()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.ScopeModule: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_eb2ad5732c8669db07511e8178c67b04(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.webwolf_introduction.WebWolfIntroduction: void <init>()>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.xss.CrossSiteScriptingQuiz getCrossSiteScriptingQuiz()>
<org.owasp.webgoat.users.WebGoatUser: java.util.Collection getAuthorities()>-><java.util.Collections: java.util.Set singleton(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.Hint: java.lang.String toString()>-><org.owasp.webgoat.lessons.Hint: java.lang.String getHint()>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.html_tampering.HtmlTamperingTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyHash$BaseIterator: boolean hasNext()>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<java.util.EnumMap$Values: boolean remove(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.challenges.challenge5.Assignment5: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><net.bytebuddy.asm.MemberSubstitution$Replacement$ForElementMatchers$Factory: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.jar.Attributes: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: java.util.List invoke(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.Duration: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.EnumMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.zone.ZoneRules: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.users.LessonTracker: java.util.Optional getAssignment(java.lang.String)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: java.lang.String getString()>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.LocalTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.Hashtable: int size()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.DateTimeType: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><net.bytebuddy.description.annotation.AnnotationDescription$AbstractBase: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: java.util.Collection retrieveReviews(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.csrf.ForgedReviews: java.util.Collection retrieveReviews()>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.cglib.core.Signature: boolean equals(java.lang.Object)>
<org.owasp.webgoat.session.UserSessionData: void <init>(java.lang.String,java.lang.String)>-><org.owasp.webgoat.session.UserSessionData: void setValue(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.awt.Point: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder informationMessage(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webwolf.mailbox.Email: java.lang.String toString()>-><org.owasp.webwolf.mailbox.Email: java.lang.String getTitle()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13 getSqlInjectionLesson13()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedEntryIterator: java.lang.Object next()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><com.thoughtworks.xstream.core.util.WeakCache: int size()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: java.sql.Connection getConnection()>
<java.text.AttributeEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.springframework.core.io.buffer.LimitedDataBufferList: boolean add(java.lang.Object)>
<org.owasp.webgoat.users.UserService: void addUser(java.lang.String,java.lang.String,java.lang.String)>-><synthetic.method.UserTrackerRepositoryImpl: java.lang.Object save(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_ab2261934f992862c7780ef0cc6a643c(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.aop.framework.JdkDynamicAopProxy: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.users.UserTracker: org.owasp.webgoat.users.LessonTracker getLessonTracker(org.owasp.webgoat.lessons.Lesson)>-><java.util.Optional: boolean isPresent()>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity checkDebuggingStatus()>-><ch.qos.logback.classic.Logger: void debug(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.http_basics.HttpBasicsLesson: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.io.ObjectStreamClass: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_64693a619c940eb52b7cec39b1076373(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: void <init>()>
<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><java.util.ArrayList: boolean remove(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.dataflow.analyses.UnboxableOpsAnalysisNode: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: void <init>(org.springframework.web.client.RestTemplate,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_b96b713d469ad010f286da3bd71f28d7(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_898694d6cb1d3d85d4ed2f2f119b1e40(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: boolean tableExists(java.sql.Connection)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.hsqldb.jdbc.JDBCStatement: void close()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.owasp.webgoat.users.WebGoatUser addUser(org.owasp.webgoat.users.WebGoatUser)>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.UnexecutableNil: java.lang.String toString()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webwolf.user.RegistrationController: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><org.springframework.validation.BindException: boolean hasErrors()>
<org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>-><io.undertow.util.HeaderValues: java.lang.Object get(int)>
<org.owasp.webgoat.challenges.Flag: void initFlags()>-><java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.joda.time.chrono.LimitChronology$LimitException: java.lang.String getMessage()>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webgoat.users.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.springframework.web.util.HierarchicalUriComponents: void lambda$getQuery$0(java.lang.StringBuilder,java.lang.String,java.util.List)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.jar.Attributes: boolean equals(java.lang.Object)>
<java.util.LinkedHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.jca.ProviderConfig: java.lang.String toString()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String toHex(byte[])>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.crypto.SigningAssignment: java.lang.String getPrivateKey(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$LocalizedPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.xss.stored.StoredXssComments: void <clinit>()>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.RubyBasicObject: boolean equals(java.lang.Object)>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean equals(java.util.EnumMap)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.RegularEnumSet$EnumSetIterator: java.lang.Object next()>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><java.security.Signature: java.security.Signature getInstance(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.idor.UserProfile: void <init>(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.Clock$SystemClock: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_a83ddaaa2efe9676b1edaf5f342368ec(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><io.undertow.servlet.api.ServletStackTraces: java.lang.String toString()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model)>-><org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.ModelAndView addObject(java.lang.String,java.lang.Object)>
<org.springframework.web.util.UriComponents: java.lang.String getVariableValueAsString(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.IntNode: boolean equals(java.lang.Object)>
<java.util.TreeMap$Entry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.PropertyPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.flywaydb.core.api.Location: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.users.Scoreboard: java.util.List getRankings()>-><org.owasp.webgoat.users.Scoreboard: java.util.List challengesSolved(org.owasp.webgoat.users.UserTracker)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.runtime.Arity: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.http.HttpEntity: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.subst.Token: java.lang.String toString()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webwolf.WebWolf: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.idor.IDORDiffAttributes getIDORDiffAttributes()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.Collections$SingletonMap: java.lang.Object get(java.lang.Object)>
<org.hibernate.tool.schema.internal.Helper: org.hibernate.tool.schema.spi.ScriptTargetOutput interpretScriptTargetSetting(java.lang.Object,org.hibernate.boot.registry.classloading.spi.ClassLoaderService,java.lang.String)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.templateresolver.ITemplateResolver springThymeleafTemplateResolver(org.springframework.context.ApplicationContext)>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setTemplateMode(org.thymeleaf.templatemode.TemplateMode)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_23d4d32a045c04a12395dfd3b773a88f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.UnresolvedPermission: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_8fba5ade5da2eeb00b2c2acc1c5705ed(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.StringBuffer getRequestURL()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Locale$LocaleKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFLogin: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest)>-><org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper: java.security.Principal getUserPrincipal()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><jnr.constants.platform.Errno: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.SimpleTimeZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.idor.IDOREditOtherProfiile: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.beans.factory.support.NullBean: boolean equals(java.lang.Object)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.password_reset.TriedQuestions: void <init>()>-><java.util.HashSet: void <init>()>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webgoat.users.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.users.RegistrationController: java.lang.String showForm(org.owasp.webgoat.users.UserForm)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest)>-><org.apache.commons.lang3.StringUtils: java.lang.String reverse(java.lang.String)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_369d6766e8d426201c5d4c20ebf670bc(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.owasp.webgoat.challenges.challenge7.MD5: void update(java.lang.String)>-><org.owasp.webgoat.challenges.challenge7.MD5: void update(byte[])>
<org.hibernate.internal.util.config.ConfigurationHelper: java.lang.Integer getInteger(java.lang.String,java.util.Map)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.AjaxAuthenticationEntryPoint: void commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getHeader(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Integer: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model)>-><org.springframework.web.servlet.ModelAndView: void <init>()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getSha256(javax.servlet.http.HttpServletRequest)>-><java.util.Random: void <init>()>
<org.jruby.javasupport.JavaArray: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: void callEntry_synthetic_showLeftNav(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Symbol: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.path_traversal.ProfileUpload getProfileUpload()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.Collections$UnmodifiableMap: void putAll(java.util.Map)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.type.ClassKey: java.lang.String toString()>
<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.thoughtworks.xstream.core.util.FastField: boolean equals(java.lang.Object)>
<org.owasp.webwolf.mailbox.Email: java.lang.String toString()>-><org.owasp.webwolf.mailbox.Email: java.lang.String getRecipient()>
<org.springframework.cglib.core.EmitUtils$5: java.lang.Object transform(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: java.lang.String toString()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_af7cf551dba794a00d49284ff420f577(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.nio.file.InvalidPathException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.dataflow.analyses.UnboxableOpsAnalysisNode: java.lang.String toString()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.BigIntegerNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Collections$SynchronizedMap: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.reflect.Constructor: boolean equals(java.lang.Object)>
<org.springframework.web.util.UriComponents: java.lang.String getVariableValueAsString(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_39567d3b9fd20c575385e5280fa9d1b2(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.Collections$SynchronizedCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.ansi.AnsiColor: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.text.AttributeEntry: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.TemporaryVariable: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties getRestClientPropertiesInstance()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void <init>()>
<org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Boolean,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.insecure_login.InsecureLoginTask getInsecureLoginTask()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hibernate.QueryException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.RubyFixnum: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: void callEntry_synthetic_decode(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: java.lang.String toString()>
<java.util.WeakHashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_ad8e696bb3af66e8a16c36583ef16054(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.util.KeyValuePair: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String toHex(byte[])>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setExcludedViewNames(java.lang.String[])>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: void callEntry_synthetic_decode(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><synthetic.method.SingletonFactory: javax.sql.DataSource getDataSource()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.ForgedReviews: void <clinit>()>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.auth_bypass.AuthBypass: void <init>()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: void <init>()>
<org.springframework.boot.convert.StringToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_6539ef38abd6182a3a6d9c654068ace(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<java.util.Hashtable: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.UUID: java.lang.String toString()>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collection: java.util.stream.Stream stream()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson1: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.security.access.SecurityConfig: boolean equals(java.lang.Object)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.service.HintService: void <init>(org.owasp.webgoat.session.WebSession)>-><java.lang.Object: void <init>()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10 getSqlInjectionLesson10()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.introspect.MemberKey: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.security.Provider$ServiceKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.net.Inet4Address: boolean equals(java.lang.Object)>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.PasswordResetLink: java.lang.String createPasswordReset(java.lang.String,java.lang.String)>-><org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String getHashString(java.lang.String)>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_fc4110b6dabdbbde329fcd9f74befd38(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_812ed7f3dd95e2bf4a4cef93824d0c75(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyBasicObject: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.Year: boolean equals(java.lang.Object)>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode: org.hibernate.resource.jdbc.spi.PhysicalConnectionHandlingMode interpret(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.users.UserTracker: void assignmentFailed(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.users.UserTracker: org.owasp.webgoat.users.LessonTracker getLessonTracker(org.owasp.webgoat.lessons.Lesson)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><io.jsonwebtoken.impl.JwtMap: java.util.Collection values()>
<org.owasp.webgoat.service.RestartLessonService: void restartLesson()>-><ch.qos.logback.classic.Logger: void debug(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.RubyObject: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><io.jsonwebtoken.impl.DefaultJws: java.lang.Object getBody()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_ccd88393227f8fba58b43c26f02dd35b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<java.util.EnumMap: boolean equals(java.util.EnumMap)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.web.DefaultSecurityFilterChain: java.lang.String toString()>
<org.owasp.webwolf.mailbox.Email: java.lang.String getSummary()>-><java.lang.String: int length()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_fdedcd66f11a732fecda6effff7af4b9(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: void callEntry_synthetic_ok(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.nulabinc.zxcvbn.Feedback: java.util.List getSuggestions()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.MapType: java.lang.String toString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.xxe.SimpleXXE: void callEntry_synthetic_getWebGoatHomeDirectory(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.xxe.SimpleXXE: java.lang.String getWebGoatHomeDirectory()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_e6f31f32607015168d5e18c8e30cffd2(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.util.LinkedMultiValueMap: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_62cc3aad848eefbc1b1b97bbe376a987(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.awt.Font: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.chrono.BuddhistChronology: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserService: void addUser(java.lang.String,java.lang.String)>-><synthetic.method.UserRepositoryImpl: java.lang.Object save(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: java.util.List compileFromString(java.lang.String)>-><java.util.Arrays: java.util.List asList(java.lang.Object[])>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.naming.NamingException: java.lang.String toString()>
<org.owasp.webgoat.challenges.Email: java.lang.String toString()>-><org.owasp.webgoat.challenges.Email: java.time.LocalDateTime getTime()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties getLogFileWebEndpointPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.flywaydb.core.internal.info.MigrationInfoImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: void callEntry_synthetic_login(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.WebGoat: void <init>()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDORDiffAttributes: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><java.security.Signature: void update(byte[])>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: boolean tableExists(java.sql.Connection)>-><org.hsqldb.jdbc.JDBCResultSetMetaData: int getColumnCount()>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.ModelAndView mail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.MvcConfiguration: void createDirectory()>-><java.io.File: boolean mkdirs()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.service.ReportCardService$LessonStatistics: void setSolved(boolean)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanNotificationInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_b255d7ae89f34c188fd16afa53812fe6(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: void <init>()>
<com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nullOrToString(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webwolf.mailbox.Email: java.lang.String getTime()>-><java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ofPattern(java.lang.String)>
<org.owasp.webgoat.xss.stored.StoredXssComments: void <clinit>()>-><org.owasp.webgoat.xss.Comment: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><javax.security.auth.Subject$SecureSet$1: boolean hasNext()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_69fb8c8715ba801574b284d833d0b539(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: void callEntry_synthetic_getPrivateKey(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.crypto.SigningAssignment: java.lang.String getPrivateKey(javax.servlet.http.HttpServletRequest)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.PasswordResetLink: java.lang.String scramble(java.util.Random,java.lang.String)>-><java.lang.String: void <init>(char[])>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.passes.CompilerPass: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: java.sql.Connection getConnection()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.xss.Comment parseJson(java.lang.String)>-><com.fasterxml.jackson.databind.ObjectMapper: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.env.AbstractEnvironment: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson6a: void <init>()>
<org.owasp.webgoat.password_reset.TriedQuestions: boolean isComplete()>-><java.util.HashSet: int size()>
<org.springframework.boot.context.properties.source.MapConfigurationPropertySource: void put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.MD5: void transform(org.owasp.webgoat.challenges.challenge7.MD5$MD5State,int[])>-><org.owasp.webgoat.challenges.challenge7.MD5: int GG(int,int,int,int,int,int,int)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_2b5f98c3c975e9cefb796b7b27861cb5(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.JsonMappingException: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.sql.Timestamp: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.field.PreciseDurationField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.headius.invokebinder.transform.Permute: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: void <init>(javax.sql.DataSource)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: void <init>(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory,javax.sql.DataSource)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_f32ce4308d2bc922bfc8ed06b0680553(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult notUsed(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.Clock$SystemClock: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void <init>()>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Nil: java.lang.String toString()>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webwolf.user.RegistrationController: void <init>(org.owasp.webwolf.user.UserValidator,org.owasp.webwolf.user.UserService,org.springframework.security.authentication.AuthenticationManager)>-><synthetic.method.SingletonFactory: org.owasp.webwolf.user.UserService getUserService()>
<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webwolf.requests.LandingPage: org.springframework.http.ResponseEntity lambda$ok$0(javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity build()>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><org.hsqldb.jdbc.JDBCResultSet: java.lang.String getString(int)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>-><java.lang.String: java.lang.String replace(char,char)>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.Collections$UnmodifiableCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.owasp.webgoat.password_reset.QuestionsAssignment: void <clinit>()>-><java.util.HashMap: void <init>()>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.JapaneseImperialCalendar: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.Comments: java.util.Collection getComments()>-><java.util.Comparator: java.util.Comparator comparing(java.util.function.Function)>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><org.springframework.boot.actuate.trace.http.HttpTrace$Request: java.net.URI getUri()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.util.locale.BaseLocale$Key: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.joda.time.chrono.LimitChronology$LimitException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.ObjectName: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.YearMonth: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.locale.BaseLocale: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: void <init>()>-><java.lang.Object: void <init>()>
<org.hsqldb.map.BaseHashMap: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_c4c48ff1b647184a90e84818a83e349c(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_e647f766e81fdee578a25e2cb0999a87(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.headius.invokebinder.transform.Cast: java.lang.String toString()>
<org.owasp.webgoat.i18n.Messages: java.util.Properties getMessages()>-><org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: java.util.Properties getProperties()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.openmbean.TabularDataSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.headius.invokebinder.Signature: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.ZoneId: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.controller.StartLesson: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.session.Course)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_2f9d131756139227a58526d86a475976(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: void <init>()>
<java.util.Formatter$FormatSpecifier: void printString(java.lang.Object,java.util.Locale)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><org.hsqldb.server.Server: void setTrace(boolean)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_ec714e7a6cd002e01c65eec239822a9b(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Throwable: java.lang.String toString()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><org.dom4j.tree.BackedList: boolean add(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: int size()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder informationMessage(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.ResourceBundle$CacheKey: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_ac5ab215ffb76ef654b3ad9d4d4d5d78(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_964f2dbc5eaab28a830f7fbc382b831a(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: void <init>()>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><net.bytebuddy.description.method.MethodDescription$AbstractBase: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.web.context.support.WebApplicationContextUtils$FacesDependencyRegistrar$2: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.HintService: void <init>(org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.xxe.BlindSendFileAssignment: void <init>()>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.XOREncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.hibernate.ConnectionAcquisitionMode: org.hibernate.ConnectionAcquisitionMode interpret(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.util.MimeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.persist.CachedObjectBase: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.PasswordResetLink: java.lang.String scramble(java.util.Random,java.lang.String)>-><java.util.Random: int nextInt(int)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.idor.IDORViewOtherProfile: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_6539ef38abd6182a3a6d9c654068ace(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.core.util.FastField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.math.BigInteger: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>
<org.owasp.webgoat.xxe.Comments: void <init>()>-><net.bytebuddy.description.type.TypeList$Generic$Empty: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Self: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.util.calendar.CalendarDate: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_23f53bafd710ffb92c2c5178c6200b1(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.runtime.IRReturnJump: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.invoke.MethodType: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_2db999467cf1f73e637e90e0f68dc6a6(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.InetSocketAddress: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.crypto.Crypto: java.lang.String getTitle()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hibernate.EntityMode: java.lang.String toString()>
<org.owasp.webgoat.lessons.Assignment: int hashCode()>-><java.lang.String: int hashCode()>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.lessons.CourseConfiguration: void <init>(java.util.List,java.util.List)>-><java.util.stream.Collectors: java.util.stream.Collector groupingBy(java.util.function.Function)>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><org.xml.sax.InputSource: void <init>(java.io.InputStream)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.MBeanAttributeInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity average(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.invoke.InvokerBytecodeGenerator$CpPatch: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_a251759fcea8f26289d46f8e28e1bf1(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Double: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult: java.lang.String getFeedback()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.cglib.core.ClassInfo: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webwolf.requests.Requests: void <init>(org.owasp.webwolf.requests.WebWolfTraceRepository,com.fasterxml.jackson.databind.ObjectMapper)>
<org.owasp.webgoat.crypto.XOREncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Vector: java.util.Iterator iterator()>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean first()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.service.ReportCardService$ReportCard: void setTotalNumberOfAssignments(int)>
<org.hibernate.MultiTenancyStrategy: org.hibernate.MultiTenancyStrategy determineMultiTenancyStrategy(java.util.Map)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_c1c2da8380339d0f0bea51adc7373820(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.challenges.Flag: void callEntry_synthetic_postFlag(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.owasp.webgoat.assignments.AttackResult click(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.password_reset.QuestionsAssignment: org.owasp.webgoat.assignments.AttackResult passwordReset(java.util.Map)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.concurrent.atomic.AtomicReference: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_cd8cc591f6f01daa2103e0018d5b7cdd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: java.lang.String getPath()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Long: java.lang.String toString()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.idor.IDORViewOwnProfile: void <init>()>
<org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(javax.servlet.http.HttpServletRequest)>-><java.util.Random: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_b7a450ec56bb4ccee9e756c44c4eb3af(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hibernate.QueryException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_eb2b6a6bd1fa8a1648c4310392fed6e8(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webwolf.requests.LandingPage: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.ProcessEnvironment$Value: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfGenericArray: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.xss.DOMCrossSiteScripting getDOMCrossSiteScripting()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.apache.commons.lang3.RandomUtils: int nextInt(int,int)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.concurrent.atomic.AtomicBoolean: java.lang.String toString()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><io.jsonwebtoken.impl.JwtMap: boolean equals(java.lang.Object)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.auth_bypass.VerifyAccount: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>
<org.hsqldb.types.NumberType: java.lang.String convertToString(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Locale: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.util.LinkedMultiValueMap: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.flywaydb.core.internal.resource.classpath.ClassPathResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.asm.Type: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation getSqlOnlyInputValidation()>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.idor.IDORDiffAttributes: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.LocalDateTime: java.lang.String toString()>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.password_reset.SimpleMailAssignment: void <init>(org.springframework.web.client.RestTemplate,java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_5d8abc336058b757213118c2c852e08f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.ZonedDateTime: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webgoat.users.UserForm getUserFormInstance()>-><org.owasp.webgoat.users.UserForm: void setUsername(java.lang.String)>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.Instant: java.time.Instant now()>
<org.owasp.webgoat.client_side_filtering.Salaries: void copyFiles()>-><java.io.File: void <init>(java.lang.String,java.lang.String)>
<org.owasp.webgoat.csrf.CSRFLogin: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.awt.image.ComponentColorModel: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.database.oracle.OracleSchema$ObjectType: java.lang.String toString()>
<org.hibernate.engine.config.spi.StandardConverters$1: java.lang.Boolean convert(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.http.HttpStatus: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.springframework.util.FileCopyUtils: byte[] copyToByteArray(java.io.File)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_2c48a215bf6800328689ba02a2ba264c(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.temporal.IsoFields$Field$4: java.lang.String toString()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flyWayContainer()>-><org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.api.configuration.FluentConfiguration dataSource(javax.sql.DataSource)>
<org.owasp.webgoat.auth_bypass.VerifyAccount: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.auth_bypass.VerifyAccount: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webwolf.FileServer: void <init>()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webwolf.MvcConfiguration: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedList$ListItr: boolean hasNext()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><org.springframework.core.io.buffer.LimitedDataBufferList: boolean add(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String,boolean)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><java.util.HashMap$Values: void forEach(java.util.function.Consumer)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Double: java.lang.String toString()>
<com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nullOrToString(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webwolf.mailbox.Email: void <init>(java.lang.Long,java.time.LocalDateTime,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.time.LocalDateTime: java.time.LocalDateTime now()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.UnboxedBoolean: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Regexp: java.lang.String toString()>
<org.owasp.webgoat.users.UserTracker: int numberOfLessonsSolved()>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_faa3f49bc1ea4d036ef76181ce4ac04(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.missing_ac.MissingFunctionACUsers: void callEntry_synthetic_listUsers(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder status(org.springframework.http.HttpStatus)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getSender()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><jdk.internal.org.xml.sax.SAXException: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.LessonTemplateResolver: void <init>(org.springframework.core.io.ResourceLoader)>-><org.thymeleaf.templateresolver.AbstractTemplateResolver: void setResolvablePatterns(java.util.Set)>
<org.owasp.webgoat.lessons.Assignment: int hashCode()>-><java.util.Collections$EmptyList: int hashCode()>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><synthetic.method.HttpSessionImpl: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: java.lang.String toString()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.HashingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>
<org.owasp.webgoat.WebGoat: org.owasp.webgoat.session.UserSessionData userSessionData()>-><org.owasp.webgoat.session.UserSessionData: void <init>(java.lang.String,java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_738e259b2ffe51f674b7974511e87864(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webwolf.mailbox.Email getEmailInstance()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.UnboxedFixnum: java.lang.String toString()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_731c1ba80d15d8b99d04e9b1276c8aa6(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.AsciiDoctorTemplateResolver: void <init>(org.owasp.webgoat.i18n.Language)>-><java.util.Set: java.util.Set of(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_cc775263a7b145afb474e97d00f1f431(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><net.bytebuddy.asm.MemberSubstitution$Replacement$Factory$Compound: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.AVA: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.format.DecimalStyle: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.TabularType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.io.support.EncodedResource: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.Label: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.security.UnresolvedPermission: java.lang.String toString()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: int executeUpdate(java.lang.String)>
<org.owasp.webgoat.challenges.Email$EmailBuilder: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webwolf.MvcConfiguration: void addViewControllers(org.springframework.web.servlet.config.annotation.ViewControllerRegistry)>-><org.springframework.web.servlet.config.annotation.ViewControllerRegistration: void setViewName(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_140e60de5f8394cf9e500c5cfb7ff2bf(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.xxe.Comments getComments()>
<org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String getSender()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.lang.ProcessEnvironment$StringEntrySet$1: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.Boolean: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.security.Provider: void putAll(java.util.Map)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.xml.bind.JAXBException: java.lang.String toString()>
<org.owasp.webwolf.mailbox.Email: java.lang.String getSummary()>-><java.lang.Math: int min(int,int)>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jcodings.Encoding: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$Record: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.ObjectInstance: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.hsqldb.types.Type: int hashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.provider.PolicyParser$DomainEntry: java.lang.String toString()>
<org.owasp.webgoat.xxe.Comments: void <clinit>()>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$SubList$1: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.crypto.CryptoPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><net.bytebuddy.description.annotation.AnnotationDescription$AbstractBase: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_d630f923c7c39799ac9ae19ec6aaba0(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$SubList$1: java.lang.Object next()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.security.UnresolvedPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>
<org.owasp.webgoat.users.LessonTracker: void <init>(org.owasp.webgoat.lessons.Lesson)>-><java.util.HashSet: void <init>()>
<org.owasp.webgoat.service.LabelService: org.springframework.http.ResponseEntity fetchLabels(java.lang.String)>-><org.springframework.web.servlet.i18n.AbstractLocaleResolver: void setDefaultLocale(java.util.Locale)>
<org.springframework.beans.factory.config.EmbeddedValueResolver: java.lang.String resolveStringValue(java.lang.String)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.jsonwebtoken.impl.JwtMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.temporal.WeekFields: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.util.ByteList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.subst.Node: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.apache.logging.log4j.MarkerManager$Log4jMarker: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment: void <init>()>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.SubList$1: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.reflect.Constructor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: byte[] getJWTSignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><io.jsonwebtoken.impl.AndroidBase64Codec: byte[] decode(java.lang.String)>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_27af345c61f1ec563d046cf1b013603a(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.MonthDay: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.StartWebGoat: void main(java.lang.String[])>-><org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_d9447932cb65a7ee0ccfbef80fea57f0(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.users.UserService: void addUser(java.lang.String,java.lang.String)>-><org.owasp.webgoat.users.WebGoatUser: void <init>(java.lang.String,java.lang.String)>
<org.owasp.webgoat.users.UserTracker: int numberOfLessonsSolved()>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.owasp.webgoat.insecure_login.InsecureLogin: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.String toString()>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.controller.StartLesson getStartLesson()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.annotation.TypeMappedAnnotation: java.lang.String toString()>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void callEntry_synthetic_addComment(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.asm.MemberSubstitution: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.convert.support.GenericConversionService: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyArray$RubyArrayConversionIterator: java.lang.Object next()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$HashIterator: boolean hasNext()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.challenges.challenge5.Assignment5 getAssignment5()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity ok(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.runtime.ivars.VariableAccessor: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: java.sql.ResultSet executeQuery()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.Byte: boolean equals(java.lang.Object)>
<org.hibernate.internal.util.config.ConfigurationHelper: java.lang.String getString(java.lang.String,java.util.Map)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.stream.StreamSpliterators$DelegatingSpliterator: java.lang.String toString()>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.RubyLocalJumpError$Reason: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.ScopeModule: java.lang.String toString()>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void createSecretFileWithRandomContents()>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: boolean checkSolution(org.owasp.webgoat.xxe.Comment)>-><org.apache.commons.lang3.StringUtils: boolean contains(java.lang.CharSequence,java.lang.CharSequence)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_d85620c250fc2f94842c24943176eac2(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)>-><org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm: java.lang.String getPassword()>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.lessons.CourseConfiguration: void <init>(java.util.List,java.util.List)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.nio.charset.Charset: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.IdentityHashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.password_reset.TriedQuestions: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.ResourceBundle$CacheKey: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_8fcadf71bf492e1afe8ba5f43021cd3c(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.sun.beans.WildcardTypeImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest)>-><java.net.URI: void <init>(java.lang.String)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity average()>-><java.util.stream.ReferencePipeline: java.util.stream.IntStream mapToInt(java.util.function.ToIntFunction)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.xss.stored.StoredXssComments getStoredXssComments()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_ed156bb38e237cc0dd27e5fc9a18d96c(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.MD5: void update(org.owasp.webgoat.challenges.challenge7.MD5$MD5State,byte[],int,int)>-><org.owasp.webgoat.challenges.challenge7.MD5: void transform(org.owasp.webgoat.challenges.challenge7.MD5$MD5State,int[])>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: java.lang.Object get(java.lang.Object)>
<io.jsonwebtoken.impl.DefaultJwtParser: void validateExpectedClaims(io.jsonwebtoken.Header,io.jsonwebtoken.Claims)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: void <init>()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.chrome_dev_tools.NetworkLesson: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hibernate.engine.query.spi.NamedParameterDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><jdk.internal.org.xml.sax.SAXParseException: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.DigitList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.cglib.core.ClassInfo: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView illegalCall()>-><org.springframework.web.servlet.ModelAndView: void <init>()>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.HashMap$EntryIterator: java.lang.Object next()>
<javax.management.modelmbean.DescriptorSupport: boolean isValid()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.provider.PolicyParser$PrincipalEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: java.lang.String toString()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.jruby.org.objectweb.asm.tree.MethodNode$1: boolean add(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.Comments: java.util.Collection getComments()>-><com.beust.jcommander.internal.Lists: java.util.List newArrayList()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.VerifyAccount: java.util.HashMap parseSecQuestions(javax.servlet.http.HttpServletRequest)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.AttributeEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: java.util.List lessonOverview(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: boolean check_text(java.lang.String,java.lang.String)>-><java.util.regex.Matcher: boolean find()>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.xss.Comment parseJson(java.lang.String)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder informationMessage(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity getVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><java.util.ArrayList$Itr: boolean hasNext()>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_528579cac1903ad807e139edee21c975(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.users.RegistrationController: void <init>(org.owasp.webgoat.users.UserValidator,org.owasp.webgoat.users.UserService,org.springframework.security.authentication.AuthenticationManager)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.chrono.AbstractChronology: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.insecure_login.InsecureLogin: java.lang.String getTitle()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getPath(java.lang.Class)>-><java.lang.Class: java.lang.reflect.Method[] getMethods()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.CurrentScope: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.AttributedCharacterIterator$Attribute: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_894a288f909d7918f87514b31925da29(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.challenges.challenge7.MD5: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.session.Course: int getTotalOfLessons()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void <init>(javax.sql.DataSource)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: void <init>(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory,javax.sql.DataSource)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Object getPrincipal()>
<org.owasp.webgoat.lessons.CourseConfiguration: org.owasp.webgoat.lessons.Assignment lambda$createAssignment$2(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.crypto.SigningAssignment getSigningAssignment()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_738e259b2ffe51f674b7974511e87864(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity checkDebuggingStatus()>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Vector: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes: java.util.Optional get(java.lang.String)>
<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.CryptoUtil: java.lang.String getPrivateKeyInPEM(java.security.KeyPair)>-><java.util.Base64: java.util.Base64$Encoder getEncoder()>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.insecure_login.InsecureLoginTask: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.aop.framework.JdkDynamicAopProxy: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.awt.Font: java.lang.String toString()>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<javax.management.openmbean.TabularDataSupport: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.MBeanInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.awt.image.ColorModel: boolean equals(java.lang.Object)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.ArrayNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.convert.TypeDescriptor: java.lang.String toString()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.users.UserTracker: void assignmentSolved(org.owasp.webgoat.lessons.Lesson,java.lang.String)>-><org.owasp.webgoat.users.LessonTracker: void assignmentSolved(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_ad12b1126fdedae8a4c352a3e02d0717(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.hibernate.tool.schema.SourceType: org.hibernate.tool.schema.SourceType interpret(java.lang.Object,org.hibernate.tool.schema.SourceType)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><org.springframework.util.LinkedMultiValueMap: int size()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ast.SymbolNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFLogin: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: java.util.List invoke(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void <init>(java.lang.String)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_e6198dd42e8b33d0d8438a0ff6e0e113(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Byte: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.IdentityHashMap: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_31ee75e2444a269d668ebeb7499b85d0(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder builder()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: java.sql.Connection getConnection()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.net.ssl.SNIHostName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.xss.CrossSiteScriptingLesson5a getCrossSiteScriptingLesson5a()>
<org.hibernate.boot.internal.SessionFactoryOptionsBuilder: java.util.function.Supplier determineStatelessInterceptor(java.util.Map,org.hibernate.boot.registry.selector.spi.StrategySelector)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.net.Inet6Address: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.SimpleXXE: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.password_reset.SecurityQuestionAssignment: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_21e3070c340940633c24ae27c70f9f1c(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.idor.UserProfile: java.util.Map profileToMap()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_eff0128b633cb7ec87edc6f304018295(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.jruby.RubyHash$BaseIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.core.util.WeakCache: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.BinaryData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.deserialization.InsecureDeserialization: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_5d8abc336058b757213118c2c852e08f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.hsqldb.map.ValuePoolHashMap: java.lang.Object getOrAddObject(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.io.File: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder time(java.time.LocalDateTime)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void <clinit>()>-><io.jsonwebtoken.impl.AbstractTextCodec: java.lang.String encode(java.lang.String)>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.cglib.core.MethodInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_5f00ce83729077e20fd4c4ef3badc0d4(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatter: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.openmbean.TabularDataSupport: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_a304b23bb5f6d0733abf280964e998f6(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.UserSessionData getUserSessionData()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_7bd9a47943f07b439f855ff0890e07a0(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_af7cf551dba794a00d49284ff420f577(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: java.lang.String getPassword()>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: java.lang.String extractUsername(java.lang.String)>-><java.lang.String: java.lang.String substring(int,int)>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_4070d9997a61a1720965dc6843b50885(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.headius.invokebinder.transform.Permute: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_df92e54a962c15e10791d2e79d154fb6(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.secure_password.SecurePasswordsAssignment: void <init>()>
<org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String getRecipient()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hibernate.boot.model.relational.Namespace: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.security.web.server.util.matcher.OrServerWebExchangeMatcher: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.javasupport.JavaAccessibleObject: java.lang.String toString()>
<org.hibernate.ConnectionReleaseMode: org.hibernate.ConnectionReleaseMode interpret(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_3ef9ee2e879868a1ded0f7b5ca9ac15f(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.io.path.Path: java.lang.String toString()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_c4c04a0abadb54531b22c76a166b07d1(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.WeakHashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.JavaObjectData: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: java.sql.Connection getConnection()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.ssl.SSLSessionImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.UserProfile: java.util.Map profileToMap()>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.MethodHandle: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: void <clinit>()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_3a1b58b62756a9a535d743c34afc1d2b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.BitSet: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.cglib.core.ClassEmitter$FieldInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.SimpleXXE: void callEntry_synthetic_createNewComment(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.xxe.SimpleXXE: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<org.hsqldb.lib.HashMappedList: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_e169604e82c4ee909b79a1c84d498a91(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.Object getValue()>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.net.URL: java.net.URLConnection openConnection()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.secure_password.SecurePasswords: java.lang.String getTitle()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder ok()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: boolean equals(java.lang.Object)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_b2b5e0e97eb81e194238306f8891fb62(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webwolf.user.UserForm getUserFormInstance()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.http_proxies.HttpProxies: java.lang.String getTitle()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.webwolf_introduction.WebWolfIntroduction: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>-><java.util.Calendar: java.util.Date getTime()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><jdk.internal.org.xml.sax.SAXParseException: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_ff3e6e9d12445f50b42c7a91a016f8b0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.time.LocalDateTime getTime()>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getPath(java.lang.Class)>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<org.owasp.webgoat.session.WebSession: void <init>()>-><org.springframework.security.core.context.SecurityContextImpl: org.springframework.security.core.Authentication getAuthentication()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.missing_ac.MissingFunctionAC: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.security.Provider$UString: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_b65292c16a181eef189ac76f3719a50a(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: java.util.List getRankings(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.JumboEnumSet$EnumSetIterator: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.passes.CompilerPass: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.missing_ac.MissingFunctionAC: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.awt.image.ColorModel: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.instructions.Instr: java.lang.String toString()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWT: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.classic.Logger: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_ae1b7fb59e792f63bae5cb16936b36d5(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity getVotes()>-><java.util.stream.Collectors: java.util.stream.Collector toMap(java.util.function.Function,java.util.function.Function)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.BitSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><java.io.File: boolean mkdirs()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.nio.ch.SocketOptionRegistry$RegistryKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.Users$5: void <init>(org.owasp.webgoat.missing_ac.Users,java.lang.Exception)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.temporal.IsoFields$Unit: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.GeneralName: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity checkDebuggingStatus()>-><org.owasp.webgoat.session.LabelDebugger: boolean isEnabled()>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.LambdaForm: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setBeanClassLoader(java.lang.ClassLoader)>
<org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_5f00ce83729077e20fd4c4ef3badc0d4(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.BuddhistCalendar: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.zone.ZoneOffsetTransition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.SimpleType: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: void <clinit>()>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.hsqldb.Table: void insertNoCheckFromLog(org.hsqldb.Session,java.lang.Object[])>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.validation.ObjectError: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.HashMap: void putAll(java.util.Map)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.expression.TypedValue: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.LabelService: void <init>(org.springframework.web.servlet.LocaleResolver,org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.PluginMessages)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.joda.time.chrono.LimitChronology$LimitException: java.lang.String getMessage()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void <init>(java.lang.String)>-><java.io.File: boolean mkdirs()>
<org.owasp.webgoat.users.UserTracker: org.owasp.webgoat.users.LessonTracker getLessonTracker(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.ReferencePipeline: java.util.Optional findFirst()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.System: long currentTimeMillis()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_eb2ad5732c8669db07511e8178c67b04(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: java.lang.String getPassword()>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes: java.util.Optional get(java.lang.String)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.aop.support.AbstractPointcutAdvisor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanConstructorInfo: boolean equals(java.lang.Object)>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<java.util.Vector: int indexOf(java.lang.Object,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webwolf.mailbox.Email: int hashCode()>-><org.owasp.webwolf.mailbox.Email: java.lang.String getSender()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.StackTraceElement: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.MvcConfiguration: org.thymeleaf.spring5.SpringTemplateEngine thymeleafTemplateEngine(org.thymeleaf.templateresolver.ITemplateResolver,org.owasp.webgoat.LessonTemplateResolver,org.owasp.webgoat.AsciiDoctorTemplateResolver)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_b2b5e0e97eb81e194238306f8891fb62(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webwolf.user.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.Instant: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getMapping(java.lang.reflect.Method)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder ok()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.web.servlet.ServletRegistrationBean: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.chrono.BasicChronology: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.font.AttributeValues: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webwolf.requests.Requests: java.lang.String path(org.springframework.boot.actuate.trace.http.HttpTrace)>-><java.net.URI: java.lang.String getPath()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtBuilder: java.lang.String compact()>
<org.owasp.webgoat.crypto.HashingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.session.UserSessionData: void setValue(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><com.thoughtworks.xstream.core.util.PresortedMap$1: java.lang.Object getValue()>
<org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean canEqual(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.flywaydb.core.internal.database.oracle.OracleSchema$ObjectType: java.lang.String toString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: java.lang.String getString()>
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix: void <init>(java.lang.String,org.owasp.webgoat.session.WebSession)>-><org.owasp.webgoat.path_traversal.ProfileUploadBase: void <init>(java.lang.String,org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.RDN: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.SubList: java.util.Iterator iterator()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>
<org.springframework.boot.convert.NumberToDurationConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.flywaydb.core.internal.info.MigrationInfoImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.Hashtable: int size()>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_9540a64f76ba3b30e224e073b7fdbf26(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.missing_ac.Users$2: void <init>(org.owasp.webgoat.missing_ac.Users,java.util.HashMap)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.classic.jmx.JMXConfigurator: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.security.cert.Certificate: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><net.bytebuddy.description.type.TypeDescription$AbstractBase: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.chrono.AbstractChronology: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelService: org.springframework.http.ResponseEntity fetchLabels(java.lang.String)>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: boolean validateProperty(java.lang.String,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.user.WebGoatUser: boolean isEnabled()>-><org.springframework.security.core.userdetails.User: boolean isEnabled()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.POJONode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.runtime.Frame: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setName(java.lang.String)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.jruby.RubyArray$RubyArrayConversionIterator: java.lang.Object next()>
<org.owasp.webwolf.WebWolf: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwt: java.lang.Object getBody()>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$EntrySetView: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView illegalCall(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void <init>()>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webgoat.users.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.users.UserTracker: void assignmentSolved(org.owasp.webgoat.lessons.Lesson,java.lang.String)>-><org.owasp.webgoat.users.LessonTracker: void incrementAttempts()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.cia.CIAQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><com.thoughtworks.xstream.core.util.WeakCache: int size()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.beans.factory.InjectionPoint: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xxe.XXE: java.lang.String getTitle()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_b724581020ea9b622f8b51f7b23908ec(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: java.util.List invoke(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.ssl.CipherSuite: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: javax.tools.SimpleJavaFileObject getJavaFileContentsAsString(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_380d58a5a04e808e000b9e4e3f56e008(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_139ac0ad7d2adffb0207013aa97ee12(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.password_reset.QuestionsAssignment: org.owasp.webgoat.assignments.AttackResult passwordReset(java.util.Map)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.runtime.callsite.CacheEntry: java.lang.String toString()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><org.owasp.webwolf.FileServer$UploadedFile: void <init>(org.owasp.webwolf.FileServer,java.lang.String,java.lang.String,java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.io.File: java.io.File[] listFiles()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint: void <init>()>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.client_side_filtering.Salaries: void <init>()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanParameterInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.annotation.AnnotationDescription$AbstractBase: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.chrono.GJCacheKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.SymbolProc: boolean equals(java.lang.Object)>
<org.owasp.webwolf.mailbox.Email$EmailBuilder: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><javax.servlet.http.HttpServletRequestWrapper: boolean isRequestedSessionIdFromCookie()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_aebb121ab3c1c7dd79d810b834f2134a(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.expression.spel.ast.Literal: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_71dca6b32a1d2f27fa917fe8b675cef1(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder builder()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.headius.invokebinder.Signature: boolean equals(java.lang.Object)>
<org.jruby.javasupport.JavaClass: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.lessons.CourseConfiguration: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode: void <init>(org.owasp.webgoat.client_side_filtering.ShopEndpoint,java.lang.String,int)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.security.web.header.Header: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.QuestionsAssignment: org.owasp.webgoat.assignments.AttackResult passwordReset(java.util.Map)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a: void <init>()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.format.support.FormattingConversionService$ParserConverter: java.lang.String toString()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.concurrent.ArrayBlockingQueue: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_1dd97e3e23d00372c3834b03cd93689d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: void <init>()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.ObjectInstance: boolean equals(java.lang.Object)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.awt.AppContext: java.lang.String toString()>
<org.springframework.web.util.UriUtils: void lambda$encodeUriVariables$0(java.util.Map,java.lang.String,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void <clinit>()>-><java.util.Random: int nextInt(int)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_9dc3f30b98c751837c0f8ba9fa0acdc7(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: void <init>()>
<org.hsqldb.persist.Cache$CachedObjectComparator: int hashCode(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.provider.PolicyFile$SelfPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription: java.lang.String toString()>
<org.owasp.webgoat.crypto.SigningAssignment: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.org.objectweb.asm.Type: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.EventObject: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$StringLiteralPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.jar.Attributes: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.javasupport.JavaClass: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.nio.file.InvalidPathException: java.lang.String getMessage()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.Collections$SingletonMap: int size()>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.Duration: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties getEnvironmentEndpointPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webgoat.users.UserForm getUserFormInstance()>-><org.owasp.webgoat.users.UserForm: void setAgree(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: void close()>
<org.owasp.webgoat.service.RestartLessonService: void restartLesson()>-><org.slf4j.helpers.NOPLogger: void debug(java.lang.String)>
<org.owasp.webgoat.service.RestartLessonService: void restartLesson()>-><org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_f4b58363b0c7896ed4769c31750393de(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.xxe.Comments: java.util.Optional parseJson(java.lang.String)>-><com.fasterxml.jackson.databind.ObjectMapper: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_380d58a5a04e808e000b9e4e3f56e008(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_894a288f909d7918f87514b31925da29(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: java.lang.String getSecretToken(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: java.lang.String getSecretToken()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.Collections$SynchronizedMap: int size()>
<org.owasp.webgoat.users.LessonTracker: boolean lambda$getLessonOverview$2(org.owasp.webgoat.lessons.Assignment)>-><java.util.HashSet: boolean contains(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_e169604e82c4ee909b79a1c84d498a91(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.core.UnsynchronizedAppenderBase: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.idor.UserProfile: java.lang.String getName()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_a2866f179349b66c62448b4465c6feba(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: void <init>()>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_a6f1a647bec074dc45b8f4c43e3724b4(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.ModelAndView mail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.micrometer.core.instrument.ImmutableTag: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_b65292c16a181eef189ac76f3719a50a(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: void <init>()>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity$HeadersBuilder header(java.lang.String,java.lang.String[])>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.ArrayNode: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_df53fb4d12f29790332f08e175b7fc8d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: void callEntry_synthetic_addUser(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.owasp.webgoat.users.WebGoatUser getWebGoatUserInstance()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.AbstractSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.ReportCardService: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.Course,org.owasp.webgoat.i18n.PluginMessages)>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.Course getCourse()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: void callEntry_synthetic_getMd5(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: java.sql.Connection getConnection()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.xss.stored.StoredXssComments: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.cia.CIA: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.lessons.Lesson: java.lang.String getId()>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.util.locale.provider.RuleBasedBreakIterator: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jcodings.Encoding: java.lang.String toString()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyString: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String nextFieldName()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.provider.PolicyParser$KeyStoreEntry: java.lang.String toString()>
<org.owasp.webwolf.requests.Requests: org.springframework.web.servlet.ModelAndView get()>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.stream.SpinedBuffer$OfInt: java.lang.String toString()>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.xxe.SimpleXXE: void <init>()>
<org.owasp.webgoat.csrf.ForgedReviews: void <clinit>()>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.ChallengeIntro: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webwolf.requests.LandingPage: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<com.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.hsqldb.Table: void insertFromScript(org.hsqldb.Session,org.hsqldb.persist.PersistentStore,java.lang.Object[])>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_ae513645bf96d92ad4552b433c38977b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.controller.Welcome: org.springframework.web.servlet.ModelAndView welcome(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: void <init>()>
<org.owasp.webgoat.challenges.challenge7.PasswordResetLink: java.lang.String createPasswordReset(java.lang.String,java.lang.String)>-><java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.service.LessonProgressService: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.WebSession)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setServerHeader(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.awt.Color: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getMd5(javax.servlet.http.HttpServletRequest)>-><java.security.MessageDigest: byte[] digest()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)>-><org.springframework.web.servlet.ModelAndView: void <init>()>
<org.owasp.webwolf.requests.Requests: org.springframework.web.servlet.ModelAndView get()>-><org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Object getPrincipal()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_d69cb9673356eb6b726277d4fccd2f5f(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String toUpperCase()>
<sun.security.util.SignatureFileVerifier: boolean verifyManifestMainAttrs(java.util.jar.Manifest,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getSha256(javax.servlet.http.HttpServletRequest)>-><java.util.Random: int nextInt(int)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.Duration: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties getHealthIndicatorPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties: void setOrder(java.util.List)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Regexp: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: void <init>(javax.sql.DataSource)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: void <init>(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory,javax.sql.DataSource)>
<org.owasp.webgoat.challenges.challenge1.Challenge1: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><jnr.ffi.Platform$CPU: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hibernate.tool.schema.Action: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge7.MD5: void transform(org.owasp.webgoat.challenges.challenge7.MD5$MD5State,int[])>-><org.owasp.webgoat.challenges.challenge7.MD5: int FF(int,int,int,int,int,int,int)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><com.thoughtworks.xstream.core.util.WeakCache$4$1: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.jar.Attributes$Name: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.jwt.JWTFinalEndpoint: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.reflect.Proxy$Key1: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_dd9fa8e8fbac70be00d8ef91a03c1f4c(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder builder(org.owasp.webgoat.i18n.PluginMessages)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.ansi.AnsiStyle: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.invoke.LambdaForm: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hibernate.boot.model.relational.Namespace: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getContents()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.ObjectNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult: boolean isLessonCompleted()>
<org.owasp.webgoat.session.Course: java.util.List getCategories()>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.sun.jmx.mbeanserver.NamedObject: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_23d4d32a045c04a12395dfd3b773a88f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.RuleBasedCollator: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><jnr.ffi.Platform$OS: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: void <init>()>
<org.owasp.webgoat.challenges.challenge7.MD5: void transform(org.owasp.webgoat.challenges.challenge7.MD5$MD5State,int[])>-><org.owasp.webgoat.challenges.challenge7.MD5: int II(int,int,int,int,int,int,int)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$1: java.lang.Object next()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.springframework.util.StringUtils: boolean hasText(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$EmptyMap: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_4a722106cdccbaa92bbe076f2404446b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: void addViewControllers(org.springframework.web.servlet.config.annotation.ViewControllerRegistry)>-><org.springframework.web.servlet.config.annotation.ViewControllerRegistry: org.springframework.web.servlet.config.annotation.ViewControllerRegistration addViewController(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.web.context.support.WebApplicationContextUtils$ResponseObjectFactory: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.UserProfile: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: java.util.List lessonOverview(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_634cc330bf6dbd047b3951efcf978c13(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.AbstractMap$SimpleEntry: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hibernate.metamodel.model.domain.internal.AbstractAttribute: java.lang.String toString()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Base64$Decoder: byte[] decode(java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: void <init>(java.util.List,java.util.List)>-><net.bytebuddy.description.type.TypeList$Generic$Empty: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: java.util.List lessonOverview(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.flywaydb.core.internal.database.base.Function: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_46a0bf89c6e4cfbb83efcd08df8d522c(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.UnresolvedPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_ad8e696bb3af66e8a16c36583ef16054(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>
<org.owasp.webgoat.http_proxies.HttpProxies: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webwolf.requests.Requests: void <init>(org.owasp.webwolf.requests.WebWolfTraceRepository,com.fasterxml.jackson.databind.ObjectMapper)>-><org.owasp.webwolf.requests.WebWolfTraceRepository: void <init>()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.UUID: java.util.UUID randomUUID()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.SimpleTimeZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity average(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity average()>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.util.Base64: java.util.Base64$Encoder getEncoder()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_1b89ff27c85176cf51b1c50fdcbf7d46(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.i18n.PluginMessages pluginMessages(org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.Language)>-><org.springframework.context.support.AbstractResourceBasedMessageSource: void setDefaultEncoding(java.lang.String)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: void callEntry_synthetic_login(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfParameterizedType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.jar.Attributes: int size()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.AjaxAuthenticationEntryPoint: void <init>(java.lang.String)>-><org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint: void <init>(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><javax.servlet.ServletRequestWrapper: java.lang.String getParameter(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_e6d1d0225cc44c016d1bab4d099b821a(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_3a380a751618ad3a9132e9a53e3cd91e(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.EnumMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><org.owasp.webgoat.xxe.Comments: java.util.Optional parseJson(java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.xxe.ContentTypeAssignment: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.xxe.Comments getComments()>
<org.owasp.webgoat.xxe.SimpleXXE: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.invoke.LambdaForm$Name: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.service.LessonProgressService getLessonProgressService()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<register-finalize <org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><java.lang.ref.Finalizer: void register(java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getHeader(java.lang.String)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webwolf.user.UserForm getUserFormInstance()>-><org.owasp.webwolf.user.UserForm: void setMatchingPassword(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.cert.Certificate: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.classmate.ResolvedType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.Users$6: void <init>(org.owasp.webgoat.missing_ac.Users,java.util.HashMap)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.provider.PolicyParser$PrincipalEntry: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_c5df1766fe780fd9646e1a57b5c18a73(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: void <init>()>
<org.owasp.webgoat.AjaxAuthenticationEntryPoint: void commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: java.sql.Connection getConnection()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity getVotes()>-><java.util.HashMap: java.util.Set entrySet()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.NamedInheritableThreadLocal: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void initVotes()>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String concat(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_f9d98c78a1f23cefea07c9e24b6c4682(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hibernate.cache.spi.access.AccessType: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.UserSessionData getUserSessionData()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Locale$LocaleKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.CryptoUtil: java.security.KeyPair generateKeyPair()>-><java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.ReferenceType: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.BinaryNode: boolean equals(java.lang.Object)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.springframework.boot.context.properties.source.MapConfigurationPropertySource: void put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.crypto.XOREncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.AVA: java.lang.String toString()>
<org.owasp.webgoat.xxe.SimpleXXE: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.springframework.security.web.access.ExceptionTranslationFilter: void sendStartAuthentication(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain,org.springframework.security.core.AuthenticationException)>-><org.owasp.webgoat.AjaxAuthenticationEntryPoint: void commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.SimpleXXE: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.apache.commons.lang.exception.ExceptionUtils: java.lang.String getFullStackTrace(java.lang.Throwable)>
<org.owasp.webgoat.xxe.CommentsEndpoint: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.xxe.Comments getComments()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: java.lang.String getString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_fa92c0cce8ba32dbac5cead17c2ed19d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_80eb5143a47f2e10c05121a8f2dd001f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hsqldb.lib.RefCapablePropertyResourceBundle: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.io.AbstractResource: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.webwolf_introduction.WebWolfIntroduction: java.lang.String getTitle()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder: org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder recipient(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.awt.image.ColorModel: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.http.HttpEntity: java.lang.String toString()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile: void transferTo(java.io.File)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_fa92c0cce8ba32dbac5cead17c2ed19d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: void <init>()>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hsqldb.types.JavaObjectData: java.lang.String toString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.csrf.CSRFGetFlag: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.io.ObjectStreamClass$WeakClassKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.net.URI: boolean equals(java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.misc.Signal: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hibernate.metamodel.model.domain.internal.EntityTypeImpl: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_b39d076dbd722a5ec33809adcaa3a27e(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.auth_bypass.VerifyAccount: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.UserSessionData getUserSessionData()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.String toString()>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.thoughtworks.xstream.io.path.Path: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_967d363f594fb6c0a0353a8cead61eb1(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: java.util.HashMap parseSecQuestions(javax.servlet.http.HttpServletRequest)>-><javax.servlet.ServletRequestWrapper: java.lang.String getParameter(java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.ZoneOffset: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_cff7f382322d222e93b01223e6c21e23(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.convert.TypeDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: void setString(int,java.lang.String)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: byte[] getJWTSignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><javax.crypto.Mac: byte[] doFinal(byte[])>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.ProcessEnvironment$StringEntry: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.challenges.challenge8.Assignment8: void <init>()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><io.undertow.util.HeaderValues$1: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.font.AttributeValues: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.classic.joran.ReconfigureOnChangeTask: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.beans.factory.config.DependencyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.misc.Signal: boolean equals(java.lang.Object)>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: void callEntry_synthetic_flag(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: java.lang.String getString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_6f6959aa4b645fa8460dfa4ef8464205(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: void <init>()>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<java.lang.Object: java.lang.String toString()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.expression.spel.ast.NullLiteral: java.lang.String toString()>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><org.apache.commons.lang3.StringUtils: java.lang.String reverse(java.lang.String)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: void <init>()>-><org.owasp.webwolf.mailbox.MailboxController: void <init>(org.owasp.webwolf.mailbox.MailboxRepository)>
<org.owasp.webgoat.i18n.Language: java.util.Locale getLocale()>-><org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes currentRequestAttributes()>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult flag(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><java.util.Random: void <init>()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.challenges.challenge1.Assignment1 getAssignment1()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_ab2261934f992862c7780ef0cc6a643c(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webgoat.users.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_7b4ba2a6c21e1a51e3a7ea44570f3eff(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.sql.DriverInfo: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_58277fd64d85a71381e5c81e85cfee22(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: boolean equals(java.lang.Object)>
<org.owasp.webgoat.HammerHead: org.springframework.web.servlet.ModelAndView attack(org.springframework.security.core.Authentication,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.session.Course: org.owasp.webgoat.lessons.Lesson getFirstLesson()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: void <clinit>()>-><java.util.List: java.util.List of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.service.RestartLessonService: void restartLesson()>-><synthetic.method.UserTrackerRepositoryImpl: java.lang.Object save(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.cglib.core.ClassInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.springframework.core.convert.support.ObjectToStringConverter: java.lang.String convert(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_c85e43a3205cf1512180b70de8fbb0c8(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.thoughtworks.xstream.core.util.WeakCache: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Locale$LocaleKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: boolean lambda$getAssignment$0(java.lang.String,org.owasp.webgoat.lessons.Assignment)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_de81d487ddedc60c3c2155505051fca9(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.x509.Extension: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><ch.qos.logback.core.subst.Token: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.idor.UserProfile: void setRole(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.flywaydb.core.internal.util.Pair: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a getSqlInjectionLesson5a()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><org.jruby.RubyHash: java.util.Collection values()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.CodeSource: java.lang.String toString()>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.MBeanOperationInfo: java.lang.String toString()>
<org.owasp.webgoat.service.LabelDebugService: org.springframework.http.ResponseEntity checkDebuggingStatus()>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.MemberKey: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.xxe.ContentTypeAssignment: void callEntry_synthetic_createNewUser(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.deser.impl.ReadableObjectId: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.sql.DriverInfo: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.security.core.authority.SimpleGrantedAuthority: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.env.AbstractEnvironment: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.core.io.SerializedString: java.lang.String toString()>
<org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.security.web.header.Header: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Object)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.springframework.util.StringUtils: java.lang.String arrayToCommaDelimitedString(java.lang.Object[])>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.SessionService: void <init>()>
<org.owasp.webwolf.mailbox.Email: int hashCode()>-><java.lang.Long: int hashCode()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.controller.Welcome: void callEntry_synthetic_welcome(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.idor.IDORDiffAttributes: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.challenges.challenge8.Assignment8 getAssignment8()>
<org.owasp.webgoat.challenges.Flag: void lambda$initFlags$0(int)>-><java.util.UUID: java.util.UUID randomUUID()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.FloatNode: boolean equals(java.lang.Object)>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flywayLessons()>-><org.flywaydb.core.api.configuration.FluentConfiguration: org.flywaydb.core.api.configuration.FluentConfiguration configuration(java.util.Map)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.controller.Welcome: org.springframework.web.servlet.ModelAndView welcome(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: void setViewName(java.lang.String)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_d9447932cb65a7ee0ccfbef80fea57f0(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><org.jruby.RubyHash: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Vector$Itr: boolean hasNext()>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.crypto.XOREncodingAssignment getXOREncodingAssignment()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.base.AbstractDuration: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.util.MimeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webgoat.users.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.core.userdetails.User: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.owasp.webgoat.assignments.AttackResult click(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.ModelAndView: void setViewName(java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.mailbox.Email: java.lang.String toString()>-><org.owasp.webwolf.mailbox.Email: java.lang.String getSender()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><jnr.constants.platform.Errno: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.stream.StreamSpliterators$DelegatingSpliterator: java.lang.String toString()>
<org.owasp.webgoat.users.LessonTracker: void <init>(org.owasp.webgoat.lessons.Lesson)>-><java.util.List: java.util.List of()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.classic.jmx.JMXConfigurator: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.idor.UserProfile: java.lang.String getUserId()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.Object getValue()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.deser.CreatorProperty: java.lang.String toString()>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><java.lang.String: int length()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_76247a0f1eed4dc37c44e5cc8a0c984f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.auth_bypass.VerifyAccount: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webwolf.mailbox.Email: int hashCode()>-><org.owasp.webwolf.mailbox.Email: java.lang.String getRecipient()>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.AttributedCharacterIterator$Attribute: java.lang.String toString()>
<org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.owasp.webgoat.xxe.Comments: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.apache.logging.log4j.spi.Provider: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.Provider$ServiceKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy$CglibIdentitySupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.web.header.Header: boolean equals(java.lang.Object)>
<java.util.WeakHashMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hsqldb.types.IntervalSecondData: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Thread$WeakClassKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.nio.charset.Charset: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_c4199d46e480587d02400fa6d64e5df3(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><org.joda.time.DateTime: org.joda.time.DateTime now()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$TreeBin: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_6f071706ee533e683e38f5eb8d73313(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>-><java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.owasp.webgoat.service.HintService: java.util.List getHints()>-><org.owasp.webgoat.session.WebSession: org.owasp.webgoat.lessons.Lesson getCurrentLesson()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.users.UserService: void <init>(org.owasp.webgoat.users.UserRepository,org.owasp.webgoat.users.UserTrackerRepository)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.util.unit.DataSize: java.lang.String toString()>
<org.owasp.webgoat.csrf.ForgedReviews: void <clinit>()>-><org.joda.time.DateTime: org.joda.time.DateTime now()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><ch.qos.logback.core.subst.Node: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: int getRow()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_6f071706ee533e683e38f5eb8d73313(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity average(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.xxe.SimpleXXE: void <init>()>
<org.hsqldb.lib.HashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.IRScope: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><org.owasp.webgoat.session.UserSessionData: void setValue(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder accepted()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Collections$SynchronizedSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><org.springframework.core.env.ReadOnlySystemAttributesMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><org.owasp.webgoat.xxe.ContentTypeAssignment: boolean checkSolution(org.owasp.webgoat.xxe.Comment)>
<org.owasp.webgoat.auth_bypass.VerifyAccount: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.hibernate.QueryException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_a8f70183f3f3139b6ec6adb59ad79cb0(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.HsqlNameManager$HsqlName: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_ae513645bf96d92ad4552b433c38977b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.Flag: void callEntry_synthetic_postFlag(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.challenges.Flag: java.lang.String getString()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.Collections$SynchronizedMap: int size()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.reflect.generics.reflectiveObjects.WildcardTypeImpl: java.lang.String toString()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.MvcConfiguration: org.springframework.web.servlet.ViewResolver viewResolver(org.thymeleaf.spring5.SpringTemplateEngine)>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: void <init>()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.security.Provider: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.template.SampleAttack: java.util.List getItemsInBasket(java.lang.String)>-><org.owasp.webgoat.template.SampleAttack$Item: void <init>(org.owasp.webgoat.template.SampleAttack,java.lang.String,java.lang.String,double)>
<org.owasp.webwolf.requests.Requests: java.lang.String toJsonString(org.springframework.boot.actuate.trace.http.HttpTrace)>-><com.fasterxml.jackson.databind.ObjectMapper: java.lang.String writeValueAsString(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setDataUsername(java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: void initAssignment(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.Fixnum: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity getVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean last()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView illegalCall(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.DateTimeZone: java.lang.String toString()>
<org.owasp.webgoat.WebSecurityConfig: void <init>(org.owasp.webgoat.users.UserService)>-><org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter: void <init>()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: void <init>()>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult solvedIt(java.io.File)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.challenges.challenge7.MD5: byte[] getHash()>-><org.owasp.webgoat.challenges.challenge7.MD5: void update(org.owasp.webgoat.challenges.challenge7.MD5$MD5State,byte[],int,int)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1: boolean add(java.lang.Object)>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: java.util.List getRankings(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: java.util.List getRankings(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.jwt.JWTVotesEndpoint: void <init>()>
<org.owasp.webgoat.challenges.challenge1.Assignment1: boolean containsHeader(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getHeader(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><ch.qos.logback.core.status.StatusBase: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.node.BaseJsonNode: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.util.calendar.ZoneInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.GregorianCalendar: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: java.util.List getItemsInBasket(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><java.util.Base64$Decoder: byte[] decode(java.lang.String)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.vulnerable_components.VulnerableComponents: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_e169604e82c4ee909b79a1c84d498a91(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.DynamicSymbol: java.lang.String toString()>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mustache.MustacheProperties getMustachePropertiesInstance()>-><org.springframework.boot.autoconfigure.mustache.MustacheProperties: void setSuffix(java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.deser.UnresolvedId: java.lang.String toString()>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>-><org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>
<org.owasp.webgoat.xss.stored.StoredXssComments: java.util.Collection retrieveComments()>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.context.support.ApplicationListenerDetector: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setTimeZone(java.util.TimeZone)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.javasupport.JavaObject: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_45579221de5fb78d4fc0b6b259ca0d17(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Float: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFLogin: void markAssignmentSolvedWithRealUser(java.lang.String)>-><java.lang.Object: java.lang.Class getClass()>
<org.owasp.webgoat.service.RestartLessonService: void restartLesson()>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.security.CodeSigner: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.util.LinkedMultiValueMap: java.lang.String toString()>
<java.util.Arrays: void deepToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.jwt.votes.Vote: void incrementNumberOfVotes(int)>-><org.owasp.webgoat.jwt.votes.Vote: long calculateStars(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.DecimalNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><io.jsonwebtoken.impl.JwtMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.ArrayType: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_e647f766e81fdee578a25e2cb0999a87(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.auth_bypass.AccountVerificationHelper: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_461d99cc9609bbcb500602027d5ac607(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView start()>-><org.owasp.webgoat.session.WebSession: org.owasp.webgoat.lessons.Lesson getCurrentLesson()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webwolf.WebSecurityConfig: org.springframework.security.authentication.AuthenticationManager authenticationManager()>-><org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter: org.springframework.security.authentication.AuthenticationManager authenticationManager()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: java.lang.String getString(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.idor.UserProfile getUserProfileInstance()>-><org.owasp.webgoat.idor.UserProfile: void setSize(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.runtime.backtrace.RubyStackTraceElement: java.lang.String toString()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><java.io.File: java.lang.String getName()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<java.util.Hashtable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean contains(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)>-><org.springframework.web.servlet.ModelAndView: void setViewName(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_b2b5e0e97eb81e194238306f8891fb62(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webwolf.user.UserForm getUserFormInstance()>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyModule: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.AbstractList$Itr: java.lang.Object next()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder sender(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.apache.logging.log4j.Level: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.sql.Date: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.support.GenericBeanDefinition: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><org.hsqldb.server.Server: void setDatabasePath(int,java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.security.ProtectionDomain$WeakProtectionDomainKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.JwtParser setSigningKeyResolver(io.jsonwebtoken.SigningKeyResolver)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webwolf.requests.Requests: java.lang.String toJsonString(org.springframework.boot.actuate.trace.http.HttpTrace)>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.aop.support.DefaultPointcutAdvisor: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.stream.Nodes$IntFixedNodeBuilder: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_3a69e340e97c8962d87360f622714fa2(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.X509CertImpl: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.field.UnsupportedDurationField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: void <init>(org.springframework.context.support.ReloadableResourceBundleMessageSource,java.util.Properties,long)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.springframework.beans.factory.support.PropertiesBeanDefinitionReader: void registerBeanDefinition(java.lang.String,java.util.Map,java.lang.String,java.lang.String)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.owasp.webgoat.users.WebGoatUser addUser(org.owasp.webgoat.users.WebGoatUser)>-><org.owasp.webgoat.users.WebGoatUser: java.lang.String getUsername()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.security.core.authority.SimpleGrantedAuthority: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment getClientSideFilteringAssignment()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: boolean tableExists(java.sql.Connection)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.cglib.core.MethodInfo: boolean equals(java.lang.Object)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.ModelAndView mail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mustache.MustacheProperties getMustachePropertiesInstance()>-><org.springframework.boot.autoconfigure.mustache.MustacheProperties: void setPrefix(java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_8ce7a9b57f61045d3b5e988fef5d3188(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.TextNode: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_a0d1bb549e85b90810fac2d6630e6e00(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.users.LessonTracker: void assignmentSolved(java.lang.String)>-><java.util.Optional: void ifPresent(java.util.function.Consumer)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.owasp.webgoat.idor.UserProfile: void <init>(java.lang.String)>
<org.owasp.webgoat.password_reset.PasswordResetEmail: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder builder()>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.config.BeanDefinitionHolder: boolean equals(java.lang.Object)>
<org.hsqldb.map.BaseHashMap: int getLookup(java.lang.Object,int)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b getSqlInjectionLesson6b()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.owasp.webgoat.MvcConfiguration: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$InstantPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.zone.ZoneOffsetTransitionRule: boolean equals(java.lang.Object)>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.asm.Handle: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><java.util.ArrayList: boolean contains(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.session.UserSessionData: java.lang.Object getValue(java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><java.io.File: boolean createNewFile()>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.sql.Time: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.runtime.Block: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.thoughtworks.xstream.io.path.Path: boolean equals(java.lang.Object)>
<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Optional: java.util.Optional of(java.lang.Object)>
<org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.LongNode: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_a3f2b0f6e1220e6c0e2ca41ce8d393a7(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.thoughtworks.xstream.core.util.FastField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><ch.qos.logback.classic.Logger: void warn(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.HSQLDBDatabaseConfig: javax.sql.DataSource dataSource(java.lang.String,java.lang.String)>-><org.springframework.jdbc.datasource.DriverManagerDataSource: void setDriverClassName(java.lang.String)>
<org.owasp.webgoat.WebGoat: org.owasp.webgoat.session.WebSession webSession()>-><org.owasp.webgoat.session.WebSession: void <init>()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.template.LessonTemplate: void <init>()>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: void callEntry_synthetic_retrieveComments(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.xss.stored.StoredXssComments: java.util.Collection retrieveComments()>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webwolf.user.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.Collections$UnmodifiableCollection: java.lang.String toString()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.Collections$EmptyMap: java.util.Collection values()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.logging.Level: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyIO: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.LocalVariable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.service.LabelService: org.springframework.http.ResponseEntity fetchLabels(java.lang.String)>-><org.springframework.util.StringUtils: boolean isEmpty(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: void <clinit>()>-><io.jsonwebtoken.impl.AbstractTextCodec: java.lang.String encode(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.beans.PropertyDescriptor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.field.ScaledDurationField: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_1eb9794f62cd15dcf20a59e8d3502337(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_eff0128b633cb7ec87edc6f304018295(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.mitigation.Servers: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_f4b58363b0c7896ed4769c31750393de(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_14cfd44896ce1a39909e06c80b2db91f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void login(java.lang.String,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webwolf.requests.LandingPage: org.springframework.http.ResponseEntity lambda$ok$0(javax.servlet.http.HttpServletRequest)>-><ch.qos.logback.classic.Logger: void trace(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity defaultImage()>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder ok()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.service.ReportCardService$ReportCard: void <init>(org.owasp.webgoat.service.ReportCardService)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4 getSqlInjectionLesson4()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJws: java.lang.Object getBody()>
<javax.management.openmbean.CompositeDataSupport: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: int indexOf(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_aa11e7c0aec04acf2a7467531fb87182(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Object: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.TreeMap: int size()>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.io.ObjectStreamField: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties getConfigurationPropertiesReportEndpointPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties: void setKeysToSanitize(java.lang.String[])>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: boolean attemptWasMade(java.io.File,java.io.File)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void callEntry_synthetic_addComment(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.xxe.BlindSendFileAssignment: java.lang.String getString()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.Collections$SynchronizedCollection: boolean add(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.invoke.LambdaFormEditor$Transform: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.AbstractCollection: boolean containsAll(java.util.Collection)>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><java.net.URL: java.net.URI toURI()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hibernate.boot.model.relational.Namespace$Name: java.lang.String toString()>
<org.owasp.webgoat.service.HintService: org.owasp.webgoat.lessons.Hint lambda$createHint$2(org.owasp.webgoat.lessons.Assignment,java.lang.String)>-><org.owasp.webgoat.lessons.Hint: void <init>(java.lang.String,java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: java.sql.Connection getConnection()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<java.util.AbstractSet: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_df53fb4d12f29790332f08e175b7fc8d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webwolf.user.UserValidator: void validate(java.lang.Object,org.springframework.validation.Errors)>-><org.owasp.webwolf.user.UserForm: java.lang.String getPassword()>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: void callEntry_synthetic_getSha256(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getSha256(javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.temporal.WeekFields: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setDataPassword(java.lang.String)>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity follow(java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webwolf.mailbox.MailboxController: void <init>(org.owasp.webwolf.mailbox.MailboxRepository)>-><synthetic.method.SingletonFactory: synthetic.method.MailboxRepositoryImpl getMailboxRepositoryImpl()>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String[] split(java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.AbstractMap$SimpleEntry: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_58277fd64d85a71381e5c81e85cfee22(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.reflect.Proxy$Key2: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.security.MessageDigest: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><javax.management.openmbean.TabularDataSupport: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.InetAddress: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.Collections$SingletonMap: int size()>
<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.FrozenString: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult flag(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.Collections$SingletonMap: java.util.Collection values()>
<org.hsqldb.lib.MultiValueHashMap: org.hsqldb.lib.Iterator get(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: void <init>(javax.sql.DataSource)>-><org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy: void <init>(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory,javax.sql.DataSource)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_6ad5f22232aeb1919be555cbea526997(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Double: java.lang.String toString()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder recipient(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.jruby.exceptions.RaiseException: java.lang.String getMessage()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.crypto.XOREncodingAssignment: void <init>()>
<org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String getHashString()>-><org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String toHex(byte[])>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<javax.security.auth.Subject$SecureSet: boolean remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.service.ReportCardService: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.Course,org.owasp.webgoat.i18n.PluginMessages)>-><synthetic.method.SingletonFactory: org.owasp.webgoat.i18n.PluginMessages getPluginMessages()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$Itr: boolean hasNext()>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.Self: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.http_proxies.HttpProxies: java.lang.String getTitle()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><org.joda.time.base.AbstractInstant: java.lang.String toString(org.joda.time.format.DateTimeFormatter)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getMd5(javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String toUpperCase()>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><net.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.Servers: void callEntry_synthetic_sort(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.DatabaseInitialization: void <init>(javax.sql.DataSource,java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Float: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity follow(java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.service.LabelDebugService: java.util.Map createResponse(java.lang.Boolean)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_c9a80c347f63f59cbda1f120f308fa7a(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.type.TypeDescription$Generic$OfNonGenericType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.convert.TypeDescriptor: java.lang.String toString()>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.service.LabelDebugService getLabelDebugService()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.aop.support.DefaultPointcutAdvisor: java.lang.String toString()>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.ModelAndView mail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.mailbox.MailboxController: org.springframework.web.servlet.ModelAndView mail()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><org.hsqldb.server.Server: void setSilent(boolean)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.security.CodeSource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.MBeanAttributeInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.SimpleXXE: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.xxe.Comments getComments()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.Label: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getSender()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getHeader(java.lang.String)>
<java.util.Hashtable: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_967d363f594fb6c0a0353a8cead61eb1(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.hsqldb.map.BaseHashMap: int valueCount(java.lang.Object,int)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties getMetricsPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_e41b5fba06044085a43f221f5a5b6598(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: void <init>()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties getLogFileWebEndpointPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties: void setExternalFile(java.io.File)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><jnr.constants.platform.OpenFlags: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>-><org.owasp.webgoat.lessons.Assignment: java.util.List getHints()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.type.TypeDescription$Generic$LazyProjection: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.HammerHead: void <init>(org.owasp.webgoat.session.Course)>-><java.lang.Object: void <init>()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DecimalStyle: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.imageio.ImageTypeSpecifier: boolean equals(java.lang.Object)>
<javax.management.modelmbean.DescriptorSupport: boolean isValid()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setConnectionTimeout(java.time.Duration)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.PatternEntry: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.util.ByteList: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.RubyFloat: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Date: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<synthetic.method.UserRepositoryImpl: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.lessons.Lesson: void <init>()>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.MethodType: java.lang.String toString()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getMd5(javax.servlet.http.HttpServletRequest)>-><java.lang.String: byte[] getBytes()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.MBeanParameterInfo: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<java.util.concurrent.ConcurrentHashMap: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.BitSet: java.lang.String toString()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Enum: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.LocalDateTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.undertow.servlet.spec.HttpServletResponseImpl: void setContentType(java.lang.String)>
<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.stored.CrossSiteScriptingStored: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge getSqlInjectionChallenge()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.AbstractSequentialList: java.util.Iterator iterator()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$1: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.TextNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.boot.web.server.MimeMappings$Mapping: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.sql.Timestamp: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.chrome_dev_tools.NetworkLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder badRequest()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all()>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes: java.util.Optional get(java.lang.String)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.core.io.ClassPathResource git(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.jwt.votes.Vote: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)>-><org.owasp.webgoat.jwt.votes.Vote: long calculateStars(int)>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.owasp.webgoat.AjaxAuthenticationEntryPoint: void <init>(java.lang.String)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.auth_bypass.VerifyAccount: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Package: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.ResourceBundle$1: java.lang.String toString()>
<org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String getSender()>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: void <init>(org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.x509.GeneralName: java.lang.String toString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_e1d6310b2b32524ca8fcf5eb99dba5af(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.persist.CachedObjectBase: boolean equals(java.lang.Object)>
<org.owasp.webgoat.template.SampleAttack: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_6ad5f22232aeb1919be555cbea526997(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity build()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.asm.ConstantDynamic: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes: boolean lambda$get$0(java.lang.String,org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode: java.lang.String getCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><jnr.constants.platform.Fcntl: java.lang.String toString()>
<org.owasp.webwolf.user.WebGoatUser: void createUser()>-><org.springframework.security.core.userdetails.User: void <init>(java.lang.String,java.lang.String,java.util.Collection)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_9e6e7d8a186ec19921f7fdc87357cfe1(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.springframework.web.servlet.ModelAndView listUsers(javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.util.FileCopyUtils: void copy(byte[],java.io.OutputStream)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_d88928050f9927098a56d488cdbda599(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.csrf.CSRFFeedback: void <init>()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.nio.file.InvalidPathException: java.lang.String getMessage()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void fakeClickingLinkEmail(java.lang.String,java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_1f9197a645021dd13b518950a3d124b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.OpenMBeanOperationInfoSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.ArrayType: boolean equals(java.lang.Object)>
<org.hibernate.ConnectionAcquisitionMode: org.hibernate.ConnectionAcquisitionMode interpret(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_eeffdbe9aca912455bd062ccdc5f3bae(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.csrf.CSRFGetFlag: void callEntry_synthetic_invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setGridFsDatabase(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: java.lang.String getPassword()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_1eb9794f62cd15dcf20a59e8d3502337(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><org.springframework.http.ResponseEntity$DefaultBuilder: org.springframework.http.ResponseEntity build()>
<java.util.Collections: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.AsciiDoctorTemplateResolver: void <init>(org.owasp.webgoat.i18n.Language)>-><org.thymeleaf.templateresolver.FileTemplateResolver: void <init>()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin getSqlInjectionChallengeLogin()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.org.objectweb.asm.Type: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.RubyBasicObject: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getContents()>
<java.time.temporal.WeekFields: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>-><org.hsqldb.jdbc.JDBCResultSetMetaData: java.lang.String getColumnName(int)>
<com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webwolf.user.UserValidator: void <init>(org.owasp.webwolf.user.UserRepository)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hibernate.cache.spi.access.AccessType: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hsqldb.types.IntervalMonthData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.nio.ch.SocketOptionRegistry$RegistryKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.EnumMap: int size()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.undertow.servlet.spec.HttpServletResponseImpl: void setStatus(int)>
<org.owasp.webgoat.users.Scoreboard: java.util.List getRankings()>-><synthetic.method.UserTrackerRepositoryImpl: org.owasp.webgoat.users.UserTracker findByUser(java.lang.String)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.boot.ansi.AnsiBackground: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.UserSessionData getUserSessionData()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.expression.TypedValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.WebGoat: java.io.File pluginTargetDirectory(java.lang.String)>-><java.io.File: void <init>(java.lang.String)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><com.thoughtworks.xstream.core.util.WeakCache: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.StartWebGoat: void main(java.lang.String[])>-><org.springframework.util.StringUtils: java.lang.String arrayToCommaDelimitedString(java.lang.Object[])>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><jdk.net.ExtendedSocketOptions$ExtSocketOption: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJws: java.lang.Object getBody()>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><java.util.Hashtable: void putAll(java.util.Map)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<java.util.stream.DistinctOps$1$1: void accept(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.joda.time.chrono.LimitChronology$LimitException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_a9f72f6845c11841c1699598f3b37f7(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult notUsed(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_ad8e696bb3af66e8a16c36583ef16054(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><java.util.Hashtable: java.util.Collection values()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.temporal.IsoFields$Field$1: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.core.io.ClassPathResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.apache.commons.lang3.StringUtils: java.lang.String reverse(java.lang.String)>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Boolean,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.io.UrlResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.template.SampleAttack: void <init>()>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><org.jruby.RubyHash$ConvertingEntry: java.lang.Object getValue()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.chrome_dev_tools.ChromeDevTools: java.lang.String getTitle()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.awt.Point: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.boot.ansi.Ansi8BitColor: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><io.undertow.util.HeaderValues$1: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: java.util.List compileFromString(java.lang.String)>-><javax.tools.DiagnosticCollector: void <init>()>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.client_side_filtering.Salaries getSalaries()>
<com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.lang.String _parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Hashtable$Enumerator: boolean hasNext()>
<synthetic.method.FilterChainImpl: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.csrf.CSRFFeedback: boolean hostOrRefererDifferentHost(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getHeader(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.JapaneseImperialCalendar: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hibernate.QueryException: java.lang.String getMessage()>
<org.owasp.webgoat.xxe.SimpleXXE: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.owasp.webgoat.xxe.Comments: org.owasp.webgoat.xxe.Comment parseXml(java.lang.String)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_1edb7eeb876b265911846d48973d772b(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_f4b58363b0c7896ed4769c31750393de(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.jsonwebtoken.Jwts: io.jsonwebtoken.Claims claims()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_72cb7e3e6d59b6c617bac5772aceb12a(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String decode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String decode(java.lang.String)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder status(org.springframework.http.HttpStatus)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setData(java.util.List)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties getWebEndpointPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties: void setBasePath(java.lang.String)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.owasp.webgoat.assignments.AttackResult click(java.lang.String)>-><org.apache.commons.lang3.StringUtils: java.lang.String reverse(java.lang.String)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.time.LocalDateTime getTime()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.xxe.CommentsEndpoint: void <init>()>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.templateresolver.ITemplateResolver springThymeleafTemplateResolver(org.springframework.context.ApplicationContext)>-><org.thymeleaf.templateresolver.AbstractTemplateResolver: void setOrder(java.lang.Integer)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_4a722106cdccbaa92bbe076f2404446b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.jwt.JWTFinalEndpoint getJWTFinalEndpoint()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity getVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.csrf.CSRFFeedback: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.chrono.ISOChronology: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_a9df3d6618df63c42fa919e2225bd75(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><javax.servlet.ServletRequestWrapper: java.lang.String getContentType()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: java.lang.String toString()>
<org.hibernate.tool.schema.internal.Helper: org.hibernate.tool.schema.spi.ScriptSourceInput interpretScriptSourceSetting(java.lang.Object,org.hibernate.boot.registry.classloading.spi.ClassLoaderService,java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.users.UserTracker: void assignmentFailed(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.users.LessonTracker: void incrementAttempts()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_99602efcec6f65e5568ec43fe7c4f273(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.users.RegistrationController: java.lang.String registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.users.UserForm: java.lang.String getPassword()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.io.ObjectStreamClass$FieldReflectorKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelService: void <init>(org.springframework.web.servlet.LocaleResolver,org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.PluginMessages)>-><java.lang.Object: void <init>()>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.RestartLessonService: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository,org.flywaydb.core.Flyway)>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer failureUrl(java.lang.String)>
<org.owasp.webgoat.session.Course: java.util.List getCategories()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult notUsed(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge8.Assignment8: org.owasp.webgoat.assignments.AttackResult notUsed()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.parser.StaticScope: java.lang.String toString()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: void <init>(java.lang.Class,java.lang.Class,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: boolean checkIfLinkIsFromTom(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_a6f1a647bec074dc45b8f4c43e3724b4(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><ch.qos.logback.core.subst.Token: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.csrf.CSRFConfirmFlag1: void <init>()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.crypto.SecureDefaultsAssignment getSecureDefaultsAssignment()>
<org.owasp.webgoat.template.SampleAttack: java.util.List getItemsInBasket(java.lang.String)>-><java.util.List: java.util.List of(java.lang.Object,java.lang.Object)>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.xxe.Comments: void <clinit>()>-><org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.owasp.webgoat.lessons.LessonMenuItem: java.util.List getChildren()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>
<org.owasp.webgoat.challenges.challenge7.MD5: void <init>()>-><org.owasp.webgoat.challenges.challenge7.MD5$MD5State: void <init>(org.owasp.webgoat.challenges.challenge7.MD5)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.net.URI: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.CryptoUtil: java.security.KeyPair generateKeyPair()>-><java.security.KeyPairGenerator$Delegate: java.security.KeyPair generateKeyPair()>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><io.undertow.servlet.spec.HttpServletResponseImpl: javax.servlet.ServletOutputStream getOutputStream()>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.chrono.ZonedChronology$ZonedDurationField: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_4f1046997c22d0e2ff9da20ea436a854(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setSqlScriptEncoding(java.nio.charset.Charset)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><com.thoughtworks.xstream.core.util.WeakCache: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.service.HintService: java.util.List getHints()>-><org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<sun.util.locale.provider.LocaleResources: java.lang.String getCurrencyName(java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hibernate.EntityMode: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hibernate.QueryException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.deser.impl.CreatorCandidate: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webwolf.mailbox.MailboxController: org.springframework.web.servlet.ModelAndView mail()>-><org.springframework.web.servlet.ModelAndView: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.owasp.webgoat.assignments.AttackResult notUsed()>-><java.lang.IllegalStateException: void <init>(java.lang.String)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_37a41289e7f84650ceba59b821b0c2c0(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.misc.Signal: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity average()>-><java.util.Collection: java.util.stream.Stream stream()>
<org.jruby.javasupport.JavaObject: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.idor.IDOR: java.lang.String getTitle()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><io.undertow.servlet.spec.HttpSessionImpl: java.lang.String getId()>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><org.owasp.webgoat.session.WebSession: org.owasp.webgoat.lessons.Lesson getCurrentLesson()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_32754814b6ccfb7639f5bcef67bea412(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webwolf.requests.Requests: org.owasp.webwolf.requests.Requests$Tracert lambda$get$1(org.springframework.boot.actuate.trace.http.HttpTrace)>-><org.owasp.webwolf.requests.Requests: java.lang.String toJsonString(org.springframework.boot.actuate.trace.http.HttpTrace)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_85a9d35c12dbaea8c5729aad26b55cde(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.ServiceLoader: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
<org.owasp.webgoat.users.LessonTracker: void <init>(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.lessons.Lesson: java.util.List getAssignments()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: void callEntry_synthetic_start(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webwolf.user.RegistrationController: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)>-><org.owasp.webwolf.user.UserValidator: void validate(java.lang.Object,org.springframework.validation.Errors)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_2313de72b014138d187ddb86455cecfa(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.hibernate.tool.schema.SourceType: org.hibernate.tool.schema.SourceType interpret(java.lang.Object,org.hibernate.tool.schema.SourceType)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.ClobDataID: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.openmbean.ArrayType: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: void <clinit>()>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer: org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer loginPage(java.lang.String)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity average()>-><java.util.stream.IntPipeline: int reduce(int,java.util.function.IntBinaryOperator)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_45579221de5fb78d4fc0b6b259ca0d17(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><java.io.File: boolean delete()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.ObjectInstance: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.time.LocalTime: boolean equals(java.lang.Object)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.introduction.WebGoatIntroduction: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.TimestampData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: byte[] getJWTSignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_a304b23bb5f6d0733abf280964e998f6(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.JwtParser setSigningKey(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>
<java.util.Arrays: boolean deepEquals0(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.BeanCreationException: java.lang.String toString()>
<org.hsqldb.persist.Cache$CachedObjectComparator: int hashCode(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.Collections$EmptyMap: int size()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Object getPrincipal()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: void callEntry_synthetic_flag(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><io.undertow.util.HeaderValues: boolean add(java.lang.Object)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_b65292c16a181eef189ac76f3719a50a(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: java.util.List getRankings(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.util.Date: void <init>(long)>
<org.springframework.web.util.UriUtils: void lambda$encodeUriVariables$0(java.util.Map,java.lang.String,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String concat(java.lang.String)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<java.util.EnumMap: int entryHashCode(int)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Character: java.lang.String toString()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.io.ObjectStreamClass$WeakClassKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>
<org.owasp.webgoat.xxe.CommentsEndpoint: java.util.Collection retrieveComments()>-><org.owasp.webgoat.xxe.Comments: java.util.Collection getComments()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge1.Challenge1: java.lang.String getTitle()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController: void callEntry_synthetic_errorHtml(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.mailbox.Email: int hashCode()>-><org.owasp.webwolf.mailbox.Email: java.lang.String getContents()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.session.Course: int getTotalOfAssignments()>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Splat: java.lang.String toString()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><org.springframework.util.LinkedMultiValueMap: java.util.Collection values()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.path_traversal.ProfileUploadFix: org.springframework.http.ResponseEntity getProfilePicture()>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.LocalTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.hibernate.boot.internal.SessionFactoryOptionsBuilder: java.util.function.Supplier determineStatelessInterceptor(java.util.Map,org.hibernate.boot.registry.selector.spi.StrategySelector)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><org.apache.commons.logging.LogAdapter$Log4jLog: void error(java.lang.Object,java.lang.Throwable)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult execute(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><java.util.Base64: java.util.Base64$Decoder getDecoder()>
<java.text.AttributeEntry: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><org.springframework.context.support.ReloadableResourceBundleMessageSource: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.ProcessEnvironment$StringEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.nulabinc.zxcvbn.matchers.Keyboard$Position: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.security.web.header.Header: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.UnexecutableNil: java.lang.String toString()>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.springframework.boot.convert.StringToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.util.DerInputBuffer: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getSha256(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_89505e4ce2842fff5889bc72c7df5077(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.zone.ZoneRules: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity getVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.AttributeEntry: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_b1455d3d7d474c817707c974c9e0383e(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.xss.CrossSiteScripting: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.security.web.server.util.matcher.PathPatternParserServerWebExchangeMatcher: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_3ee06cde83e43a3dfcac952a40aefab9(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hibernate.engine.profile.Fetch$Style: java.lang.String toString()>
<org.owasp.webwolf.requests.LandingPage: org.springframework.http.ResponseEntity lambda$ok$0(javax.servlet.http.HttpServletRequest)>-><org.slf4j.helpers.NOPLogger: void trace(java.lang.String,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_72eee1733808c2edbcf079cc759548(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_8f89e2f24e682b931ca00c221042faf(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.xxe.Comments: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.security.Provider: java.lang.String toString()>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.io.ObjectStreamField: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_6ef68e967cc416280079dd0c263916eb(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.FileServer$$InterceptorProxy: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_ef4d4abcc3ff212f817a622676ac880f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.HsqlException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$WeekBasedFieldPrinterParser: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm getPasswordChangeFormInstance()>-><org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm: void <init>()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: org.springframework.security.config.annotation.web.configurers.LogoutConfigurer invalidateHttpSession(boolean)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_4b206fadf9eeefabe5185ae1b07724a1(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.password_reset.PasswordReset: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_d6a08e1ebdc7d9efbbff67514b6c67b0(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_8ce7a9b57f61045d3b5e988fef5d3188(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.thoughtworks.xstream.core.util.WeakCache: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.PatternEntry: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.idor.IDORViewOtherProfile: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.Extension: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Throwable)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_b32719593ea0e9384ae8f3133a0e1e1e(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: void <init>(java.lang.String)>-><java.util.HashSet: void <init>()>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream filter(java.util.function.Predicate)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.thoughtworks.xstream.core.util.WeakCache: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.introspect.AnnotatedMethod: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDORLogin: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_32754814b6ccfb7639f5bcef67bea412(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult flag(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_ff3e6e9d12445f50b42c7a91a016f8b0(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity follow(java.util.Map)>-><java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity getVotes()>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity ok(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.stream.Collectors: java.util.stream.Collector toMap(java.util.function.Function,java.util.function.Function)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_3beca8261641a50a677770ef041ead2b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>-><org.hsqldb.jdbc.JDBCResultSet: boolean next()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.PlaceholderForType: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_83d698e8f6d09bbe1d0f133ba4f09763(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: void <init>()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getValue()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView illegalCall(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.MBeanConstructorInfo: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: boolean execute()>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.crypto.SigningAssignment: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$EntryIterator: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setDefaultPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.OpenMBeanParameterInfoSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.util.RecursiveComparator$Pair: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.springframework.context.support.ReloadableResourceBundleMessageSource: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder getProperties(java.lang.String)>-><org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.challenges.challenge7.PasswordResetLink: java.lang.String createPasswordReset(java.lang.String,java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.LambdaForm$Name: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Optional: boolean isPresent()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_3c4208f6228320a3d2d4ec26cbff32bd(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.env.PropertySource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.HsqlNameManager$HsqlName: java.lang.String toString()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter: java.lang.Enum convert(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.EncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><net.bytebuddy.description.method.ParameterDescription$AbstractBase: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.ResourceBundle$CacheKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.HashingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries: void copyFiles()>-><java.io.File: void <init>(java.io.File,java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_39567d3b9fd20c575385e5280fa9d1b2(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: void <init>()>
<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.idor.UserProfile getUserProfileInstance()>-><org.owasp.webgoat.idor.UserProfile: void setProfileFromId(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.RubyFixnum: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String nextFieldName()>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCResultSet: boolean next()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.web.context.support.WebApplicationContextUtils$FacesDependencyRegistrar$1: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.util.DerInputBuffer: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.jsonwebtoken.impl.DefaultJwtBuilder: java.lang.String compact()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: int hashCode(javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.xxe.Comments: org.owasp.webgoat.xxe.Comment parseXml(java.lang.String)>-><java.io.StringReader: void <init>(java.lang.String)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String encode(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String encode(java.lang.String,java.lang.String,java.lang.String)>
<com.fasterxml.jackson.core.JsonLocation: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: java.lang.String getString()>
<org.owasp.webgoat.challenges.Flag: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_32754814b6ccfb7639f5bcef67bea412(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.owasp.webgoat.lessons.LessonMenuItem: void addChild(org.owasp.webgoat.lessons.LessonMenuItem)>
<java.util.Hashtable$Entry: java.lang.String toString()>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.ParsePosition: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_3c59a3de587189d05dc3f383b23c424d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.Hashtable: void putAll(java.util.Map)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.Boolean: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.VerifyAccount: java.util.HashMap parseSecQuestions(javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.runtime.Arity: boolean equals(java.lang.Object)>
<sun.util.locale.provider.LocaleResources: java.lang.String getLocaleName(java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><ch.qos.logback.core.subst.Node: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_27af345c61f1ec563d046cf1b013603a(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm getPasswordChangeFormInstance()>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder attemptWasMade()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><org.springframework.core.NestedRuntimeException: java.lang.String getMessage()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity follow(java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity follow(java.util.Map)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView start()>-><org.springframework.web.servlet.ModelAndView: void <init>()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.SecureDefaultsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.temporal.WeekFields: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.jdbc.JDBCArray: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Double: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.task.TaskExecutionProperties getTaskExecutionPropertiesInstance()>-><org.springframework.boot.autoconfigure.task.TaskExecutionProperties: void setThreadNamePrefix(java.lang.String)>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: void callEntry_synthetic_start(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><synthetic.method.SingletonFactory: void setWebSession(org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.awt.Color: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_dc7ca2c6295d2288190f4c7a0a33a9f5(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webgoat.users.UserForm getUserFormInstance()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_6f071706ee533e683e38f5eb8d73313(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity average(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.net.httpserver.HttpConnection: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest)>-><java.lang.Integer: int intValue()>
<org.owasp.webgoat.session.Course: int getTotalOfLessons()>-><java.util.ArrayList: int size()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_83d698e8f6d09bbe1d0f133ba4f09763(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webwolf.user.UserForm getUserFormInstance()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.MissingFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.challenges.challenge7.MD5: byte[] getHash()>-><org.owasp.webgoat.challenges.challenge7.MD5: byte[] encode(int[],int)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder setIssuedAt(java.util.Date)>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.ReportCardService: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.Course,org.owasp.webgoat.i18n.PluginMessages)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_7eba4f7bbf8b1b8ccc400d61d57aff35(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: void <init>()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.csrf.ForgedReviews: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.x509.GeneralName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.reflect.Proxy$KeyX: boolean equals(java.lang.Object)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.convert.support.GenericConversionService$ConverterAdapter: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayList: void <init>()>
<org.owasp.webgoat.csrf.CSRFLogin: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest)>-><java.lang.String: boolean startsWith(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.chrono.LimitChronology$LimitException: java.lang.String getMessage()>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webwolf.user.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.PasswordResetLink: java.lang.String createPasswordReset(java.lang.String,java.lang.String)>-><java.lang.String: int length()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$CharLiteralPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<java.util.TreeMap: boolean valEquals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: java.util.List getRankings(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.StringCharacterIterator: boolean equals(java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webwolf.user.UserForm getUserFormInstance()>-><org.owasp.webwolf.user.UserForm: void setUsername(java.lang.String)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList: boolean add(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><net.bytebuddy.description.type.TypeDescription$AbstractBase: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.crypto.EncodingAssignment: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.ClosureLocalVariable: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_e4c8de2d696eda8a02d43c0e40c6c84b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.classmate.util.ClassKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.hibernate.QueryException: java.lang.String getMessage()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.Inet6Address: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.hibernate.boot.internal.SessionFactoryOptionsBuilder: java.util.function.Supplier determineStatelessInterceptor(java.util.Map,org.hibernate.boot.registry.selector.spi.StrategySelector)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.assignments.LessonTrackerInterceptor: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.WebSession)>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: java.lang.String writeTable(java.sql.ResultSet,java.sql.ResultSetMetaData)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><net.bytebuddy.description.method.ParameterDescription$AbstractBase: boolean equals(java.lang.Object)>
<com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nullOrToString(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.jruby.javasupport.JavaObject: org.jruby.runtime.builtin.IRubyObject to_s(org.jruby.Ruby,java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.io.File: boolean equals(java.lang.Object)>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.crypto.Crypto: void <init>()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.http.HttpProperties getHttpPropertiesInstance()>-><org.springframework.boot.autoconfigure.http.HttpProperties: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><synthetic.method.SecurityWebFilterChainImpl: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.chrome_dev_tools.NetworkDummy$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<org.hsqldb.persist.HsqlProperties: int getPropertyWithinRange(java.lang.String,int)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_5aa66f7e968868af887b46315f082c3f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.FileServer$$InterceptorProxy: void <init>()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setSeparator(java.lang.String)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder signWith(io.jsonwebtoken.SignatureAlgorithm,java.lang.String)>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.expression.spel.support.ReflectivePropertyAccessor$PropertyCacheKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwt: java.lang.Object getBody()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.math.BigInteger: boolean equals(java.lang.Object)>
<java.util.ArrayDeque: boolean contains(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.provider.PolicyParser$PrincipalEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.insecure_login.InsecureLogin: java.lang.String getTitle()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>-><java.time.LocalDateTime: int hashCode()>
<org.springframework.web.util.HierarchicalUriComponents: void lambda$getQuery$0(java.lang.StringBuilder,java.lang.String,java.util.List)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<java.util.AbstractMap: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.math.BigDecimal: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Locale: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.csrf.CSRFGetFlag: void <init>()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.nulabinc.zxcvbn.matchers.Keyboard$Position: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Hashtable$Enumerator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.util.TypeKey: java.lang.String toString()>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.controller.Welcome: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.AbstractMap: java.lang.String toString()>
<org.owasp.webgoat.session.UserSessionData: void <init>()>-><java.lang.Object: void <init>()>
<java.util.ArrayList: boolean remove(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity newToken(java.lang.String,java.util.Map)>-><io.jsonwebtoken.impl.DefaultJwt: java.lang.Object getBody()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.net.Inet6Address: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_df80fba8520ee6f947c268342d9abfc(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.provider.PolicyFile$SelfPermission: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_4070d9997a61a1720965dc6843b50885(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.ArrayList: int size()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.util.MimeType: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.hsqldb.persist.HsqlProperties: java.lang.String validateProperty(java.lang.String,java.lang.String,java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableMap: java.lang.String toString()>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.Salaries$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<java.util.AbstractMap$SimpleEntry: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_84eef27b1b214c098d2f4963e71d2dc7(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder: org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder contents(java.lang.String)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><io.jsonwebtoken.Jwts: io.jsonwebtoken.JwtParser parser()>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.CollectionType: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionAdvanced: java.lang.String getTitle()>
<com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.password_reset.SecurityQuestionAssignment getSecurityQuestionAssignment()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.lang.StringBuffer: void <init>()>
<org.owasp.webgoat.client_side_filtering.Salaries: void copyFiles()>-><java.lang.RuntimeException: void <init>(java.lang.Throwable)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$AuthorizedUrl: org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry permitAll()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson4: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.dirgra.Edge: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$1: java.lang.Object next()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.lessons.Lesson: void <init>()>-><java.lang.Object: void <init>()>
<org.hsqldb.types.IntervalType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.imageio.ImageTypeSpecifier$Interleaved: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_e41b5fba06044085a43f221f5a5b6598(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.annotation.web.configurers.CsrfConfigurer csrf()>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.templateresolver.ITemplateResolver springThymeleafTemplateResolver(org.springframework.context.ApplicationContext)>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setCharacterEncoding(java.lang.String)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.challenges.challenge7.MD5: void update(java.lang.String)>-><java.lang.String: byte[] getBytes()>
<org.owasp.webgoat.crypto.EncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void <init>(java.lang.String)>-><java.io.File: void <init>(java.lang.String,java.lang.String)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile,java.lang.String)>-><org.springframework.util.FileCopyUtils: void copy(byte[],java.io.File)>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.ssrf.SSRFTask2: void <init>()>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.convert.support.GenericConversionService$ConvertersForPair: java.lang.String toString()>
<org.owasp.webgoat.users.LessonTracker: java.util.Map getLessonOverview()>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.session.UserSessionData: java.lang.Object getValue(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hibernate.cfg.MetadataSourceType: java.lang.String toString()>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: void callEntry_synthetic_retrieveComments(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.xss.stored.StoredXssComments: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.security.cert.Certificate: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.security.web.util.matcher.AnyRequestMatcher: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.service.HintService: void <init>(org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.html_tampering.HtmlTampering: java.lang.String getTitle()>
<org.hsqldb.map.BaseHashMap$ValuesIterator: java.lang.Object next()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView start()>-><org.springframework.web.servlet.ModelAndView: void setViewName(java.lang.String)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void createSecretFileWithRandomContents()>-><java.io.File: boolean mkdir()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_579f1e70c92bac1dfa783f4d7cfd791b(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webgoat.users.UserForm getUserFormInstance()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.xss.DOMCrossSiteScripting: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)>-><java.util.Random: int nextInt()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList$SubList: java.util.Iterator iterator()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.apache.logging.log4j.util.LoaderUtil$UrlResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.time.LocalDateTime getTime()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.csrf.Review: void <init>()>-><java.lang.Object: void <init>()>
<org.springframework.web.util.UriComponents: java.lang.String getVariableValueAsString(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.crypto.SecureDefaultsAssignment: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: boolean equals(java.lang.Object)>
<org.jruby.javasupport.JavaArray: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hibernate.engine.query.spi.QueryPlanCache$HQLQueryPlanKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Object: java.lang.String toString()>
<org.hibernate.internal.util.config.ConfigurationHelper: java.lang.String getString(java.lang.String,java.util.Map)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>-><org.hsqldb.jdbc.JDBCResultSet: java.lang.String getString(int)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void createSecretFileWithRandomContents()>-><java.io.File: void <init>(java.io.File,java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hibernate.engine.query.spi.QueryPlanCache$DynamicFilterKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.MvcConfiguration: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.web.method.ControllerAdviceBean: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult: void <init>(boolean,java.lang.String,java.lang.String,java.lang.String,boolean)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hsqldb.jdbc.JDBCArray: java.lang.String toString()>
<org.owasp.webgoat.session.UserSessionData: void <init>(java.lang.String,java.lang.String)>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.core.io.ClassPathResource git(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode: void <init>(org.owasp.webgoat.client_side_filtering.ShopEndpoint,java.lang.String,int)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: java.util.HashMap parseSecQuestions(javax.servlet.http.HttpServletRequest)>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.MBeanAttributeInfo: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_7eba4f7bbf8b1b8ccc400d61d57aff35(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Rational: java.lang.String toString()>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_a83ddaaa2efe9676b1edaf5f342368ec(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.lang.String getMapping(java.lang.reflect.Method)>-><java.util.Optional: java.lang.Object orElse(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<org.owasp.webgoat.users.UserService: void addUser(java.lang.String,java.lang.String)>-><synthetic.method.UserRepositoryImpl: org.owasp.webgoat.users.WebGoatUser findByUsername(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_59fb32f6acb84df323f079e4ece9ab7d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity getVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><io.undertow.servlet.spec.HttpSessionImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.SubList: java.util.Iterator iterator()>
<org.owasp.webgoat.html_tampering.HtmlTampering: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.format.support.FormattingConversionService$AnnotationPrinterConverter: java.lang.String toString()>
<java.util.AbstractList: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>-><java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.util.BuddhistCalendar: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><net.bytebuddy.description.method.MethodDescription$AbstractBase: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.web.server.util.matcher.NegatedServerWebExchangeMatcher: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedParameter: java.lang.String toString()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.csrf.Review: void setText(java.lang.String)>
<org.owasp.webgoat.service.HintService: java.util.List createHint(org.owasp.webgoat.lessons.Assignment)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.IllegalFormatConversionException: java.lang.String getMessage()>
<sun.security.util.ManifestEntryVerifier: void setEntry(java.lang.String,java.util.jar.JarEntry)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.web.util.matcher.AntPathRequestMatcher: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_a2866f179349b66c62448b4465c6feba(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_c4c04a0abadb54531b22c76a166b07d1(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Character: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<io.undertow.util.HeaderValues: int indexOf(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.TreeMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.http_basics.HttpBasics: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.AbstractList$Itr: java.lang.Object next()>
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.chrome_dev_tools.NetworkDummy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_64693a619c940eb52b7cec39b1076373(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.template.SampleAttack$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.JavaObjectDataInternal: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCPreparedStatement: void setInt(int,int)>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.thoughtworks.xstream.XStream: void processAnnotations(java.lang.Class)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.x509.GeneralName: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$2(java.lang.Integer)>-><java.lang.Integer: int intValue()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getMd5(javax.servlet.http.HttpServletRequest)>-><java.util.Random: int nextInt(int)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: boolean lambda$getLessonTracker$0(org.owasp.webgoat.lessons.Lesson,org.owasp.webgoat.users.LessonTracker)>-><org.owasp.webgoat.users.LessonTracker: java.lang.String getLessonName()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.HammerHead: void <init>(org.owasp.webgoat.session.Course)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.UnboxedFixnum: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.LessonTitleService: void <init>(org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_f2e027607a0718c305d21c6310c81615(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.nulabinc.zxcvbn.Feedback: java.lang.String getWarning()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView illegalCall(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: org.springframework.web.servlet.ViewResolver viewResolver(org.thymeleaf.spring5.SpringTemplateEngine)>-><org.thymeleaf.spring5.view.ThymeleafViewResolver: void setTemplateEngine(org.thymeleaf.spring5.ISpringTemplateEngine)>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.MvcConfiguration: org.thymeleaf.spring5.SpringTemplateEngine thymeleafTemplateEngine(org.thymeleaf.templateresolver.ITemplateResolver,org.owasp.webgoat.LessonTemplateResolver,org.owasp.webgoat.AsciiDoctorTemplateResolver)>-><org.thymeleaf.spring5.SpringTemplateEngine: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: void close()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.UnknownFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.users.UserValidator: void validate(java.lang.Object,org.springframework.validation.Errors)>-><synthetic.method.UserRepositoryImpl: org.owasp.webgoat.users.WebGoatUser findByUsername(java.lang.String)>
<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String)>-><org.joda.time.base.AbstractInstant: java.lang.String toString(org.joda.time.format.DateTimeFormatter)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.representations.BasicBlock: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.nio.charset.Charset: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getRecipient()>
<org.owasp.webgoat.challenges.challenge7.PasswordResetLink: java.lang.String scramble(java.util.Random,java.lang.String)>-><java.lang.String: char[] toCharArray()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1: boolean add(java.lang.Object)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: void callEntry_synthetic_getFileLocation(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webwolf.FileServer: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_480ad9b8e2b965de7b428571c66c5383(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.idor.IDORDiffAttributes$$InterceptorProxy: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_4de620526edc92bee1382712e5082f24(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><org.slf4j.helpers.NOPLogger: void info(java.lang.String,java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: void callEntry_synthetic_encode(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: java.lang.String getString()>
<org.owasp.webgoat.challenges.challenge1.Assignment1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webwolf.user.RegistrationController: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.MBeanInfo: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.owasp.webgoat.session.Course: java.util.List getCategories()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.deser.impl.ReadableObjectId: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><net.bytebuddy.description.annotation.AnnotationValue$ForMismatchedType: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties getHttpTracePropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews: java.util.Collection retrieveReviews()>-><java.util.ArrayList: boolean addAll(java.util.Collection)>
<java.util.HashMap: java.util.HashMap$Node removeNode(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><java.util.ArrayList$Itr: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.flywaydb.core.internal.exception.FlywaySqlException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.chrono.BuddhistChronology: java.lang.String toString()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><javax.management.MBeanParameterInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String toLowerCase()>
<org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.lessons.CourseConfiguration: boolean methodReturnTypeIsOfTypeAttackResult(java.lang.reflect.Method)>-><sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.missing_ac.Users$1: void <init>(org.owasp.webgoat.missing_ac.Users,java.sql.SQLException)>-><java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.InetSocketAddress: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView illegalCall(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.field.MillisDurationField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String encode(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.util.LinkedMultiValueMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.UserProfile: java.util.Map profileToMap()>-><java.lang.Integer: java.lang.Integer valueOf(int)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult checkSalaryRanking(java.sql.Connection,java.lang.StringBuffer)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.ssrf.SSRF: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.calendar.ZoneInfo: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.SimpleXXE: boolean checkSolution(org.owasp.webgoat.xxe.Comment)>-><org.apache.commons.exec.OS: boolean isFamilyUnix()>
<org.jruby.util.CodegenUtils: void visitAnnotationFields(org.jruby.org.objectweb.asm.AnnotationVisitor,java.util.Map)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.annotation.web.configurers.LogoutConfigurer logout()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.UUID: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.CryptoUtil: java.lang.String getPrivateKeyInPEM(java.security.KeyPair)>-><java.util.Base64$Encoder: byte[] encode(byte[])>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_e02c91d4fd4a667e67f2887acdd731e8(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.hsqldb.Expression: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setEnableSpringElCompiler(boolean)>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.openmbean.ArrayType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: java.util.List lessonOverview(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.parser.StaticScope: java.lang.String toString()>
<javax.management.ImmutableDescriptor: javax.management.ImmutableDescriptor union(javax.management.Descriptor[])>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder output(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.HashMap: void <init>()>
<io.jsonwebtoken.impl.DefaultJwtParser: void validateExpectedClaims(io.jsonwebtoken.Header,io.jsonwebtoken.Claims)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: java.util.List lessonOverview(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.text.FieldPosition: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_579f1e70c92bac1dfa783f4d7cfd791b(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_aa75ad1bfdd8e8989c7dc6bcd11977ee(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity follow(java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.template.SampleAttack: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.MissingFunctionACUsers: org.owasp.webgoat.users.WebGoatUser addUser(org.owasp.webgoat.users.WebGoatUser)>-><org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.management.openmbean.TabularType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.context.properties.source.ConfigurationPropertyName: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties getEnvironmentEndpointPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties: void setKeysToSanitize(java.lang.String[])>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.org.objectweb.asm.Type: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(java.lang.String,java.lang.String)>-><java.util.Base64$Encoder: java.lang.String encodeToString(byte[])>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_9dc3f30b98c751837c0f8ba9fa0acdc7(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Hashtable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap: java.util.Set entrySet()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Object: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.springframework.cglib.core.EmitUtils$5: java.lang.Object transform(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<java.text.AttributedString: boolean valuesMatch(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.chrono.BasicChronology: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.WebGoatUser: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.service.LessonProgressService$LessonOverview: void <init>(org.owasp.webgoat.lessons.Assignment,java.lang.Boolean)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.OffsetDateTime: java.lang.String toString()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.PreparedStatement prepareStatement(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Complex: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.path_traversal.ProfileUploadFix getProfileUploadFix()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b getSqlInjectionLesson5b()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><javax.servlet.ServletRequestWrapper: java.lang.String getParameter(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.InvokerBytecodeGenerator$CpPatch: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.csrf.CSRFConfirmFlag1: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.tz.CachedDateTimeZone: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedField: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_faa3f49bc1ea4d036ef76181ce4ac04(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.io.ObjectInputStream: java.lang.Object readObject()>
<org.owasp.webgoat.service.ReportCardService: void <init>(org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.Course,org.owasp.webgoat.i18n.PluginMessages)>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail build()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_4b206fadf9eeefabe5185ae1b07724a1(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.AttributeAccessorSupport: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.EnumMap$EntryIterator$Entry: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ast.SymbolNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.web.context.support.WebApplicationContextUtils$SessionObjectFactory: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.expression.spel.ast.NullLiteral: java.lang.String toString()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.secure_password.SecurePasswordsAssignment: void <init>()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties getRestClientPropertiesInstance()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void setUris(java.util.List)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.crypto.CryptoPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.challenges.challenge1.Challenge1: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: java.lang.String generateTable(java.sql.ResultSet)>-><org.hsqldb.jdbc.JDBCResultSet: void beforeFirst()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity average(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.OperandType: java.lang.String toString()>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><com.thoughtworks.xstream.core.util.CompositeClassLoader$1: boolean add(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.http_basics.HttpBasicsLesson: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$SynchronizedMap: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.password_reset.ResetLinkAssignment getResetLinkAssignment()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.challenges.Email$EmailBuilder: org.owasp.webgoat.challenges.Email$EmailBuilder sender(java.lang.String)>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.LessonMenuService: void callEntry_synthetic_showLeftNav(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: java.lang.String follow(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.crypto.EncodingAssignment: java.lang.String getBasicAuth(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.RubyThread: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.base.AbstractDuration: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayDeque$DeqIterator: java.lang.Object next()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><java.net.URISyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.thymeleaf.standard.expression.OGNLExpressionObjectsWrapper: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.crypto.CryptoUtil: boolean verifyMessage(java.lang.String,java.lang.String,java.security.PublicKey)>-><ch.qos.logback.classic.Logger: void info(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setPort(java.lang.Integer)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.concurrent.ConcurrentHashMap: java.lang.String toString()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.crypto.HashingAssignment: java.lang.String getHash(java.lang.String,java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.aop.support.DefaultIntroductionAdvisor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.Comments: void <clinit>()>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><java.util.Optional: void ifPresent(java.util.function.Consumer)>
<org.hibernate.loader.BatchFetchStyle: org.hibernate.loader.BatchFetchStyle interpret(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_e169604e82c4ee909b79a1c84d498a91(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.runtime.Block: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$Record: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.io.File: void <init>(java.io.File,java.lang.String)>
<org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.SigningAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><org.apache.commons.logging.LogAdapter$JavaUtilLog: void error(java.lang.Object,java.lang.Throwable)>
<org.owasp.webgoat.lessons.CourseConfiguration: void <init>(java.util.List,java.util.List)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.service.ReportCardService$ReportCard: void setTotalNumberOfLessons(int)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.password_reset.TriedQuestions: void incr(java.lang.String)>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_634cc330bf6dbd047b3951efcf978c13(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.LocalDate: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.reflect.Parameter: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.AbstractMap: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.ssl.ProtocolVersion: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>-><java.io.PrintStream: void println(java.lang.String)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3 getSqlInjectionLesson3()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_444da0f1e1465b4281893758cc6ac56c(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult notUsed(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webwolf.requests.LandingPage: void callEntry_synthetic_ok(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webwolf.requests.LandingPage: java.util.concurrent.Callable ok(javax.servlet.http.HttpServletRequest)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setEncoding(java.nio.charset.Charset)>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$SynchronizedCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><io.jsonwebtoken.impl.JwtMap: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.EventObject: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: void <init>(org.springframework.web.client.RestTemplate,java.lang.String)>-><org.springframework.web.client.RestTemplate: void <init>()>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<java.util.AbstractMap$SimpleImmutableEntry: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.users.UserTracker: void assignmentSolved(org.owasp.webgoat.lessons.Lesson,java.lang.String)>-><org.owasp.webgoat.users.UserTracker: org.owasp.webgoat.users.LessonTracker getLessonTracker(org.owasp.webgoat.lessons.Lesson)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser: java.lang.String toString()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Collections$UnmodifiableCollection: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$ZoneIdPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.nulabinc.zxcvbn.Strength: int getScore()>
<org.jruby.ir.operands.ClosureLocalVariable: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.nulabinc.zxcvbn.Strength: double getGuesses()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_e824ecb7c913476045e10dafe2be7987(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.service.LessonMenuService: java.lang.String lambda$showLeftNav$0(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.auth_bypass.AuthBypass: java.lang.String getTitle()>
<org.owasp.webgoat.client_side_filtering.Salaries: void copyFiles()>-><org.springframework.util.FileCopyUtils: int copy(java.io.InputStream,java.io.OutputStream)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.Collections$EmptyMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.HSQLDBDatabaseConfig: org.hsqldb.server.Server hsqlStandalone(java.lang.String,boolean,boolean,java.lang.String)>-><org.hsqldb.server.Server: void setPort(int)>
<org.hibernate.tool.schema.internal.Helper: org.hibernate.tool.schema.spi.ScriptTargetOutput interpretScriptTargetSetting(java.lang.Object,org.hibernate.boot.registry.classloading.spi.ClassLoaderService,java.lang.String)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_a3da66f27cfd47baaaed8885971d28f3(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<java.util.Hashtable: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.context.support.DelegatingMessageSource: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setInitializationMode(org.springframework.boot.jdbc.DataSourceInitializationMode)>
<com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.LessonTemplateResolver lessonTemplateResolver(org.springframework.core.io.ResourceLoader)>-><org.thymeleaf.templateresolver.AbstractTemplateResolver: void setOrder(java.lang.Integer)>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.challenges.challenge5.Assignment5: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.core.io.SerializedString: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hsqldb.HsqlNameManager$HsqlName: java.lang.String toString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.concurrent.ConcurrentHashMap$CollectionView: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.base.AbstractPeriod: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.annotation.AnnotationValue$ForDescriptionArray: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equal(javax.management.openmbean.OpenMBeanParameterInfo,javax.management.openmbean.OpenMBeanParameterInfo)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<java.util.concurrent.ConcurrentHashMap$MapEntry: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.Integer: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.introduction.WebGoatIntroduction: java.lang.String getTitle()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webwolf.MvcConfiguration: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><java.util.concurrent.TimeUnit$7: long toDays(long)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_a83ddaaa2efe9676b1edaf5f342368ec(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: void createSecretFileWithRandomContents()>-><java.io.File: java.nio.file.Path toPath()>
<org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<java.util.HashMap: int hash(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode getDiscountCode(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<java.util.Hashtable$EntrySet: boolean contains(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<com.zaxxer.hikari.util.DriverDataSource: void <init>(java.lang.String,java.lang.String,java.util.Properties,java.lang.String,java.lang.String)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b: boolean check_text(java.lang.String,java.lang.String)>
<org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean canEqual(java.lang.Object)>
<java.util.AbstractMap: boolean containsKey(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><com.zaxxer.hikari.util.DriverDataSource: java.sql.Connection getConnection()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>
<sun.security.util.SignatureFileVerifier: boolean verifySection(java.util.jar.Attributes,java.lang.String,sun.security.util.ManifestDigester)>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.beans.BeanMetadataAttribute: java.lang.String toString()>
<org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.crypto.XOREncodingAssignment: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Hashtable: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.ArrayList: void sort(java.util.Comparator)>
<org.owasp.webgoat.controller.StartLesson: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest)>-><java.util.stream.ReferencePipeline: java.util.Optional findFirst()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.validation.BindException: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.chrono.GJChronology: java.lang.String toString()>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.reflect.generics.reflectiveObjects.TypeVariableImpl: boolean equals(java.lang.Object)>
<java.text.AttributeEntry: java.lang.String toString()>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: org.owasp.webwolf.mailbox.Email getEmailInstance()>-><org.owasp.webwolf.mailbox.Email: void setRecipient(java.lang.String)>
<org.jruby.javasupport.JavaObject: int hashCode()>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.format.support.FormattingConversionService$AnnotationPrinterConverter: java.lang.String toString()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity average(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.annotation.AnnotationAttributes: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.factory.config.RuntimeBeanReference: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><javax.servlet.ServletRequestWrapper: java.lang.String getParameter(java.lang.String)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.webwolf_introduction.MailAssignment: void <init>(org.springframework.web.client.RestTemplate,java.lang.String)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_fdedcd66f11a732fecda6effff7af4b9(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.springframework.boot.convert.NumberToDataSizeConverter: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.cache.CacheProperties getCachePropertiesInstance()>-><org.springframework.boot.autoconfigure.cache.CacheProperties: void setCacheNames(java.util.List)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String getRecipient()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.node.DoubleNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String)>-><java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_be41e32e4e6663a1e6dcd67bab2ce6f4(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.awt.image.ColorModel: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.time.ZonedDateTime: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: void callEntry_synthetic_getSecretToken(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: void <init>()>
<org.owasp.webwolf.WebSecurityConfig: void configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)>-><org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$AuthorizedUrl: org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry authenticated()>
<org.owasp.webgoat.users.LessonTracker: void <init>()>-><java.util.HashSet: void <init>()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.cache.CacheProperties getCachePropertiesInstance()>-><org.springframework.boot.autoconfigure.cache.CacheProperties: void <init>()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setJodaDateTimeFormat(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.MessageFormat: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.openmbean.CompositeType: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.LessonInfoService: void <init>(org.owasp.webgoat.session.WebSession)>
<java.util.Arrays: int hashCode(java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.session.Course: java.util.List getCategories()>-><java.util.stream.Collectors: java.util.stream.Collector toList()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.TimestampData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.springframework.http.converter.json.MappingJacksonValue getVotes(java.lang.String)>-><java.util.stream.ReferencePipeline: java.lang.Object collect(java.util.stream.Collector)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.springframework.core.io.ClassPathResource: void <init>(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.StringBuilder: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.TimeData: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.SocketImpl: java.lang.String toString()>
<org.owasp.webgoat.users.RegistrationController: void <init>(org.owasp.webgoat.users.UserValidator,org.owasp.webgoat.users.UserService,org.springframework.security.authentication.AuthenticationManager)>-><synthetic.method.SingletonFactory: org.owasp.webgoat.users.UserService getUserService()>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJws: java.lang.Object getBody()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String)>-><java.util.Optional: java.lang.Object orElse(java.lang.Object)>
<org.owasp.webgoat.users.LessonTracker: java.util.Optional getAssignment(java.lang.String)>-><java.util.Collection: java.util.stream.Stream stream()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.ThreadGroup: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.LocalTime: java.lang.String toString()>
<org.owasp.webgoat.users.Scoreboard: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.users.UserRepository,org.owasp.webgoat.session.Course,org.owasp.webgoat.i18n.PluginMessages)>-><synthetic.method.SingletonFactory: synthetic.method.UserRepositoryImpl getUserRepositoryImpl()>
<org.owasp.webgoat.users.WebGoatUser: boolean isAccountNonExpired()>-><org.springframework.security.core.userdetails.User: boolean isAccountNonExpired()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.HashMap$Node: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Character$Subset: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.net.URI: java.lang.String getHost()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.TreeMap$Entry: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$Node: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>-><org.owasp.webgoat.assignments.AttackResult: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder builder(org.owasp.webgoat.i18n.PluginMessages)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.lang.Throwable: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.field.UnsupportedDurationField: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.Collections$EmptySet: boolean containsAll(java.util.Collection)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.reflect.WeakCache$CacheValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.math.BigDecimal: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.service.LabelService: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView resetPassword(java.lang.String,org.springframework.ui.Model,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.crypto.SigningAssignment: java.lang.String getPrivateKey(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.crypto.CryptoUtil: java.security.KeyPair generateKeyPair()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.HashMap$EntrySet: int size()>
<org.owasp.webgoat.idor.IDORLogin: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.jruby.RubyHash: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.io.FileSystemResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJws: java.lang.Object getBody()>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.security.UnresolvedPermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.ForgedReviews: java.util.Collection retrieveReviews()>-><org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.DigitList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.hsqldb.jdbc.JDBCStatement: java.sql.ResultSet executeQuery(java.lang.String)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.service.LessonTitleService: void callEntry_synthetic_showPlan(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.IllegalFormatCodePointException: java.lang.String getMessage()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><org.springframework.ui.ModelMap: org.springframework.ui.ModelMap addAttribute(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.beans.factory.config.BeanExpressionContext: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.convert.support.GenericConversionService$ConverterAdapter: java.lang.String toString()>
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: void <init>(java.lang.Class,java.lang.Class,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: void <init>()>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode: void <init>(org.owasp.webgoat.client_side_filtering.ShopEndpoint,java.lang.String,int)>
<java.util.Formatter$FormatSpecifier: void printHashCode(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.Collections$UnmodifiableMap: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_2b5f98c3c975e9cefb796b7b27861cb5(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.format.DateTimeFormatterBuilder$FractionPrinterParser: java.lang.String toString()>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.LessonTemplateResolver lessonTemplateResolver(org.springframework.core.io.ResourceLoader)>-><org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver: void setCacheable(boolean)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.service.LessonProgressService: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.WebSession)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.web.ServerProperties getServerPropertiesInstance()>-><org.springframework.boot.autoconfigure.web.ServerProperties: void setPort(java.lang.Integer)>
<org.owasp.webgoat.csrf.Review: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)>-><java.lang.Object: void <init>()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.i18n.PluginMessages pluginMessages(org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.Language)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.users.WebGoatUser: void createUser()>-><org.springframework.security.core.userdetails.User: void <init>(java.lang.String,java.lang.String,java.util.Collection)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: void login(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.mongo.MongoProperties getMongoPropertiesInstance()>-><org.springframework.boot.autoconfigure.mongo.MongoProperties: void setFieldNamingStrategy(java.lang.Class)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.format.Parsed: java.lang.String toString()>
<org.owasp.webgoat.missing_ac.DisplayUser: void <init>(org.owasp.webgoat.users.WebGoatUser)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.csrf.CSRFGetFlag: java.util.Map invoke(javax.servlet.http.HttpServletRequest)>-><javax.servlet.http.HttpServletRequestWrapper: java.lang.String getHeader(java.lang.String)>
<org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Reference: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.expression.ExpressionException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.security.access.SecurityConfig: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.crypto.EncodingAssignment getEncodingAssignment()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.IRException: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.io.ByteArrayResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedbackArgs(java.lang.Object[])>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.users.RegistrationController: void <init>(org.owasp.webgoat.users.UserValidator,org.owasp.webgoat.users.UserService,org.springframework.security.authentication.AuthenticationManager)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.ResourceBundle$CacheKey: java.lang.String toString()>
<org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver: boolean checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.annotation.Annotation,org.springframework.beans.TypeConverter)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.UserTracker: void <init>()>-><java.util.HashSet: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<com.fasterxml.jackson.databind.node.POJONode: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.ZoneId: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_738e259b2ffe51f674b7974511e87864(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<com.google.common.collect.AbstractMapEntry: int hashCode()>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.FloatNode: boolean equals(java.lang.Object)>
<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<io.jsonwebtoken.SigningKeyResolverAdapter: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$1: byte[] resolveSigningKeyBytes(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>
<java.util.concurrent.ConcurrentHashMap$TreeNode: java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.html_tampering.HtmlTamperingTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<java.util.concurrent.CopyOnWriteArrayList: int indexOf(java.lang.Object,java.lang.Object[],int,int)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void <init>()>
<org.owasp.webgoat.controller.StartLesson$$InterceptorProxy: org.springframework.web.servlet.ModelAndView lessonPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.javasupport.JavaMethod: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_1731f925d73a36bf012d16b268fae04b(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><com.thoughtworks.xstream.core.util.WeakCache: java.util.Collection values()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_3c59a3de587189d05dc3f383b23c424d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge1.ImageServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.lang.Integer: int intValue()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult: java.lang.String getOutput()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List lessonOverview()>-><org.owasp.webgoat.session.WebSession: org.owasp.webgoat.lessons.Lesson getCurrentLesson()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult sendEmail(java.lang.String,java.lang.String)>-><org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder: org.owasp.webgoat.password_reset.PasswordResetEmail build()>
<org.hibernate.boot.registry.selector.internal.StrategySelectorImpl: java.lang.Object resolveStrategy(java.lang.Class,java.lang.Object,java.util.concurrent.Callable,org.hibernate.boot.registry.selector.spi.StrategyCreator)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.VerifyAccount: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder success(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.WeakHashMap$Entry: java.lang.String toString()>
<org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.HashMap$Node: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_461d99cc9609bbcb500602027d5ac607(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.challenges.challenge1.Challenge1: void <init>()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: org.springframework.http.ResponseEntity checkout(java.lang.String)>-><io.jsonwebtoken.Jwts: io.jsonwebtoken.JwtParser parser()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.YearMonth: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13: void <init>(javax.sql.DataSource)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.xss.stored.StoredXssComments$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewComment(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: void <init>(org.springframework.web.servlet.resource.ResourceUrlProvider)>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.path_traversal.ProfileUpload: void <init>(java.lang.String,org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<com.fasterxml.jackson.databind.util.TokenBuffer$Parser: com.fasterxml.jackson.core.JsonToken nextToken()>-><org.owasp.webgoat.webwolf_introduction.Email: java.lang.String toString()>
<org.owasp.webwolf.requests.Requests: boolean allowedTrace(org.springframework.boot.actuate.trace.http.HttpTrace,org.springframework.security.core.userdetails.UserDetails)>-><java.lang.String: boolean contains(java.lang.CharSequence)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_c3de7e86989c8d93371d8705d2db1f8c(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.springframework.http.server.reactive.NettyHeadersAdapter$EntryIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.HashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.challenges.challenge1.ImageServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.core.io.ClassPathResource: void <init>(java.lang.String)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><java.util.ArrayList: void <init>()>
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webwolf.user.RegistrationController: void <init>(org.owasp.webwolf.user.UserValidator,org.owasp.webwolf.user.UserService,org.springframework.security.authentication.AuthenticationManager)>-><org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator: void <init>(org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder,org.springframework.context.ApplicationContext)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><org.jruby.RubyArray$RubyArrayConversionIterator: boolean hasNext()>
<org.owasp.webgoat.service.LessonTitleService: void <init>(org.owasp.webgoat.session.WebSession)>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.WebSession getWebSession()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.util.locale.Extension: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><sun.security.util.ObjectIdentifier: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Short: boolean equals(java.lang.Object)>
<org.owasp.webgoat.i18n.Language: java.util.Locale getLocale()>-><org.springframework.web.context.request.ServletRequestAttributes: javax.servlet.http.HttpServletRequest getRequest()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><jnr.constants.platform.windows.LastError: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTVotesEndpoint: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String)>-><java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>
<org.owasp.webgoat.webwolf_introduction.LandingAssignment: org.springframework.web.servlet.ModelAndView openPasswordReset(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.session.WebSession getWebSession()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_5aa66f7e968868af887b46315f082c3f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<java.util.WeakHashMap: boolean containsValue(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.Array: java.lang.String toString()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.crypto.Crypto: java.lang.String getTitle()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>
<org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: java.sql.Statement createStatement(int,int)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.nio.charset.MalformedInputException: java.lang.String getMessage()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.apache.logging.log4j.spi.Provider: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.DateTimeFieldType$StandardDateTimeFieldType: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_7bc033d1d93a495881441ddddbe3c4d8(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<java.util.concurrent.CopyOnWriteArraySet: boolean eq(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b: void <init>(javax.sql.DataSource)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.Byte: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: void initBean_synthetic()>-><org.owasp.webgoat.DatabaseInitialization: org.flywaydb.core.Flyway flywayLessons()>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge5.Assignment5: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.boot.web.server.MimeMappings$Mapping: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.types.CharacterType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>-><java.util.Collections$UnmodifiableCollection: boolean containsAll(java.util.Collection)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_d259dde63e1d8d2b102e21ceaee4e993(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>
<org.owasp.webwolf.mailbox.MailboxController: org.springframework.web.servlet.ModelAndView mail()>-><org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>
<org.owasp.webgoat.service.LessonMenuService: void <init>(org.owasp.webgoat.session.Course,org.owasp.webgoat.session.WebSession,org.owasp.webgoat.users.UserTrackerRepository)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.Fixnum: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>
<io.jsonwebtoken.impl.DefaultJwtParser: void validateExpectedClaims(io.jsonwebtoken.Header,io.jsonwebtoken.Claims)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge1.Assignment1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.lang.ProcessEnvironment$StringEntrySet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.io.FilePermission: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.AbstractMap$SimpleImmutableEntry: java.lang.String toString()>
<org.owasp.webgoat.service.LessonProgressService: java.util.List lessonOverview()>-><org.owasp.webgoat.service.LessonProgressService: java.util.List toJson(java.util.Map,org.owasp.webgoat.lessons.Lesson)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_f8418370a7514de433ded77b122d8da2(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.html_tampering.HtmlTamperingTask$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.EnumMap$EntryIterator$Entry: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_e4ad5c930097cc40f5fbb24351cf1ff8(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.LocalDate: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.lang.reflect.Proxy$KeyX: boolean equals(java.lang.Object)>
<org.owasp.webgoat.ssrf.SSRFTask2$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.i18n.PluginMessages: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder refreshProperties(java.lang.String,org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder)>-><org.apache.commons.logging.LogAdapter$Slf4jLocationAwareLog: void error(java.lang.Object,java.lang.Throwable)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.ir.operands.UnboxedFixnum: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.net.URL: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
<org.springframework.web.util.UriUtils: java.lang.String lambda$encodeUriVariables$1(java.lang.Object)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.http_basics.HttpBasicsLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.MissingFormatArgumentException: java.lang.String getMessage()>
<java.util.EnumMap: int entryHashCode(int)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><synthetic.method.UserTrackerRepositoryImpl: org.owasp.webgoat.users.UserTracker findByUser(java.lang.String)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.i18n.Messages: void <init>(org.owasp.webgoat.i18n.Language)>-><org.springframework.context.support.ReloadableResourceBundleMessageSource: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.java.proxies.ArrayJavaProxy: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: org.springframework.http.ResponseEntity setDebuggingStatus(java.lang.Boolean,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.task.TaskSchedulingProperties getTaskSchedulingPropertiesInstance()>-><org.springframework.boot.autoconfigure.task.TaskSchedulingProperties: void setThreadNamePrefix(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.type.TypeDescription$AbstractBase: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.ProcessEnvironment$StringEntry: java.lang.String toString()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.WebGoat: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.stream.Nodes$FixedNodeBuilder: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.awt.image.PackedColorModel: boolean equals(java.lang.Object)>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.springframework.http.ResponseEntity getProfilePicture()>-><java.util.Base64: java.util.Base64$Encoder getEncoder()>
<org.owasp.webgoat.users.UserTracker: void <init>(java.lang.String)>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.annotation.AnnotationValue$ForEnumerationDescription$WithUnknownConstant: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.ProcessEnvironment$ExternalData: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: void <init>(org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a)>
<com.thoughtworks.xstream.core.util.WeakCache$1: java.lang.Object visit(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.xxe.ContentTypeAssignment: void <init>()>
<org.owasp.webgoat.service.LessonInfoService: org.owasp.webgoat.lessons.LessonInfoModel getLessonInfo()>-><org.owasp.webgoat.session.WebSession: org.owasp.webgoat.lessons.Lesson getCurrentLesson()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties getThymeleafPropertiesInstance()>-><org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties: void setCache(boolean)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webgoat.idor.IDORViewOwnProfile: void callEntry_synthetic_invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_a82de75bf5a36cea47a1cec52f467578(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><com.thoughtworks.xstream.converters.ConversionException: java.lang.String getMessage()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection,java.lang.String)>-><java.util.Calendar: java.util.Calendar getInstance()>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<java.util.concurrent.ArrayBlockingQueue: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.http.HttpEntity: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webwolf.FileServer$$InterceptorProxy: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>
<java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.HSQLDBDatabaseConfig: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><java.lang.Integer: int parseInt(java.lang.String)>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge1.Assignment1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void <init>(org.springframework.web.client.RestTemplate,java.lang.String)>
<org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>
<org.owasp.webgoat.template.SampleAttack: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>-><java.lang.String: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonInfoService: void callEntry_synthetic_getLessonInfo(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.service.LessonInfoService: org.owasp.webgoat.lessons.LessonInfoModel getLessonInfo()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String valueOf(int)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><ch.qos.logback.core.joran.spi.ConsoleTarget: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>-><java.util.AbstractList: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.lang.Package: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.Hashtable$Entry: java.lang.Object getValue()>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter: void doFilter_6db3189d0086c9dab48e1349a04b95bf(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>
<org.owasp.webgoat.insecure_login.InsecureLoginTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.insecure_login.InsecureLoginTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.aop.support.AbstractPointcutAdvisor: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.RubyIO: java.lang.String toString()>
<java.util.Hashtable$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.hsqldb.map.BaseHashMap: java.lang.Object removeObject(java.lang.Object,boolean)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><sun.security.x509.X509CRLImpl$X509IssuerSerial: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.joda.time.base.AbstractInstant: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.BooleanNode: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.net.StandardSocketOptions$StdSocketOption: java.lang.String toString()>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><net.bytebuddy.description.annotation.AnnotationValue$ForTypeDescription: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.security.web.server.util.matcher.MediaTypeServerWebExchangeMatcher: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: org.owasp.webgoat.assignments.AttackResult login(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound: boolean equals(java.lang.Object)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.validation.ObjectError: boolean equals(java.lang.Object)>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_6fb641f411c6a6792f22a3d2f2c9db06(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8$$InterceptorProxy: void <init>()>
<java.util.TreeMap$Entry: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><java.util.UnknownFormatConversionException: java.lang.String getMessage()>
<org.owasp.webgoat.chrome_dev_tools.NetworkLesson$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.client_side_filtering.Salaries: java.util.List invoke()>-><ch.qos.logback.classic.Logger: void error(java.lang.String,java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.web.context.support.ServletContextResource: boolean equals(java.lang.Object)>
<org.owasp.webgoat.crypto.EncodingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.util.collections.WeakHashSet: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.AttributedString$AttributedStringIterator: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.security.ProtectionDomain: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.fasterxml.jackson.databind.type.CollectionType: java.lang.String toString()>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.secure_password.SecurePasswordsAssignment: java.lang.String calculateTime(long)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_f32ce4308d2bc922bfc8ed06b0680553(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult notUsed(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.missing_ac.DisplayUser: java.lang.String genUserHash(java.lang.String,java.lang.String)>-><java.util.Base64: java.util.Base64$Encoder getEncoder()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.util.RegexpOptions: java.lang.String toString()>
<org.owasp.webgoat.path_traversal.PathTraversal: void <init>()>-><org.owasp.webgoat.lessons.Lesson: void <init>()>
<java.util.Hashtable: boolean remove(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.annotation.TypeMappedAnnotation: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey: boolean equals(java.lang.Object)>
<org.owasp.webgoat.http_basics.HttpBasicsQuiz$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.http_basics.HttpBasicsQuiz getHttpBasicsQuiz()>
<org.jruby.ir.operands.LocalVariable: int compareTo(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.challenges.challenge8.Assignment8: java.lang.Integer lambda$getVotes$1(java.util.Map$Entry)>-><java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getValue()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.owasp.webgoat.lessons.LessonMenuItem: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.AsString: java.lang.String toString()>
<org.owasp.webgoat.xss.DOMCrossSiteScripting$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webwolf.user.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult resetVotes(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.http.ResponseEntity resetPassword(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_83d698e8f6d09bbe1d0f133ba4f09763(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String registration(org.owasp.webwolf.user.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.challenges.challenge7.MD5: void update(byte[])>-><org.owasp.webgoat.challenges.challenge7.MD5: void update(byte[],int,int)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_c9a80c347f63f59cbda1f120f308fa7a(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.user.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webwolf.user.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.annotation.AnnotationValue$ForConstant: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.flywaydb.core.internal.jdbc.DatabaseType: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.text.FieldPosition: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_3c59a3de587189d05dc3f383b23c424d(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.StringLiteral: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<org.owasp.webwolf.requests.WebWolfTraceRepository: java.util.List findAllTraces()>-><com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.hibernate.QueryException: java.lang.String getMessage()>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.challenges.challenge8.Assignment8: int lambda$average$3(java.util.Map$Entry)>-><java.util.WeakHashMap$Entry: java.lang.Object getKey()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.owasp.webgoat.assignments.AttackResult sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all()>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes: java.util.List getCodes()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.io.InputStreamReader: void <init>(java.io.InputStream)>
<org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Boolean,java.lang.String,javax.servlet.http.HttpServletRequest)>-><java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.idor.UserProfile getUserProfileInstance()>-><org.owasp.webgoat.idor.UserProfile: void setRole(int)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Collections$SynchronizedCollection: java.util.stream.Stream stream()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><com.headius.invokebinder.transform.Insert: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$1: void <init>(org.owasp.webgoat.jwt.JWTFinalEndpoint,java.lang.String[])>-><io.jsonwebtoken.SigningKeyResolverAdapter: void <init>()>
<org.owasp.webgoat.xxe.Comments: java.util.Collection getComments()>-><java.util.stream.ReferencePipeline: java.util.stream.Stream sorted(java.util.Comparator)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: java.util.concurrent.Callable sendEmail(org.owasp.webwolf.mailbox.Email,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_ff7eaed2ff5e8f4fa0f24d1d24e91ff5(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.temporal.IsoFields$Field$4: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String,java.lang.String)>-><java.net.URISyntaxException: java.lang.String getMessage()>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode putTreeVal(java.util.HashMap,java.util.HashMap$Node[],int,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_af7cf551dba794a00d49284ff420f577(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13$$InterceptorProxy: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_c063b5632af5d6d9d86e7ef5df48f921(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.hsqldb.types.DateTimeType: java.lang.Object convertToType(org.hsqldb.SessionInterface,java.lang.Object,org.hsqldb.types.Type)>-><org.owasp.webgoat.lessons.LessonMenuItem: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_d85620c250fc2f94842c24943176eac2(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.aop.framework.AdvisedSupport$MethodCacheKey: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: void callEntry_synthetic_flag(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.csrf.CSRFFeedback: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.chrono.BasicChronology: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFGetFlag: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.session.UserSessionData getUserSessionData()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webwolf.requests.LandingPage: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.crypto.CryptoUtil: void <clinit>()>-><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpServletRequest)>-><java.io.File: java.io.File getParentFile()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><sun.security.pkcs.SignerInfo: java.lang.String toString()>
<java.util.Arrays: int deepHashCode(java.lang.Object[])>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.Duration: java.lang.String toString()>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.reflect.WeakCache$CacheValue: boolean equals(java.lang.Object)>
<org.owasp.webgoat.missing_ac.MissingFunctionACYourHash: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.idor.IDORDiffAttributes: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.Comparator: java.util.Comparator comparing(java.util.function.Function)>
<org.owasp.webgoat.users.LessonTracker: java.lang.Boolean lambda$getLessonOverview$6(org.owasp.webgoat.lessons.Assignment)>-><java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2 getSqlInjectionLesson2()>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.introspect.AnnotatedConstructor: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_e02c91d4fd4a667e67f2887acdd731e8(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.TreeMap$ValueIterator: java.lang.Object next()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.aop.support.DefaultIntroductionAdvisor: java.lang.String toString()>
<javax.management.openmbean.CompositeDataSupport: boolean equals(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge5.Assignment5$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView importFile(org.springframework.web.multipart.MultipartFile)>-><org.springframework.ui.ModelMap: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.springframework.util.MimeType: boolean equals(java.lang.Object)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Base64: java.util.Base64$Decoder getDecoder()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.assignments.LessonTrackerInterceptor: void <init>(org.owasp.webgoat.users.UserTrackerRepository,org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.util.ServiceLoader: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><java.time.Clock$SystemClock: java.lang.String toString()>
<org.owasp.webgoat.controller.Welcome: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: void callEntry_synthetic_completed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.http.HttpSession)>-><org.owasp.webgoat.csrf.CSRFConfirmFlag1: java.lang.String getString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_be51c9aabe03147a10c76013df9b51d9(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.ssrf.SSRFTask1$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.apache.logging.log4j.spi.Provider: boolean equals(java.lang.Object)>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.webwolf_introduction.MailAssignment getMailAssignment()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.util.regex.PatternSyntaxException: java.lang.String getMessage()>
<org.owasp.webgoat.users.UserTracker: int numberOfAssignmentsSolved()>-><org.springframework.core.env.ReadOnlySystemAttributesMap: java.util.Collection values()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.jar.Manifest: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.env.PropertySource: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>
<org.owasp.webgoat.sql_injection.mitigation.Servers: java.util.List sort(java.lang.String)>-><java.lang.Throwable: void addSuppressed(java.lang.Throwable)>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.springframework.web.util.pattern.PatternParseException: java.lang.String getMessage()>
<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>-><java.lang.String: boolean matches(java.lang.String)>
<org.hibernate.ConnectionReleaseMode: org.hibernate.ConnectionReleaseMode interpret(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.lessons.Assignment: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: java.lang.String getName()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.AttributedString$AttributedStringIterator: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.jar.Attributes$Name: java.lang.String toString()>
<org.jruby.java.proxies.ArrayJavaProxy: boolean equalsRubyArray(org.jruby.RubyArray)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String follow(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.jwt.JWTFinalEndpoint$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.core.io.ClassPathResource git(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.hibernate.tool.schema.internal.Helper: org.hibernate.tool.schema.spi.ScriptSourceInput interpretScriptSourceSetting(java.lang.Object,org.hibernate.boot.registry.classloading.spi.ClassLoaderService,java.lang.String)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><io.undertow.servlet.spec.HttpSessionImpl: long getLastAccessedTime()>
<org.owasp.webgoat.idor.IDORLogin$$InterceptorProxy: void initIDORInfo(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.idor.IDORLogin: void initIDORInfo()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_1eb9794f62cd15dcf20a59e8d3502337(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.csrf.ForgedReviews: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)>-><org.dom4j.tree.BackedList: boolean add(java.lang.Object)>
<com.sun.jmx.mbeanserver.Util: int hashCode(java.lang.String[],java.lang.Object[])>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.missing_ac.Users$5: void <init>(org.owasp.webgoat.missing_ac.Users,java.lang.Exception)>-><java.lang.Throwable: java.lang.Throwable getCause()>
<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval: void initAssignment()>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><com.fasterxml.jackson.databind.node.NullNode: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_7b4ba2a6c21e1a51e3a7ea44570f3eff(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.FileServer$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.csrf.CSRFFeedback: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String)>-><org.apache.commons.lang3.exception.ExceptionUtils: java.lang.String getStackTrace(java.lang.Throwable)>
<java.util.concurrent.ConcurrentHashMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_27af345c61f1ec563d046cf1b013603a(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>
<java.util.LinkedList: int indexOf(java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.WebGoatUser: void <init>(java.lang.String,java.lang.String)>-><java.lang.Object: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_eff0128b633cb7ec87edc6f304018295(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity vote(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_833957c1bcddba76f8f8123a68c08f9d(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint: java.util.Map createNewTokens(java.lang.String)>-><io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder setClaims(java.util.Map)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.jwt.JWTSecretKeyEndpoint getJWTSecretKeyEndpoint()>
<org.owasp.webgoat.xxe.ContentTypeAssignment: org.owasp.webgoat.assignments.AttackResult createNewUser(java.lang.String,java.lang.String)>-><org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.challenges.challenge7.Assignment7: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_a3da66f27cfd47baaaed8885971d28f3(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.crypto.XOREncodingAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubySymbol: java.lang.String toString()>
<org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.ir.operands.TemporaryVariable: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><net.bytebuddy.description.annotation.AnnotationValue$ForAnnotationDescription: boolean equals(java.lang.Object)>
<java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask: void <init>()>-><org.owasp.webgoat.assignments.AssignmentEndpoint: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_79ca4bb52a10094b00bd65a04a91484c(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.xss.CrossSiteScriptingQuiz$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<com.google.common.collect.Multisets$AbstractEntry: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.csrf.CSRFLogin: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.awt.AppContext: java.lang.String toString()>
<java.util.EnumMap: boolean removeMapping(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webwolf.requests.Requests: org.springframework.web.servlet.ModelAndView get()>-><org.springframework.web.servlet.ModelAndView: void <init>(java.lang.String)>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.users.WebGoatUser: boolean isCredentialsNonExpired()>-><org.springframework.security.core.userdetails.User: boolean isCredentialsNonExpired()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_d88928050f9927098a56d488cdbda599(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: void <init>()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_14cfd44896ce1a39909e06c80b2db91f(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void <init>()>
<java.util.HashMap: java.util.HashMap$Node getNode(int,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.springframework.cglib.core.WeakCacheKey: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: void <clinit>()>-><java.util.HashMap: void <init>()>
<org.owasp.webgoat.service.LessonProgressService$$InterceptorProxy: java.util.List lessonOverview(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webwolf.FileServer: void <init>()>-><java.lang.Object: void <init>()>
<org.owasp.webgoat.LessonTemplateResolver: void <init>(org.springframework.core.io.ResourceLoader)>-><org.thymeleaf.templateresolver.FileTemplateResolver: void <init>()>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.springframework.web.servlet.ModelAndView illegalCall(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_1edb7eeb876b265911846d48973d772b(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.crypto.CryptoPermission: java.lang.String toString()>
<org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.MailAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.challenges.challenge7.PasswordResetLink: java.lang.String createPasswordReset(java.lang.String,java.lang.String)>-><java.util.Random: void setSeed(long)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_3a1b58b62756a9a535d743c34afc1d2b(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: org.springframework.http.ResponseEntity getProfilePicture(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void <init>(io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><ch.qos.logback.core.status.StatusBase: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.PropertyBatchUpdateException: java.lang.String toString()>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.jwt.JWTSecretKeyEndpoint$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.jwt.JWTSecretKeyEndpoint: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.joda.time.IllegalFieldValueException: java.lang.String getMessage()>
<org.owasp.webgoat.path_traversal.ProfileUploadFix$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.path_traversal.ProfileUploadFix: void <init>(java.lang.String,org.owasp.webgoat.session.WebSession)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String,java.lang.String)>-><java.lang.StringBuffer: java.lang.String toString()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.xss.stored.StoredXssComments: void <init>()>
<java.util.concurrent.ConcurrentHashMap$KeySetView: int hashCode()>-><org.owasp.webgoat.lessons.Assignment: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.jruby.java.proxies.ArrayJavaProxy: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.owasp.webgoat.idor.UserProfile: void setColor(java.lang.String)>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.logging.Level: boolean equals(java.lang.Object)>
<java.util.AbstractList: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.joda.time.LocalDateTime: java.lang.String toString()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties getDiskSpaceHealthIndicatorPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties: void setThreshold(org.springframework.util.unit.DataSize)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_898694d6cb1d3d85d4ed2f2f119b1e40(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><javax.crypto.CryptoPolicyParser$CryptoPermissionEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.util.KCode: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hibernate.metamodel.model.domain.NavigableRole: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.RubyString: java.lang.String toString()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.joda.time.DateTimeFieldType: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_47d3273e0b7a3190ec5fd7aa8aa6cafe(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.path_traversal.ProfileUpload$$InterceptorProxy: void <init>()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties getRestClientPropertiesInstance()>-><org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientProperties: void setPassword(java.lang.String)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords$$InterceptorProxy: void <init>()>-><org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: void <init>(org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>-><org.owasp.webgoat.assignments.AssignmentEndpoint: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder failed(org.owasp.webgoat.assignments.AssignmentEndpoint)>
<org.owasp.webgoat.crypto.SigningAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><javax.servlet.http.HttpServletRequestWrapper: javax.servlet.http.HttpSession getSession()>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><java.lang.Integer: int intValue()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties getWebEndpointPropertiesInstance()>-><org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties: void <init>()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.hsqldb.jdbc.JDBCConnection: void close()>
<org.owasp.webgoat.service.ReportCardService$ReportCard: void <init>(org.owasp.webgoat.service.ReportCardService)>-><java.util.ArrayList: void <init>()>
<javax.management.modelmbean.DescriptorSupport: java.lang.String[] getFields()>-><org.owasp.webgoat.password_reset.PasswordResetEmail: java.lang.String toString()>
<java.util.AbstractCollection: boolean contains(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.deserialization.InsecureDeserializationTask$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.AbstractList: java.util.Iterator iterator()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.util.cli.Category: java.lang.String toString()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.hsqldb.lib.tar.RB: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge1.Assignment1$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.security.cert.X509CRLEntry: boolean equals(java.lang.Object)>
<org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<org.owasp.webgoat.secure_password.SecurePasswordsAssignment$$InterceptorProxy: void <init>()>-><synthetic.method.SingletonFactory: org.owasp.webgoat.secure_password.SecurePasswordsAssignment getSecurePasswordsAssignment()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.actuate.endpoint.EndpointId: java.lang.String toString()>
<java.util.EnumMap: boolean equals(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.awt.image.DirectColorModel: java.lang.String toString()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean verifyAccount(java.lang.Integer,java.util.HashMap)>-><java.util.Collections$SingletonMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.xss.CrossSiteScriptingLesson5a$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.jwt.JWTFinalEndpoint: byte[] getJWTSignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: byte[] getBytes(java.nio.charset.Charset)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.jar.Manifest: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_738e259b2ffe51f674b7974511e87864(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.AbstractList$Itr: boolean hasNext()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><java.util.Collections$UnmodifiableSet: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String,java.lang.String)>-><org.hibernate.QueryException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.http.server.DefaultPathContainer$DefaultPathSegment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.util.locale.Extension: java.lang.String toString()>
<org.owasp.webwolf.user.WebGoatUser: void createUser()>-><org.owasp.webwolf.user.WebGoatUser: java.util.Collection getAuthorities()>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties getDataSourcePropertiesInstance()>-><org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: void setDriverClassName(java.lang.String)>
<org.owasp.webgoat.crypto.HashingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.challenges.challenge7.Assignment7$$InterceptorProxy: org.springframework.core.io.ClassPathResource git(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge7.Assignment7: org.springframework.core.io.ClassPathResource git()>
<org.owasp.webwolf.mailbox.Email: java.lang.String toString()>-><org.owasp.webwolf.mailbox.Email: java.lang.String getTime()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><javax.management.ObjectInstance: java.lang.String toString()>
<java.util.EnumMap: boolean containsMapping(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_380d58a5a04e808e000b9e4e3f56e008(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.password_reset.ResetLinkAssignment$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.StackTraceElement: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.hsqldb.jdbc.JDBCResultSet: java.lang.Object getColumnInType(int,org.hsqldb.types.Type)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: org.springframework.http.ResponseEntity follow(java.util.Map,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><synthetic.method.SingletonFactory: org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider getWebMvcTagsProvider()>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity getVotes(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.challenges.challenge8.Assignment8: org.springframework.http.ResponseEntity getVotes()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilter_db1a3fdaa3175dd457d794c865145dcb(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.xml.sax.SAXException: java.lang.String toString()>
<org.owasp.webgoat.service.SessionService: java.lang.String showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)>-><io.undertow.servlet.spec.HttpSessionImpl: int getMaxInactiveInterval()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_72cb7e3e6d59b6c617bac5772aceb12a(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.service.LabelDebugService$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.lessons.CourseConfiguration: java.util.List createAssignment(org.owasp.webgoat.lessons.Lesson)>-><org.owasp.webgoat.password_reset.PasswordReset: java.lang.String getTitle()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><sun.security.provider.PolicyParser$KeyStoreEntry: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SimpleMailAssignment: org.owasp.webgoat.assignments.AttackResult resetPassword(java.lang.String)>-><java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.security.Permission: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_b0f6a8ef171aa411c3a3f21a70b52597(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.csrf.ForgedReviews$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>
<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords: org.owasp.webgoat.assignments.AttackResult attack(java.lang.String)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>
<org.jruby.org.objectweb.asm.util.Printer: void printList(java.io.PrintWriter,java.util.List)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFLogin: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest)>-><java.lang.String: java.lang.String substring(int)>
<org.owasp.webgoat.service.HintService: java.util.List createAssignmentHints(org.owasp.webgoat.lessons.Lesson)>-><java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_b65292c16a181eef189ac76f3719a50a(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.users.Scoreboard$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.lessons.Assignment: int hashCode()>-><java.util.AbstractList: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><javax.management.openmbean.OpenMBeanAttributeInfoSupport: boolean equals(java.lang.Object)>
<org.hsqldb.lib.HashMappedList: boolean add(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.io.File: boolean equals(java.lang.Object)>
<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String debugString(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webwolf.WebWolf: org.springframework.boot.autoconfigure.jackson.JacksonProperties getJacksonPropertiesInstance()>-><org.springframework.boot.autoconfigure.jackson.JacksonProperties: void setPropertyNamingStrategy(java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: int hashCode()>
<org.owasp.webgoat.cia.CIAQuiz$$InterceptorProxy: boolean[] getResults(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.cia.CIAQuiz: boolean[] getResults()>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><java.util.LinkedList$ListItr: boolean hasNext()>
<org.owasp.webgoat.challenges.Flag: org.owasp.webgoat.assignments.AttackResult postFlag(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult build()>
<org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.challenges.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Optional: java.lang.Object orElse(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.ir.operands.NullBlock: java.lang.String toString()>
<org.owasp.webgoat.users.RegistrationController$$InterceptorProxy: java.lang.String showForm(org.owasp.webgoat.users.UserForm,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><com.fasterxml.jackson.databind.type.ClassKey: java.lang.String toString()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><org.hsqldb.types.CharacterType: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_cd8cc591f6f01daa2103e0018d5b7cdd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTRefreshEndpoint$$InterceptorProxy: void <init>()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.util.JapaneseImperialCalendar: boolean equals(java.lang.Object)>
<org.owasp.webwolf.mailbox.MailboxController$$InterceptorProxy: org.springframework.web.servlet.ModelAndView mail(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor: void <init>(org.springframework.core.convert.ConversionService)>
<java.util.Objects: int hashCode(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.csrf.CSRFFeedback$$InterceptorProxy: java.lang.String getString()>
<org.owasp.webgoat.auth_bypass.AccountVerificationHelper: boolean didUserLikelylCheat(java.util.HashMap)>-><java.security.Provider: java.lang.Object get(java.lang.Object)>
<org.owasp.webwolf.FileServer: org.springframework.web.servlet.ModelAndView getFiles(javax.servlet.http.HttpServletRequest)>-><org.springframework.security.core.context.SecurityContextImpl: org.springframework.security.core.Authentication getAuthentication()>
<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult registerNewUser(java.lang.String,java.lang.String,java.lang.String)>-><org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult checkArguments(java.lang.String,java.lang.String,java.lang.String)>
<org.hsqldb.map.BaseHashMap: java.lang.Object addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.Hashtable$Entry: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.MD5$MD5State: void <init>(org.owasp.webgoat.challenges.challenge7.MD5)>-><java.lang.Object: void <init>()>
<org.hsqldb.lib.OrderedHashSet: int getIndex(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: int hashCode()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.jruby.RubyThread: boolean equals(java.lang.Object)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.jruby.ir.operands.ClosureLocalVariable: java.lang.String toString()>
<org.owasp.webgoat.password_reset.SecurityQuestionAssignment: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.core.convert.support.GenericConversionService$ConvertersForPair: java.lang.String toString()>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.challenges.Flag: void <init>()>
<org.owasp.webgoat.idor.IDORViewOtherProfile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,javax.servlet.http.HttpServletResponse)>-><org.hibernate.metamodel.model.domain.NavigableRole: boolean equals(java.lang.Object)>
<org.owasp.webgoat.service.LessonMenuService: java.util.List showLeftNav()>-><org.owasp.webgoat.lessons.LessonMenuItem: void setType(org.owasp.webgoat.lessons.LessonMenuItemType)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.time.ZoneOffset: boolean equals(java.lang.Object)>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterInternal_eb2b6a6bd1fa8a1648c4310392fed6e8(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.webwolf_introduction.LandingAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult click(java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<org.springframework.expression.spel.ast.Operator: boolean equalityCheck(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)>-><org.owasp.webgoat.password_reset.PasswordResetEmail: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.hibernate.boot.model.relational.Namespace: java.lang.String toString()>
<org.owasp.webgoat.service.LessonMenuService: boolean lessonCompleted(java.util.Map,org.owasp.webgoat.lessons.Lesson)>-><java.util.ArrayList: java.util.Iterator iterator()>
<org.owasp.webgoat.i18n.PluginMessages: java.util.Properties getMessages()>-><org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder: java.util.Properties getProperties()>
<org.hibernate.loader.BatchFetchStyle: org.hibernate.loader.BatchFetchStyle interpret(java.lang.Object)>-><org.owasp.webgoat.challenges.Email: java.lang.String toString()>
<org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>-><org.owasp.webgoat.crypto.SecureDefaultsAssignment$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>
<org.owasp.webgoat.idor.IDORViewOwnProfile: java.util.Map invoke()>-><java.text.MessageFormat: boolean equals(java.lang.Object)>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b$$InterceptorProxy: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProviderInstance()>-><org.springframework.web.servlet.resource.ResourceUrlProvider: void <init>()>
<org.jruby.ir.operands.ClosureLocalVariable: int compareTo(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>-><java.util.IllegalFormatWidthException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.boot.actuate.endpoint.EndpointId: boolean equals(java.lang.Object)>
<org.owasp.webgoat.client_side_filtering.ShopEndpoint: org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes all()>-><org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes: void <init>(org.owasp.webgoat.client_side_filtering.ShopEndpoint,java.util.List)>
<org.owasp.webgoat.xxe.Comments: void addComment(org.owasp.webgoat.xxe.Comment,boolean)>-><java.util.LinkedList: boolean add(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.PasswordResetLink: java.lang.String createPasswordReset(java.lang.String,java.lang.String)>-><org.owasp.webgoat.challenges.challenge7.PasswordResetLink: java.lang.String scramble(java.util.Random,java.lang.String)>
<org.owasp.webwolf.WebWolf: void main(java.lang.String[])>-><org.owasp.webwolf.FileServer$$InterceptorProxy: void <init>()>
<java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge8.Assignment8$$InterceptorProxy: org.springframework.http.ResponseEntity vote(int,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse)>-><org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor: void afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.util.BitSet: boolean equals(java.lang.Object)>
<synthetic.method.SingletonFactory: void <clinit>()>-><org.owasp.webgoat.ssrf.SSRFTask2: void <init>()>
<org.owasp.webgoat.ssrf.SSRFTask1: org.owasp.webgoat.assignments.AttackResult stealTheCheese(java.lang.String)>-><org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: java.lang.String getMessage()>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.springframework.expression.spel.ast.StringLiteral: java.lang.String toString()>
<org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter: void doFilterNestedErrorDispatch_ac5ab215ffb76ef654b3ad9d4d4d5d78(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)>-><org.owasp.webgoat.jwt.JWTVotesEndpoint$$InterceptorProxy: void <init>()>
<java.util.AbstractList: int hashCode()>-><org.owasp.webgoat.lessons.Hint: int hashCode()>
<org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword: void sendMailToUser(java.lang.String,java.lang.String,java.lang.String)>-><java.lang.String: java.lang.String substring(int,int)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><java.lang.invoke.LambdaFormEditor$Transform: boolean equals(java.lang.Object)>
<org.owasp.webgoat.MvcConfiguration: org.owasp.webgoat.i18n.PluginMessages pluginMessages(org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.Language)>-><org.owasp.webgoat.i18n.PluginMessages: void <init>(org.owasp.webgoat.i18n.Messages,org.owasp.webgoat.i18n.Language)>
<org.owasp.webgoat.idor.IDOREditOtherProfiile: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)>-><org.jruby.util.ByteList: java.lang.String toString()>
<org.owasp.webgoat.challenges.challenge7.Assignment7: org.springframework.http.ResponseEntity resetPassword(java.lang.String)>-><org.springframework.http.ResponseEntity: org.springframework.http.ResponseEntity$BodyBuilder status(org.springframework.http.HttpStatus)>
<java.util.WeakHashMap$Entry: boolean equals(java.lang.Object)>-><org.owasp.webgoat.lessons.Hint: boolean equals(java.lang.Object)>
<org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><org.springframework.beans.BeanMetadataAttribute: boolean equals(java.lang.Object)>
<org.owasp.webgoat.challenges.challenge7.MD5: java.lang.String getHashString(java.lang.String)>-><org.owasp.webgoat.challenges.challenge7.MD5: void update(java.lang.String)>
<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring: boolean hasId(java.lang.Object)>-><org.owasp.webgoat.webwolf_introduction.Email: boolean equals(java.lang.Object)>
<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>-><org.owasp.webgoat.lessons.Assignment: boolean equals(java.lang.Object)>
<org.owasp.webgoat.users.Scoreboard: java.util.List getRankings()>-><java.util.ArrayList: boolean add(java.lang.Object)>
<org.owasp.webgoat.crypto.EncodingAssignment: org.owasp.webgoat.assignments.AttackResult completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>-><org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder: org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder feedback(java.lang.String)>
<org.owasp.webgoat.csrf.CSRFConfirmFlag1: org.owasp.webgoat.assignments.AttackResult completed(java.lang.String)>-><jnr.constants.platform.Fcntl: java.lang.String toString()>
<org.owasp.webgoat.xxe.BlindSendFileAssignment: org.owasp.webgoat.assignments.AttackResult addComment(java.lang.String)>-><javax.xml.bind.JAXBException: java.lang.String toString()>
<org.owasp.webgoat.service.ReportCardService: org.owasp.webgoat.service.ReportCardService$ReportCard reportCard()>-><org.owasp.webgoat.service.ReportCardService$ReportCard: void setNumberOfAssignmentsSolved(int)>
